[
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Random Word API",
                "api_name": "Get Word by Start",
                "api_description": "Returns a random word that starts with the specified string.\nFor example, \"fru\" will only return words that start with \"fru\", such as \"fruit\"",
                "required_parameters": [
                    {
                        "name": "start",
                        "type": "string",
                        "description": "",
                        "default": "fru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Random Word API",
                "api_name": "Get Word by Length",
                "api_description": "Returns a random word that has the specified length. For example, 7 will return any word that is 7 letters long, such as \"swallow\".",
                "required_parameters": [
                    {
                        "name": "length",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Random Word API",
                "api_name": "Get Word by Length and Start",
                "api_description": "Returns a random word of specified length and that starts with specified string.\nFor example, 7 and \"fru\" will return any word that is 7 letters long and starts with \"fru\", such as \"fruiter\".",
                "required_parameters": [
                    {
                        "name": "length",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7"
                    },
                    {
                        "name": "start",
                        "type": "string",
                        "description": "",
                        "default": "fru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "US ZIP Code to Income",
                "api_name": "ZIP code",
                "api_description": "ZIP code",
                "required_parameters": [
                    {
                        "name": "zip",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "x2y2",
                "api_name": "x2y2 GET",
                "api_description": "x2y2 API endpoint (https://api.x2y2.io)\nMake over 1000 requests / minute\n\nSimply copy the path into the x2y2_path header.\n\n![](https://i.ibb.co/WKYfTDy/x2y2-path-get-header.png)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Animals by API-Ninjas",
                "api_name": "/v1/animals",
                "api_description": "API Ninjas Animals API endpoint. Returns up to 10 results matching the input name parameter.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "common name of animal to search. This parameter supports partial matches (e.g. fox will match gray fox and red fox)",
                        "default": "cheetah"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "taxonomy": {
                        "kingdom": "str",
                        "phylum": "str",
                        "class": "str",
                        "order": "str",
                        "family": "str",
                        "genus": "str",
                        "scientific_name": "str"
                    },
                    "locations": [
                        "list of str with length 3"
                    ],
                    "characteristics": {
                        "prey": "str",
                        "name_of_young": "str",
                        "group_behavior": "str",
                        "estimated_population_size": "str",
                        "biggest_threat": "str",
                        "most_distinctive_feature": "str",
                        "gestation_period": "str",
                        "habitat": "str",
                        "diet": "str",
                        "average_litter_size": "str",
                        "lifestyle": "str",
                        "common_name": "str",
                        "number_of_species": "str",
                        "location": "str",
                        "slogan": "str",
                        "group": "str",
                        "color": "str",
                        "skin_type": "str",
                        "top_speed": "str",
                        "lifespan": "str",
                        "weight": "str",
                        "height": "str",
                        "age_of_sexual_maturity": "str",
                        "age_of_weaning": "str"
                    }
                }
            }
        ],
        "query": "Help me create a unique password for my online account.",
        "relevant APIs": [
            [
                "Random Word API",
                "Get Word by Length and Start"
            ],
            [
                "US ZIP Code to Income",
                "ZIP code"
            ]
        ],
        "query_id": 1643
    },
    {
        "api_list": [
            {
                "category_name": "Financial",
                "tool_name": "Mutual fund Nav",
                "api_name": "fundID",
                "api_description": "current Nav",
                "required_parameters": [
                    {
                        "name": "ID",
                        "type": "STRING",
                        "description": "FundID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Financial",
                "tool_name": "Crypto Symbols by API-Ninjas",
                "api_name": "/v1/cryptosymbols",
                "api_description": "API Ninjas Crypto Symbols API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "list of str with length 522"
                    ],
                    "timestamp": "int"
                }
            }
        ],
        "query": "I'm starting a new business and I need to manage my finances effectively. Additionally, I want to explore the world of cryptocurrencies.",
        "relevant APIs": [
            [
                "Mutual fund Nav",
                "fundID"
            ],
            [
                "Crypto Symbols by API-Ninjas",
                "/v1/cryptosymbols"
            ]
        ],
        "query_id": 4746
    },
    {
        "api_list": [
            {
                "category_name": "Mapping",
                "tool_name": "smart locations",
                "api_name": "get-location",
                "api_description": "smart-location",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Mapping",
                "tool_name": "Magical Taske",
                "api_name": "Fetch by type",
                "api_description": "This endpoint fetches records by type as defined in `ABOUT` section above. You have to provide type and a limit of the number of records returned.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of record you want. Refer to README above to see accepted types.",
                        "default": "Forest"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "isKenyaMagical": "bool",
                    "status": "str",
                    "total": "int",
                    "data": [
                        {
                            "id": "str",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "country": "str",
                            "rating": "int",
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "Mapping",
                "tool_name": "Magical Taske",
                "api_name": "Fetch by region",
                "api_description": "This endpoint fetches records by region as defined in the `ABOUT` section above. You have to provide region and a limit of the number of records returned.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Type of record you want. Refer to README above to see accepted types.",
                        "default": "Central"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "isKenyaMagical": "bool",
                    "status": "str",
                    "total": "int",
                    "data": [
                        {
                            "id": "str",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "country": "str",
                            "rating": "int",
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "Mapping",
                "tool_name": "Magical Taske",
                "api_name": "Fetch by type and region",
                "api_description": "You can make a request finer by combining region and type. This endpoint will return the records requested. You have to provide a limit of the number of records you want.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of record you want. Refer to README above to see accepted types.",
                        "default": "Hill"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "",
                        "default": "Eastern"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "isKenyaMagical": "bool",
                    "status": "str",
                    "total": "int",
                    "data": [
                        {
                            "id": "str",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "country": "str",
                            "rating": "int",
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "Mapping",
                "tool_name": "Organizaci\u00f3n territorial de Espa\u00f1a",
                "api_name": "Lista de provincias por Comunidad Aut\u00f3noma",
                "api_description": "Lista todas las provincias de una Comunidad Aut\u00f3noma",
                "required_parameters": [
                    {
                        "name": "id_comunidad",
                        "type": "string",
                        "description": "",
                        "default": "b8462"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Mapping",
                "tool_name": "Organizaci\u00f3n territorial de Espa\u00f1a",
                "api_name": "Lista de municipios por provincia",
                "api_description": "Lista todas lps municipios  de una provincia",
                "required_parameters": [
                    {
                        "name": "id_provincia",
                        "type": "string",
                        "description": "",
                        "default": "854e9"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Mapping",
                "tool_name": "Organizaci\u00f3n territorial de Espa\u00f1a",
                "api_name": "Lista de provincias",
                "api_description": "Lista el nombre y el id de todas las provincias de Espa\u00f1a",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm on the hunt for distinctive travel spots and am curious about the hotel options available in such locations.",
        "relevant APIs": [
            [
                "Magical Taske",
                "Fetch by type"
            ],
            [
                "Magical Taske",
                "Fetch by region"
            ],
            [
                "smart locations",
                "get-location"
            ]
        ],
        "query_id": 7691
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Appointment System API",
                "api_name": "Appointment Time List",
                "api_description": "EndPoint gets Appointment Time List by Day. EndPoint gets date parameter and returns List of Appointment Times of that date. In the list there is available field, This field indicates whether there is an appointment at the specified time.\nParameter Descriptions : \ndate --> The day that hours will be return\nclinicName --> Name of the clinic\n\nReturn Value: \nThe EndPoint returns json object in format below.\n[\n{\"id\":1\n\"hLabel\":\"07:00\"\n\"available\":\"true\"\n\"hour\":7\n\"minute\":0\n\"interval\":15\n},\n......\n]\n\nId --> is the key value of the record.\nhLabel --> is the string format of the time\navailable --> if is true that means the time is suitable for new record. If it is false that means there is another appointment in this time interval. \nhour --> Hour of the appointment time.\nminute --> Minute of the appointment time.\ninterval  --> this field points out to the interval whether 15 minutes or 30 minutes",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "",
                        "default": "2022.09.05"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "clinicName",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoClinic"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "hLabel": "str",
                    "available": "str",
                    "hour": "int",
                    "minute": "int",
                    "interval": "int"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Appointment System API",
                "api_name": "Get Appointments",
                "api_description": "EndPoints returns all appointments in the date. \n\nParameter Description :\ndate : the date the appointments is requested\nclinicName : Name of the clinic\n\nReturn Value : \nIt returns json object. Json contains all the appointments in requested date.\n\nJson Format :\n\nhLabel:\"07:00\"\nid:5\naDay:\"2022-09-09T00:00:00\"\naHour:58\naName:\"Efe Kemal TASAR\"\naTel:\"+905376853054\"\naType:\"Appoint\"",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "",
                        "default": "2022.09.09"
                    },
                    {
                        "name": "clinicName",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoUser"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Appointment System API",
                "api_name": "Login",
                "api_description": "This Endpoint is use for login to the system and getting the Api Key for the clinic. It needs username and password as query parameters. \nParameter Descriptions:\nusername --> parameter for username in the system. It is the same with username while creating the account.\npassword --> password for the username. It is same with the password while creating the acoount.\n\nReturn Value\nThis Endpoint returns string value.\nIf you get a sting with 6+ long this means that you have successfully passed username and password check and you are getting the Accesskey fort he system.\nIf you get \u201cW1\u201d it means a warning that your username doesn\u2019t exists\nIf you get \u201cW2\u201d it means a warning that your password is not correct.\nIt you get \u201cE1\u201d it means a programmatic internal error. If you get E1 in the next calls you can get help from us.",
                "required_parameters": [
                    {
                        "name": "password",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoPass"
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoUser"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "ExerciseDB",
                "api_name": "List of all exercises",
                "api_description": "Fetch all exercises (non-paginated)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bodyPart": "str",
                    "equipment": "str",
                    "gifUrl": "str",
                    "id": "str",
                    "name": "str",
                    "target": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "ExerciseDB",
                "api_name": "List by equipment",
                "api_description": "Fetch exercises by type of equipment",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "`equipment` property of exercise object",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "ExerciseDB",
                "api_name": "List of equipment",
                "api_description": "Fetch a list of available equipment",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "planetaryoverview",
                "api_description": "get the Planetary Overview of the day",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "planet": "str",
                    "sign": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "hoscoscope",
                "api_description": "retrieve the horoscope for a specific sign and date",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sign",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm planning a fitness retreat and need a variety of exercises for the participants.",
        "relevant APIs": [
            [
                "ExerciseDB",
                "List of all exercises"
            ],
            [
                "ExerciseDB",
                "List by equipment"
            ],
            [
                "Horostory",
                "hoscoscope"
            ]
        ],
        "query_id": 9959
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "OpenWeather",
                "api_name": "getCurrentWeather",
                "api_description": "Test",
                "required_parameters": [
                    {
                        "name": "appid",
                        "type": "STRING",
                        "description": "",
                        "default": "da0f9c8d90bde7e619c3ec47766a42f4"
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "City name",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
                        "default": ""
                    },
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
                        "default": "standard"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cod": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "OpenWeather",
                "api_name": "getForecastWeather",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "City name",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cnt",
                        "type": "NUMBER",
                        "description": "A number of timestamps, which will be returned in the API response.",
                        "default": ""
                    },
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
                        "default": "standard"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cod": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "The Weather API",
                "api_name": "weather report",
                "api_description": "Gives weather report of a particular city.",
                "required_parameters": [
                    {
                        "name": "cityName",
                        "type": "string",
                        "description": "",
                        "default": "mumbai"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "Get Tide Extreme Data",
                "api_description": "**Stormglass Tide Extreme Data**\n\nRetrieve information about high and low tide for a single coordinate. If nothing is specified, the returned values will be in relative to Mean Sea Level - MSL.",
                "required_parameters": [
                    {
                        "name": "lng",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "apiKey",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lat",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "endDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "startDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "datum",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "GET Astronomy Data",
                "api_description": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lng",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "startDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "Get Tide Station Area Data",
                "api_description": "**Stormglass Tide Station Area Data**\n\nThe Tide Stations Area Request will list all available tide stations within a defined geographic area.\n\nTop right and bottom left coordinate draws a box with the selected coordinates. \nAll stations with in the area of this box are queried.",
                "required_parameters": [
                    {
                        "name": "botLng",
                        "type": "string",
                        "description": "",
                        "default": "Bottom right Lng"
                    },
                    {
                        "name": "apiKey",
                        "type": "string",
                        "description": "",
                        "default": "Stormglass API Key"
                    },
                    {
                        "name": "topLng",
                        "type": "string",
                        "description": "",
                        "default": "Top left Lng"
                    },
                    {
                        "name": "topLat",
                        "type": "string",
                        "description": "",
                        "default": "Top left Lat"
                    },
                    {
                        "name": "botLat",
                        "type": "string",
                        "description": "",
                        "default": "Bottom right  Lat"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "havo",
                "api_name": "weatherendpoin",
                "api_description": "ob havo",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My friends and I are going on a road trip and would like to know a couple of things.",
        "relevant APIs": [
            [
                "OpenWeather",
                "getCurrentWeather"
            ],
            [
                "The Weather API",
                "weather report"
            ],
            [
                "Stormglass Complete",
                "Get Tide Extreme Data"
            ]
        ],
        "query_id": 73864
    }
]