{
    "api_list": [
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAccount",
            "api_description": "Get account information",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllVideos",
            "api_description": "List of all videos",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetVideo",
            "api_description": "Get Information about a specific video",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067224"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "DownloadEncodedVideo",
            "api_description": "Download the encoded video file",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067225"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetHLSJob",
            "api_description": "Get information of the specified HLS Job",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "304"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetEncodedVideo",
            "api_description": "Get specific info about an encoded video",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067225"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GenerateVideoThumbnailSync",
            "api_description": "Generate the thumbnail of the video (Sync)",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067224"
                }
            ],
            "optional_parameters": [
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "Offset in Second",
                    "default": "2"
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "Image Width",
                    "default": "320"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "Image Height",
                    "default": "180"
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllEncodedVideos",
            "api_description": "Get all encoded videos of your account",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllFormats",
            "api_description": "Retrieve all the formats",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I am a video blogger and I want to showcase the thumbnails of my latest videos on my website. Can you help me by generating the thumbnails asynchronously using the HeyWatch Video Encoding API? Additionally, I need to retrieve all available formats for the videos.",
    "relevant APIs": [
        [
            "HeyWatch Video Encoding",
            "GetAllFormats"
        ],
        [
            "HeyWatch Video Encoding",
            "GenerateVideoThumbnailSync"
        ]
    ],
    "query_id": 74702
}, 
{
    "api_list": [
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllVideos",
            "api_description": "List of all videos",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetFormat",
            "api_description": "Get a specific format",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "9222"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetVideo",
            "api_description": "Get Information about a specific video",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067224"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "DownloadEncodedVideo",
            "api_description": "Download the encoded video file",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067225"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetHLSJob",
            "api_description": "Get information of the specified HLS Job",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "304"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetEncodedVideo",
            "api_description": "Get specific info about an encoded video",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067225"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GenerateVideoThumbnailSync",
            "api_description": "Generate the thumbnail of the video (Sync)",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067224"
                }
            ],
            "optional_parameters": [
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "Offset in Second",
                    "default": "2"
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "Image Width",
                    "default": "320"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "Image Height",
                    "default": "180"
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllEncodedVideos",
            "api_description": "Get all encoded videos of your account",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllFormats",
            "api_description": "Retrieve all the formats",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I am a video blogger and I want to showcase the thumbnails of my latest videos on my website. Can you help me by generating the thumbnails asynchronously using the HeyWatch Video Encoding API? Additionally, I need to retrieve all available formats for the videos.",
    "relevant APIs": [
        [
            "HeyWatch Video Encoding",
            "GetAllFormats"
        ],
        [
            "HeyWatch Video Encoding",
            "GenerateVideoThumbnailSync"
        ]
    ],
    "query_id": 74702
}, 
{
    "api_list": [
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAccount",
            "api_description": "Get account information",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllVideos",
            "api_description": "List of all videos",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetFormat",
            "api_description": "Get a specific format",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "9222"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetVideo",
            "api_description": "Get Information about a specific video",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067224"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "DownloadEncodedVideo",
            "api_description": "Download the encoded video file",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067225"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetEncodedVideo",
            "api_description": "Get specific info about an encoded video",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067225"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GenerateVideoThumbnailSync",
            "api_description": "Generate the thumbnail of the video (Sync)",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067224"
                }
            ],
            "optional_parameters": [
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "Offset in Second",
                    "default": "2"
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "Image Width",
                    "default": "320"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "Image Height",
                    "default": "180"
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllEncodedVideos",
            "api_description": "Get all encoded videos of your account",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllFormats",
            "api_description": "Retrieve all the formats",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I am a video blogger and I want to showcase the thumbnails of my latest videos on my website. Can you help me by generating the thumbnails asynchronously using the HeyWatch Video Encoding API? Additionally, I need to retrieve all available formats for the videos.",
    "relevant APIs": [
        [
            "HeyWatch Video Encoding",
            "GetAllFormats"
        ],
        [
            "HeyWatch Video Encoding",
            "GenerateVideoThumbnailSync"
        ]
    ],
    "query_id": 74702
}, 
{
    "api_list": [
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAccount",
            "api_description": "Get account information",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllVideos",
            "api_description": "List of all videos",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetFormat",
            "api_description": "Get a specific format",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "9222"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetVideo",
            "api_description": "Get Information about a specific video",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067224"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "DownloadEncodedVideo",
            "api_description": "Download the encoded video file",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067225"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetHLSJob",
            "api_description": "Get information of the specified HLS Job",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "304"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetEncodedVideo",
            "api_description": "Get specific info about an encoded video",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067225"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GenerateVideoThumbnailSync",
            "api_description": "Generate the thumbnail of the video (Sync)",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "23067224"
                }
            ],
            "optional_parameters": [
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "Offset in Second",
                    "default": "2"
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "Image Width",
                    "default": "320"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "Image Height",
                    "default": "180"
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Entertainment",
            "tool_name": "HeyWatch Video Encoding",
            "api_name": "GetAllEncodedVideos",
            "api_description": "Get all encoded videos of your account",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I am a video blogger and I want to showcase the thumbnails of my latest videos on my website. Can you help me by generating the thumbnails asynchronously using the HeyWatch Video Encoding API? Additionally, I need to retrieve all available formats for the videos.",
    "relevant APIs": [
        [
            "HeyWatch Video Encoding",
            "GetAllFormats"
        ],
        [
            "HeyWatch Video Encoding",
            "GenerateVideoThumbnailSync"
        ]
    ],
    "query_id": 74702
}, 
{
    "api_list": [
        {
            "category_name": "Food",
            "tool_name": "ComfyFood",
            "api_name": "Get all Recipes 2",
            "api_description": "return more recipes",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "recipes": [
                    {
                        "Id": "str",
                        "Name": "str",
                        "Description": "str",
                        "Steps": "str",
                        "Official": "bool",
                        "Ingredients": "str",
                        "ImageName": "str",
                        "RecipeCategories": [
                            {
                                "Name": "str",
                                "ImageName": "str",
                                "_list_length": 1
                            }
                        ],
                        "_list_length": 7
                    }
                ]
            }
        },
        {
            "category_name": "Food",
            "tool_name": "ComfyFood",
            "api_name": "Get all Recipes 1",
            "api_description": "returns all the recipes from comfyfood's website",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "recipes": [
                    {
                        "Id": "str",
                        "Name": "str",
                        "Description": "str",
                        "Steps": "str",
                        "Official": "bool",
                        "Ingredients": "str",
                        "ImageName": "str",
                        "RecipeCategories": [
                            {
                                "Name": "str",
                                "ImageName": "str",
                                "_list_length": 3
                            }
                        ],
                        "_list_length": 7
                    }
                ]
            }
        },
        {
            "category_name": "Food",
            "tool_name": "ComfyFood",
            "api_name": "Get all recipes 3",
            "api_description": "return more recipes",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "recipes": [
                    {
                        "Id": "str",
                        "Name": "str",
                        "Description": "str",
                        "Steps": "str",
                        "Official": "bool",
                        "Ingredients": "str",
                        "ImageName": "str",
                        "RecipeCategories": [
                            {
                                "Name": "str",
                                "ImageName": "str",
                                "_list_length": 1
                            }
                        ],
                        "_list_length": 5
                    }
                ]
            }
        },
    "query": "I am planning a cooking competition and need a variety of recipes. Can you provide me with a list of official recipes from ComfyFood's website? It would be great if the recipes include the names, descriptions, ingredients, and steps. Also, I would like to know all the available recipe categories.",
    "relevant APIs": [
        [
            "ComfyFood",
            "Get all Recipes 2"
        ],
        [
            "ComfyFood",
            "Get All Categories"
        ]
    ],
    "query_id": 74989
}, 
{
    "api_list": [
        {
            "category_name": "Mapping",
            "tool_name": "Dargan",
            "api_name": "Distance",
            "api_description": "Gets the distance between 2 postcodes in KM",
            "required_parameters": [
                {
                    "name": "postcodeA",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103NP"
                },
                {
                    "name": "postcodeB",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103RB"
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "A": {
                    "postcode": "str",
                    "latitude": "float",
                    "longitude": "float"
                },
                "B": {
                    "postcode": "str",
                    "latitude": "float",
                    "longitude": "float"
                },
                "Distance": "float"
            }
        },
        {
            "category_name": "Mapping",
            "tool_name": "Dargan",
            "api_name": "Geocode",
            "api_description": "Returns the latitude and longitude for a given postcode",
            "required_parameters": [
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103NP"
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "postcode": "str",
                "latitude": "float",
                "longitude": "float"
            }
        }
    ],
    "query": "I'm a developer working on a location-based app and I need to retrieve the latitude and longitude coordinates for CF103NP. Can you please provide me with this information? Additionally, I would like to calculate the distance between CF103NP and CF103RB.",
    "relevant APIs": [
        [
            "Dargan",
            "Geocode"
        ],
        [
            "Dargan",
            "Distance"
        ]
    ],
    "query_id": 78490
}, 
{
    "api_list": [
        {
            "category_name": "Mapping",
            "tool_name": "Dargan",
            "api_name": "Distance",
            "api_description": "Gets the distance between 2 postcodes in KM",
            "required_parameters": [
                {
                    "name": "postcodeA",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103NP"
                },
                {
                    "name": "postcodeB",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103RB"
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "A": {
                    "postcode": "str",
                    "latitude": "float",
                    "longitude": "float"
                },
                "B": {
                    "postcode": "str",
                    "latitude": "float",
                    "longitude": "float"
                },
                "Distance": "float"
            }
        },
        {
            "category_name": "Mapping",
            "tool_name": "Dargan",
            "api_name": "In Radius",
            "api_description": "Find all postcodes within a certain radius (in KM) of a postcode",
            "required_parameters": [
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103NP"
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0.1"
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "Distance": "float",
                "Postcode": "str"
            }
        }
    ],
    "query": "I'm a developer working on a location-based app and I need to retrieve the latitude and longitude coordinates for CF103NP. Can you please provide me with this information? Additionally, I would like to calculate the distance between CF103NP and CF103RB.",
    "relevant APIs": [
        [
            "Dargan",
            "Geocode"
        ],
        [
            "Dargan",
            "Distance"
        ]
    ],
    "query_id": 78490
},
{
    "api_list": [{}
    ],
    "query": "I'm interested in analyzing customer feedback on Hepsiburada. Can you help me retrieve comments and star ratings for a specific product? I would like to explore the comments and ratings for the product with the ID 'hbcv00000c2fqc'. Thank you!",
    "relevant APIs": [
        [
            "Hepsiburada Data",
            "Get Comments from product id"
        ]
    ],
    "query_id": 85155
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "SEO Checker",
            "api_name": "Analyze V2",
            "api_description": "analyze page speed with more results information",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://google.com"
                }
            ],
            "optional_parameters": [
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "the options: **accessibility, best-practices, performance, seo, pwa**. default: performance ",
                    "default": ""
                },
                {
                    "name": "strategy",
                    "type": "STRING",
                    "description": "the options: **desktop, mobile** default: empty",
                    "default": ""
                }
            ],
            "method": "GET",
            "template_response": "{\"loading_experience\": {\"id\": \"str\", \"metrics\": {\"CUMULATIVE_LAYOUT_SHIFT_SCORE\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"EXPERIMENTAL_INTERACTION_TO_NEXT_PAINT\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"EXPERIMENTAL_TIME_TO_FIRST_BYTE\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"FIRST_CONTENTFUL_PAINT_MS\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"FIRST_INPUT_DELAY_MS\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"INTERACTION_TO_NEXT_PAINT\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_"
        },
        {
            "category_name": "Tools",
            "tool_name": "SEO Checker",
            "api_name": "Summary",
            "api_description": "Summary SEO",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://google.com"
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "page": {
                    "title": "str",
                    "description": "str",
                    "meta": {
                        "viewport": "str",
                        "description": "str",
                        "og:title": "str",
                        "og:description": "str",
                        "og:url": "str",
                        "canonical": "str",
                        "language": "str",
                        "author": "str",
                        "keywords": [
                            "list of str with length 1"
                        ]
                    }
                },
                "heading_count": "int",
                "word_count": "int",
                "external_links": "int",
                "internal_links": "int",
                "links": [
                    "list of str with length 18"
                ],
                "headings": "empty list"
            }
        }
    ],
    "query": "My friend is working on a website project and wants to optimize its performance. Can you analyze the page speed and provide suggestions for improvement? It would be great to receive details on unused JavaScript, network round trip time, and offscreen images. Thanks!",
    "relevant APIs": [
        [
            "",
            ""
        ],
        [
            "SEO Checker",
            "Summary"
        ]
    ],
    "query_id": 4286
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/sentence",
            "api_description": "Returns a single random **sentence**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/paragraph",
            "api_description": "Returns a **paragraph** with random sentences",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/sentences",
            "api_description": "Returns some single random **sentence**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "maximumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/word",
            "api_description": "Returns a random **word**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        }
    ],
    "query": "I'm working on a novel and I need some unique character names. Can you generate a list of random words and sentences that can be used as character names and descriptions?",
    "relevant APIs": [
        [
            "Jibber Jabber",
            "/words"
        ],
        [
            "Jibber Jabber",
            "/sentences"
        ]
    ],
    "query_id": 4343
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/sentence",
            "api_description": "Returns a single random **sentence**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/paragraph",
            "api_description": "Returns a **paragraph** with random sentences",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/sentences",
            "api_description": "Returns some single random **sentence**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "maximumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        }
    ],
    "query": "I'm working on a novel and I need some unique character names. Can you generate a list of random words and sentences that can be used as character names and descriptions?",
    "relevant APIs": [
        [
            "Jibber Jabber",
            "/words"
        ],
        [
            "Jibber Jabber",
            "/sentences"
        ]
    ],
    "query_id": 4343
},
{
    "api_list": [
        {
            "category_name": "Video_Images",
            "tool_name": "Any Anime",
            "api_name": "anime img",
            "api_description": "Show only the image from the api on your browser .",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Video_Images",
            "tool_name": "Any Anime",
            "api_name": "anime",
            "api_description": "Shows json data and image url of the anime pfp you want to use / show !",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "message": "str",
                "status": "str",
                "stuff": [
                    {
                        "name": "str",
                        "image": "str",
                        "_list_length": 1
                    }
                ]
            }
        }
    ],
    "query": "I want to discover new anime profile pictures. Can you assist me in finding various anime pfp's and banners? It would be great if I could get the image URLs and json data for each anime pfp.",
    "relevant APIs": [
        [
            "Any Anime",
            "anime gif"
        ],
        [
            "Any Anime",
            "anime"
        ]
    ],
    "query_id": 9708
},
{
    "api_list": [
        {
            "category_name": "Video_Images",
            "tool_name": "Any Anime",
            "api_name": "anime gif",
            "api_description": "Get anime gif pfp's / banners",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Video_Images",
            "tool_name": "Any Anime",
            "api_name": "anime",
            "api_description": "Shows json data and image url of the anime pfp you want to use / show !",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "message": "str",
                "status": "str",
                "stuff": [
                    {
                        "name": "str",
                        "image": "str",
                        "_list_length": 1
                    }
                ]
            }
        }
    ],
    "query": "I want to discover new anime profile pictures. Can you assist me in finding various anime pfp's and banners? It would be great if I could get the image URLs and json data for each anime pfp.",
    "relevant APIs": [
        [
            "Any Anime",
            "anime gif"
        ],
        [
            "Any Anime",
            "anime"
        ]
    ],
    "query_id": 9708
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "Arespass",
            "api_name": "/about",
            "api_description": " ",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "**The format of the returned metadata.**\n\nAllowed values are *json*, *xml* and *yaml*.\n\nThe default value is *xml*.\n",
                    "default": ""
                }
            ],
            "method": "GET"
        }
    ],
    "query": "I need to analyze the entropy of my password and generate a report. Can you calculate the entropy of the password 'Password123' and provide a summary of the analysis? Additionally, please include the entropy distribution and the detected keyboard layout.",
    "relevant APIs": [
        [
            "Arespass",
            "/ec"
        ],
        [
            "Arespass",
            "/about"
        ]
    ],
    "query_id": 12631
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "PurgoMalum",
            "api_name": "Remove profanity",
            "api_description": "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Input text to be processed.",
                    "default": "This is some test input"
                }
            ],
            "optional_parameters": [
                {
                    "name": "add",
                    "type": "STRING",
                    "description": "A comma separated list of words to be added to the profanity list. Accepts letters, numbers, underscores (_) and commas (,). Accepts up to 10 words (or 200 maximum characters in length). The PurgoMalum filter is case-insensitive, so the case of you entry is not important.",
                    "default": ""
                },
                {
                    "name": "fill_text",
                    "type": "STRING",
                    "description": "Text used to replace any words matching the profanity list. Accepts letters, numbers, underscores (_) tildes (~), exclamation points (!), dashes/hyphens (-), equal signs (=), pipes (|), single quotes ('), double quotes (\"), asterisks (*), open and closed curly brackets ({ }), square brackets ([ ]) and parentheses (). Maximum length of 20 characters. When not used, the default is an asterisk (*) fill.",
                    "default": ""
                },
                {
                    "name": "fill_char",
                    "type": "STRING",
                    "description": "Single character used to replace any words matching the profanity list. Fills designated character to length of word replaced. Accepts underscore (_) tilde (~), dash/hyphen (-), equal sign (=), pipe (|) and asterisk (*). When not used, the default is an asterisk (*) fill.",
                    "default": ""
                }
            ],
            "method": "GET",
            "template_response": {
                "result": "str"
            }
        }
    ],
    "query": "I am developing a chat application and I want to filter out any profanity in the user messages. Can you recommend an API that can check if a text contains profanity? It would be great if the API can also provide suggestions to replace the offensive words with appropriate alternatives.",
    "relevant APIs": [
        [
            "PurgoMalum",
            "Check if text contains profanity"
        ],
        [
            "PurgoMalum",
            "Remove profanity"
        ]
    ],
    "query_id": 12671
},
{
    "api_list": [

        {
            "category_name": "Tools",
            "tool_name": "ColorMe",
            "api_name": "RandomColorSet",
            "api_description": "Get a random set of colors",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I'm redecorating my living room and I'm in need of some color ideas. Can you generate a random set of colors for the room? Additionally, it would be helpful to see a specific color set based on the input color 'green'. Thank you!",
    "relevant APIs": [
        [
            "ColorMe",
            "RandomColorSet"
        ],
        [
            "ColorMe",
            "SpecificColorSet"
        ]
    ],
    "query_id": 12790
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "ColorMe",
            "api_name": "SpecificColorSet",
            "api_description": "Get a set of colors based on input color like - \"yellow\" / \"red\"",
            "required_parameters": [
                {
                    "name": "colorname",
                    "type": "string",
                    "description": "",
                    "default": "yellow"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I'm redecorating my living room and I'm in need of some color ideas. Can you generate a random set of colors for the room? Additionally, it would be helpful to see a specific color set based on the input color 'green'. Thank you!",
    "relevant APIs": [
        [
            "ColorMe",
            "RandomColorSet"
        ],
        [
            "ColorMe",
            "SpecificColorSet"
        ]
    ],
    "query_id": 12790
},
{
    "api_list": [
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List All Layers",
            "api_description": "",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "message": "str"
            }
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List All Simulations",
            "api_description": "",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List Applications",
            "api_description": "List all your applications",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List All Simulations Of A Group",
            "api_description": "Enter groupID in the route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "View Application",
            "api_description": "Enter your applicationID in the route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "View Simulation",
            "api_description": "Enter simulationID in route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List All Groups",
            "api_description": "List All Groups",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "Simulations By Application Id",
            "api_description": "Enter applicationID in route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "View Layer",
            "api_description": "Enter layerID in route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I'm working on a project that involves geolocation simulation for mobile apps. Can you provide a list of all available applications and their associated simulations? Additionally, I need information about a specific application. Please include the application ID in the response.",
    "relevant APIs": [
        [
            "Geolocation Simulation For Mobile Apps",
            "List Applications"
        ],
        [
            "Geolocation Simulation For Mobile Apps",
            "Simulations By Application Id"
        ],
        [
            "Geolocation Simulation For Mobile Apps",
            "View Application"
        ]
    ],
    "query_id": 23444
},
{
    "api_list": [
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List All Layers",
            "api_description": "",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "message": "str"
            }
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List All Simulations",
            "api_description": "",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List Applications",
            "api_description": "List all your applications",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List All Simulations Of A Group",
            "api_description": "Enter groupID in the route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "View Application",
            "api_description": "Enter your applicationID in the route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "View Simulation",
            "api_description": "Enter simulationID in route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "List All Groups",
            "api_description": "List All Groups",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "Simulations By Application Id",
            "api_description": "Enter applicationID in route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Devices",
            "tool_name": "Geolocation Simulation For Mobile Apps",
            "api_name": "View Layer",
            "api_description": "Enter layerID in route",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        },
    ],
    "query": "I'm working on a project that involves geolocation simulation for mobile apps. Can you provide a list of all available applications and their associated simulations? Additionally, I need information about a specific application. Please include the application ID in the response.",
    "relevant APIs": [
        [
            "Geolocation Simulation For Mobile Apps",
            "List Applications"
        ],
        [
            "Geolocation Simulation For Mobile Apps",
            "Simulations By Application Id"
        ],
        [
            "Geolocation Simulation For Mobile Apps",
            "View Application"
        ]
    ],
    "query_id": 23444
},
{
    "api_list": [
        {
            "category_name": "Video_Images",
            "tool_name": "nowyAPI",
            "api_name": "rereer_copy",
            "api_description": "rererer",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "messages": "str",
                "info": "str"
            }
        },
    ],
    "query": "I'm planning a vacation with my family to a beautiful beach destination. Can you recommend some popular tourist spots, provide information about the weather forecast for the next week, and suggest nearby hotels?",
    "relevant APIs": [
        [
            "nowyAPI",
            "rereer_copy"
        ],
        [
            "nowyAPI",
            "rereer"
        ]
    ],
    "query_id": 26672
},
{
    "api_list": [
        {
            "category_name": "Video_Images",
            "tool_name": "nowyAPI",
            "api_name": "rereer",
            "api_description": "rererer",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "url": "str"
            }
        }
    ],
    "query": "I'm planning a vacation with my family to a beautiful beach destination. Can you recommend some popular tourist spots, provide information about the weather forecast for the next week, and suggest nearby hotels?",
    "relevant APIs": [
        [
            "nowyAPI",
            "rereer_copy"
        ],
        [
            "nowyAPI",
            "rereer"
        ]
    ],
    "query_id": 26672
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "Pagepeeker",
            "api_name": "2. Thumbnail ready",
            "api_description": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
            "required_parameters": [
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                    "default": "m"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The URL to generate the thumbnail from",
                    "default": "http://www.mashape.com/"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Pagepeeker",
            "api_name": "1. Shoot thumbnail",
            "api_description": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
            "required_parameters": [
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                    "default": "m"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The URL to generate the thumbnail from",
                    "default": "http://www.mashape.com/"
                }
            ],
            "optional_parameters": [
                {
                    "name": "refresh",
                    "type": "STRING",
                    "description": "This parameter forces the currently generate d thumbnail to be regenerated.  It is optional and will be ignored unless it contains the value 1",
                    "default": "1"
                }
            ],
            "method": "GET"
        }
    ],
    "query": "My friend is a web developer and needs to generate thumbnails for a list of URLs. Can you assist by providing a quick and efficient way to create thumbnails in various sizes, like small, medium, and large? It would be helpful if the images are ready for download as soon as they are generated.",
    "relevant APIs": [
        [
            "Pagepeeker",
            "2. Thumbnail ready"
        ],
        [
            "Pagepeeker",
            "1. Shoot thumbnail"
        ]
    ],
    "query_id": 29647
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "Pagepeeker",
            "api_name": "2. Thumbnail ready",
            "api_description": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
            "required_parameters": [
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                    "default": "m"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The URL to generate the thumbnail from",
                    "default": "http://www.mashape.com/"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Pagepeeker",
            "api_name": "1. Shoot thumbnail",
            "api_description": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
            "required_parameters": [
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                    "default": "m"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The URL to generate the thumbnail from",
                    "default": "http://www.mashape.com/"
                }
            ],
            "optional_parameters": [
                {
                    "name": "refresh",
                    "type": "STRING",
                    "description": "This parameter forces the currently generate d thumbnail to be regenerated.  It is optional and will be ignored unless it contains the value 1",
                    "default": "1"
                }
            ],
            "method": "GET"
        }
    ],
    "query": "As a web designer, I need a tool that can generate thumbnails for my clients' websites. Can you suggest an API that can create thumbnails in various sizes, like small, medium, and large? It would be helpful if the images are ready for download as soon as they are generated.",
    "relevant APIs": [
        [
            "Pagepeeker",
            "2. Thumbnail ready"
        ],
        [
            "Pagepeeker",
            "1. Shoot thumbnail"
        ]
    ],
    "query_id": 29653
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "ColorMe",
            "api_name": "SpecificColorSet",
            "api_description": "Get a set of colors based on input color like - \"yellow\" / \"red\"",
            "required_parameters": [
                {
                    "name": "colorname",
                    "type": "string",
                    "description": "",
                    "default": "yellow"
                }
            ],
            "optional_parameters": [],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "ColorMe",
            "api_name": "RandomColorSet",
            "api_description": "Get a random set of colors",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I'm an artist looking for inspiration for my next painting. Can you generate a random set of colors for me? Also, I would like to explore a set of colors based on the input color 'yellow'.",
    "relevant APIs": [
        [
            "ColorMe",
            "RandomColorSet"
        ],
        [
            "ColorMe",
            "SpecificColorSet"
        ]
    ],
    "query_id": 29816
},
{
    "api_list": [
        {
            "category_name": "Logistics",
            "tool_name": "Transitaires",
            "api_name": "Transitaires",
            "api_description": "Renvoie tous les transiatires",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "id": "str",
                "name": "str",
                "phone": "str"
            }
        }
    ],
    "query": "I'm in the process of shipping goods to Noum\u00e9a, New Caledonia and I need help with customs clearance. Can you provide me with the contact details of the customs agency GONDRAND? Furthermore, I would like to know the list of available transitaires in the region.",
    "relevant APIs": [
        [
            "Transitaires",
            "Transitaire"
        ],
        [
            "Transitaires",
            "Transitaires"
        ]
    ],
    "query_id": 41987
},
{
    "api_list": [
        {
            "category_name": "Video_Images",
            "tool_name": "Nexweave",
            "api_name": "GetAllTemplates",
            "api_description": "This API will return all the templates associated with the user's account, including Images & Video.",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "message": "str"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "Nexweave",
            "api_name": "GetTemplateDetails",
            "api_description": "This API will return the template details including variables for a valid template.",
            "required_parameters": [
                {
                    "name": "templateId",
                    "type": "STRING",
                    "description": "",
                    "default": "templateId"
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "message": "str"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "Nexweave",
            "api_name": "GetAllCampaigns",
            "api_description": "The API will return all the CSV Campaigns associated with the user's account, including Images, Videos &  Image+Video Campaign.\n\nNote: The campaigns must be in Success state.",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "message": "str"
            }
        }
    ],
    "query": "I am organizing a virtual conference for a tech company and would like to create personalized videos for the attendees. Can you assist me in selecting an appropriate template for this purpose? Once I choose a template, I need to retrieve its details using the GetTemplateDetails API. Additionally, I would like to explore all the available templates in my Nexweave account using the GetAllTemplates API.",
    "relevant APIs": [
        [
            "Nexweave",
            "GetAllTemplates"
        ],
        [
            "Nexweave",
            "GetTemplateDetails"
        ]
    ],
    "query_id": 43375
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "PurgoMalum",
            "api_name": "Remove profanity",
            "api_description": "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Input text to be processed.",
                    "default": "This is some test input"
                }
            ],
            "optional_parameters": [
                {
                    "name": "add",
                    "type": "STRING",
                    "description": "A comma separated list of words to be added to the profanity list. Accepts letters, numbers, underscores (_) and commas (,). Accepts up to 10 words (or 200 maximum characters in length). The PurgoMalum filter is case-insensitive, so the case of you entry is not important.",
                    "default": ""
                },
                {
                    "name": "fill_text",
                    "type": "STRING",
                    "description": "Text used to replace any words matching the profanity list. Accepts letters, numbers, underscores (_) tildes (~), exclamation points (!), dashes/hyphens (-), equal signs (=), pipes (|), single quotes ('), double quotes (\"), asterisks (*), open and closed curly brackets ({ }), square brackets ([ ]) and parentheses (). Maximum length of 20 characters. When not used, the default is an asterisk (*) fill.",
                    "default": ""
                },
                {
                    "name": "fill_char",
                    "type": "STRING",
                    "description": "Single character used to replace any words matching the profanity list. Fills designated character to length of word replaced. Accepts underscore (_) tilde (~), dash/hyphen (-), equal sign (=), pipe (|) and asterisk (*). When not used, the default is an asterisk (*) fill.",
                    "default": ""
                }
            ],
            "method": "GET",
            "template_response": {
                "result": "str"
            }
        }
    ],
    "query": "I have a document that needs to be checked for profanity. Can you remove any profane words from the text and replace them with asterisks? Also, please let me know if the document contains any profanity.",
    "relevant APIs": [
        [
            "PurgoMalum",
            "Remove profanity"
        ],
        [
            "PurgoMalum",
            "Check if text contains profanity"
        ]
    ],
    "query_id": 46455
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/sentence",
            "api_description": "Returns a single random **sentence**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/paragraph",
            "api_description": "Returns a **paragraph** with random sentences",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/words",
            "api_description": "Returns random **words**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET",
            "template_response": {}
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/sentences",
            "api_description": "Returns some single random **sentence**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "maximumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        }
    ],
    "query": "I'm writing a blog post about creativity and need some inspiration. Can you provide me with a random sentence and a random word with a word length of 8? It would be great if you could also generate a paragraph with 4 sentences.",
    "relevant APIs": [
        [
            "Jibber Jabber",
            "/sentence"
        ],
        [
            "Jibber Jabber",
            "/word"
        ],
        [
            "Jibber Jabber",
            "/paragraph"
        ]
    ],
    "query_id": 46662
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/sentence",
            "api_description": "Returns a single random **sentence**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/paragraph",
            "api_description": "Returns a **paragraph** with random sentences",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/words",
            "api_description": "Returns random **words**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET",
            "template_response": {}
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/word",
            "api_description": "Returns a random **word**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        }
    ],
    "query": "I'm writing a blog post about creativity and need some inspiration. Can you provide me with a random sentence and a random word with a word length of 8? It would be great if you could also generate a paragraph with 4 sentences.",
    "relevant APIs": [
        [
            "Jibber Jabber",
            "/sentence"
        ],
        [
            "Jibber Jabber",
            "/word"
        ],
        [
            "Jibber Jabber",
            "/paragraph"
        ]
    ],
    "query_id": 46662
},
{
    "api_list": [
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/paragraph",
            "api_description": "Returns a **paragraph** with random sentences",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/words",
            "api_description": "Returns random **words**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET",
            "template_response": {}
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/sentences",
            "api_description": "Returns some single random **sentence**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "maximumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfSentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minimumNumberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "numberOfWords",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        },
        {
            "category_name": "Tools",
            "tool_name": "Jibber Jabber",
            "api_name": "/word",
            "api_description": "Returns a random **word**",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "minimumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maximumWordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "method": "GET"
        }
    ],
    "query": "I'm writing a blog post about creativity and need some inspiration. Can you provide me with a random sentence and a random word with a word length of 8? It would be great if you could also generate a paragraph with 4 sentences.",
    "relevant APIs": [
        [
            "Jibber Jabber",
            "/sentence"
        ],
        [
            "Jibber Jabber",
            "/word"
        ],
        [
            "Jibber Jabber",
            "/paragraph"
        ]
    ],
    "query_id": 46662
},
{
    "api_list": [
        {
            "category_name": "Logistics",
            "tool_name": "SQUAKE",
            "api_name": "Checkhealth",
            "api_description": " ",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I'm working on a research project about sustainable logistics solutions. Can you provide me with the necessary information and documentation for the SQUAKE API? I'm particularly interested in understanding how it calculates carbon emissions.",
    "relevant APIs": [
        [
            "SQUAKE",
            "Checkhealth"
        ],
        [
            "SQUAKE",
            "Projects"
        ]
    ],
    "query_id": 58606
},
{
    "api_list": [
        {
            "category_name": "Logistics",
            "tool_name": "SQUAKE",
            "api_name": "Projects",
            "api_description": " ",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET"
        }
    ],
    "query": "I'm working on a research project about sustainable logistics solutions. Can you provide me with the necessary information and documentation for the SQUAKE API? I'm particularly interested in understanding how it calculates carbon emissions.",
    "relevant APIs": [
        [
            "SQUAKE",
            "Checkhealth"
        ],
        [
            "SQUAKE",
            "Projects"
        ]
    ],
    "query_id": 58606
},
{
    "api_list": [
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "logoutUser",
            "api_description": "",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "code": "int",
                "type": "str",
                "message": "str"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "loginUser",
            "api_description": "",
            "required_parameters": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "The password for login in clear text",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The user name for login",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "code": "int",
                "type": "str",
                "message": "str"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "getUserByName",
            "api_description": "",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The name that needs to be fetched. Use user1 for testing. ",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "code": "int",
                "type": "str",
                "message": "str"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "getPetById",
            "api_description": "Returns a single pet",
            "required_parameters": [
                {
                    "name": "petId",
                    "type": "NUMBER",
                    "description": "ID of pet to return",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "code": "int",
                "type": "str",
                "message": "str"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "getInventory",
            "api_description": "Returns a map of status codes to quantities",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "Sale": "int",
                "totvs": "int",
                "sold": "int",
                "string": "int",
                "pending": "int",
                "dgdfgdf": "int",
                "available": "int",
                "peric": "int",
                "cat": "int",
                "not available": "int",
                "new-2": "int",
                "Available": "int",
                "disponible": "int"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "getOrderById",
            "api_description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
            "required_parameters": [
                {
                    "name": "orderId",
                    "type": "NUMBER",
                    "description": "ID of pet that needs to be fetched",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "code": "int",
                "type": "str",
                "message": "str"
            }
        }
    ],
    "query": "My company is conducting a survey and we need to retrieve user details by their username 'survey123'. Can you provide us with the API call for this? Additionally, we would like to get the pet details by their ID '56789' and retrieve the inventory status of the store.",
    "relevant APIs": [
        [
            "tes",
            "getUserByName"
        ],
        [
            "tes",
            "getPetById"
        ],
        [
            "tes",
            "getInventory"
        ]
    ],
    "query_id": 59890
},
{
    "api_list": [
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "logoutUser",
            "api_description": "",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "code": "int",
                "type": "str",
                "message": "str"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "loginUser",
            "api_description": "",
            "required_parameters": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "The password for login in clear text",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The user name for login",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "code": "int",
                "type": "str",
                "message": "str"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "getUserByName",
            "api_description": "",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The name that needs to be fetched. Use user1 for testing. ",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "code": "int",
                "type": "str",
                "message": "str"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "getInventory",
            "api_description": "Returns a map of status codes to quantities",
            "required_parameters": [],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "Sale": "int",
                "totvs": "int",
                "sold": "int",
                "string": "int",
                "pending": "int",
                "dgdfgdf": "int",
                "available": "int",
                "peric": "int",
                "cat": "int",
                "not available": "int",
                "new-2": "int",
                "Available": "int",
                "disponible": "int"
            }
        },
        {
            "category_name": "Video_Images",
            "tool_name": "tes",
            "api_name": "getOrderById",
            "api_description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
            "required_parameters": [
                {
                    "name": "orderId",
                    "type": "NUMBER",
                    "description": "ID of pet that needs to be fetched",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "method": "GET",
            "template_response": {
                "code": "int",
                "type": "str",
                "message": "str"
            }
        }
    ],
    "query": "My company is conducting a survey and we need to retrieve user details by their username 'survey123'. Can you provide us with the API call for this? Additionally, we would like to get the pet details by their ID '56789' and retrieve the inventory status of the store.",
    "relevant APIs": [
        [
            "tes",
            "getUserByName"
        ],
        [
            "tes",
            "getPetById"
        ],
        [
            "tes",
            "getInventory"
        ]
    ],
    "query_id": 59890
}