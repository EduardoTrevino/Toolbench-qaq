[
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "URL Shortener",
                "api_name": "short-urls/{code}/visits",
                "api_description": "Shows clicks, referer, etc. for a specific short link.",
                "required_parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "description": "",
                        "default": "j95Aj"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "URL Shortener",
                "api_name": "short-urls/{code}",
                "api_description": "Shows information about a short link code.",
                "required_parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "description": "",
                        "default": "U1hAI"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company has been using the URL Shortener tool to track the performance of our social media posts. Can you please give me insights into the visits and referral sources for the short link with the code 'j95Aj'?",
        "relevant APIs": [
            [
                "URL Shortener",
                "short-urls/{code}/visits"
            ],
            [
                "URL Shortener",
                "short-urls/{code}"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 37847
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "ProxyPage",
                "api_name": "Random proxy",
                "api_description": "Get random proxy,\n\nchoose type and country",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25",
                        "default": "HTTP"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "You can specify a country for a proxy that you want to be returened\n",
                        "default": "US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "port": "int",
                    "latency": "int",
                    "ssl": "bool",
                    "is_anonymous": "bool",
                    "types": [
                        "list of str with length 1"
                    ],
                    "country": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "ProxyPage",
                "api_name": "Tier2",
                "api_description": "Tier 2 proxies\n\nEach proxy returned costs 1 credit\n\n\nWith our /v1/tier2 endpoint you can set different parameters for proxies that you need.\n\nYou can set type which is just your proxy type, either HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25 (which is smtp proxy)\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "HTTP"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ssl",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "100"
                    },
                    {
                        "name": "is_anonymous",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "US"
                    },
                    {
                        "name": "latency",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "port": "int",
                    "latency": "int",
                    "is_anonymous": "bool",
                    "types": [
                        "list of str with length 1"
                    ],
                    "country": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "ProxyPage",
                "api_name": "Tier1",
                "api_description": "List our tier 1 proxies with filters\nThis proxies are more comprehensively checked\n\n\nYou can set type which is just your proxy type, either HTTP, HTTPS\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25",
                        "default": "HTTP"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "latency",
                        "type": "NUMBER",
                        "description": "ms latency for a proxy, everything that is below that value is returned\n",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "You can specify a country for a proxy that you want to be returened\n",
                        "default": "US"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the number of proxies returned, helps you control how many credits can be used\n",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "port": "int",
                    "latency": "int",
                    "is_anonymous": "bool",
                    "types": [
                        "list of str with length 1"
                    ],
                    "country": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family is planning a vacation to multiple countries. We need proxies to access geo-restricted content. Can you suggest proxies with low latency and anonymity for our HTTP connections?",
        "relevant APIs": [
            [
                "ProxyPage",
                "Random proxy"
            ],
            [
                "ProxyPage",
                "Tier1"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 38021
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Bash Code Compiler",
                "api_name": "Bash Versions",
                "api_description": "Bash Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Hey there! I need your help with Bash code compilation. Could you please let me know the supported versions of Bash for your compiler?",
        "relevant APIs": [
            [
                "Bash Code Compiler",
                "Bash Versions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 86535
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "C Code Compiler",
                "api_name": "C Versions",
                "api_description": "C Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "id": "int",
                        "name": "str"
                    },
                    "1": {
                        "id": "int",
                        "name": "str"
                    },
                    "2": {
                        "id": "int",
                        "name": "str"
                    },
                    "3": {
                        "id": "int",
                        "name": "str"
                    },
                    "4": {
                        "id": "int",
                        "name": "str"
                    },
                    "5": {
                        "id": "int",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Recommend the best version of C to compile my C code. I want to ensure compatibility and efficiency. Thank you in advance!",
        "relevant APIs": [
            [
                "C Code Compiler",
                "C Versions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 86488
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTConvert",
                "api_name": "Url Download",
                "api_description": "Gets a url to download the file",
                "required_parameters": [
                    {
                        "name": "Type",
                        "type": "STRING",
                        "description": "",
                        "default": "MP3"
                    },
                    {
                        "name": "Url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.youtube.com/watch?v=Qzw6A2WC5Qo"
                    },
                    {
                        "name": "Title",
                        "type": "STRING",
                        "description": "",
                        "default": "name_music"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "str",
                    "key": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "YTConvert",
                "api_name": "Search",
                "api_description": "Search by content or URL",
                "required_parameters": [
                    {
                        "name": "SearchQuery",
                        "type": "STRING",
                        "description": "",
                        "default": "Skillet"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "image": "str",
                    "url": "str",
                    "author": "str",
                    "duration": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend wants to convert a YouTube video to MP3. Can you find a URL to download the audio file? The video he wants to convert is titled 'Guitar Tutorial'.",
        "relevant APIs": [
            [
                "YTConvert",
                "Url Download"
            ],
            [
                "YTConvert",
                "Search"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 80194
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "2. Thumbnail ready",
                "api_description": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "1. Shoot thumbnail",
                "api_description": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "refresh",
                        "type": "STRING",
                        "description": "This parameter forces the currently generate d thumbnail to be regenerated.  It is optional and will be ignored unless it contains the value 1",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am working on a project and need to generate thumbnails for a list of URLs. Can you create small-sized (120 x 90 pixels) thumbnails for the URLs and let me know when they are ready to download?",
        "relevant APIs": [
            [
                "Pagepeeker",
                "2. Thumbnail ready"
            ],
            [
                "Pagepeeker",
                "1. Shoot thumbnail"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54640
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "About info (free)",
                "api_description": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThis endpoint will return the `About` info of the number, and the time when the value was set.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.",
                        "default": "34655719560"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.",
                        "default": "ENTER_HERE_A_TEMP_TOKEN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "Is a business? (free)",
                "api_description": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nRequests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.",
                        "default": "34655719560"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.",
                        "default": "ENTER_HERE_A_TEMP_TOKEN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "Validate WA number (free)",
                "api_description": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThe response is `true` if the phone is registered on whatsapp.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.",
                        "default": "34605797764"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.",
                        "default": "ENTER_HERE_A_TEMP_TOKEN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "Validate WA number",
                "api_description": "enter the number you want to validate.\nLearn how to use it on this [video](https://youtu.be/_h5ybzp9UNU).",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The whatsapp number must be written as: number (including countrycode); do **NOT** include any non-number character, spaces, or anything which is not a number. Otherwise, the request will not be processed.\nExamples: of correct numbers are: 34123456789 (for spain) or 491234567890 (for Germany).\nTIPS:\n    Do NOT include '+' before your countrycode,\n    Do NOT include a '-', or any other character or space (anything which is not a number) as part of your phone number.\n    If you do not know which is your country code check this: https://countrycode.org/\n",
                        "default": "34605797764"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "Is a business?",
                "api_description": "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The whatsapp number must be written as: `countrycode` and `number`; do NOT include any non-number character, spaces, or anything which is not a number.\nExamples: of correct numbers are: `34123456789` (for spain) or `491234567890` (for Germany).\nCountry codes can be checked here: https://countrycode.org/",
                        "default": "34655719560"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "About info",
                "api_description": "This endpoint will return the *About* state of the WA number on the query.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34605797764"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to check if my company's WhatsApp numbers are valid. The numbers are +1234567890, +9876543210, and +4567891230. Can you verify if they are registered on WhatsApp and provide me with the 'About' info? Additionally, let me know if any of them are business accounts.",
        "relevant APIs": [
            [
                "Bulk Whatsapp Validator",
                "Validate WA number"
            ],
            [
                "Bulk Whatsapp Validator",
                "About info"
            ],
            [
                "Bulk Whatsapp Validator",
                "Is a business?"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 38099
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Similar Movies",
                "api_name": "find similar",
                "api_description": "find similar movies for your movie",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "24168-titanic"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "movies:": [
                        "list of list with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Similar Movies",
                "api_name": "get Id",
                "api_description": "get the id of your movie",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "titanic"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "movies:": [
                        "list of list with length 1"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is organizing a movie-themed event and we're looking for movies that are similar to 'Titanic'. Can you recommend some movies with a similar genre and visual style? Additionally, it would be great if you could provide a list of movies along with their posters and release dates.",
        "relevant APIs": [
            [
                "Similar Movies",
                "find similar"
            ],
            [
                "Similar Movies",
                "get Id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 9581
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_accounts",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_weak_certs",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "52841661d61e00649451cc471e9b56d169df8041926b1252bb3fd0710c27b12c"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_expired_certs",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "ac7c090c34338ea6a3b335004755e24578e7e4eee739c5c33736f0822b64907e"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_weak_keys",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "852031776c09f8152c90496f2c3fac85b46a938d20612d7fc03eea8aab46f23e"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_private_keys",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "90e3e68e1c61850f20c50e551816d47d484d7feb46890f5bc0a0e0dab3e3ba0b"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_config_issues",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "aa96e4d41a4b0ceb3f1ae4d94f3cb445621b9501e3a9c69e6b9eb37c5888a03c"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_risk",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm conducting research on the security of IoT devices and I need data on weak certificates, expired certificates, and any configuration issues. Can you analyze the firmware of different devices and provide me with this information? It will contribute to my research findings and help improve IoT security.",
        "relevant APIs": [
            [
                "IoTVAS",
                "get_weak_certs"
            ],
            [
                "IoTVAS",
                "get_expired_certs"
            ],
            [
                "IoTVAS",
                "get_config_issues"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 23486
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_accounts",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_weak_certs",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "52841661d61e00649451cc471e9b56d169df8041926b1252bb3fd0710c27b12c"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_expired_certs",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "ac7c090c34338ea6a3b335004755e24578e7e4eee739c5c33736f0822b64907e"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_weak_keys",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "852031776c09f8152c90496f2c3fac85b46a938d20612d7fc03eea8aab46f23e"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_private_keys",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "90e3e68e1c61850f20c50e551816d47d484d7feb46890f5bc0a0e0dab3e3ba0b"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_config_issues",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "aa96e4d41a4b0ceb3f1ae4d94f3cb445621b9501e3a9c69e6b9eb37c5888a03c"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_risk",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to retrieve the weak certificates associated with a firmware file. The SHA2 hash of the firmware is 52841661d61e00649451cc471e9b56d169df8041926b1252bb3fd0710c27b12c. Also, provide me with the expired certificates and risk summary for this firmware.",
        "relevant APIs": [
            [
                "IoTVAS",
                "get_weak_certs"
            ],
            [
                "IoTVAS",
                "get_expired_certs"
            ],
            [
                "IoTVAS",
                "get_risk"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 56821
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "C Code Compiler",
                "api_name": "C Versions",
                "api_description": "C Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "id": "int",
                        "name": "str"
                    },
                    "1": {
                        "id": "int",
                        "name": "str"
                    },
                    "2": {
                        "id": "int",
                        "name": "str"
                    },
                    "3": {
                        "id": "int",
                        "name": "str"
                    },
                    "4": {
                        "id": "int",
                        "name": "str"
                    },
                    "5": {
                        "id": "int",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Hey, I'm working on a C programming project for my company and I need to compile the code. Could you please assist me in finding the compatible versions of C for this task? Your help is greatly appreciated!",
        "relevant APIs": [
            [
                "C Code Compiler",
                "C Versions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 86487
    },
    {
        "api_list": [
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "CoinDesk",
                "api_description": "Get the top latest news from CoinDesk.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Bitcoinist",
                "api_description": "Get the top latest news from Bitcoinist.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Cointelegraph",
                "api_description": "Get the top latest news from Cointelegraph.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "The Guardian",
                "api_description": "Get the top latest news from The Guardian.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 20
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "BSC News",
                "api_description": "Get the top latest news from BSC News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 100
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Decrypt",
                "api_description": "Get the top latest news from Decrypt.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 58
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm interested in the latest news about cryptocurrencies and want to know what's happening in the industry. Can you fetch the top articles from CoinDesk, BSC News, and Decrypt? Please include the article titles, descriptions, thumbnails, and publication dates.",
        "relevant APIs": [
            [
                "Cryptocurrency News",
                "CoinDesk"
            ],
            [
                "Cryptocurrency News",
                "BSC News"
            ],
            [
                "Cryptocurrency News",
                "Decrypt"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54484
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "2. Thumbnail ready",
                "api_description": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "1. Shoot thumbnail",
                "api_description": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "refresh",
                        "type": "STRING",
                        "description": "This parameter forces the currently generate d thumbnail to be regenerated.  It is optional and will be ignored unless it contains the value 1",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Could you please generate a small-sized thumbnail image for my friend's blog? Check if the thumbnail is ready and download it for me if it is. The blog URL is 'www.blogexample.com'.",
        "relevant APIs": [
            [
                "Pagepeeker",
                "1. Shoot thumbnail"
            ],
            [
                "Pagepeeker",
                "2. Thumbnail ready"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 4179
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "2. Thumbnail ready",
                "api_description": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "1. Shoot thumbnail",
                "api_description": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "refresh",
                        "type": "STRING",
                        "description": "This parameter forces the currently generate d thumbnail to be regenerated.  It is optional and will be ignored unless it contains the value 1",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "As a web designer, I need a tool that can generate thumbnails for my clients' websites. Can you suggest an API that can create thumbnails in various sizes, like small, medium, and large? It would be helpful if the images are ready for download as soon as they are generated.",
        "relevant APIs": [
            [
                "Pagepeeker",
                "2. Thumbnail ready"
            ],
            [
                "Pagepeeker",
                "1. Shoot thumbnail"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 29653
    },
    {
        "api_list": [
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "GetRecordsbystark_key",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "Which stark_key's record you want to query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": {
                        "list": "empty list",
                        "total": "int",
                        "current_page": "int",
                        "page_size": "int",
                        "total_page": "int"
                    }
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Aggregationbalanceofastark_keybycontractaddress",
                "api_description": "The API aggregation balances by contract address, for previous API, each NFT have an asset_id, but in this API. NFT do not have asset_id when return, but has token id",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "The stark_key you want to check balance",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Listallcollections",
                "api_description": "The API lists all collections on Reddio's layer2 system.\n\nThe return field is like the following descrption\n\n| **field** | **description** |\n| --- | --- |\n| contract_address | The contract address |\n| symbol | The symbol of |\n| type | ERC721 or ERC721M |\n| total_supply | Total Supply of the token |\n| base_uri | The base uri of NFT |\n| asset_type | The asset type is calculated by reddio, the definition is [here](https://docs.starkware.co/starkex/spot/shared/starkex-specific-concepts.html#computing_asset_info_asset_type_asset_id) |",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": [
                        {
                            "contract_address": "str",
                            "symbol": "str",
                            "type": "str",
                            "total_supply": "str",
                            "asset_type": "str",
                            "base_uri": "str",
                            "_list_length": 200
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Getnoncebystark_key",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "which stark_key's nonce you want to get",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "NoneType"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Balancesofstark_key",
                "api_description": "The API retrieves the balance of a stark_key, each return value are as the previous field",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "set limit per page",
                        "default": ""
                    },
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "The stark key",
                        "default": ""
                    },
                    {
                        "name": "contract_address",
                        "type": "STRING",
                        "description": "filter balance by contract address",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "which page(starts by 1)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "GetMarketplaces",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "project_uuid",
                        "type": "STRING",
                        "description": "",
                        "default": "eeda297e-4d35-4f11-915a-58e1a8873f17"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "NoneType",
                    "error": "str",
                    "error_code": "int"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Balanceofstark_keyandasset_id",
                "api_description": "This API retrieves the balance of a stark_key and asset_id\n\nThe return values description\n\n| **key** | **description** |\n| --- | --- |\n| asset_id | The asset's id |\n| contract_address | The contract address of ERC20/ERC721/ERC721, if the asset_id's type is ETH, it will return \"eth\" as a placeholder |\n| token_id | The NFT token ID(this field is set when type is ERC721 or ERC721M) |\n| base_uri | The NFT base uri(this field is set when type is ERC721 or ERC721M) |\n| available | The available balance on layer 2. |\n| frozen | The frozen balance on layer 2. |\n| type | Type of token, Possible enum values is ETH, ERC20, ERC721, ERC721M |\n| symbol | The symbol of ERC721/ERC721M or ERC20(\"ETH\" for ETH) |\n| decimals | The decimals of asset, for ETH is 18, ERC721/ERC721M is 1, and for ERC20, it is based the contracts, [here](https://medium.com/@jgm.orinoco/understanding-erc-20-token-contracts-a809a7310aa5) is more explain about decimals on Ethernum |\n| quantum | quantum is a starkex concept, it is auto-set when the contract is registered to reddio. [here](https://docs.starkware.co/starkex/spot/shared/starkex-specific-concepts.html) is more explain about quantum |\n| display_value | deprecated,use `available` instead |\n| display_frozen | deprecated,use `frozen` instead |\n| balance_available | The available balance represents on layer 2. Keep attention that it need to be converted with quantum and decimals if you need to use this field. All SDK hands this value, so most of the time you do not need to care about it. |\n| balance_frozen | The frozen balance represents on layer 2. Keep attention that it need to be converted with quantum and decimals if you need to use this field. All SDK hands this value, so most of the time you do not need to care about it. |",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "The stark_key which you want to check balance",
                        "default": ""
                    },
                    {
                        "name": "asset_id",
                        "type": "STRING",
                        "description": "Which asset you want to check, you can get asset id in prevous assets APIs",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "GetOrderInfo",
                "api_description": "This API is to get order related information, such as the asset id of base/quota tokens. nonce and vaults related to stark_key\n\n**If you use SDKs(including java/unity/js), you do not need to care about the order info interface, it is already handled by SDK internally**\n\nthe contract1 and contract2 values are like\n\n{type}:{contract_address}:{token_id}\n\nThere are many informations it returns\n\n| **field** | **description** |\n| --- | --- |\n| fee_rate | the upper fee_rate allowed by reddio and marketplace. that is, if reddio & marketplace charge's more then the rate, the order will fail |\n| base_token | base token asset id, in general, if you trade using ETH for NFT, then the base token is ETH's asset id |\n| fee_token | which token as a fee, in general, it is the same as base_token |\n| lower_limit | the lower price of the NFT |\n| nonce | the nonce of the stark_key |\n| contracts | the contracts info of contract1 and contract2 |\n| asset_ids | the asset ids of contract1 and contract2 |\n| vault_ids | first vault id is generated by the stark_key and first asset id, the second vault id is generated by the stark_key and second asset id(you can see the asset_ids above) |",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "the stark_key that want to buy or sell NFT",
                        "default": ""
                    },
                    {
                        "name": "contract2",
                        "type": "STRING",
                        "description": "the quota contract and token id, the vaule can like ERC721:0xA21B04B6dbd1174155E242434B3Df2EeD74BaFb2:28",
                        "default": ""
                    },
                    {
                        "name": "contract1",
                        "type": "STRING",
                        "description": "the base contract info, if sell using ETH, then the vaule should be ETH:eth:1",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "NoneType"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Listcolloction'snftowners",
                "api_description": "The api returns a collection's nft owners.\n\nThe response field description\n\n| **field** | **description** |\n| --- | --- |\n| contract_address | the contract_address of the collection |\n| token_id | the NFT token id |\n| owner | the owner of the NFT |\n| symbol | the NFT's symbol |\n| asset_id | the token's asset id |",
                "required_parameters": [
                    {
                        "name": "contract_address",
                        "type": "STRING",
                        "description": "",
                        "default": "0x6b4f24fd500bedb945fc8b93882766bb5e7cf620"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": {
                        "list": [
                            {
                                "token_id": "str",
                                "contract_address": "str",
                                "owner": "str",
                                "symbol": "str",
                                "asset_id": "str",
                                "_list_length": 4
                            }
                        ],
                        "total": "int",
                        "current_page": "int",
                        "page_size": "int",
                        "total_page": "int"
                    }
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Listfilesunderproject",
                "api_description": "It will list files under the project, the response item like\n\n| **field** | **description** |\n| --- | --- |\n| cid | [Content Identifiers](https://docs.ipfs.tech/concepts/content-addressing/#what-is-a-cid) |\n| filename | The stored file name |\n| created_at | first create time |\n| filesize | file size(in byte) |\n| endpoints | the endpoints you can view the file |",
                "required_parameters": [
                    {
                        "name": "project_uuid",
                        "type": "STRING",
                        "description": "",
                        "default": "eeda297e-4d35-4f11-915a-58e1a8873f17"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "NoneType",
                    "error": "str",
                    "error_code": "int"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a crypto investor interested in the NFT market. Can you provide me with a list of files stored under a specific project? I want to know the CID, filename, creation date, filesize, and endpoints associated with each file. Additionally, I would like to retrieve the balances of my stark_key.",
        "relevant APIs": [
            [
                "Reddio NFT, Token and IPFS",
                "Listfilesunderproject"
            ],
            [
                "Reddio NFT, Token and IPFS",
                "Balancesofstark_key"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 46322
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "DNS",
                "api_description": "Checks the domain DNS records",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "valid": "bool",
                    "A": [
                        "list of str with length 2"
                    ],
                    "AAAA": [
                        "list of str with length 2"
                    ],
                    "CNAME": [
                        "list of str with length 1"
                    ],
                    "NS": [
                        "list of str with length 2"
                    ],
                    "MX": [
                        "list of str with length 5"
                    ],
                    "TXT": [
                        "list of str with length 19"
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "Keyword Search",
                "api_description": "Query up to 333 TLDs to check registered domains",
                "required_parameters": [
                    {
                        "name": "sld",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sld": "str",
                    "found": "bool",
                    "lookup_tlds": "int",
                    "found_tlds": "int",
                    "registered": [
                        {
                            "domain": "str",
                            "tld": "str",
                            "created_at": "str",
                            "updated_at": "str",
                            "expires_at": "str",
                            "_list_length": 18
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "Whois",
                "api_description": "Checks the domain Whois Details",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "sld": "str",
                    "tld": "str",
                    "valid": "bool",
                    "available": "bool",
                    "created_at": "str",
                    "updated_at": "str",
                    "expires_at": "str",
                    "registrar": "str",
                    "whois": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to check the availability of a domain name for my family's upcoming event website. Can you please verify if the domain 'ourfamilyevent.com' is available and provide the DNS records and Whois details for that domain?",
        "relevant APIs": [
            [
                "Domain Checker",
                "DNS"
            ],
            [
                "Domain Checker",
                "Whois"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54844
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "About info (free)",
                "api_description": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThis endpoint will return the `About` info of the number, and the time when the value was set.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.",
                        "default": "34655719560"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.",
                        "default": "ENTER_HERE_A_TEMP_TOKEN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "Is a business? (free)",
                "api_description": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nRequests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.",
                        "default": "34655719560"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.",
                        "default": "ENTER_HERE_A_TEMP_TOKEN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "Validate WA number (free)",
                "api_description": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThe response is `true` if the phone is registered on whatsapp.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.",
                        "default": "34605797764"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.",
                        "default": "ENTER_HERE_A_TEMP_TOKEN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "Validate WA number",
                "api_description": "enter the number you want to validate.\nLearn how to use it on this [video](https://youtu.be/_h5ybzp9UNU).",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The whatsapp number must be written as: number (including countrycode); do **NOT** include any non-number character, spaces, or anything which is not a number. Otherwise, the request will not be processed.\nExamples: of correct numbers are: 34123456789 (for spain) or 491234567890 (for Germany).\nTIPS:\n    Do NOT include '+' before your countrycode,\n    Do NOT include a '-', or any other character or space (anything which is not a number) as part of your phone number.\n    If you do not know which is your country code check this: https://countrycode.org/\n",
                        "default": "34605797764"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "Is a business?",
                "api_description": "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "The whatsapp number must be written as: `countrycode` and `number`; do NOT include any non-number character, spaces, or anything which is not a number.\nExamples: of correct numbers are: `34123456789` (for spain) or `491234567890` (for Germany).\nCountry codes can be checked here: https://countrycode.org/",
                        "default": "34655719560"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Bulk Whatsapp Validator",
                "api_name": "About info",
                "api_description": "This endpoint will return the *About* state of the WA number on the query.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34605797764"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to know if my friend's phone number, 34631428039, is registered on WhatsApp. Can you validate the number and provide the 'About' info? Also, let me know if it is a business account.",
        "relevant APIs": [
            [
                "Bulk Whatsapp Validator",
                "Validate WA number"
            ],
            [
                "Bulk Whatsapp Validator",
                "About info"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 21453
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "DailyCred",
                "api_name": "User Event Timeline",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "event_type",
                        "type": "STRING",
                        "description": "The type of event you wish to see the user's activity for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "DailyCred",
                "api_name": "Create a User With Only an Email",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "The user's email.",
                        "default": ""
                    },
                    {
                        "name": "client_id",
                        "type": "STRING",
                        "description": "Your client id, found on your settings page.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "DailyCred",
                "api_name": "Account Event Timeline",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "event_type",
                        "type": "STRING",
                        "description": "The specific event type you want to query for.",
                        "default": ""
                    },
                    {
                        "name": "client_id",
                        "type": "STRING",
                        "description": "Your client id, found on your settings page.",
                        "default": ""
                    },
                    {
                        "name": "client_secret",
                        "type": "STRING",
                        "description": "Your client secret key, found on your settings page.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "DailyCred",
                "api_name": "Find a User",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "client_id",
                        "type": "STRING",
                        "description": "Your client id, found on your settings page.",
                        "default": ""
                    },
                    {
                        "name": "client_secret",
                        "type": "STRING",
                        "description": "Your client secret key, found on your settings page.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The user's dailycred user id.",
                        "default": ""
                    },
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "The user's email.",
                        "default": ""
                    },
                    {
                        "name": "access_token",
                        "type": "STRING",
                        "description": "An access token for your user.",
                        "default": ""
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The user's username.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "DailyCred",
                "api_name": "Connect an Existing User with a New Identity Provider",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "identity_provider",
                        "type": "STRING",
                        "description": "The desired social network your user to authenticate with. If no identity_provider parameter is provided, it will default to email and password authentication. You can also set identity_provider to gateway to use our UI to let the user choose who to sign in with.",
                        "default": ""
                    },
                    {
                        "name": "client_id",
                        "type": "STRING",
                        "description": "Your DailyCred client ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "redirect_uri",
                        "type": "STRING",
                        "description": "After authentication, the user will be redirected to this url. The url must be within one of your approved domains in your account settings. If omitted we will use your account default callback.",
                        "default": ""
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "You can include a state parameter to help prevent cross-site request forgery. When your user is redirected back to your site after authenticating, the state parameter will be included.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to find a user using their email address 'admin@example.com' and view their activity timeline. Additionally, I would like to retrieve their account event timeline. Please assist me with this.",
        "relevant APIs": [
            [
                "DailyCred",
                "Find a User"
            ],
            [
                "DailyCred",
                "User Event Timeline"
            ],
            [
                "DailyCred",
                "Account Event Timeline"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 71823
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Check page or website loading speed",
                "api_name": "getPageSpeed",
                "api_description": "Get page or website loading speed in seconds",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is a web developer and wants to check the loading speed of his personal blog. Can you help him by providing the page or website loading speed in seconds for the URL 'www.blog.com'? It would be great if he could get recommendations to improve the loading speed as well.",
        "relevant APIs": [
            [
                "Check page or website loading speed",
                "getPageSpeed"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 86394
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Similar Movies",
                "api_name": "find similar",
                "api_description": "find similar movies for your movie",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "24168-titanic"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "movies:": [
                        "list of list with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Similar Movies",
                "api_name": "get Id",
                "api_description": "get the id of your movie",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "titanic"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "movies:": [
                        "list of list with length 1"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a movie club and we want to explore movies that are similar to 'Pulp Fiction'. Can you help us find movies that have a similar nonlinear narrative and dark humor? Please provide us with a list of recommended movies.",
        "relevant APIs": [
            [
                "Similar Movies",
                "find similar"
            ],
            [
                "Similar Movies",
                "get Id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 26577
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Bash Code Compiler",
                "api_name": "Bash Versions",
                "api_description": "Bash Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to compile my Bash code using your compiler. Before getting started, I'd like to know the available Bash versions. Can you provide me with that information?",
        "relevant APIs": [
            [
                "Bash Code Compiler",
                "Bash Versions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 86536
    },
    {
        "api_list": [
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "CoinDesk",
                "api_description": "Get the top latest news from CoinDesk.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Bitcoinist",
                "api_description": "Get the top latest news from Bitcoinist.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Cointelegraph",
                "api_description": "Get the top latest news from Cointelegraph.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "The Guardian",
                "api_description": "Get the top latest news from The Guardian.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 20
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "BSC News",
                "api_description": "Get the top latest news from BSC News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 100
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Decrypt",
                "api_description": "Get the top latest news from Decrypt.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 58
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I run a cryptocurrency blog and I need the latest news articles from CoinDesk, Bitcoinist, and Decrypt. Can you provide me with the top news articles from these sources? It would be helpful if you could include the article title, description, and thumbnail image. Thank you!",
        "relevant APIs": [
            [
                "Cryptocurrency News",
                "CoinDesk"
            ],
            [
                "Cryptocurrency News",
                "Bitcoinist"
            ],
            [
                "Cryptocurrency News",
                "Decrypt"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 62728
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Email Checkup",
                "api_name": "/email/exist",
                "api_description": "help you to check if email really exist.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@email.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "msg": "str",
                    "info": {
                        "reason": "str",
                        "domain": "str",
                        "provider": "str",
                        "free_email": "bool"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Email Checkup",
                "api_name": "/email/format",
                "api_description": "Help you to validate email format.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@yahoo.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "msg": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to ensure that my company's email addresses are correctly formatted and exist. Please validate the format and existence of 'info@company.com' and 'support@company.com'.",
        "relevant APIs": [
            [
                "Email Checkup",
                "/email/format"
            ],
            [
                "Email Checkup",
                "/email/exist"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 21313
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "DNS",
                "api_description": "Checks the domain DNS records",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "valid": "bool",
                    "A": [
                        "list of str with length 2"
                    ],
                    "AAAA": [
                        "list of str with length 2"
                    ],
                    "CNAME": [
                        "list of str with length 1"
                    ],
                    "NS": [
                        "list of str with length 2"
                    ],
                    "MX": [
                        "list of str with length 5"
                    ],
                    "TXT": [
                        "list of str with length 19"
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "Keyword Search",
                "api_description": "Query up to 333 TLDs to check registered domains",
                "required_parameters": [
                    {
                        "name": "sld",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sld": "str",
                    "found": "bool",
                    "lookup_tlds": "int",
                    "found_tlds": "int",
                    "registered": [
                        {
                            "domain": "str",
                            "tld": "str",
                            "created_at": "str",
                            "updated_at": "str",
                            "expires_at": "str",
                            "_list_length": 18
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "Whois",
                "api_description": "Checks the domain Whois Details",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "sld": "str",
                    "tld": "str",
                    "valid": "bool",
                    "available": "bool",
                    "created_at": "str",
                    "updated_at": "str",
                    "expires_at": "str",
                    "registrar": "str",
                    "whois": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Please check if the domain 'example.com' is registered and valid. If it is registered, provide me with the DNS records and Whois details.",
        "relevant APIs": [
            [
                "Domain Checker",
                "DNS"
            ],
            [
                "Domain Checker",
                "Whois"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 80504
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTConvert",
                "api_name": "Url Download",
                "api_description": "Gets a url to download the file",
                "required_parameters": [
                    {
                        "name": "Type",
                        "type": "STRING",
                        "description": "",
                        "default": "MP3"
                    },
                    {
                        "name": "Url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.youtube.com/watch?v=Qzw6A2WC5Qo"
                    },
                    {
                        "name": "Title",
                        "type": "STRING",
                        "description": "",
                        "default": "name_music"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "str",
                    "key": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "YTConvert",
                "api_name": "Search",
                "api_description": "Search by content or URL",
                "required_parameters": [
                    {
                        "name": "SearchQuery",
                        "type": "STRING",
                        "description": "",
                        "default": "Skillet"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "image": "str",
                    "url": "str",
                    "author": "str",
                    "duration": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to convert a YouTube video to MP3. Can you find a URL to download the audio file? The video I want to convert is titled 'Workout Motivation'.",
        "relevant APIs": [
            [
                "YTConvert",
                "Url Download"
            ],
            [
                "YTConvert",
                "Search"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 80197
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Unit Measurement Conversion",
                "api_name": "Convert a Unit",
                "api_description": "GET the Unit and Value you want to convert, and get a object with the result and abbreviation (if available).",
                "required_parameters": [
                    {
                        "name": "fromValue",
                        "type": "STRING",
                        "description": "",
                        "default": "200"
                    },
                    {
                        "name": "toUnit",
                        "type": "STRING",
                        "description": "",
                        "default": "kilogram"
                    },
                    {
                        "name": "fromUnit",
                        "type": "STRING",
                        "description": "",
                        "default": "pound"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "weight"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "value": "str",
                    "abbreviation": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Unit Measurement Conversion",
                "api_name": "Get a List of All Units",
                "api_description": "This endpoint gets a full list of units available for conversion",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "measurements": [
                        {
                            "unit": "str",
                            "abbr": "str",
                            "_list_length": 36
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is working on an international project, and we need to convert various units. Can you recommend an API that can handle different types of conversions?",
        "relevant APIs": [
            [
                "Unit Measurement Conversion",
                "Convert a Unit"
            ],
            [
                "Unit Measurement Conversion",
                "Get a List of All Units"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54658
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Advanced Movie Search",
                "api_name": "Genre List",
                "api_description": "Get list of all available genres",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "genres": [
                        {
                            "id": "int",
                            "name": "str",
                            "_list_length": 19
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Advanced Movie Search",
                "api_name": "Search by Genre",
                "api_description": "Discover movies by Genre",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "with_genres",
                        "type": "STRING",
                        "description": "",
                        "default": "80"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "adult": "bool",
                            "backdrop_path": "str",
                            "genre_ids": [
                                "list of int with length 3"
                            ],
                            "id": "int",
                            "original_language": "str",
                            "original_title": "str",
                            "overview": "str",
                            "popularity": "float",
                            "poster_path": "str",
                            "release_date": "str",
                            "title": "str",
                            "video": "bool",
                            "vote_average": "float",
                            "vote_count": "int",
                            "_list_length": 20
                        }
                    ],
                    "total_pages": "int",
                    "total_results": "int"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Advanced Movie Search",
                "api_name": "Search by Name",
                "api_description": "Search a movie by query string",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "kong"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Advanced Movie Search",
                "api_name": "Get Detailed Response",
                "api_description": "Get detailed response for a movie ID",
                "required_parameters": [
                    {
                        "name": "movie_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "399566"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "adult": "bool",
                    "backdrop_path": "str",
                    "belongs_to_collection": {
                        "id": "int",
                        "name": "str",
                        "poster_path": "str",
                        "backdrop_path": "str"
                    },
                    "budget": "int",
                    "genres": [
                        {
                            "id": "int",
                            "name": "str",
                            "_list_length": 3
                        }
                    ],
                    "homepage": "str",
                    "id": "int",
                    "imdb_id": "str",
                    "original_language": "str",
                    "original_title": "str",
                    "overview": "str",
                    "popularity": "float",
                    "poster_path": "str",
                    "production_companies": [
                        {
                            "id": "int",
                            "logo_path": "str",
                            "name": "str",
                            "origin_country": "str",
                            "_list_length": 1
                        }
                    ],
                    "production_countries": [
                        {
                            "iso_3166_1": "str",
                            "name": "str",
                            "_list_length": 1
                        }
                    ],
                    "release_date": "str",
                    "revenue": "int",
                    "runtime": "int",
                    "spoken_languages": [
                        {
                            "english_name": "str",
                            "iso_639_1": "str",
                            "name": "str",
                            "_list_length": 1
                        }
                    ],
                    "status": "str",
                    "tagline": "str",
                    "title": "str",
                    "video": "bool",
                    "vote_average": "float",
                    "vote_count": "int"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a movie enthusiast and I'm looking for recommendations. Can you help me discover movies from different genres? It would be great if you could provide the movie details such as the title, overview, release date, and average vote.",
        "relevant APIs": [
            [
                "Advanced Movie Search",
                "Genre List"
            ],
            [
                "Advanced Movie Search",
                "Search by Genre"
            ],
            [
                "Advanced Movie Search",
                "Get Detailed Response"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 43312
    },
    {
        "api_list": [
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "CoinDesk",
                "api_description": "Get the top latest news from CoinDesk.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Bitcoinist",
                "api_description": "Get the top latest news from Bitcoinist.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Cointelegraph",
                "api_description": "Get the top latest news from Cointelegraph.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "The Guardian",
                "api_description": "Get the top latest news from The Guardian.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 20
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "BSC News",
                "api_description": "Get the top latest news from BSC News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 100
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Decrypt",
                "api_description": "Get the top latest news from Decrypt.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 58
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are starting a cryptocurrency blog and we need content. Can you fetch the top news articles from CoinDesk, The Guardian, and Decrypt? We require the article URLs, titles, and thumbnails. Your assistance would be highly valuable!",
        "relevant APIs": [
            [
                "Cryptocurrency News",
                "CoinDesk"
            ],
            [
                "Cryptocurrency News",
                "The Guardian"
            ],
            [
                "Cryptocurrency News",
                "Decrypt"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12535
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Temporary Email",
                "api_name": "Get Email",
                "api_description": "Get Email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "ram.tripathi@bheps.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Temporary Email",
                "api_name": "Domains list",
                "api_description": "Get domains list",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm working on a project that requires temporary email functionality. Can you help me with the API calls necessary to create a temporary email address and retrieve emails sent to that address? Also, I would like a list of available domains that I can use for the temporary email addresses.",
        "relevant APIs": [
            [
                "Temporary Email",
                "Domains list"
            ],
            [
                "Temporary Email",
                "Get Email"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 21426
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "DNS",
                "api_description": "Checks the domain DNS records",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "valid": "bool",
                    "A": [
                        "list of str with length 2"
                    ],
                    "AAAA": [
                        "list of str with length 2"
                    ],
                    "CNAME": [
                        "list of str with length 1"
                    ],
                    "NS": [
                        "list of str with length 2"
                    ],
                    "MX": [
                        "list of str with length 5"
                    ],
                    "TXT": [
                        "list of str with length 19"
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "Keyword Search",
                "api_description": "Query up to 333 TLDs to check registered domains",
                "required_parameters": [
                    {
                        "name": "sld",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sld": "str",
                    "found": "bool",
                    "lookup_tlds": "int",
                    "found_tlds": "int",
                    "registered": [
                        {
                            "domain": "str",
                            "tld": "str",
                            "created_at": "str",
                            "updated_at": "str",
                            "expires_at": "str",
                            "_list_length": 18
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "Whois",
                "api_description": "Checks the domain Whois Details",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "sld": "str",
                    "tld": "str",
                    "valid": "bool",
                    "available": "bool",
                    "created_at": "str",
                    "updated_at": "str",
                    "expires_at": "str",
                    "registrar": "str",
                    "whois": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "As a developer, I need to check the DNS records and Whois details for the domain 'example.com'. Please provide this information.",
        "relevant APIs": [
            [
                "Domain Checker",
                "DNS"
            ],
            [
                "Domain Checker",
                "Whois"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 80500
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Email Checkup",
                "api_name": "/email/exist",
                "api_description": "help you to check if email really exist.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@email.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "msg": "str",
                    "info": {
                        "reason": "str",
                        "domain": "str",
                        "provider": "str",
                        "free_email": "bool"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Email Checkup",
                "api_name": "/email/format",
                "api_description": "Help you to validate email format.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@yahoo.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "msg": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to ensure that the email 'jenny.smith@yahoo.com' exists. Additionally, I want to validate the format of the email 'john.doe@gmail.com'.",
        "relevant APIs": [
            [
                "Email Checkup",
                "/email/exist"
            ],
            [
                "Email Checkup",
                "/email/format"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 37876
    },
    {
        "api_list": [
            {
                "category_name": "Logistics",
                "tool_name": "SQUAKE",
                "api_name": "Checkhealth",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Logistics",
                "tool_name": "SQUAKE",
                "api_name": "Projects",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm working on a research project about sustainable logistics solutions. Can you provide me with the necessary information and documentation for the SQUAKE API? I'm particularly interested in understanding how it calculates carbon emissions.",
        "relevant APIs": [
            [
                "SQUAKE",
                "Checkhealth"
            ],
            [
                "SQUAKE",
                "Projects"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 58606
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Simple & Cheap QR CODE GENERATOR",
                "api_name": "Qr Code Gen",
                "api_description": "This endpoint takes a \"GET\" request with the \"url\" query parameter and returns a QR code image associated with the text passed.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "www.google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Hey, can you help me with generating a QR code? I want a QR code for my business card. The text I want to encode is 'John Doe, CEO of ABC Company, contact: john@abccompany.com'.",
        "relevant APIs": [
            [
                "Simple & Cheap QR CODE GENERATOR",
                "Qr Code Gen"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 86502
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_accounts",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_weak_certs",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "52841661d61e00649451cc471e9b56d169df8041926b1252bb3fd0710c27b12c"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_expired_certs",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "ac7c090c34338ea6a3b335004755e24578e7e4eee739c5c33736f0822b64907e"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_weak_keys",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "852031776c09f8152c90496f2c3fac85b46a938d20612d7fc03eea8aab46f23e"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_private_keys",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "90e3e68e1c61850f20c50e551816d47d484d7feb46890f5bc0a0e0dab3e3ba0b"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_config_issues",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "aa96e4d41a4b0ceb3f1ae4d94f3cb445621b9501e3a9c69e6b9eb37c5888a03c"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "IoTVAS",
                "api_name": "get_risk",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "firmware_hash",
                        "type": "STRING",
                        "description": "SHA2 hash of device firmware",
                        "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is planning to deploy IoT devices and we want to ensure their security. Can you analyze the firmware of these devices and provide a risk assessment? It would be helpful to check for weak certificates, expired certificates, and weak keys. Thank you!",
        "relevant APIs": [
            [
                "IoTVAS",
                "get_risk"
            ],
            [
                "IoTVAS",
                "get_weak_certs"
            ],
            [
                "IoTVAS",
                "get_expired_certs"
            ],
            [
                "IoTVAS",
                "get_weak_keys"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 65190
    },
    {
        "api_list": [
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "GetRecordsbystark_key",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "Which stark_key's record you want to query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": {
                        "list": "empty list",
                        "total": "int",
                        "current_page": "int",
                        "page_size": "int",
                        "total_page": "int"
                    }
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Aggregationbalanceofastark_keybycontractaddress",
                "api_description": "The API aggregation balances by contract address, for previous API, each NFT have an asset_id, but in this API. NFT do not have asset_id when return, but has token id",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "The stark_key you want to check balance",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Listallcollections",
                "api_description": "The API lists all collections on Reddio's layer2 system.\n\nThe return field is like the following descrption\n\n| **field** | **description** |\n| --- | --- |\n| contract_address | The contract address |\n| symbol | The symbol of |\n| type | ERC721 or ERC721M |\n| total_supply | Total Supply of the token |\n| base_uri | The base uri of NFT |\n| asset_type | The asset type is calculated by reddio, the definition is [here](https://docs.starkware.co/starkex/spot/shared/starkex-specific-concepts.html#computing_asset_info_asset_type_asset_id) |",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": [
                        {
                            "contract_address": "str",
                            "symbol": "str",
                            "type": "str",
                            "total_supply": "str",
                            "asset_type": "str",
                            "base_uri": "str",
                            "_list_length": 200
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Getnoncebystark_key",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "which stark_key's nonce you want to get",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "NoneType"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Balancesofstark_key",
                "api_description": "The API retrieves the balance of a stark_key, each return value are as the previous field",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "set limit per page",
                        "default": ""
                    },
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "The stark key",
                        "default": ""
                    },
                    {
                        "name": "contract_address",
                        "type": "STRING",
                        "description": "filter balance by contract address",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "which page(starts by 1)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "GetMarketplaces",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "project_uuid",
                        "type": "STRING",
                        "description": "",
                        "default": "eeda297e-4d35-4f11-915a-58e1a8873f17"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "NoneType",
                    "error": "str",
                    "error_code": "int"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Balanceofstark_keyandasset_id",
                "api_description": "This API retrieves the balance of a stark_key and asset_id\n\nThe return values description\n\n| **key** | **description** |\n| --- | --- |\n| asset_id | The asset's id |\n| contract_address | The contract address of ERC20/ERC721/ERC721, if the asset_id's type is ETH, it will return \"eth\" as a placeholder |\n| token_id | The NFT token ID(this field is set when type is ERC721 or ERC721M) |\n| base_uri | The NFT base uri(this field is set when type is ERC721 or ERC721M) |\n| available | The available balance on layer 2. |\n| frozen | The frozen balance on layer 2. |\n| type | Type of token, Possible enum values is ETH, ERC20, ERC721, ERC721M |\n| symbol | The symbol of ERC721/ERC721M or ERC20(\"ETH\" for ETH) |\n| decimals | The decimals of asset, for ETH is 18, ERC721/ERC721M is 1, and for ERC20, it is based the contracts, [here](https://medium.com/@jgm.orinoco/understanding-erc-20-token-contracts-a809a7310aa5) is more explain about decimals on Ethernum |\n| quantum | quantum is a starkex concept, it is auto-set when the contract is registered to reddio. [here](https://docs.starkware.co/starkex/spot/shared/starkex-specific-concepts.html) is more explain about quantum |\n| display_value | deprecated,use `available` instead |\n| display_frozen | deprecated,use `frozen` instead |\n| balance_available | The available balance represents on layer 2. Keep attention that it need to be converted with quantum and decimals if you need to use this field. All SDK hands this value, so most of the time you do not need to care about it. |\n| balance_frozen | The frozen balance represents on layer 2. Keep attention that it need to be converted with quantum and decimals if you need to use this field. All SDK hands this value, so most of the time you do not need to care about it. |",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "The stark_key which you want to check balance",
                        "default": ""
                    },
                    {
                        "name": "asset_id",
                        "type": "STRING",
                        "description": "Which asset you want to check, you can get asset id in prevous assets APIs",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "GetOrderInfo",
                "api_description": "This API is to get order related information, such as the asset id of base/quota tokens. nonce and vaults related to stark_key\n\n**If you use SDKs(including java/unity/js), you do not need to care about the order info interface, it is already handled by SDK internally**\n\nthe contract1 and contract2 values are like\n\n{type}:{contract_address}:{token_id}\n\nThere are many informations it returns\n\n| **field** | **description** |\n| --- | --- |\n| fee_rate | the upper fee_rate allowed by reddio and marketplace. that is, if reddio & marketplace charge's more then the rate, the order will fail |\n| base_token | base token asset id, in general, if you trade using ETH for NFT, then the base token is ETH's asset id |\n| fee_token | which token as a fee, in general, it is the same as base_token |\n| lower_limit | the lower price of the NFT |\n| nonce | the nonce of the stark_key |\n| contracts | the contracts info of contract1 and contract2 |\n| asset_ids | the asset ids of contract1 and contract2 |\n| vault_ids | first vault id is generated by the stark_key and first asset id, the second vault id is generated by the stark_key and second asset id(you can see the asset_ids above) |",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "the stark_key that want to buy or sell NFT",
                        "default": ""
                    },
                    {
                        "name": "contract2",
                        "type": "STRING",
                        "description": "the quota contract and token id, the vaule can like ERC721:0xA21B04B6dbd1174155E242434B3Df2EeD74BaFb2:28",
                        "default": ""
                    },
                    {
                        "name": "contract1",
                        "type": "STRING",
                        "description": "the base contract info, if sell using ETH, then the vaule should be ETH:eth:1",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "NoneType"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Listcolloction'snftowners",
                "api_description": "The api returns a collection's nft owners.\n\nThe response field description\n\n| **field** | **description** |\n| --- | --- |\n| contract_address | the contract_address of the collection |\n| token_id | the NFT token id |\n| owner | the owner of the NFT |\n| symbol | the NFT's symbol |\n| asset_id | the token's asset id |",
                "required_parameters": [
                    {
                        "name": "contract_address",
                        "type": "STRING",
                        "description": "",
                        "default": "0x6b4f24fd500bedb945fc8b93882766bb5e7cf620"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": {
                        "list": [
                            {
                                "token_id": "str",
                                "contract_address": "str",
                                "owner": "str",
                                "symbol": "str",
                                "asset_id": "str",
                                "_list_length": 4
                            }
                        ],
                        "total": "int",
                        "current_page": "int",
                        "page_size": "int",
                        "total_page": "int"
                    }
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Listfilesunderproject",
                "api_description": "It will list files under the project, the response item like\n\n| **field** | **description** |\n| --- | --- |\n| cid | [Content Identifiers](https://docs.ipfs.tech/concepts/content-addressing/#what-is-a-cid) |\n| filename | The stored file name |\n| created_at | first create time |\n| filesize | file size(in byte) |\n| endpoints | the endpoints you can view the file |",
                "required_parameters": [
                    {
                        "name": "project_uuid",
                        "type": "STRING",
                        "description": "",
                        "default": "eeda297e-4d35-4f11-915a-58e1a8873f17"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "NoneType",
                    "error": "str",
                    "error_code": "int"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm interested in buying NFTs and would like to know the order-related information. Could you provide me with the fee rate, base token, fee token, and lower limit using the GetOrderInfo API? Additionally, I would like to know the balance of a specific stark key and asset ID using the Balanceofstark_keyandasset_id API.",
        "relevant APIs": [
            [
                "Reddio NFT, Token and IPFS",
                "GetOrderInfo"
            ],
            [
                "Reddio NFT, Token and IPFS",
                "Balanceofstark_keyandasset_id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 3995
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "2. Thumbnail ready",
                "api_description": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "1. Shoot thumbnail",
                "api_description": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "refresh",
                        "type": "STRING",
                        "description": "This parameter forces the currently generate d thumbnail to be regenerated.  It is optional and will be ignored unless it contains the value 1",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is a web developer and needs to generate thumbnails for a list of URLs. Can you assist by providing a quick and efficient way to create thumbnails in various sizes, like small, medium, and large? It would be helpful if the images are ready for download as soon as they are generated.",
        "relevant APIs": [
            [
                "Pagepeeker",
                "2. Thumbnail ready"
            ],
            [
                "Pagepeeker",
                "1. Shoot thumbnail"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 29647
    }
]