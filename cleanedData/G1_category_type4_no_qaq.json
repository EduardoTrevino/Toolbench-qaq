[
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Email Checkup",
                "api_name": "/email/exist",
                "api_description": "help you to check if email really exist.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@email.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "msg": "str",
                    "info": {
                        "reason": "str",
                        "domain": "str",
                        "provider": "str",
                        "free_email": "bool"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Email Checkup",
                "api_name": "/email/format",
                "api_description": "Help you to validate email format.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@yahoo.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "msg": "str"
                }
            }
        ],
        "query": "I want to ensure that my company's email addresses are correctly formatted and exist. Please validate the format and existence of 'info@company.com' and 'support@company.com'.",
        "relevant APIs": [
            [
                "Email Checkup",
                "/email/format"
            ],
            [
                "Email Checkup",
                "/email/exist"
            ]
        ],
        "query_id": 21313
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Similar Movies",
                "api_name": "find similar",
                "api_description": "find similar movies for your movie",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "24168-titanic"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "movies:": [
                        "list of list with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Similar Movies",
                "api_name": "get Id",
                "api_description": "get the id of your movie",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "titanic"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "movies:": [
                        "list of list with length 1"
                    ]
                }
            }
        ],
        "query": "My company is organizing a movie-themed event and we're looking for movies that are similar to 'Titanic'. Can you recommend some movies with a similar genre and visual style? Additionally, it would be great if you could provide a list of movies along with their posters and release dates.",
        "relevant APIs": [
            [
                "Similar Movies",
                "find similar"
            ],
            [
                "Similar Movies",
                "get Id"
            ]
        ],
        "query_id": 9581
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/info",
                "api_description": "List all supported units",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "format": "str",
                    "units": {
                        "angle": [
                            "list of str with length 4"
                        ],
                        "area": [
                            "list of str with length 25"
                        ],
                        "data": [
                            "list of str with length 42"
                        ],
                        "force": [
                            "list of str with length 6"
                        ],
                        "length": [
                            "list of str with length 20"
                        ],
                        "mass": [
                            "list of str with length 22"
                        ],
                        "pressure": [
                            "list of str with length 33"
                        ],
                        "temperature": [
                            "list of str with length 18"
                        ],
                        "time": [
                            "list of str with length 30"
                        ],
                        "volume": [
                            "list of str with length 57"
                        ]
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/volume/:from/:to/:number",
                "api_description": "Volume unit conversions",
                "required_parameters": [
                    {
                        "name": "to",
                        "type": "string",
                        "description": "",
                        "default": "cubic kilometer"
                    },
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "60"
                    },
                    {
                        "name": "from",
                        "type": "string",
                        "description": "",
                        "default": "cubic meter"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "supported": [
                        "list of str with length 57"
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/time/:from/:to/:number",
                "api_description": "Temperature unit conversions",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "string",
                        "description": "",
                        "default": "minute"
                    },
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "50"
                    },
                    {
                        "name": "to",
                        "type": "string",
                        "description": "",
                        "default": "second"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "from": "str",
                    "to": "str",
                    "from_symbol": "str",
                    "to_symbol": "str",
                    "input": "int",
                    "rounded": "int",
                    "result": "int",
                    "roundedResult": "int"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/temperature/:from/:to/:number",
                "api_description": "Temperature unit conversions",
                "required_parameters": [
                    {
                        "name": "to",
                        "type": "string",
                        "description": "",
                        "default": "celsius"
                    },
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "90"
                    },
                    {
                        "name": "from",
                        "type": "string",
                        "description": "",
                        "default": "fahrenheit"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/pressure/:from/:to/:number",
                "api_description": "Pressure unit conversions",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "string",
                        "description": "",
                        "default": "pascal"
                    },
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "100"
                    },
                    {
                        "name": "to",
                        "type": "string",
                        "description": "",
                        "default": "decibar"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "from": "str",
                    "to": "str",
                    "from_symbol": "str",
                    "to_symbol": "str",
                    "input": "int",
                    "rounded": "int",
                    "result": "float",
                    "roundedResult": "float"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/mass/:from/:to/:number",
                "api_description": "Mass unit conversions",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "100"
                    },
                    {
                        "name": "from",
                        "type": "string",
                        "description": "",
                        "default": "gram"
                    },
                    {
                        "name": "to",
                        "type": "string",
                        "description": "",
                        "default": "pound"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "from": "str",
                    "to": "str",
                    "from_symbol": "str",
                    "to_symbol": "str",
                    "input": "int",
                    "rounded": "int",
                    "result": "float",
                    "roundedResult": "float"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/force/:from/:to/:number",
                "api_description": "Force unit conversions",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "string",
                        "description": "",
                        "default": "newton"
                    },
                    {
                        "name": "to",
                        "type": "string",
                        "description": "",
                        "default": "dyne"
                    },
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/data/:from/:to/:number",
                "api_description": "Data unit conversions",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1024"
                    },
                    {
                        "name": "to",
                        "type": "string",
                        "description": "",
                        "default": "byte"
                    },
                    {
                        "name": "from",
                        "type": "string",
                        "description": "",
                        "default": "bit"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "from": "str",
                    "to": "str",
                    "from_symbol": "str",
                    "to_symbol": "str",
                    "input": "int",
                    "rounded": "int",
                    "result": "int",
                    "roundedResult": "int"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/area/:from/:to/:number",
                "api_description": "Area unit conversions",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "string",
                        "description": "",
                        "default": "square feet"
                    },
                    {
                        "name": "to",
                        "type": "string",
                        "description": "",
                        "default": "acre"
                    },
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "UnitConversion",
                "api_name": "/angle/:from/:to/:number",
                "api_description": "Angle unit conversions",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "from",
                        "type": "string",
                        "description": "",
                        "default": "radian"
                    },
                    {
                        "name": "to",
                        "type": "string",
                        "description": "",
                        "default": "turn"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "from": "str",
                    "to": "str",
                    "from_symbol": "str",
                    "to_symbol": "str",
                    "input": "int",
                    "rounded": "int",
                    "result": "float",
                    "roundedResult": "float"
                }
            }
        ],
        "query": "I'm planning a trip and need to convert 90 degrees to turns. Additionally, I would like to convert 100 grams to pounds and find out the temperature in Celsius for a given Fahrenheit value of 90.",
        "relevant APIs": [
            [
                "UnitConversion",
                "/angle/:from/:to/:number"
            ],
            [
                "UnitConversion",
                "/mass/:from/:to/:number"
            ],
            [
                "UnitConversion",
                "/temperature/:from/:to/:number"
            ]
        ],
        "query_id": 4117
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "MikuAPI",
                "api_name": "getImage",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "fileId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "timestamp": "str",
                    "status": "int",
                    "error": "str",
                    "path": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "MikuAPI",
                "api_name": "getRandomImage",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "apiUrl": "str",
                    "description": "str",
                    "artist": "str",
                    "title": "str",
                    "sourceLink": "str",
                    "webPLink": "str"
                }
            }
        ],
        "query": "I am a graphic designer and I need inspiration for a project. Can you provide me with a collection of images using the getRandomImage API? Additionally, I would like to retrieve specific images using the getImage API with the fileId parameter.",
        "relevant APIs": [
            [
                "MikuAPI",
                "getRandomImage"
            ],
            [
                "MikuAPI",
                "getImage"
            ]
        ],
        "query_id": 9661
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "KolektifAPI",
                "api_name": "Haber",
                "api_description": "\u00abntv.com.tr\u00bb Son Dakika Haberleri Verileri",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kaynak": "str",
                    "saglayici": "str",
                    "veri": [
                        {
                            "gorsel": "str",
                            "haber": "str",
                            "link": "str",
                            "_list_length": 36
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "KolektifAPI",
                "api_name": "Deprem",
                "api_description": "\u00abafet.gen.tr\u00bb Son Depremler Verisi",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "KolektifAPI": "str",
                    "istekler": {
                        "akaryakit": [
                            "list of str with length 3"
                        ],
                        "bim": [
                            "list of str with length 3"
                        ],
                        "deprem": [
                            "list of str with length 3"
                        ],
                        "doviz": [
                            "list of str with length 3"
                        ],
                        "eczane": [
                            "list of str with length 3"
                        ],
                        "ezan": [
                            "list of str with length 3"
                        ],
                        "google": [
                            "list of str with length 3"
                        ],
                        "haber": [
                            "list of str with length 3"
                        ],
                        "piiz": [
                            "list of str with length 3"
                        ],
                        "sahibinden": [
                            "list of str with length 3"
                        ],
                        "trendyol_kategori": [
                            "list of str with length 3"
                        ],
                        "trendyol_urun": [
                            "list of str with length 3"
                        ],
                        "ucak": [
                            "list of str with length 3"
                        ],
                        "udemy": [
                            "list of str with length 3"
                        ],
                        "youtube": [
                            "list of str with length 3"
                        ]
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "KolektifAPI",
                "api_name": "Akaryak\u0131t",
                "api_description": "\u00abhaberler.com\u00bb G\u00fcncel Akaryak\u0131t Verileri",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kaynak": "str",
                    "saglayici": "str",
                    "veri": [
                        {
                            "cinsi": "str",
                            "fiyati": "str",
                            "_list_length": 6
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "KolektifAPI",
                "api_name": "D\u00f6viz",
                "api_description": "\u00abaltinkaynak.com\u00bb G\u00fcncel D\u00f6viz Verileri",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kaynak": "str",
                    "saglayici": "str",
                    "veri": [
                        {
                            "Gi\u015fe Al\u0131\u015f": "float",
                            "Gi\u015fe Sat\u0131\u015f": "float",
                            "birim": "str",
                            "_list_length": 15
                        }
                    ]
                }
            }
        ],
        "query": "I need the latest fuel prices and their types in Turkey. Can you fetch me this information? Additionally, I'm researching the recent earthquakes in Turkey. Can you provide me with information about the latest earthquakes?",
        "relevant APIs": [
            [
                "KolektifAPI",
                "Akaryak\u0131t"
            ],
            [
                "KolektifAPI",
                "Deprem"
            ]
        ],
        "query_id": 38125
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "QR Code Generator",
                "api_name": "Generate Advance - Direct Image",
                "api_description": "Generates a QR code as a direct image with additional settings. (NOTE: doesn't show correctly in RapidAPI)",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "1234"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "foreground_color",
                        "type": "STRING",
                        "description": "",
                        "default": "FF2400"
                    },
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "",
                        "default": "00DBFF"
                    },
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "500"
                    },
                    {
                        "name": "margin",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "label",
                        "type": "STRING",
                        "description": "",
                        "default": "My label"
                    },
                    {
                        "name": "label_size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    },
                    {
                        "name": "label_alignment",
                        "type": "STRING",
                        "description": "",
                        "default": "center"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "QR Code Generator",
                "api_name": "Generate Basic - Base64",
                "api_description": "Generates a QR code as base64 with limited settings.",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "1234"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "500"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "QR Code Generator",
                "api_name": "Generate Advance - Base64",
                "api_description": "Generates a QR code as base64 with additional settings.",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "1234"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "",
                        "default": "00DBFF"
                    },
                    {
                        "name": "foreground_color",
                        "type": "STRING",
                        "description": "",
                        "default": "FF2400"
                    },
                    {
                        "name": "label",
                        "type": "STRING",
                        "description": "",
                        "default": "My label"
                    },
                    {
                        "name": "margin",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "500"
                    },
                    {
                        "name": "label_size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    },
                    {
                        "name": "label_alignment",
                        "type": "STRING",
                        "description": "",
                        "default": "center"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "QR Code Generator",
                "api_name": "Generate Basic - Direct Image",
                "api_description": "Generates a QR code as a direct image with limited settings. (NOTE: doesn't show correctly in RapidAPI)",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "1234"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "500"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a surprise birthday party for my friend and I want to create personalized QR codes for the invitations. Can you generate QR codes as base64 images with individual labels for each guest? It would be great if the QR codes could be customized with different foreground and background colors.",
        "relevant APIs": [
            [
                "QR Code Generator",
                "Generate Advance - Base64"
            ],
            [
                "QR Code Generator",
                "Generate Basic - Base64"
            ]
        ],
        "query_id": 4328
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "teamriverbubbles random utilities",
                "api_name": "is prime",
                "api_description": "checks if a number is prime",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "teamriverbubbles random utilities",
                "api_name": "kda calculator",
                "api_description": "Calculates a kd (kill + assists death ratio)",
                "required_parameters": [
                    {
                        "name": "deaths",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "assists",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "kills",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "teamriverbubbles random utilities",
                "api_name": "kd calculator",
                "api_description": "Calculates a kd (kill death ratio)",
                "required_parameters": [
                    {
                        "name": "kills",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "deaths",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "teamriverbubbles random utilities",
                "api_name": "random uuid",
                "api_description": "creates a random uuid v4",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "teamriverbubbles random utilities",
                "api_name": "get skin from uuid",
                "api_description": "gets a skin from a uuid",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "path": "str",
                    "errorMessage": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "teamriverbubbles random utilities",
                "api_name": "uuid to username",
                "api_description": "turns a uuid into a username",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "errorMessage": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "teamriverbubbles random utilities",
                "api_name": "username to uuid",
                "api_description": "turns a username into a uuid",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "path": "str"
                }
            }
        ],
        "query": "I am working on a gaming application and I need to calculate the KD (kill-death) ratio for a player. Can you provide an API that calculates the KD ratio based on the number of kills and deaths? Additionally, I would like to generate a random UUID for the player. This will help in identifying the player uniquely.",
        "relevant APIs": [
            [
                "teamriverbubbles random utilities",
                "kd calculator"
            ],
            [
                "teamriverbubbles random utilities",
                "random uuid"
            ]
        ],
        "query_id": 38008
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "About",
                "api_description": "Get general information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "version": "str",
                    "homepage": "str",
                    "source_code": "str",
                    "maintainer": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get a Language",
                "api_description": "Get a language.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "10"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "is_archived": "bool",
                    "source_file": "str",
                    "compile_cmd": "NoneType",
                    "run_cmd": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get Configuration",
                "api_description": "Configuration information gives you detailed information about the configuration of Judge0.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"maintenance_mode\": \"bool\", \"enable_wait_result\": \"bool\", \"enable_compiler_options\": \"bool\", \"allowed_languages_for_compile_options\": \"empty list\", \"enable_command_line_arguments\": \"bool\", \"enable_submission_delete\": \"bool\", \"enable_callbacks\": \"bool\", \"callbacks_max_tries\": \"int\", \"callbacks_timeout\": \"float\", \"enable_additional_files\": \"bool\", \"max_queue_size\": \"int\", \"cpu_time_limit\": \"float\", \"max_cpu_time_limit\": \"float\", \"cpu_extra_time\": \"float\", \"max_cpu_extra_time\": \"float\", \"wall_time_limit\": \"float\", \"max_wall_time_limit\": \"float\", \"memory_limit\": \"int\", \"max_memory_limit\": \"int\", \"stack_limit\": \"int\", \"max_stack_limit\": \"int\", \"max_processes_and_or_threads\": \"int\", \"max_max_processes_and_or_threads\": \"int\", \"enable_per_process_and_thread_time_limit\": \"bool\", \"allow_enable_per_process_and_thread_time_limit\": \"bool\", \"enable_per_process_and_thread_memory_limit\": \"bool\", \"allow_enable_per_process_and_thread_memory_limit\": \"bool\", \"max_file_size\": \"int\", \"max_max_file_size\": \""
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get Languages",
                "api_description": "Get active languages.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get Statuses",
                "api_description": "Get statuses.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "description": "str"
                }
            }
        ],
        "query": "I am a developer and I need to know more about Judge0 Extra CE. Can you provide me with general information about the tool, including the version, homepage, source code, and maintainer? It would be great if you could also give me the configuration information.",
        "relevant APIs": [
            [
                "Judge0 Extra CE",
                "About"
            ],
            [
                "Judge0 Extra CE",
                "Get Configuration"
            ]
        ],
        "query_id": 29719
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Endpoint Monitor Tool",
                "api_name": "GetUser",
                "api_description": "Gets and returns the current user data from the associated userId.",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "The Id of the user",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Endpoint Monitor Tool",
                "api_name": "RemoveEndpointData",
                "api_description": "Remove an endpoint from you user account by Id.\n\n(KNOWN ISSUE with RAPIDAPI)\nSuccessfully deleting an enpoint will result with a 200, however it MAY provide an ERROR stating \"src property must be a valid json object\". This is an issue with RAPIDAPI and not our API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpointId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Endpoint Monitor Tool",
                "api_name": "GetEndpointData",
                "api_description": "This Endpoint retrieves the endpoint data from the specified UserId and EndpointId.",
                "required_parameters": [
                    {
                        "name": "UserId",
                        "type": "STRING",
                        "description": "The Id of the user",
                        "default": ""
                    },
                    {
                        "name": "EndpointId",
                        "type": "STRING",
                        "description": "The Id of the endpoint requested",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My family wants to check the status of our website's endpoint. Please provide the current user data for our userId 'abc123'. Also, retrieve the endpoint data for the specified UserId and EndpointId.",
        "relevant APIs": [
            [
                "Endpoint Monitor Tool",
                "GetUser"
            ],
            [
                "Endpoint Monitor Tool",
                "GetEndpointData"
            ]
        ],
        "query_id": 29592
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "List All Layers",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "List All Simulations",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "List Applications",
                "api_description": "List all your applications",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "List All Simulations Of A Group",
                "api_description": "Enter groupID in the route",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "View Application",
                "api_description": "Enter your applicationID in the route",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "View Simulation",
                "api_description": "Enter simulationID in route",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "List All Groups",
                "api_description": "List All Groups",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "Simulations By Application Id",
                "api_description": "Enter applicationID in route",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "View Layer",
                "api_description": "Enter layerID in route",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Devices",
                "tool_name": "Geolocation Simulation For Mobile Apps",
                "api_name": "View User's Profile",
                "api_description": "View Profile (Enter your user-id in route)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm working on a project that involves geolocation simulation for mobile apps. Can you provide a list of all available applications and their associated simulations? Additionally, I need information about a specific application. Please include the application ID in the response.",
        "relevant APIs": [
            [
                "Geolocation Simulation For Mobile Apps",
                "List Applications"
            ],
            [
                "Geolocation Simulation For Mobile Apps",
                "Simulations By Application Id"
            ],
            [
                "Geolocation Simulation For Mobile Apps",
                "View Application"
            ]
        ],
        "query_id": 23444
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Jibber Jabber",
                "api_name": "/sentence",
                "api_description": "Returns a single random **sentence**",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "minimumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "numberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maximumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "wordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minimumNumberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maximumNumberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Jibber Jabber",
                "api_name": "/paragraph",
                "api_description": "Returns a **paragraph** with random sentences",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "minimumNumberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "wordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maximumNumberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "numberOfSentences",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minimumNumberOfSentences",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maximumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maximumNumberOfSentences",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "numberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minimumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Jibber Jabber",
                "api_name": "/words",
                "api_description": "Returns random **words**",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "minimumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maximumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "numberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "wordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Tools",
                "tool_name": "Jibber Jabber",
                "api_name": "/sentences",
                "api_description": "Returns some single random **sentence**",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "maximumNumberOfSentences",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minimumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minimumNumberOfSentences",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "numberOfSentences",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maximumNumberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minimumNumberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "numberOfWords",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "wordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maximumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Jibber Jabber",
                "api_name": "/word",
                "api_description": "Returns a random **word**",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "minimumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maximumWordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "wordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm writing a blog post about creativity and need some inspiration. Can you provide me with a random sentence and a random word with a word length of 8? It would be great if you could also generate a paragraph with 4 sentences.",
        "relevant APIs": [
            [
                "Jibber Jabber",
                "/sentence"
            ],
            [
                "Jibber Jabber",
                "/word"
            ],
            [
                "Jibber Jabber",
                "/paragraph"
            ]
        ],
        "query_id": 46662
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Torrent-Search",
                "api_name": "Get from piratebay",
                "api_description": "for piratebay",
                "required_parameters": [
                    {
                        "name": "searchtopic",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Torrent-Search",
                "api_name": "Get from eztv",
                "api_description": "can use this for search eztv",
                "required_parameters": [
                    {
                        "name": "searchtopic",
                        "type": "string",
                        "description": "",
                        "default": "cars"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Name": "str",
                    "ReleasedDate": "str",
                    "Genre": "str",
                    "Rating": "str",
                    "Likes": "str",
                    "Runtime": "str",
                    "Language": "str",
                    "Url": "str",
                    "Poster": "str",
                    "Files": [
                        {
                            "Quality": "str",
                            "Type": "str",
                            "Size": "str",
                            "Torrent": "str",
                            "Magnet": "str",
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Torrent-Search",
                "api_name": "Get from yts",
                "api_description": "You can use this for moive search",
                "required_parameters": [
                    {
                        "name": "searchtopic",
                        "type": "string",
                        "description": "",
                        "default": "cars"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Name": "str",
                    "ReleasedDate": "str",
                    "Genre": "str",
                    "Rating": "str",
                    "Likes": "str",
                    "Runtime": "str",
                    "Language": "str",
                    "Url": "str",
                    "Poster": "str",
                    "Files": [
                        {
                            "Quality": "str",
                            "Type": "str",
                            "Size": "str",
                            "Torrent": "str",
                            "Magnet": "str",
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Torrent-Search",
                "api_name": "Get from 1337.x",
                "api_description": "scrape data from various torrent websites such as 1337x",
                "required_parameters": [
                    {
                        "name": "searchtopic",
                        "type": "string",
                        "description": "",
                        "default": "cars"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Name": "str",
                    "Magnet": "str",
                    "Poster": "str",
                    "Category": "str",
                    "Type": "str",
                    "Language": "str",
                    "Size": "str",
                    "UploadedBy": "str",
                    "Downloads": "str",
                    "LastChecked": "str",
                    "DateUploaded": "str",
                    "Seeders": "str",
                    "Leechers": "str",
                    "Url": "str"
                }
            }
        ],
        "query": "I'm organizing a movie marathon for my family this weekend and I need a list of family-friendly movies. Can you search for movies suitable for all ages on YTS and 1337x? Please provide movie names, genres, and available torrents.",
        "relevant APIs": [
            [
                "Torrent-Search",
                "Get from yts"
            ],
            [
                "Torrent-Search",
                "Get from 1337.x"
            ]
        ],
        "query_id": 12954
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Cars image background removal",
                "api_name": "Get version",
                "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Cars image background removal",
                "api_name": "Get list of available modes",
                "api_description": "The service provides three options for background removal results:\n* Mask of foreground.\n* Image with foreground object.\n* Image with foreground object with shadow.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm a graphic designer and I often work with car images. Can you provide me with the current version of the Cars Image Background Removal tool? Additionally, I would like to know the available modes for background removal, such as the mask of foreground, image with foreground object, and image with foreground object with shadow.",
        "relevant APIs": [
            [
                "Cars image background removal",
                "Get version"
            ],
            [
                "Cars image background removal",
                "Get list of available modes"
            ]
        ],
        "query_id": 26701
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Discord Lookup",
                "api_name": "Get Invite Data",
                "api_description": "Fetches detailed data, including hidden data of invites or vanities",
                "required_parameters": [
                    {
                        "name": "invite",
                        "type": "string",
                        "description": "",
                        "default": "minecraft"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "data": {
                        "code": "str",
                        "type": "int",
                        "expires_at": "NoneType",
                        "guild": {
                            "id": "str",
                            "name": "str",
                            "splash": "str",
                            "banner": "str",
                            "description": "str",
                            "icon": "str",
                            "features": [
                                "list of str with length 26"
                            ],
                            "verification_level": "int",
                            "vanity_url_code": "str",
                            "premium_subscription_count": "int",
                            "nsfw": "bool",
                            "nsfw_level": "int",
                            "welcome_screen": {
                                "description": "str",
                                "welcome_channels": [
                                    {
                                        "channel_id": "str",
                                        "description": "str",
                                        "emoji_id": "NoneType",
                                        "emoji_name": "str",
                                        "_list_length": 4
                                    }
                                ]
                            }
                        },
                        "channel": {
                            "id": "str",
                            "name": "str",
                            "type": "int"
                        },
                        "uses": "int",
                        "max_uses": "int",
                        "max_age": "int",
                        "temporary": "bool",
                        "created_at": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Discord Lookup",
                "api_name": "Get User Data",
                "api_description": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "25458687581618176"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "data": {
                        "id": "str",
                        "username": "str",
                        "avatar": "str",
                        "discriminator": "str",
                        "public_flags": "int",
                        "flags": "int",
                        "banner": "str",
                        "accent_color": "NoneType",
                        "global_name": "str",
                        "avatar_decoration": "str",
                        "display_name": "str",
                        "banner_color": "NoneType",
                        "created_at": "int"
                    }
                }
            }
        ],
        "query": "I'm considering joining a Discord server and would like to know more about the invite code 'xyz789'. Could you fetch the invite data for this code? Additionally, please provide the username, discriminator, and avatar of the user with ID '9876543210'. Thank you!",
        "relevant APIs": [
            [
                "Discord Lookup",
                "Get Invite Data"
            ],
            [
                "Discord Lookup",
                "Get User Data"
            ]
        ],
        "query_id": 46760
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "PurgoMalum",
                "api_name": "Remove profanity",
                "api_description": "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed.",
                        "default": "This is some test input"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "A comma separated list of words to be added to the profanity list. Accepts letters, numbers, underscores (_) and commas (,). Accepts up to 10 words (or 200 maximum characters in length). The PurgoMalum filter is case-insensitive, so the case of you entry is not important.",
                        "default": ""
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text used to replace any words matching the profanity list. Accepts letters, numbers, underscores (_) tildes (~), exclamation points (!), dashes/hyphens (-), equal signs (=), pipes (|), single quotes ('), double quotes (\"), asterisks (*), open and closed curly brackets ({ }), square brackets ([ ]) and parentheses (). Maximum length of 20 characters. When not used, the default is an asterisk (*) fill.",
                        "default": ""
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Single character used to replace any words matching the profanity list. Fills designated character to length of word replaced. Accepts underscore (_) tilde (~), dash/hyphen (-), equal sign (=), pipe (|) and asterisk (*). When not used, the default is an asterisk (*) fill.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "PurgoMalum",
                "api_name": "Check if text contains profanity",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "",
                        "default": "This is some test input"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I have a document that needs to be checked for profanity. Can you remove any profane words from the text and replace them with asterisks? Also, please let me know if the document contains any profanity.",
        "relevant APIs": [
            [
                "PurgoMalum",
                "Remove profanity"
            ],
            [
                "PurgoMalum",
                "Check if text contains profanity"
            ]
        ],
        "query_id": 46455
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Pornstar search",
                "api_description": "Search for a porn star using the \"Query\".\nA list of all stars found is returned, or a detail pornstar if only one is found.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "abella"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "responseImagesBase64",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "responseImages",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "responseProfileImageBase64",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "responseProfileImage",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "name": "str",
                            "key": "str",
                            "url": "str",
                            "_list_length": 125
                        }
                    ]
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Pornstar by name",
                "api_description": "Loads a porn star by name from the loaded list.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "Anastasia_Plyaskina"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "responseProfileImageBase64",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "responseImagesBase64",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "responseImages",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "responseProfileImage",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "name": "str",
                        "aka": "str",
                        "rating": {
                            "value": "str",
                            "votes": "str"
                        },
                        "bio": [
                            {
                                "key": "str",
                                "name": "str",
                                "value": "str",
                                "_list_length": 13
                            }
                        ],
                        "profileImgLink": "str",
                        "profileImgBase64": {
                            "name": "str",
                            "type": "str",
                            "base64": "str"
                        },
                        "galleryImagesLinks": [
                            "list of str with length 1"
                        ],
                        "galleryImagesBase64": [
                            {
                                "name": "str",
                                "type": "str",
                                "base64": "str",
                                "_list_length": 1
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Docs",
                "api_description": "Get available routs and parameters as json.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "docs": [
                        {
                            "title": "str",
                            "description": "str",
                            "route": "str",
                            "method": "str",
                            "parameter": {},
                            "example": [
                                {
                                    "url": "str",
                                    "description": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 11
                        }
                    ]
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Supported sites",
                "api_description": "Get all available pages with the possible qualities and filters.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "name": "str",
                            "url": "str",
                            "supportedQualities": [
                                "list of str with length 2"
                            ],
                            "supportedFilter": [
                                "list of str with length 6"
                            ],
                            "supportedAdditionalParameter": [
                                "list of str with length 2"
                            ],
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Video search",
                "api_description": "Search for quality porn and get a provider-subdivided list of the best matching videos.\n\n### Examples\n\nSearch only HD videos that have been rated best with the search term \"amateur\".\n`/search?quality=hd&filter=rating&query=amateur'`\n\nSearch for \"amateur\" only. Filters and quality are optional.\n`/search?query=amateur'`\n\nSearch for \"amateur\" on page 2.\n`/search?query=amateur&page=2'`\n\nSearch for \"amateur\" and set a timeout for 5 seconds for each site request.\n`/search?query=amateur&timeout=5000`\n\nFilter only by the page you need. Here for example by PornHub. It can be filtered by any name part or part URL. For example \"porn\", \".com\" or complete names \"pornhub\", \"youporn.com\".\n`/search?query=amateur&site=pornhub`",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "amateur"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "site",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "timeout",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5000"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter the site results.",
                        "default": ""
                    },
                    {
                        "name": "quality",
                        "type": "STRING",
                        "description": "Set minimum quality",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "site": {
                                "requestTime": "float",
                                "videoResults": "int",
                                "host": "str",
                                "requestedUrl": "str",
                                "name": "str",
                                "url": "str",
                                "supportedQualities": [
                                    "list of str with length 4"
                                ],
                                "supportedFilter": [
                                    "list of str with length 5"
                                ],
                                "supportedAdditionalParameter": [
                                    "list of str with length 2"
                                ]
                            },
                            "links": "empty list",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Live room bio",
                "api_description": "Get the bio from a room.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "lil_eva"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Live tags",
                "api_description": "Search for live tags and the associated data.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "",
                        "default": "female"
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Live cams",
                "api_description": "Search for live cams and according to your preferences. Filter by gender, tags and pages.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "",
                        "default": "female"
                    },
                    {
                        "name": "tag",
                        "type": "STRING",
                        "description": "",
                        "default": "asian"
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Random search query",
                "api_description": "Get a random search query;",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "query": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Quality Porn",
                "api_name": "Top 10 search queries",
                "api_description": "Get the top 10 search queries",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "queries": [
                        "list of str with length 10"
                    ]
                }
            }
        ],
        "query": "I want to explore different porn sites and find the best quality videos for the search term 'anal'. Can you search for HD videos and provide a list of the best matching videos from different sites? It would be helpful if you can also include the site details and supported qualities.",
        "relevant APIs": [
            [
                "Quality Porn",
                "Video search"
            ],
            [
                "Quality Porn",
                "Supported sites"
            ]
        ],
        "query_id": 68528
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "ConvertTiffToFax",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename of image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "ExtractImageFeatures",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "imageId",
                        "type": "STRING",
                        "description": "The image identifier.",
                        "default": ""
                    },
                    {
                        "name": "searchContextId",
                        "type": "STRING",
                        "description": "The search context identifier.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imageData",
                        "type": "BINARY",
                        "description": "Input image",
                        "default": ""
                    },
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "The folder.",
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "The storage.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "ModifyJpeg2000",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename of image.",
                        "default": ""
                    },
                    {
                        "name": "comment",
                        "type": "STRING",
                        "description": "The comment (can be either single or comma-separated).",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    },
                    {
                        "name": "fromScratch",
                        "type": "BOOLEAN",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                        "default": false
                    },
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "codec",
                        "type": "STRING",
                        "description": "The codec (j2k or jp2).",
                        "default": "j2k"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "FindImageDuplicates",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "searchContextId",
                        "type": "STRING",
                        "description": "The search context identifier.",
                        "default": ""
                    },
                    {
                        "name": "similarityThreshold",
                        "type": "NUMBER",
                        "description": "The similarity threshold.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "The folder.",
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "The storage.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "RotateFlipImage",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "method",
                        "type": "STRING",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY).",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename of an image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    },
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "DownloadFile",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/folder/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    },
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID to download",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "GetImageFrame",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename of image.",
                        "default": ""
                    },
                    {
                        "name": "frameId",
                        "type": "NUMBER",
                        "description": "Number of a frame.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": "NUMBER",
                        "description": "X position of start point for cropping rectangle.",
                        "default": ""
                    },
                    {
                        "name": "rotateFlipMethod",
                        "type": "STRING",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone.",
                        "default": ""
                    },
                    {
                        "name": "newHeight",
                        "type": "NUMBER",
                        "description": "New height.",
                        "default": ""
                    },
                    {
                        "name": "saveOtherFrames",
                        "type": "BOOLEAN",
                        "description": "If result will include all other frames or just a specified frame.",
                        "default": false
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    },
                    {
                        "name": "newWidth",
                        "type": "NUMBER",
                        "description": "New width.",
                        "default": ""
                    },
                    {
                        "name": "rectWidth",
                        "type": "NUMBER",
                        "description": "Width of cropping rectangle.",
                        "default": ""
                    },
                    {
                        "name": "rectHeight",
                        "type": "NUMBER",
                        "description": "Height of cropping rectangle.",
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": "NUMBER",
                        "description": "Y position of start point for cropping rectangle.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "ObjectExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File or folder path e.g. '/file.ext' or '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID",
                        "default": ""
                    },
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "GetImageSearchStatus",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "searchContextId",
                        "type": "STRING",
                        "description": "The search context identifier.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "The storage.",
                        "default": ""
                    },
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "The folder.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "GetImageFrameProperties",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename with image.",
                        "default": ""
                    },
                    {
                        "name": "frameId",
                        "type": "NUMBER",
                        "description": "Number of a frame.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I have an image named 'photo.jpg' and I want to rotate it 90 degrees clockwise and flip it vertically. Can you also save it in the 'edited_images' folder?",
        "relevant APIs": [
            [
                "Aspose.Imaging Cloud",
                "ModifyJpeg2000"
            ],
            [
                "Aspose.Imaging Cloud",
                "RotateFlipImage"
            ],
            [
                "Aspose.Imaging Cloud",
                "GetImageFrameProperties"
            ]
        ],
        "query_id": 68553
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources/{datasource_id}/variables",
                "api_description": "This resource list the variables of a specified data source, showing all the fields of the variables.",
                "required_parameters": [
                    {
                        "name": "datasource_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables/{variable_id}",
                "api_description": "This resource returns a variable and its details. It shows additional fields than the ones required during the creation of the variable:  last_value: Shows the last value written to the variable.",
                "required_parameters": [
                    {
                        "name": "variable_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables",
                "api_description": "Retrieves the list of all the variables owned by a user. The header X-Auth-Token is needed to have the permissions for this endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources",
                "api_description": "This resource lists all the existing data sources of a user.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources/{datasource_id}",
                "api_description": "This resource obtains an existing data source and its details. Also, it returns additional fields besides the ones required during the creation of the data source:  number_of_variables: Shows the number of variables contained by the data source. last_activity: Returns the date of the last activity",
                "required_parameters": [
                    {
                        "name": "datasource_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables/{variable_id}/values",
                "api_description": "This resource returns the values of the specified variable.  Every value will have a timestamp which is a value in milliseconds according to the POSIX standard.",
                "required_parameters": [
                    {
                        "name": "variable_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            }
        ],
        "query": "My friend is working on a research project that involves analyzing sensor data. Can you help her retrieve the variables of a specified data source and provide the details of each variable, including the last value written to it? Furthermore, fetch the values of a specific variable along with their timestamps?",
        "relevant APIs": [
            [
                "Ubidots",
                "GET /datasources/{datasource_id}/variables"
            ],
            [
                "Ubidots",
                "GET /variables/{variable_id}"
            ],
            [
                "Ubidots",
                "GET /variables/{variable_id}/values"
            ]
        ],
        "query_id": 82434
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "QR Code API_v33",
                "api_name": "QR code image",
                "api_description": "This Api takes URL, or string and returns the QR code image",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "www.google.com"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "My friend is organizing a virtual event and wants to share the event details using a QR code. Can you help generate a QR code image for the event information? The event details can be provided as a string.",
        "relevant APIs": [
            [
                "QR Code API_v33",
                "QR code image"
            ]
        ],
        "query_id": 86231
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get Trending Movies",
                "api_description": "return movie results with title , year , id",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get Now Playing Movies",
                "api_description": "return movie results with title, year, id",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get Popular Movies by Year",
                "api_description": "return movie results with title , year , id",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2020"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get Movie Aliases by ID",
                "api_description": "A valid Movie ID (e.g. tt1375666)\nreturn movie aliases",
                "required_parameters": [
                    {
                        "name": "movieid",
                        "type": "STRING",
                        "description": "A valid Movie ID (e.g. tt1375666)",
                        "default": "tt1375666"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get Movie Images by ID",
                "api_description": "A valid Movie ID (e.g. tt1375666)\nreturn title, id, poster, fanart",
                "required_parameters": [
                    {
                        "name": "movieid",
                        "type": "STRING",
                        "description": "A valid Movie ID (e.g. tt1375666)",
                        "default": "tt1375666"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get Movies By Title",
                "api_description": "Result set includes all search results\nEach item includes fields:\nTitle\nYear\nMovie  ID",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Harry Potter"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get Movie by ID",
                "api_description": "A valid Movie ID (e.g. tt1375666)\nreturn Title, Description, Year, Release Date, Rated, Runtime, Genre, Directors, Actors, Languages, Country\n Rating, votes, Popularity, id",
                "required_parameters": [
                    {
                        "name": "movieid",
                        "type": "STRING",
                        "description": "A valid Movie ID (e.g. tt1375666)",
                        "default": "tt1375666"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get Upcoming Movies",
                "api_description": "return movie results with title, year, id",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get TV Series Seasons By ID",
                "api_description": "A valid TV Series ID (e.g. tt2741602)\nreturn Season number, season air date, Episode count, Season trailer",
                "required_parameters": [
                    {
                        "name": "seriesid",
                        "type": "STRING",
                        "description": "A valid Series ID (e.g. tt2741602)",
                        "default": "tt2741602"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Movies Tv Shows Database",
                "api_name": "Get Similar TV Shows",
                "api_description": "return tv series results with title, id, release date",
                "required_parameters": [
                    {
                        "name": "seriesid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt2741602"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a filmmaker and I'm looking for inspiration for my next project. Can you give me a list of popular movies from the year 2020? I would also like to know the movie aliases and images for a specific movie with the ID tt1375666. Additionally, I'm interested in the TV series seasons and similar TV shows related to this movie.",
        "relevant APIs": [
            [
                "Movies Tv Shows Database",
                "Get Popular Movies by Year"
            ],
            [
                "Movies Tv Shows Database",
                "Get Movie Aliases by ID"
            ],
            [
                "Movies Tv Shows Database",
                "Get Movie Images by ID"
            ],
            [
                "Movies Tv Shows Database",
                "Get TV Series Seasons By ID"
            ],
            [
                "Movies Tv Shows Database",
                "Get Similar TV Shows"
            ]
        ],
        "query_id": 77108
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "DNS",
                "api_description": "Checks the domain DNS records",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "valid": "bool",
                    "A": [
                        "list of str with length 2"
                    ],
                    "AAAA": [
                        "list of str with length 2"
                    ],
                    "CNAME": [
                        "list of str with length 1"
                    ],
                    "NS": [
                        "list of str with length 2"
                    ],
                    "MX": [
                        "list of str with length 5"
                    ],
                    "TXT": [
                        "list of str with length 19"
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "Keyword Search",
                "api_description": "Query up to 333 TLDs to check registered domains",
                "required_parameters": [
                    {
                        "name": "sld",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sld": "str",
                    "found": "bool",
                    "lookup_tlds": "int",
                    "found_tlds": "int",
                    "registered": [
                        {
                            "domain": "str",
                            "tld": "str",
                            "created_at": "str",
                            "updated_at": "str",
                            "expires_at": "str",
                            "_list_length": 18
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Domain Checker",
                "api_name": "Whois",
                "api_description": "Checks the domain Whois Details",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "sld": "str",
                    "tld": "str",
                    "valid": "bool",
                    "available": "bool",
                    "created_at": "str",
                    "updated_at": "str",
                    "expires_at": "str",
                    "registrar": "str",
                    "whois": "str"
                }
            }
        ],
        "query": "Please check if the domain 'example.com' is registered and valid. If it is registered, provide me with the DNS records and Whois details.",
        "relevant APIs": [
            [
                "Domain Checker",
                "DNS"
            ],
            [
                "Domain Checker",
                "Whois"
            ]
        ],
        "query_id": 80504
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Nexweave",
                "api_name": "GetCampaignDetails",
                "api_description": "This API will return the Campaign details including variables used in the overall Campaign.",
                "required_parameters": [
                    {
                        "name": "campaignId",
                        "type": "STRING",
                        "description": "",
                        "default": "campaignId"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Nexweave",
                "api_name": "GetAllTemplates",
                "api_description": "This API will return all the templates associated with the user's account, including Images & Video.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Nexweave",
                "api_name": "GetTemplateDetails",
                "api_description": "This API will return the template details including variables for a valid template.",
                "required_parameters": [
                    {
                        "name": "templateId",
                        "type": "STRING",
                        "description": "",
                        "default": "templateId"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Nexweave",
                "api_name": "GetAllCampaigns",
                "api_description": "The API will return all the CSV Campaigns associated with the user's account, including Images, Videos &  Image+Video Campaign.\n\nNote: The campaigns must be in Success state.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am organizing a virtual conference for a tech company and would like to create personalized videos for the attendees. Can you assist me in selecting an appropriate template for this purpose? Once I choose a template, I need to retrieve its details using the GetTemplateDetails API. Additionally, I would like to explore all the available templates in my Nexweave account using the GetAllTemplates API.",
        "relevant APIs": [
            [
                "Nexweave",
                "GetAllTemplates"
            ],
            [
                "Nexweave",
                "GetTemplateDetails"
            ]
        ],
        "query_id": 43375
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Endpoint Monitor Tool",
                "api_name": "GetUser",
                "api_description": "Gets and returns the current user data from the associated userId.",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "The Id of the user",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Endpoint Monitor Tool",
                "api_name": "RemoveEndpointData",
                "api_description": "Remove an endpoint from you user account by Id.\n\n(KNOWN ISSUE with RAPIDAPI)\nSuccessfully deleting an enpoint will result with a 200, however it MAY provide an ERROR stating \"src property must be a valid json object\". This is an issue with RAPIDAPI and not our API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpointId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Endpoint Monitor Tool",
                "api_name": "GetEndpointData",
                "api_description": "This Endpoint retrieves the endpoint data from the specified UserId and EndpointId.",
                "required_parameters": [
                    {
                        "name": "UserId",
                        "type": "STRING",
                        "description": "The Id of the user",
                        "default": ""
                    },
                    {
                        "name": "EndpointId",
                        "type": "STRING",
                        "description": "The Id of the endpoint requested",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to remove an endpoint from my user account. Please delete the endpoint with the ID '33333'. Also, I would like to retrieve the endpoint data for the user with the ID '44444' and the endpoint ID '55555'. It should include the API URL, nickname, most recent result, active status, and last updated date.",
        "relevant APIs": [
            [
                "Endpoint Monitor Tool",
                "RemoveEndpointData"
            ],
            [
                "Endpoint Monitor Tool",
                "GetEndpointData"
            ]
        ],
        "query_id": 4144
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Any Anime",
                "api_name": "anime gif",
                "api_description": "Get anime gif pfp's / banners",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Any Anime",
                "api_name": "anime img",
                "api_description": "Show only the image from the api on your browser .",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Any Anime",
                "api_name": "anime",
                "api_description": "Shows json data and image url of the anime pfp you want to use / show !",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "str",
                    "stuff": [
                        {
                            "name": "str",
                            "image": "str",
                            "_list_length": 1
                        }
                    ]
                }
            }
        ],
        "query": "I want to discover new anime profile pictures. Can you assist me in finding various anime pfp's and banners? It would be great if I could get the image URLs and json data for each anime pfp.",
        "relevant APIs": [
            [
                "Any Anime",
                "anime gif"
            ],
            [
                "Any Anime",
                "anime"
            ]
        ],
        "query_id": 9708
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources/{datasource_id}/variables",
                "api_description": "This resource list the variables of a specified data source, showing all the fields of the variables.",
                "required_parameters": [
                    {
                        "name": "datasource_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables/{variable_id}",
                "api_description": "This resource returns a variable and its details. It shows additional fields than the ones required during the creation of the variable:  last_value: Shows the last value written to the variable.",
                "required_parameters": [
                    {
                        "name": "variable_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables",
                "api_description": "Retrieves the list of all the variables owned by a user. The header X-Auth-Token is needed to have the permissions for this endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources",
                "api_description": "This resource lists all the existing data sources of a user.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources/{datasource_id}",
                "api_description": "This resource obtains an existing data source and its details. Also, it returns additional fields besides the ones required during the creation of the data source:  number_of_variables: Shows the number of variables contained by the data source. last_activity: Returns the date of the last activity",
                "required_parameters": [
                    {
                        "name": "datasource_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables/{variable_id}/values",
                "api_description": "This resource returns the values of the specified variable.  Every value will have a timestamp which is a value in milliseconds according to the POSIX standard.",
                "required_parameters": [
                    {
                        "name": "variable_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            }
        ],
        "query": "I need to retrieve the list of variables for my data source with ID 'abc123'. Additionally, I want to obtain the details of the variable with ID 'xyz789'.",
        "relevant APIs": [
            [
                "Ubidots",
                "GET /datasources/{datasource_id}/variables"
            ],
            [
                "Ubidots",
                "GET /variables/{variable_id}"
            ]
        ],
        "query_id": 6504
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Waktu Solat",
                "api_name": "/solat/time",
                "api_description": "Display the prayer time based on selected zone.\nData in json format.",
                "required_parameters": [
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "zone code, get from API /solat/list",
                        "default": "SWK07"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Waktu Solat",
                "api_name": "/solat/list",
                "api_description": "List of zones in each state along with the zone code.\nData in json format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"Johor\": {\"JHR01\": \"str\", \"JHR02\": \"str\", \"JHR03\": \"str\", \"JHR04\": \"str\"}, \"Kedah\": {\"KDH01\": \"str\", \"KDH02\": \"str\", \"KDH03\": \"str\", \"KDH04\": \"str\", \"KDH05\": \"str\", \"KDH06\": \"str\", \"KDH07\": \"str\"}, \"Kelantan\": {\"KTN01\": \"str\", \"KTN02\": \"str\"}, \"Melaka\": {\"MLK01\": \"str\"}, \"Negeri Sembilan\": {\"NGS01\": \"str\", \"NGS02\": \"str\", \"NGS03\": \"str\"}, \"Pahang\": {\"PHG01\": \"str\", \"PHG02\": \"str\", \"PHG03\": \"str\", \"PHG04\": \"str\", \"PHG05\": \"str\", \"PHG06\": \"str\"}, \"Perlis\": {\"PLS01\": \"str\"}, \"Pulau Pinang\": {\"PNG01\": \"str\"}, \"Perak\": {\"PRK01\": \"str\", \"PRK02\": \"str\", \"PRK03\": \"str\", \"PRK04\": \"str\", \"PRK05\": \"str\", \"PRK06\": \"str\", \"PRK07\": \"str\"}, \"Sabah\": {\"SBH01\": \"str\", \"SBH02\": \"str\", \"SBH03\": \"str\", \"SBH04\": \"str\", \"SBH05\": \"str\", \"SBH06\": \"str\", \"SBH07\": \"str\", \"SBH08\": \"str\", \"SBH09\": \"str\"}, \"Selangor\": {\"SGR01\": \"str\", \"SGR02\": \"str\", \"SGR03\": \"str\"}, \"Sarawak\": {\"SWK01\": \"str\", \"SWK02\": \"str\", \"SWK03\": \"str\", \"SWK04\": \"str\", \"SWK05\": \"str\", \"SWK06\": \"str\", \"SWK07\": \"str\", \"SWK08\": \"str\", \"SWK09\":"
            }
        ],
        "query": "Could you please give me the prayer times for the entire week in Kedah? I would like to know the schedule for Fajr, Dhuhr, Asr, Maghrib, and Isha prayers. Also, provide me with the prayer times for next week in Kelantan.",
        "relevant APIs": [
            [
                "Waktu Solat",
                "/solat/time"
            ],
            [
                "Waktu Solat",
                "/solat/list"
            ]
        ],
        "query_id": 21325
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "2. Thumbnail ready",
                "api_description": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "1. Shoot thumbnail",
                "api_description": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "refresh",
                        "type": "STRING",
                        "description": "This parameter forces the currently generate d thumbnail to be regenerated.  It is optional and will be ignored unless it contains the value 1",
                        "default": "1"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "As a web designer, I need a tool that can generate thumbnails for my clients' websites. Can you suggest an API that can create thumbnails in various sizes, like small, medium, and large? It would be helpful if the images are ready for download as soon as they are generated.",
        "relevant APIs": [
            [
                "Pagepeeker",
                "2. Thumbnail ready"
            ],
            [
                "Pagepeeker",
                "1. Shoot thumbnail"
            ]
        ],
        "query_id": 29653
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Captcha",
                "api_name": "Generate Captcha",
                "api_description": "Generates a captcha and returns a UUID.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "uuid": "str",
                    "captcha": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Captcha",
                "api_name": "Verify the captcha",
                "api_description": "Verify the captcha",
                "required_parameters": [
                    {
                        "name": "captcha",
                        "type": "STRING",
                        "description": "",
                        "default": "Captcha Text"
                    },
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "",
                        "default": "UUID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm creating a secure login system for my website and I want to implement captchas. Can you provide an API that generates captchas and verifies if they are entered correctly? It would be helpful if the API can return a message confirming the verification.",
        "relevant APIs": [
            [
                "Captcha",
                "Generate Captcha"
            ],
            [
                "Captcha",
                "Verify the captcha"
            ]
        ],
        "query_id": 29859
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "unit converter",
                "api_name": "Transform Units Using The Get Method",
                "api_description": "Transform Units Using The Get Method",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "",
                        "default": "Square mile"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "area"
                    },
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "",
                        "default": "Square kilometer"
                    },
                    {
                        "name": "value",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "from": "str",
                    "to": "str",
                    "input": "int",
                    "result": "float"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "unit converter",
                "api_name": "info",
                "api_description": "info",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "area": [
                        "list of str with length 8"
                    ],
                    "data-transfer-rate": [
                        "list of str with length 13"
                    ],
                    "digital-storage": [
                        "list of str with length 22"
                    ],
                    "energy": [
                        "list of str with length 10"
                    ],
                    "frequency": [
                        "list of str with length 4"
                    ],
                    "fuel-economics": [
                        "list of str with length 4"
                    ],
                    "length": [
                        "list of str with length 11"
                    ],
                    "mass": [
                        "list of str with length 10"
                    ],
                    "plane-angle": [
                        "list of str with length 6"
                    ],
                    "pressure": [
                        "list of str with length 5"
                    ],
                    "speed": [
                        "list of str with length 5"
                    ],
                    "temperature": [
                        "list of str with length 3"
                    ],
                    "time": [
                        "list of str with length 12"
                    ],
                    "volume": [
                        "list of str with length 19"
                    ]
                }
            }
        ],
        "query": "Assist me in converting 20 degrees Celsius to Fahrenheit. Furthermore, I would like to know the conversion rate from pounds to kilograms.",
        "relevant APIs": [
            [
                "unit converter",
                "Transform Units Using The Get Method"
            ],
            [
                "unit converter",
                "info"
            ]
        ],
        "query_id": 29796
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Movie and TV shows Quotes",
                "api_name": "GET quotes by actor",
                "api_description": "This endpoint will return back quotes by the given actor or actress.",
                "required_parameters": [
                    {
                        "name": "actor",
                        "type": "string",
                        "description": "",
                        "default": "al_pachino"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "character": "str",
                    "quoteFrom": "str",
                    "actor": "str",
                    "year": "int"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Movie and TV shows Quotes",
                "api_name": "GET a random quote",
                "api_description": "This endpoint will return a random quote",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "character": "str",
                    "quoteFrom": "str",
                    "actor": "str",
                    "year": "int"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Movie and TV shows Quotes",
                "api_name": "GET quote by movie or TV show name",
                "api_description": "This endpoint will return quotes by given movie or TV show name",
                "required_parameters": [
                    {
                        "name": "show",
                        "type": "string",
                        "description": "",
                        "default": "the_wizard_of_oz"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "character": "str",
                    "actor": "str",
                    "quoteFrom": "str",
                    "year": "int"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Movie and TV shows Quotes",
                "api_name": "GET quote by Year",
                "api_description": "This endpoint will return back quotes by the given year",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1939"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "character": "str",
                    "actor": "str",
                    "quoteFrom": "str",
                    "year": "int"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Movie and TV shows Quotes",
                "api_name": "Get quote by character",
                "api_description": "This end point will return back quotes delivered by the given character",
                "required_parameters": [
                    {
                        "name": "character",
                        "type": "string",
                        "description": "",
                        "default": "dorothy_gale"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "character": "str",
                    "actor": "str",
                    "quoteFrom": "str",
                    "year": "int"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Movie and TV shows Quotes",
                "api_name": "Get individual quotes by quote ID",
                "api_description": "This endpoint will return back individual quotes based on the given ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "4"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "character": "str",
                    "actor": "str",
                    "quoteFrom": "str",
                    "year": "int"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Movie and TV shows Quotes",
                "api_name": "Get all quotes",
                "api_description": "This endpoint will return back all the quotes in the API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "character": "str",
                    "actor": "str",
                    "quoteFrom": "str",
                    "year": "int"
                }
            }
        ],
        "query": "I'm a film student and I'm researching quotes from movies released in the year 1939. Can you fetch me quotes from movies released in that year? It would be helpful if you can provide the character names and the actors who delivered these quotes.",
        "relevant APIs": [
            [
                "Movie and TV shows Quotes",
                "GET quote by Year"
            ],
            [
                "Movie and TV shows Quotes",
                "Get individual quotes by quote ID"
            ]
        ],
        "query_id": 59862
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources/{datasource_id}/variables",
                "api_description": "This resource list the variables of a specified data source, showing all the fields of the variables.",
                "required_parameters": [
                    {
                        "name": "datasource_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables/{variable_id}",
                "api_description": "This resource returns a variable and its details. It shows additional fields than the ones required during the creation of the variable:  last_value: Shows the last value written to the variable.",
                "required_parameters": [
                    {
                        "name": "variable_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables",
                "api_description": "Retrieves the list of all the variables owned by a user. The header X-Auth-Token is needed to have the permissions for this endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources",
                "api_description": "This resource lists all the existing data sources of a user.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources/{datasource_id}",
                "api_description": "This resource obtains an existing data source and its details. Also, it returns additional fields besides the ones required during the creation of the data source:  number_of_variables: Shows the number of variables contained by the data source. last_activity: Returns the date of the last activity",
                "required_parameters": [
                    {
                        "name": "datasource_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables/{variable_id}/values",
                "api_description": "This resource returns the values of the specified variable.  Every value will have a timestamp which is a value in milliseconds according to the POSIX standard.",
                "required_parameters": [
                    {
                        "name": "variable_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            }
        ],
        "query": "My company is interested in retrieving the list of variables for a data source with ID 'xyz789'. Additionally, we would like to obtain the details of the variable with ID 'abc123'.",
        "relevant APIs": [
            [
                "Ubidots",
                "GET /datasources/{datasource_id}/variables"
            ],
            [
                "Ubidots",
                "GET /variables/{variable_id}"
            ]
        ],
        "query_id": 6511
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Image Service",
                "api_name": "profile-image",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Users name, or any other text",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you help me generate a unique profile image for each user in my app? I require an API call that can generate a profile image based on the user's name.",
        "relevant APIs": [
            [
                "Image Service",
                "profile-image"
            ]
        ],
        "query_id": 84935
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "ConvertTiffToFax",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename of image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "ExtractImageFeatures",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "imageId",
                        "type": "STRING",
                        "description": "The image identifier.",
                        "default": ""
                    },
                    {
                        "name": "searchContextId",
                        "type": "STRING",
                        "description": "The search context identifier.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imageData",
                        "type": "BINARY",
                        "description": "Input image",
                        "default": ""
                    },
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "The folder.",
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "The storage.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "ModifyJpeg2000",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename of image.",
                        "default": ""
                    },
                    {
                        "name": "comment",
                        "type": "STRING",
                        "description": "The comment (can be either single or comma-separated).",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    },
                    {
                        "name": "fromScratch",
                        "type": "BOOLEAN",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                        "default": false
                    },
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "codec",
                        "type": "STRING",
                        "description": "The codec (j2k or jp2).",
                        "default": "j2k"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "FindImageDuplicates",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "searchContextId",
                        "type": "STRING",
                        "description": "The search context identifier.",
                        "default": ""
                    },
                    {
                        "name": "similarityThreshold",
                        "type": "NUMBER",
                        "description": "The similarity threshold.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "The folder.",
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "The storage.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "RotateFlipImage",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "method",
                        "type": "STRING",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY).",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename of an image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    },
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "DownloadFile",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/folder/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    },
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID to download",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "GetImageFrame",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename of image.",
                        "default": ""
                    },
                    {
                        "name": "frameId",
                        "type": "NUMBER",
                        "description": "Number of a frame.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": "NUMBER",
                        "description": "X position of start point for cropping rectangle.",
                        "default": ""
                    },
                    {
                        "name": "rotateFlipMethod",
                        "type": "STRING",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone.",
                        "default": ""
                    },
                    {
                        "name": "newHeight",
                        "type": "NUMBER",
                        "description": "New height.",
                        "default": ""
                    },
                    {
                        "name": "saveOtherFrames",
                        "type": "BOOLEAN",
                        "description": "If result will include all other frames or just a specified frame.",
                        "default": false
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    },
                    {
                        "name": "newWidth",
                        "type": "NUMBER",
                        "description": "New width.",
                        "default": ""
                    },
                    {
                        "name": "rectWidth",
                        "type": "NUMBER",
                        "description": "Width of cropping rectangle.",
                        "default": ""
                    },
                    {
                        "name": "rectHeight",
                        "type": "NUMBER",
                        "description": "Height of cropping rectangle.",
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": "NUMBER",
                        "description": "Y position of start point for cropping rectangle.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "ObjectExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File or folder path e.g. '/file.ext' or '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID",
                        "default": ""
                    },
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "GetImageSearchStatus",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "searchContextId",
                        "type": "STRING",
                        "description": "The search context identifier.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "The storage.",
                        "default": ""
                    },
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "The folder.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Aspose.Imaging Cloud",
                "api_name": "GetImageFrameProperties",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filename with image.",
                        "default": ""
                    },
                    {
                        "name": "frameId",
                        "type": "NUMBER",
                        "description": "Number of a frame.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Folder with image to process.",
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "Your Aspose Cloud Storage name.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I am analyzing the properties of frames in an image. Can you guide me on how to use the API call to get the properties of frame 2 in an image named 'image5.bmp'? Also, please ensure that the image is stored in the 'frames' folder in my Aspose Cloud storage.",
        "relevant APIs": [
            [
                "Aspose.Imaging Cloud",
                "GetImageFrameProperties"
            ],
            [
                "Aspose.Imaging Cloud",
                "DownloadFile"
            ]
        ],
        "query_id": 9719
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "SEO Keyword Research",
                "api_name": "Keyword Research API",
                "api_description": "Keyword Research API",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "email marketing"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "in"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "cpc": "str",
                    "vol": "int",
                    "v": "int",
                    "competition": "str",
                    "score": "float"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "SEO Keyword Research",
                "api_name": "Global Result (single)",
                "api_description": "Keyword Research API",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "email marketing"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "cpc": "float",
                    "vol": "int",
                    "v": "int",
                    "competition": "str",
                    "score": "float"
                }
            }
        ],
        "query": "I'm a freelance content writer and I'm looking for trending keywords in the field of technology. Can you suggest some high-volume keywords related to technology? I would appreciate it if you could also provide the competition level and CPC for these keywords. Additionally, I'm curious about the global results for the keyword 'technology'.",
        "relevant APIs": [
            [
                "SEO Keyword Research",
                "Keyword Research API"
            ],
            [
                "SEO Keyword Research",
                "Global Result (single)"
            ]
        ],
        "query_id": 12759
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "About",
                "api_description": "Get general information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "version": "str",
                    "homepage": "str",
                    "source_code": "str",
                    "maintainer": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get a Language",
                "api_description": "Get a language.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "10"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "is_archived": "bool",
                    "source_file": "str",
                    "compile_cmd": "NoneType",
                    "run_cmd": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get Configuration",
                "api_description": "Configuration information gives you detailed information about the configuration of Judge0.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"maintenance_mode\": \"bool\", \"enable_wait_result\": \"bool\", \"enable_compiler_options\": \"bool\", \"allowed_languages_for_compile_options\": \"empty list\", \"enable_command_line_arguments\": \"bool\", \"enable_submission_delete\": \"bool\", \"enable_callbacks\": \"bool\", \"callbacks_max_tries\": \"int\", \"callbacks_timeout\": \"float\", \"enable_additional_files\": \"bool\", \"max_queue_size\": \"int\", \"cpu_time_limit\": \"float\", \"max_cpu_time_limit\": \"float\", \"cpu_extra_time\": \"float\", \"max_cpu_extra_time\": \"float\", \"wall_time_limit\": \"float\", \"max_wall_time_limit\": \"float\", \"memory_limit\": \"int\", \"max_memory_limit\": \"int\", \"stack_limit\": \"int\", \"max_stack_limit\": \"int\", \"max_processes_and_or_threads\": \"int\", \"max_max_processes_and_or_threads\": \"int\", \"enable_per_process_and_thread_time_limit\": \"bool\", \"allow_enable_per_process_and_thread_time_limit\": \"bool\", \"enable_per_process_and_thread_memory_limit\": \"bool\", \"allow_enable_per_process_and_thread_memory_limit\": \"bool\", \"max_file_size\": \"int\", \"max_max_file_size\": \""
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get Languages",
                "api_description": "Get active languages.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get Statuses",
                "api_description": "Get statuses.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "description": "str"
                }
            }
        ],
        "query": "I'm interested in using Judge0 Extra CE for my coding needs. Can you provide me with the general information, configuration information, active languages, and statuses? It would be helpful to know the version, homepage, source code, maintainer, maintenance mode, enable wait result, enable compiler options, allowed languages for compile options, enable command line arguments, enable submission delete, enable callbacks, callbacks max tries, callbacks timeout, enable additional files, max queue size, cpu time limit, max cpu time limit, cpu extra time, max cpu extra time, wall time limit, max wall time limit, memory limit, max memory limit, stack limit, max stack limit, max processes and/or threads, max max processes and/or threads, enable per process and thread time limit, allow enable per process and thread time limit, enable per process and thread memory limit, allow enable per process and thread memory limit, max file size, max max file size, language IDs, language names, status IDs, and descriptions.",
        "relevant APIs": [
            [
                "Judge0 Extra CE",
                "About"
            ],
            [
                "Judge0 Extra CE",
                "Get Configuration"
            ],
            [
                "Judge0 Extra CE",
                "Get Languages"
            ],
            [
                "Judge0 Extra CE",
                "Get Statuses"
            ]
        ],
        "query_id": 54697
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Bash Code Compiler",
                "api_name": "Bash Versions",
                "api_description": "Bash Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to compile my Bash code using your compiler. Before getting started, I'd like to know the available Bash versions. Can you provide me with that information?",
        "relevant APIs": [
            [
                "Bash Code Compiler",
                "Bash Versions"
            ]
        ],
        "query_id": 86536
    }
]