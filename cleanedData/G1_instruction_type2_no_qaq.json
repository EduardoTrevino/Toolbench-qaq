[
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Passbook",
                "api_name": "Download Pass",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "passtypeidentifier",
                        "type": "STRING",
                        "description": "",
                        "default": "pass.example.id1"
                    },
                    {
                        "name": "serialnumber",
                        "type": "STRING",
                        "description": "",
                        "default": "27f145d2-5713-4a8d-af64-b269f95ade3b"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Passbook",
                "api_name": "List Passes",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm attending a conference and I need to have my pass ready on my phone. Can you help me download a pass with the passTypeIdentifier 'pass.example.id1' and the serialNumber '27f145d2-5713-4a8d-af64-b269f95ade3b'? It would be great if you could also provide me with a list of all available passes.",
        "relevant APIs": [
            [
                "Passbook",
                "List Passes"
            ],
            [
                "Passbook",
                "Download Pass"
            ]
        ],
        "query_id": 33112
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Reqres",
                "api_name": "Users",
                "api_description": "Users",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "2"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Reqres",
                "api_name": "Unknown",
                "api_description": "List of unknown resources",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "per_page": "int",
                    "total": "int",
                    "total_pages": "int",
                    "data": [
                        {
                            "id": "int",
                            "name": "str",
                            "year": "int",
                            "color": "str",
                            "pantone_value": "str",
                            "_list_length": 6
                        }
                    ],
                    "support": {
                        "url": "str",
                        "text": "str"
                    }
                }
            }
        ],
        "query": "I am planning a surprise party for my sister's graduation. Can you help me with the guest list? I would like to retrieve a list of users from the Reqres tool and get their names and email addresses. Additionally, I need to check if there are any unknown resources available that I can use for party decorations.",
        "relevant APIs": [
            [
                "Reqres",
                "Users"
            ],
            [
                "Reqres",
                "Unknown"
            ]
        ],
        "query_id": 59266
    },
    {
        "api_list": [
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Categories",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "categories": [
                        {
                            "category": "NoneType",
                            "_list_length": 872
                        }
                    ]
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Product",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Products in Category",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "products": "empty list",
                    "summary": {
                        "count": "int"
                    }
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Order",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get User Orders",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Products",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "products": [
                        {
                            "id": "int",
                            "name": "str",
                            "category": "NoneType",
                            "_list_length": 10
                        }
                    ],
                    "summary": {
                        "count": "int"
                    }
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Me",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            }
        ],
        "query": "I am a business owner who wants to analyze the performance of my products. Can you provide me with a list of available products in the Demo Project catalog? Additionally, give me the details of a specific order with ID ORD456.",
        "relevant APIs": [
            [
                "\ud83d\udc4b Demo Project",
                "Get Products"
            ],
            [
                "\ud83d\udc4b Demo Project",
                "Get Order"
            ]
        ],
        "query_id": 55721
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get game statistics",
                "api_description": "You are a statistics freak? We too! Here you can check all statistics!",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9576185"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get game lineup",
                "api_description": "With \"Get game lineup\" you'll receive the full lineup and if it is confirmed or a forecast",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9576185"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get best player",
                "api_description": "\"Get best player\" will return the best player of each team with their rating.",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9576185"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get pregame form",
                "api_description": "If you're a detail hunter this is the place for you! Get the information about the last games both teams accomplished.",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9831832"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get game details",
                "api_description": "With \"Get game details\" you'll get the basic information about the game you were looking for.",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9726635"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get scheduled games",
                "api_description": "With \"Get scheduled games\" you'll receive all games which a scheduled for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "",
                        "default": "2021-10-15"
                    },
                    {
                        "name": "sport",
                        "type": "STRING",
                        "description": "",
                        "default": "football"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get live games",
                "api_description": "With \"Get live games\" you'll receive a full list of all live games with their current status and score.",
                "required_parameters": [
                    {
                        "name": "sport",
                        "type": "STRING",
                        "description": "",
                        "default": "football"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get countries by sport",
                "api_description": "With \"Get countries by sport\" you'll receive all countries with specific sport ids which ever supports the sport you've searched.",
                "required_parameters": [
                    {
                        "name": "sport",
                        "type": "STRING",
                        "description": "",
                        "default": "ice-hockey"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get number of games today",
                "api_description": "With \"Get number of games today\" you'll receive all sports we support, how many games are today and how many of them are live.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get all competitions",
                "api_description": "With \"Get all competitions\" you'll receive a list with top competitions (like NFL, Premier League, ...) and all competitions from every sport.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a sports enthusiast, and I want to know the number of games scheduled for today in different sports. Can you provide me with this information? Additionally, I would like to know the countries that support the sport of ice hockey. Please include the list of countries as well.",
        "relevant APIs": [
            [
                "ViperScore",
                "Get number of games today"
            ],
            [
                "ViperScore",
                "Get countries by sport"
            ]
        ],
        "query_id": 60936
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "Felina Multisig Wallet API",
                "api_name": "Get NFTs",
                "api_description": "Fetch the list of owned NFTs by the wallet",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "Felina Multisig Wallet API",
                "api_name": "Read transactions",
                "api_description": "Fetch the list of transactions submitted to the database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My friend wants to retrieve the list of NFTs owned by their wallet. Can you fetch the NFTs owned by wallet number 901234? Additionally, they want to review the transactions submitted to the database. Please provide them with the list of transactions.",
        "relevant APIs": [
            [
                "Felina Multisig Wallet API",
                "Get NFTs"
            ],
            [
                "Felina Multisig Wallet API",
                "Read transactions"
            ]
        ],
        "query_id": 29291
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get a random quote",
                "api_description": "Get a random quote",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get 10 random quotes",
                "api_description": "Get 10 random quotes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get quotes by anime title",
                "api_description": "Get quotes by anime title",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Fairy Tail"
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get quotes by character name",
                "api_description": "Get quotes by character name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "Naruto"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get all the available anime",
                "api_description": "Get all the available anime",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I am researching anime quotes for a project. Can you give me a random quote and a list of all the available anime?",
        "relevant APIs": [
            [
                "Anime Quotes_v4",
                "Get a random quote"
            ],
            [
                "Anime Quotes_v4",
                "Get all the available anime"
            ]
        ],
        "query_id": 32309
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "Zeus API",
                "api_name": "Competitions Matches",
                "api_description": "List the current matches for a league \ud83c\udd9a.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "LI1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year",
                        "type": "string",
                        "description": "",
                        "default": "2021"
                    },
                    {
                        "name": "round",
                        "type": "string",
                        "description": "",
                        "default": "24"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "round": "int",
                    "matches": [
                        {
                            "id": "str",
                            "round": "int",
                            "date": "str",
                            "hour": "str",
                            "homeTeam": {
                                "id": "str",
                                "name": "str",
                                "shorthand": "str",
                                "logo": "str"
                            },
                            "awayTeam": {
                                "id": "str",
                                "name": "str",
                                "shorthand": "str",
                                "logo": "str"
                            },
                            "homeGoals": "int",
                            "awayGoals": "int",
                            "status": "str",
                            "stats": {
                                "ballPossessionHome": "str",
                                "ballPossessionAway": "str",
                                "goalAttemptsHome": "int",
                                "goalAttemptsAway": "int",
                                "offsidesHome": "int",
                                "offsidesAway": "int",
                                "foulsHome": "int",
                                "foulsAway": "int",
                                "totalPassesHome": "int",
                                "totalPassesAway": "int",
                                "attacksHome": "int",
                                "attacksAway": "int"
                            },
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Zeus API",
                "api_name": "Competitions Standings",
                "api_description": "List the current standings for a league \ud83d\udd1d.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "PRL"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year",
                        "type": "string",
                        "description": "",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "area": "str",
                    "yearStart": "int",
                    "yearEnd": "int",
                    "standings": [
                        {
                            "position": "int",
                            "team": {
                                "id": "str",
                                "name": "str",
                                "logo": "str"
                            },
                            "playedGames": "int",
                            "wins": "int",
                            "draws": "int",
                            "loses": "int",
                            "goalsFor": "int",
                            "goalsAgainst": "int",
                            "goalDifference": "int",
                            "points": "int",
                            "form": "str",
                            "_list_length": 20
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Zeus API",
                "api_name": "Competitions Scorers",
                "api_description": "List the current scorers for a league \u26bd.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "BUN"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year",
                        "type": "string",
                        "description": "",
                        "default": "2021"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "area": "str",
                    "yearStart": "int",
                    "yearEnd": "int",
                    "scorers": [
                        {
                            "position": "int",
                            "player": {
                                "id": "str",
                                "name": "str"
                            },
                            "team": {
                                "id": "str",
                                "name": "str",
                                "logo": "str"
                            },
                            "area": {
                                "id": "str",
                                "name": "str",
                                "flag": "str"
                            },
                            "goals": "int",
                            "assists": "int",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Zeus API",
                "api_name": "Competitions ID",
                "api_description": "List one competition given by id \ud83d\udd0d.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "LAL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "description": "str",
                    "area": {
                        "id": "str",
                        "name": "str",
                        "flag": "str"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Zeus API",
                "api_name": "Competitions",
                "api_description": "List all available competitions \ud83c\udfc6.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "str",
                            "name": "str",
                            "description": "str",
                            "area": {
                                "id": "str",
                                "name": "str",
                                "flag": "str"
                            },
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Zeus API",
                "api_name": "Areas ID",
                "api_description": "List one area given by id \ud83d\udd0d.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "ITA"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Zeus API",
                "api_name": "Areas",
                "api_description": "List all available areas \ud83c\udf0d.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning to attend a football match next week and I want to know the current standings and the top scorers in the league. Can you give me the latest league standings and the leading goal scorers?",
        "relevant APIs": [
            [
                "Zeus API",
                "Competitions Standings"
            ],
            [
                "Zeus API",
                "Competitions Scorers"
            ]
        ],
        "query_id": 52810
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "Player Progress",
                "api_description": "Get player progress",
                "required_parameters": [
                    {
                        "name": "player_id",
                        "type": "NUMBER",
                        "description": "Player ID",
                        "default": "28003"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "share": {
                            "title": "str",
                            "url": "str",
                            "description": "str"
                        },
                        "playerAchievements": [
                            {
                                "title": "str",
                                "value": "str",
                                "achievementID": "str",
                                "additionalData": [
                                    {
                                        "seasonID": "str",
                                        "clubID": "str",
                                        "competitionID": "str",
                                        "cycle": "str",
                                        "competitionTypeID": "str",
                                        "type": "str",
                                        "countryID": "NoneType",
                                        "_list_length": 1
                                    }
                                ],
                                "_list_length": 34
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "European champions",
                "api_description": "European champions. Titles and success",
                "required_parameters": [
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "share": {
                            "title": "str",
                            "url": "str",
                            "description": "str"
                        },
                        "teams": [
                            {
                                "successID": "str",
                                "seasonID": "str",
                                "id": "str",
                                "countryName": "str",
                                "countryImage": "str",
                                "season": "str",
                                "coachID": "str",
                                "coachName": "str",
                                "firstName": "str",
                                "lastName": "str",
                                "alias": "str",
                                "coachImage": "str",
                                "_list_length": 16
                            }
                        ],
                        "recordWinner": [
                            {
                                "quantity": "int",
                                "id": "str",
                                "countryName": "str",
                                "countryImage": "str",
                                "_list_length": 10
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "UEFA rankings",
                "api_description": "Get countries within 5 years. Ex. https://www.transfermarkt.com/statistik/5jahreswertung",
                "required_parameters": [
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "share": {
                            "title": "str",
                            "url": "str",
                            "description": "str"
                        },
                        "teams": [
                            {
                                "id": "str",
                                "countryImage": "str",
                                "countryName": "str",
                                "totalPoints": "int",
                                "points2022": "str",
                                "points2021": "str",
                                "points2020": "str",
                                "points2019": "str",
                                "points2018": "str",
                                "totalTeams": "int",
                                "teamsCl": "int",
                                "teamsEl": "int",
                                "_list_length": 55
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "List of Champions",
                "api_description": "Get a list of champions",
                "required_parameters": [
                    {
                        "name": "competition_id",
                        "type": "STRING",
                        "description": "Competition ID",
                        "default": "GB1"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "title": "str",
                        "champions": [
                            {
                                "id": "str",
                                "season": "str",
                                "staffId": "str",
                                "_list_length": 124
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "List of clubs",
                "api_description": "Get a list of clubs",
                "required_parameters": [
                    {
                        "name": "competition_id",
                        "type": "STRING",
                        "description": "Competition ID",
                        "default": "GB1"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "name": "str",
                            "image": "str",
                            "_list_length": 20
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "Player Performance details",
                "api_description": "Get player performance details",
                "required_parameters": [
                    {
                        "name": "competition_id",
                        "type": "STRING",
                        "description": "Competition ID",
                        "default": "FR1"
                    },
                    {
                        "name": "season_id",
                        "type": "NUMBER",
                        "description": "Season ID, endpoint `Seasons of competition`",
                        "default": "2022"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    },
                    {
                        "name": "player_id",
                        "type": "NUMBER",
                        "description": "Player ID",
                        "default": "28003"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"data\": [{\"match\": {\"id\": \"str\", \"homeTeam\": {\"id\": \"str\", \"name\": \"str\", \"fullName\": \"NoneType\", \"image\": \"str\", \"nationalTeam\": \"str\", \"flag\": \"NoneType\", \"marketValue\": \"NoneType\", \"mainCompetition\": \"NoneType\"}, \"awayTeam\": {\"id\": \"str\", \"name\": \"str\", \"fullName\": \"NoneType\", \"image\": \"str\", \"nationalTeam\": \"str\", \"flag\": \"NoneType\", \"marketValue\": \"NoneType\", \"mainCompetition\": \"NoneType\"}, \"competition\": {\"id\": \"str\", \"name\": \"str\", \"shortName\": \"str\", \"image\": \"str\", \"leagueLevel\": \"NoneType\", \"isTournament\": \"NoneType\"}, \"timestamp\": \"int\", \"matchday\": \"str\", \"round\": \"NoneType\", \"result\": {\"result\": \"str\", \"goalsHome\": \"str\", \"goalsAway\": \"str\", \"minute\": \"int\", \"state\": \"str\", \"destinationValue\": \"int\", \"destinationDescription\": \"str\"}}, \"performance\": {\"goals\": \"str\", \"assists\": \"str\", \"ownGoals\": \"str\", \"yellowCardMinute\": \"str\", \"yellowRedCardMinute\": \"str\", \"redCardMinute\": \"str\", \"minutesPlayed\": \"int\", \"substitutedOn\": \"NoneType\", \"substitutedOff\": \"NoneType\", \"positio"
            },
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "Referee profile",
                "api_description": "Get referee profile by referee_id",
                "required_parameters": [
                    {
                        "name": "referee_id",
                        "type": "NUMBER",
                        "description": "Referee ID",
                        "default": "6680"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "season_id",
                        "type": "NUMBER",
                        "description": "Season ID, endpoint `Seasons of competition`",
                        "default": "2021"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "share": {
                            "title": "str",
                            "url": "str",
                            "description": "str"
                        },
                        "profile": {
                            "id": "str",
                            "refereeName": "str",
                            "totalCompetitionsPerformance": {
                                "LaLiga": {
                                    "competitionID": "str",
                                    "competitionImage": "str",
                                    "appearances": "str",
                                    "yellow_cards": "str",
                                    "yellow_red_cards": "str",
                                    "red_cards": "str",
                                    "penaltys": "str",
                                    "season": "str"
                                },
                                "Kypello Elladas": {
                                    "competitionID": "str",
                                    "competitionImage": "str",
                                    "appearances": "str",
                                    "yellow_cards": "str",
                                    "yellow_red_cards": "str",
                                    "red_cards": "str",
                                    "penaltys": "str",
                                    "season": "str"
                                },
                                "Copa del Rey": {
                                    "competitionID": "str",
                                    "competitionImage": "str",
                                    "appearances": "str",
                                    "yellow_cards": "str",
                                    "yellow_red_cards": "str",
                                    "red_cards": "str",
                                    "penaltys": "str",
                                    "season": "str"
                                }
                            },
                            "totalPerformanceSeasons": [
                                "list of str with length 17"
                            ],
                            "totalPerformanceSum": {
                                "appearances": "int",
                                "yellow_cards": "int",
                                "yellow_red_cards": "int",
                                "red_cards": "int",
                                "penaltys": "int",
                                "seasonID": "int",
                                "season": "str"
                            }
                        }
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "Competition Standings",
                "api_description": "Get competition standings",
                "required_parameters": [
                    {
                        "name": "standing_type",
                        "type": "STRING",
                        "description": "",
                        "default": "general"
                    },
                    {
                        "name": "competition_id",
                        "type": "STRING",
                        "description": "Competition ID",
                        "default": "GB1"
                    },
                    {
                        "name": "season_id",
                        "type": "NUMBER",
                        "description": "Season ID, endpoint `Seasons of competition`",
                        "default": "2022"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "share": {
                            "title": "str",
                            "url": "str",
                            "description": "str"
                        },
                        "table": [
                            {
                                "id": "str",
                                "group": "NoneType",
                                "rank": "int",
                                "oldRank": "int",
                                "clubName": "str",
                                "clubImage": "str",
                                "points": "int",
                                "goals": "int",
                                "goalsConceded": "int",
                                "goalDifference": "int",
                                "matches": "int",
                                "wins": "int",
                                "losses": "int",
                                "draw": "int",
                                "markID": "str",
                                "markClass": "str",
                                "markColor": "str",
                                "markDescription": "str",
                                "_list_length": 20
                            }
                        ],
                        "legend": [
                            {
                                "id": "str",
                                "description": "str",
                                "class": "str",
                                "color": "str",
                                "_list_length": 5
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "Player Info",
                "api_description": "Get player info. Name, image, shirt number, nationalities, market value, club",
                "required_parameters": [
                    {
                        "name": "player_id",
                        "type": "NUMBER",
                        "description": "Player ID",
                        "default": "28003"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "share": {
                            "title": "str",
                            "url": "str",
                            "image": "NoneType",
                            "description": "str"
                        },
                        "details": {
                            "player": {
                                "id": "str",
                                "name": "str",
                                "image": "str",
                                "imageLarge": "str",
                                "imageSource": "str",
                                "shirtNumber": "str",
                                "age": "NoneType",
                                "dateOfBirth": "NoneType",
                                "heroImage": "NoneType",
                                "isGoalkeeper": "bool",
                                "positions": "NoneType",
                                "nationalities": [
                                    {
                                        "id": "int",
                                        "name": "str",
                                        "image": "str",
                                        "_list_length": 2
                                    }
                                ],
                                "marketValue": {
                                    "value": "int",
                                    "currency": "str",
                                    "progression": "NoneType"
                                }
                            },
                            "club": {
                                "id": "str",
                                "name": "str",
                                "fullName": "str",
                                "image": "str",
                                "nationalTeam": "str",
                                "flag": "NoneType",
                                "marketValue": "NoneType",
                                "mainCompetition": {
                                    "id": "str",
                                    "name": "str",
                                    "shortName": "str",
                                    "image": "str",
                                    "leagueLevel": "NoneType",
                                    "isTournament": "NoneType"
                                }
                            }
                        }
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "TransferMarkt DB",
                "api_name": "World Cup champions",
                "api_description": "World cup champions. Titles and success",
                "required_parameters": [
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "share": {
                            "title": "str",
                            "url": "str",
                            "description": "str"
                        },
                        "teams": [
                            {
                                "successID": "str",
                                "seasonID": "str",
                                "id": "str",
                                "countryName": "str",
                                "countryImage": "str",
                                "season": "str",
                                "coachID": "str",
                                "coachName": "str",
                                "firstName": "str",
                                "lastName": "str",
                                "alias": "str",
                                "coachImage": "str",
                                "_list_length": 22
                            }
                        ],
                        "recordWinner": [
                            {
                                "quantity": "int",
                                "id": "str",
                                "countryName": "str",
                                "countryImage": "str",
                                "_list_length": 8
                            }
                        ]
                    }
                }
            }
        ],
        "query": "I'm planning to organize a football tournament in my city. Can you provide me with a list of clubs that have participated in the competition 'GB1'? I also need the performance details of the players in the tournament, including their goals, assists, yellow cards, and red cards.",
        "relevant APIs": [
            [
                "TransferMarkt DB",
                "List of clubs"
            ],
            [
                "TransferMarkt DB",
                "Player Performance details"
            ]
        ],
        "query_id": 44619
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "Bing Search APIs",
                "api_name": "Web Search API",
                "api_description": "Search data and suggested keywords from Bing search engine.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "",
                        "default": "30"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "how-to-use-excel-for-free"
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "request": {
                        "keyword": "str",
                        "page": "int",
                        "size": "int"
                    },
                    "data": {
                        "items": [
                            {
                                "title": "str",
                                "link": "str",
                                "description": "str",
                                "_list_length": 5
                            }
                        ],
                        "keyword_related": [
                            "list of str with length 8"
                        ],
                        "question": "empty list"
                    },
                    "in_seconds": "float"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Bing Search APIs",
                "api_name": "Images Search",
                "api_description": "Search images from the search engine for the most relevant keywords and images related to keywords and images.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "wallpapers"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "",
                        "default": "30"
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Bing Search APIs",
                "api_name": "Emails Search",
                "api_description": "Search emails from search engines for related keywords.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "sun"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "request": {
                        "keyword": "str"
                    },
                    "data": [
                        "list of str with length 9"
                    ],
                    "in_seconds": "float"
                }
            }
        ],
        "query": "I'm writing an article about the benefits of exercise for mental health. Retrieve web search results for scientific studies on this topic using the Bing Search API. Additionally, find relevant images to accompany the article using the Image Search API.",
        "relevant APIs": [
            [
                "Bing Search APIs",
                "Web Search API"
            ],
            [
                "Bing Search APIs",
                "Images Search"
            ]
        ],
        "query_id": 40054
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Watch Playlist",
                "api_description": "Get a watch list of tracks. This watch playlist appears when you press play on a track in YouTube Music.\n\n\nList of watch playlist items. The counterpart key is optional and only appears if a song has a corresponding video counterpart (UI song/video switcher).",
                "required_parameters": [
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "",
                        "default": "1A7Qw88As64"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "lyrics": "NoneType",
                    "playlistId": "str",
                    "related": "str",
                    "tracks": [
                        {
                            "artists": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 1
                                }
                            ],
                            "feedbackTokens": "NoneType",
                            "length": "str",
                            "likeStatus": "NoneType",
                            "thumbnail": [
                                {
                                    "height": "int",
                                    "url": "str",
                                    "width": "int",
                                    "_list_length": 3
                                }
                            ],
                            "title": "str",
                            "videoId": "str",
                            "videoType": "str",
                            "views": "str",
                            "_list_length": 25
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Lyrics",
                "api_description": "Returns lyrics of a song or video.",
                "required_parameters": [
                    {
                        "name": "browse_id",
                        "type": "STRING",
                        "description": "",
                        "default": "MPLYt_ZXONnvFeQpN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "lyrics": "NoneType",
                    "source": "NoneType"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Song Related",
                "api_description": "Gets related content for a song. Equivalent to the content shown in the \u201cRelated\u201d tab of the watch panel.",
                "required_parameters": [
                    {
                        "name": "browse_id",
                        "type": "STRING",
                        "description": "",
                        "default": "MPTRt_ZXONnvFeQpN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "contents": [
                        {
                            "album": {
                                "id": "str",
                                "name": "str"
                            },
                            "artists": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 1
                                }
                            ],
                            "isExplicit": "bool",
                            "thumbnails": [
                                {
                                    "height": "int",
                                    "url": "str",
                                    "width": "int",
                                    "_list_length": 2
                                }
                            ],
                            "title": "str",
                            "videoId": "str",
                            "_list_length": 20
                        }
                    ],
                    "title": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Song",
                "api_description": "Returns metadata and streaming information about a song or video.",
                "required_parameters": [
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "",
                        "default": "RS0FhoKAHvA"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"microformat\": {\"microformatDataRenderer\": {\"androidPackage\": \"str\", \"appName\": \"str\", \"availableCountries\": [\"list of str with length 249\"], \"category\": \"str\", \"description\": \"str\", \"familySafe\": \"bool\", \"iosAppArguments\": \"str\", \"iosAppStoreId\": \"str\", \"linkAlternates\": [{\"hrefUrl\": \"str\", \"_list_length\": 4}], \"noindex\": \"bool\", \"ogType\": \"str\", \"pageOwnerDetails\": {\"externalChannelId\": \"str\", \"name\": \"str\", \"youtubeProfileUrl\": \"str\"}, \"paid\": \"bool\", \"publishDate\": \"str\", \"schemaDotOrgType\": \"str\", \"siteName\": \"str\", \"tags\": [\"list of str with length 41\"], \"thumbnail\": {\"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 1}]}, \"title\": \"str\", \"twitterCardType\": \"str\", \"twitterSiteHandle\": \"str\", \"unlisted\": \"bool\", \"uploadDate\": \"str\", \"urlApplinksAndroid\": \"str\", \"urlApplinksIos\": \"str\", \"urlCanonical\": \"str\", \"urlTwitterAndroid\": \"str\", \"urlTwitterIos\": \"str\", \"videoDetails\": {\"durationIso8601\": \"str\", \"durationSeconds\": \"str\", \"externalVideoId\": \"str\""
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get User Playlists",
                "api_description": "Retrieve a list of playlists for a given user. Call this function again with the returned params to get the full list.",
                "required_parameters": [
                    {
                        "name": "params",
                        "type": "STRING",
                        "description": "",
                        "default": "6gPgAUdxVUJXcFlCQ3BNQkNpUjVkRjl3WVdkbFgzTnVZWEJ6YUc5MFgyMTFjMmxqWDNCaFoyVmZjbVZuYVc5dVlXd1NIMDEzUzBGTWVWcENhM2h2WVhkRFJFbFBZM2h6Vms1M0xWY3paM05wVW1jYVNnQUFaVzRBQVVaU0FBRkdVZ0FCQUVaRmJYVnphV05mWkdWMFlXbHNYMkZ5ZEdsemRBQUJBVU1BQUFFQUFBRUJBRlZETkRSb1ltVlNiME5hVmxaTlZtYzFlakJHWmtsM2R3QUI4dHF6cWdvR1FBRklBRkFx"
                    },
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "",
                        "default": "UC44hbeRoCZVVMVg5z0FfIww"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get User",
                "api_description": "Retrieve a user\u2019s page. A user may own videos or playlists.",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "channelId of the user",
                        "default": "UC44hbeRoCZVVMVg5z0FfIww"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "playlists": {
                        "browseId": "str",
                        "params": "str",
                        "results": [
                            {
                                "description": "str",
                                "playlistId": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "_list_length": 10
                            }
                        ]
                    },
                    "videos": {
                        "browseId": "str",
                        "results": [
                            {
                                "artists": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "_list_length": 1
                                    }
                                ],
                                "playlistId": "NoneType",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "videoId": "str",
                                "views": "str",
                                "_list_length": 10
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Album",
                "api_description": "Get information and tracks of an album.",
                "required_parameters": [
                    {
                        "name": "browse_id",
                        "type": "STRING",
                        "description": "browseId \u2013 browseId of the album, for example returned by **search()**",
                        "default": "MPREb_TXkYGyz3iEg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "id": "str",
                            "name": "str",
                            "_list_length": 2
                        }
                    ],
                    "audioPlaylistId": "str",
                    "duration": "str",
                    "duration_seconds": "int",
                    "thumbnails": [
                        {
                            "height": "int",
                            "url": "str",
                            "width": "int",
                            "_list_length": 4
                        }
                    ],
                    "title": "str",
                    "trackCount": "int",
                    "tracks": [
                        {
                            "album": "str",
                            "artists": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 2
                                }
                            ],
                            "duration": "str",
                            "duration_seconds": "int",
                            "isAvailable": "bool",
                            "isExplicit": "bool",
                            "likeStatus": "str",
                            "thumbnails": "NoneType",
                            "title": "str",
                            "videoId": "str",
                            "videoType": "str",
                            "_list_length": 7
                        }
                    ],
                    "type": "str",
                    "year": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Artist Albums",
                "api_description": "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases",
                "required_parameters": [
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "",
                        "default": "UCedvOgsKFzcK3hA5taf3KoQ"
                    },
                    {
                        "name": "params",
                        "type": "STRING",
                        "description": "\\\\\\\"params\\\\\\\" data obtained by **get_artist()**",
                        "default": "6gPgAUdxVUJXcFlCQ3BNQkNpUjVkRjl3WVdkbFgzTnVZWEJ6YUc5MFgyMTFjMmxqWDNCaFoyVmZjbVZuYVc5dVlXd1NIMDEzUzBGTWVWcENhM2h2WVhkRFJFbFBZM2h6Vms1NlR6QlNVWE5wVW1jYVNnQUFaVzRBQVVaU0FBRkdVZ0FCQUVaRmJYVnphV05mWkdWMFlXbHNYMkZ5ZEdsemRBQUJBVU1BQUFFQUFBRUJBRlZETUhZMlJuTlJTRTVmUVRGR09EWmlSbkpZWDNwb2R3QUI4dHF6cWdvR1FBRklBRkFV"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Artist",
                "api_description": "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "",
                        "default": "UCedvOgsKFzcK3hA5taf3KoQ"
                    }
                ],
                "method": "GET",
                "template_response": "{\"albums\": {\"browseId\": \"str\", \"params\": \"str\", \"results\": [{\"browseId\": \"str\", \"isExplicit\": \"bool\", \"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 2}], \"title\": \"str\", \"year\": \"str\", \"_list_length\": 10}]}, \"channelId\": \"str\", \"description\": \"str\", \"name\": \"str\", \"radioId\": \"NoneType\", \"related\": {\"browseId\": \"NoneType\", \"results\": [{\"browseId\": \"str\", \"subscribers\": \"str\", \"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 2}], \"title\": \"str\", \"_list_length\": 10}]}, \"shuffleId\": \"NoneType\", \"singles\": {\"browseId\": \"str\", \"params\": \"str\", \"results\": [{\"browseId\": \"str\", \"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 2}], \"title\": \"str\", \"year\": \"str\", \"_list_length\": 10}]}, \"songs\": {\"browseId\": \"str\", \"results\": [{\"album\": {\"id\": \"str\", \"name\": \"str\"}, \"artists\": [{\"id\": \"str\", \"name\": \"str\", \"_list_length\": 1}], \"isAvailable\": \"bool\", \"isExplicit\": \"bool\", \"likeStatus\": \"str\", \"thumbnails\": ["
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Trends",
                "api_description": "Get latest charts data from YouTube Music: Top songs, top videos, top artists and top trending videos. Global charts have no Trending section, US charts have an extra Genres section with some Genre charts.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "ISO 3166-1 Alpha-2 country code. Default: ZZ = Global\nhttps://www.iban.com/country-codes",
                        "default": "de"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artists": {
                        "items": [
                            {
                                "browseId": "str",
                                "rank": "str",
                                "subscribers": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "trend": "str",
                                "_list_length": 40
                            }
                        ],
                        "playlist": "NoneType"
                    },
                    "countries": {
                        "options": [
                            "list of str with length 62"
                        ],
                        "selected": {
                            "text": "str"
                        }
                    },
                    "trending": {
                        "items": [
                            {
                                "artists": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "_list_length": 2
                                    }
                                ],
                                "playlistId": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 1
                                    }
                                ],
                                "title": "str",
                                "videoId": "str",
                                "views": "NoneType",
                                "_list_length": 20
                            }
                        ],
                        "playlist": "str"
                    },
                    "videos": {
                        "items": [
                            {
                                "artists": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "_list_length": 3
                                    }
                                ],
                                "playlistId": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "videoId": "str",
                                "views": "str",
                                "_list_length": 40
                            }
                        ],
                        "playlist": "str"
                    }
                }
            }
        ],
        "query": "I'm organizing a party and need some upbeat songs to create a playlist. Can you suggest some trending songs and artists? I would like to include the top songs and videos from different genres. Please provide me with a list of trending music.",
        "relevant APIs": [
            [
                "Youtube Music API (Detailed)",
                "Trends"
            ],
            [
                "Youtube Music API (Detailed)",
                "Get Song"
            ]
        ],
        "query_id": 75338
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Climate News API_v2",
                "api_name": "Get All Climate Change Related News",
                "api_description": "This endpoint will return all news about Climate change from all around the world.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Climate News API_v2",
                "api_name": "Get Individual News Source news",
                "api_description": "Get news about climate change from a specific newspaper.",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "thetimes"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I run a news agency and I need to gather all the latest news about climate change from around the world. Can you provide me with the API that fetches all climate change-related news? Additionally, I want to retrieve news specifically from 'The Times' newspaper using the Get Individual News Source news API.",
        "relevant APIs": [
            [
                "Climate News API_v2",
                "Get All Climate Change Related News"
            ],
            [
                "Climate News API_v2",
                "Get Individual News Source news"
            ]
        ],
        "query_id": 72373
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "German Police and Crime News Live",
                "api_name": "Get Individual Source News",
                "api_description": "This endpoint will return back all news about police, crime, accidents and more like this from germany from a specific news source.",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "tag24"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "German Police and Crime News Live",
                "api_name": "Get all Police News",
                "api_description": "This endpoint will return back all news about police, crime, accidents and more like this from germany.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "url": "str",
                    "source": "str"
                }
            }
        ],
        "query": "I need to gather information about the crime rates and accidents in Germany. Please fetch all the news articles related to police activities from various sources like tag24. Also, provide me with the title, URL, and source of each article.",
        "relevant APIs": [
            [
                "German Police and Crime News Live",
                "Get Individual Source News"
            ],
            [
                "German Police and Crime News Live",
                "Get all Police News"
            ]
        ],
        "query_id": 55489
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC Top-10 Rankings",
                "api_description": "Returns Top-10 gainers, losers and volume leaders for a given period and equity type (i.e., common, unit, warrants). \n\nAccepts three query parameters:\n\n**period: **daily, weekly, monthly\n**type:** common, unit, warrant\n**sortby:** gainers, losers, volume",
                "required_parameters": [
                    {
                        "name": "sortby",
                        "type": "STRING",
                        "description": "",
                        "default": "gainers"
                    },
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "",
                        "default": "daily"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "common"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Gainers": [
                        {
                            "Commons_Symbol": "str",
                            "Commons_Daily_Change_Percent": "str",
                            "Commons_Price": "str",
                            "Commons_Volume": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC Summary",
                "api_description": "Retrieve SPAC summary including important dates, status and target names.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "GGPI"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "Latest SPAC Deals, IPOs, Closings",
                "api_description": "Returns a list of latest SPAC events, such as deals, ipos, closings, rumors.\n\n**Available options are: ** ipo, closings, deals, rumor",
                "required_parameters": [
                    {
                        "name": "event",
                        "type": "STRING",
                        "description": "",
                        "default": "deals"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Name": "str",
                    "Ticker": "str",
                    "Underwriters": "str",
                    "Country": "str",
                    "Unit_Split": "str",
                    "Status": "str",
                    "IPO_Date": "str",
                    "Definitive_Agreement_Date": "str",
                    "Closing_Date": "NoneType",
                    "Target_Name": "str",
                    "Investor_Presentation": "NoneType",
                    "Trust_Size": "str",
                    "Target_Details": "str",
                    "Initial_S1_Date": "str",
                    "Registration_Date": "str",
                    "Merger_Meeting_Date": "NoneType"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC Calendar",
                "api_description": "Get important SPAC dates such as merger meetings dates, warrant redemption deadlines, definitive agreement dates, unit split (estimate), SPAC deadline (estimate).\n\nAvailable options: merger, split, deadline, redemption",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "redemption"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC SEC Filings",
                "api_description": "Get latest SPAC SEC filings, filter by SPAC symbol.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "",
                        "default": "ITAC"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ticker": "str",
                    "form_type": "str",
                    "form_description": "str",
                    "filing_date": "str",
                    "document_link": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC Price Targets",
                "api_description": "Get latest SPAC price targets from analysts, filter by SPAC symbol.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "",
                        "default": "SOFI"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a financial analyst working on a report about SPACs and I need the latest SEC filings for a specific SPAC. Can you provide me with the ticker symbol, form type, form description, filing date, and document link? Additionally, I'm interested in the latest price targets from analysts for another SPAC.",
        "relevant APIs": [
            [
                "spacHero - SPAC Database",
                "SPAC SEC Filings"
            ],
            [
                "spacHero - SPAC Database",
                "SPAC Price Targets"
            ]
        ],
        "query_id": 28751
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "General Trending",
                "api_description": "**Trending videos** General",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "Music Data by ID",
                "api_description": "Get** Music Data **by **ID**",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "Video Data by URL",
                "api_description": "Get Video Data by U",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.tiktok.com/@mrbeast/video/7104724622674758954"
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"data\": {\"aweme_detail\": {\"is_ads\": \"bool\", \"is_hash_tag\": \"int\", \"is_pgcshow\": \"bool\", \"prevent_download\": \"bool\", \"distribute_type\": \"int\", \"share_url\": \"str\", \"status\": {\"aweme_id\": \"str\", \"is_delete\": \"bool\", \"allow_share\": \"bool\", \"allow_comment\": \"bool\", \"private_status\": \"int\", \"in_reviewing\": \"bool\", \"reviewed\": \"int\", \"self_see\": \"bool\", \"is_prohibited\": \"bool\", \"download_status\": \"int\", \"review_result\": {\"review_status\": \"int\"}, \"video_mute\": {\"is_mute\": \"bool\", \"mute_desc\": \"str\"}}, \"rate\": \"int\", \"has_vs_entry\": \"bool\", \"need_vs_entry\": \"bool\", \"desc\": \"str\", \"music\": {\"id\": \"int\", \"id_str\": \"str\", \"title\": \"str\", \"author\": \"str\", \"album\": \"str\", \"cover_large\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"], \"width\": \"int\", \"height\": \"int\"}, \"cover_medium\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"], \"width\": \"int\", \"height\": \"int\"}, \"cover_thumb\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"], \"width\": \"int\", \"height\": \""
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "Hashtag Feed by ID",
                "api_description": "Get **Hashtag Feed **by **ID**",
                "required_parameters": [
                    {
                        "name": "challenge_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5718"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "User Data by SecUID",
                "api_description": "Get User Data by SecUID",
                "required_parameters": [
                    {
                        "name": "sec_user_id",
                        "type": "string",
                        "description": "",
                        "default": "MS4wLjABAAAABKjQkOz_IIzXXzEAl_9LGsWhvK-gBnlczwRPXK8EmxAp6K3X0qiaP5_OEqmm0XwG"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"data\": {\"status_code\": \"int\", \"user\": {\"account_type\": \"int\", \"avatar_168x168\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"avatar_300x300\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"avatar_larger\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"avatar_medium\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"avatar_thumb\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"aweme_count\": \"int\", \"commerce_user_info\": {\"ad_experience_entry\": \"bool\", \"ad_experience_text\": \"str\", \"ad_revenue_rits\": \"empty list\"}, \"custom_verify\": \"str\", \"follower_count\": \"int\", \"following_count\": \"int\", \"ins_id\": \"str\", \"nickname\": \"str\", \"original_musician\": {\"digg_count\": \"int\", \"music_count\": \"int\", \"music_used_count\": \"int\"}, \"privacy_setting\": {\"following_visibility\": \"int\"}, \"sec_uid\": \"str\", \"share_info\": {\"share_url\": \"str\", \"share_desc\": \"str\", \"share_title\": \"str\", \"bool_persist\": \"int\", \"share_desc_info\": \"str\""
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "Hashtag Feed by Name",
                "api_description": "Get **Hashtag Feed **by **Name**",
                "required_parameters": [
                    {
                        "name": "challenge_name",
                        "type": "string",
                        "description": "",
                        "default": "Food"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "User Feed by Name",
                "api_description": "Get **User Feed** by **Name**",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "description": "",
                        "default": "mrbeast"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "User Feed by ID",
                "api_description": "Get **User Feed** by** ID**",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "string",
                        "description": "",
                        "default": "6614519312189947909"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "User Data by Name",
                "api_description": "Get** User Data** by** Name**",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "description": "",
                        "default": "mrbeast"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"data\": {\"status_code\": \"int\", \"user\": {\"account_type\": \"int\", \"avatar_168x168\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"avatar_300x300\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"avatar_larger\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"avatar_medium\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"avatar_thumb\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"]}, \"aweme_count\": \"int\", \"commerce_user_info\": {\"ad_experience_entry\": \"bool\", \"ad_experience_text\": \"str\", \"ad_revenue_rits\": \"empty list\"}, \"custom_verify\": \"str\", \"follower_count\": \"int\", \"following_count\": \"int\", \"ins_id\": \"str\", \"nickname\": \"str\", \"original_musician\": {\"digg_count\": \"int\", \"music_count\": \"int\", \"music_used_count\": \"int\"}, \"privacy_setting\": {\"following_visibility\": \"int\"}, \"sec_uid\": \"str\", \"share_info\": {\"share_url\": \"str\", \"share_desc\": \"str\", \"share_title\": \"str\", \"bool_persist\": \"int\", \"share_desc_info\": \"str\""
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "Hashtag Data by Name",
                "api_description": "Get Hashtag Data by using Name of Hashtag",
                "required_parameters": [
                    {
                        "name": "challenge_name",
                        "type": "string",
                        "description": "",
                        "default": "food"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "ch_info": {
                            "view_count": "int",
                            "type": "int",
                            "user_count": "int",
                            "cid": "str",
                            "cha_name": "str"
                        },
                        "status_code": "int"
                    }
                }
            }
        ],
        "query": "I'm curious about the popularity of a specific hashtag on TikTok. Can you provide me with the hashtag data for the challenge 'food'? Additionally, fetch me the music data for a specific music ID.",
        "relevant APIs": [
            [
                "TikTok_Solutions",
                "Hashtag Data by Name"
            ],
            [
                "TikTok_Solutions",
                "Music Data by ID"
            ]
        ],
        "query_id": 23248
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Joke of the Day By Category",
                "api_description": "Get the joke of the day of specific category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Money"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Random Joke By Category",
                "api_description": "Get the random joke by category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Political"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Random Joke",
                "api_description": "Get the random joke from a collection of most rated and most popular jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Jokes",
                "api_description": "Access our huge collection of jokes and paginate through them based on your desired limit and sorting criteria.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "score:desc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Categories of Jokes",
                "api_description": "Get all available categories of our Jokes collection which can be used to filter jokes based on specific category.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Jokes By Specific Category",
                "api_description": "Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Women"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "score:desc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Joke of the Day",
                "api_description": "Get the joke of the day from a collection of most rated and most popular jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm writing a comedy script and I need a large collection of jokes. Can you give me a list of jokes with a limit of 200 and sorted by score in descending order? Also, provide me with the joke of the day and the available categories of jokes.",
        "relevant APIs": [
            [
                "World of Jokes",
                "Get Jokes"
            ],
            [
                "World of Jokes",
                "Get Joke of the Day"
            ],
            [
                "World of Jokes",
                "Get Categories of Jokes"
            ]
        ],
        "query_id": 32285
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "Roman Gods By Pizza API",
                "api_name": "Search Roman God By Name",
                "api_description": "Search for a Roman God By name to get a description about them",
                "required_parameters": [
                    {
                        "name": "god",
                        "type": "STRING",
                        "description": "",
                        "default": "jupiter"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Description": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "Roman Gods By Pizza API",
                "api_name": "Random Roman God",
                "api_description": "Returns information about a random Roman God",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Description": "str",
                    "God": "str"
                }
            }
        ],
        "query": "I'm planning a family game night and I want to include a Roman mythology trivia game. Can you give me a random Roman god along with a description and then provide me with detailed information about the god Mars?",
        "relevant APIs": [
            [
                "Roman Gods By Pizza API",
                "Random Roman God"
            ],
            [
                "Roman Gods By Pizza API",
                "Search Roman God By Name"
            ]
        ],
        "query_id": 37421
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": " Quotes API",
                "api_name": "get_quotes_by_max_char_count",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "max_char_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": " Quotes API",
                "api_name": "get_quotes_by_keyword",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Social",
                "tool_name": " Quotes API",
                "api_name": "get_quotes_by_source",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "source",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Social",
                "tool_name": " Quotes API",
                "api_name": "get_random_quote",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "source": "str",
                    "quote": "str",
                    "char_count": "int"
                }
            }
        ],
        "query": "I'm a content creator working on a project about happiness. Can you provide me with quotes about happiness with a maximum character count of 100? Additionally, could you give me quotes from different sources like Aristotle, Dalai Lama, and Albert Einstein?",
        "relevant APIs": [
            [
                " Quotes API",
                "get_quotes_by_max_char_count"
            ],
            [
                " Quotes API",
                "get_quotes_by_source"
            ]
        ],
        "query_id": 22937
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "thefluentme",
                "api_name": "Get post by id",
                "api_description": "Returns a post by `post_id`. You can get the `post_id` from the `Get all posts` endpoint.",
                "required_parameters": [
                    {
                        "name": "post_id",
                        "type": "string",
                        "description": "",
                        "default": "P36288"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "thefluentme",
                "api_name": "Get all posts",
                "api_description": "Get a paginated list of all posts.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Posts per page. If no value is provided, the default value of `10` will be applied.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "thefluentme",
                "api_name": "Get all languages",
                "api_description": "Returns a list of all supported languages. The API supports 40 different languages and 80 different voices for the ai_reading. This is used to define the post language when a post is added. It also defines the voice for the sound file that is generated for the user to listen to.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "supported_languages": [
                        {
                            "language_id": "int",
                            "language_name": "str",
                            "language_voice": "str",
                            "_list_length": 81
                        }
                    ]
                }
            },
            {
                "category_name": "Education",
                "tool_name": "thefluentme",
                "api_name": "Get language by id",
                "api_description": "Returns a language by id",
                "required_parameters": [
                    {
                        "name": "language_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "thefluentme",
                "api_name": "Get score by id",
                "api_description": "Returns a score by `score_id`. You can get the `score_id` from the `Get all scores` endpoint. The scale parameter defines the maximum number of points for the recording, as well as each word. This parameter is not required. The default value of 100 will be applied if the parameter is not provided.",
                "required_parameters": [
                    {
                        "name": "score_id",
                        "type": "string",
                        "description": "",
                        "default": "S38392182"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "scale",
                        "type": "NUMBER",
                        "description": "",
                        "default": "90"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "thefluentme",
                "api_name": "Get all scores",
                "api_description": "Get a paginated list of all scores.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Scores per page. If no value is provided, the default value of `10` will be applied.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "3"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning to add a new post in a specific language. Can you fetch me the details of a language with the ID 5? I would also like to get a paginated list of all posts and the scores associated with each post.",
        "relevant APIs": [
            [
                "thefluentme",
                "Get language by id"
            ],
            [
                "thefluentme",
                "Get all posts"
            ],
            [
                "thefluentme",
                "Get all scores"
            ]
        ],
        "query_id": 62568
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Diffbot",
                "api_name": "Article API",
                "api_description": "The Article API is used to extract clean article text from news articles, blog posts, and other text-heavy web pages.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "URL to extract article from (URLEncoded)",
                        "default": "http://blog.diffbot.com/diffbot-api-batch-requests/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timeout",
                        "type": "NUMBER",
                        "description": "Specify a value in milliseconds (e.g., &timeout=15000) to override the default API timeout of 5000ms.",
                        "default": "15000"
                    },
                    {
                        "name": "paging",
                        "type": "BOOLEAN",
                        "description": "Send paging=false to disable automatic concatenation of multi-page articles.",
                        "default": ""
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Send in a list of comma-separated fieldnames to override default field output in the response.",
                        "default": "text,html,images(pixelHeight,pixelWidth)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "errorCode": "int",
                    "error": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Diffbot",
                "api_name": "Frontpage",
                "api_description": "The Frontpage API takes in a multifaceted \u201chomepage\u201d and returns individual page elements.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "Frontpage URL from which to extract items",
                        "default": "http://blog.diffbot.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timeout",
                        "type": "STRING",
                        "description": "Specify a value in milliseconds (e.g., &timeout=15000) to override the default API timeout of 5000ms.",
                        "default": "15000"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Format the response output in xml (default) or json",
                        "default": "json"
                    },
                    {
                        "name": "all",
                        "type": "STRING",
                        "description": "Returns all content from page, including navigation and similar links that the Diffbot visual processing engine considers less important / non-core.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "errorCode": "int",
                    "error": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Diffbot",
                "api_name": "Product API",
                "api_description": "The Product API retrieves full product data from any e-commerce shopping page.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "URL of the page to process.",
                        "default": "http://www.amazon.com/Kindle-Ereader-ebook-reader/dp/B007HCCNJU/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timeout",
                        "type": "NUMBER",
                        "description": "Specify a value in milliseconds (e.g., &timeout=15000) to override the default API timeout of 5000ms.",
                        "default": "15000"
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Send in a list of comma-separated fieldnames to override default field output in the response.",
                        "default": "products(offerPrice,regularPrice)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "errorCode": "int",
                    "error": "str"
                }
            }
        ],
        "query": "I'm a developer working on a news aggregator app. Can you provide me with the full-text articles, images, and author information for the top news articles from various news sources? It would be helpful to sort the articles by category and include the publication date.",
        "relevant APIs": [
            [
                "Diffbot",
                "Article API"
            ],
            [
                "Diffbot",
                "Frontpage"
            ]
        ],
        "query_id": 17087
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "LeagueNextMatches",
                "api_description": "Get the upcoming matches for a specific Rugby league and season.",
                "required_parameters": [
                    {
                        "name": "seasonId",
                        "type": "NUMBER",
                        "description": "The season ID for which to retrieve the league's next matches.",
                        "default": 46701
                    },
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The unique tournament ID for which to retrieve the league's next matches.",
                        "default": 421
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Zero-based page.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "LeagueMedia",
                "api_description": "Get media for a specific Rugby league.",
                "required_parameters": [
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The unique tournament ID for which to retrieve the league media.",
                        "default": 294
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "media": [
                        {
                            "createdAtTimestamp": "int",
                            "doFollow": "bool",
                            "id": "int",
                            "keyHighlight": "bool",
                            "mediaType": "int",
                            "sourceUrl": "str",
                            "subtitle": "str",
                            "thumbnailUrl": "str",
                            "title": "str",
                            "url": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "Categories",
                "api_description": "Get the list of available rugby categories, including their names and IDs.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "categories": [
                        {
                            "flag": "str",
                            "id": "int",
                            "name": "str",
                            "priority": "int",
                            "slug": "str",
                            "sport": {
                                "id": "int",
                                "name": "str",
                                "slug": "str"
                            },
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "CategoryTournaments",
                "api_description": "Get the list of all rugby leagues from the specified category, including their names and IDs.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The category ID for which you want to retrieve all leagues.",
                        "default": 83
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "groups": [
                        {
                            "uniqueTournaments": [
                                {
                                    "category": {
                                        "flag": "str",
                                        "id": "int",
                                        "name": "str",
                                        "slug": "str",
                                        "sport": {
                                            "id": "int",
                                            "name": "str",
                                            "slug": "str"
                                        }
                                    },
                                    "displayInverseHomeAwayTeams": "bool",
                                    "id": "int",
                                    "name": "str",
                                    "primaryColorHex": "str",
                                    "secondaryColorHex": "str",
                                    "slug": "str",
                                    "userCount": "int",
                                    "_list_length": 19
                                }
                            ],
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "LeagueLogoImage",
                "api_description": "Get the logo image for a specific Rugby league. The image is in PNG format.",
                "required_parameters": [
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The unique tournament ID for which to retrieve the league logo image.",
                        "default": 294
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "TeamMedia",
                "api_description": "Get media for a specific Rugby team.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the team for which to retrieve the media.",
                        "default": 4264
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "media": [
                        {
                            "createdAtTimestamp": "int",
                            "doFollow": "bool",
                            "id": "int",
                            "keyHighlight": "bool",
                            "mediaType": "int",
                            "sourceUrl": "str",
                            "subtitle": "str",
                            "thumbnailUrl": "str",
                            "title": "str",
                            "url": "str",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "MatchIncidents",
                "api_description": "Get incidents for a specific Rugby match.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the match for which to get incidents.",
                        "default": 9945302
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "addedTime": "int",
                            "awayScore": "int",
                            "homeScore": "int",
                            "incidentType": "str",
                            "isLive": "bool",
                            "text": "str",
                            "time": "int",
                            "_list_length": 13
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "Match",
                "api_description": "Get information of a Rugby match by its ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the match for which to get information.",
                        "default": 9945302
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"event\": {\"awayScore\": {\"current\": \"int\", \"display\": \"int\", \"normaltime\": \"int\", \"period1\": \"int\", \"period2\": \"int\"}, \"awayTeam\": {\"country\": {}, \"fullName\": \"str\", \"gender\": \"str\", \"id\": \"int\", \"manager\": {\"country\": {}, \"id\": \"int\", \"name\": \"str\", \"shortName\": \"str\", \"slug\": \"str\"}, \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"changes\": {\"changeTimestamp\": \"int\", \"changes\": [\"list of str with length 6\"]}, \"crowdsourcingDataDisplayEnabled\": \"bool\", \"currentPeriodStartTimestamp\": \"int\", \"customId\": \"str\", \"defaultPeriodCount\": \"int\", \"defaultPeriodLength\": \"int\", \"fanRatingEvent\": \"bool\", \"finalResultOnly\": \"bool\", \"hasGlobalHighlights\": \"bool\", \"homeScore\": {\"current\": \"int\", \"display\": \"int\", \"normaltime\": \"int\", \"period1\": \"int\", \"period2\": \"int\"}, \"homeTe"
            },
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "PreMatchForm",
                "api_description": "Get the pre-match form information for a specific Rugby match.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The id of the match you want to get pre-match form.",
                        "default": 9945302
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "awayTeam": {
                        "form": [
                            "list of str with length 5"
                        ],
                        "position": "int",
                        "value": "str"
                    },
                    "homeTeam": {
                        "form": [
                            "list of str with length 5"
                        ],
                        "position": "int",
                        "value": "str"
                    },
                    "label": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "RugbyAPI2",
                "api_name": "CategorySchedules",
                "api_description": "Get the schedules of rugby matches for the given date and category, including match timings, teams, and other relevant information.",
                "required_parameters": [
                    {
                        "name": "month",
                        "type": "NUMBER",
                        "description": "The month for which you want to retrieve the schedules (1-12).",
                        "default": 11
                    },
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "The year for which you want to retrieve the schedules (e.g., 2022).",
                        "default": 2022
                    },
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The category ID for which you want to retrieve the schedules.",
                        "default": 83
                    },
                    {
                        "name": "day",
                        "type": "NUMBER",
                        "description": "The day of the month for which you want to retrieve the schedules (1-31).",
                        "default": 17
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"events\": [{\"awayScore\": {\"current\": \"int\", \"display\": \"int\", \"period1\": \"int\", \"period2\": \"int\"}, \"awayTeam\": {\"country\": {}, \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"changes\": {\"changeTimestamp\": \"int\", \"changes\": [\"list of str with length 5\"]}, \"crowdsourcingDataDisplayEnabled\": \"bool\", \"customId\": \"str\", \"finalResultOnly\": \"bool\", \"hasGlobalHighlights\": \"bool\", \"homeScore\": {\"current\": \"int\", \"display\": \"int\", \"period1\": \"int\", \"period2\": \"int\"}, \"homeTeam\": {\"country\": {}, \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", "
            }
        ],
        "query": "My company is hosting a rugby event and we need to provide pre-match form information to the participants. Can you fetch the pre-match form for a specific rugby match? We would also like to see the incidents that occurred during the match.",
        "relevant APIs": [
            [
                "RugbyAPI2",
                "PreMatchForm"
            ],
            [
                "RugbyAPI2",
                "MatchIncidents"
            ]
        ],
        "query_id": 2213
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Fetch full metadata",
                "api_description": "This endpoint will return the full metadata of the number included on the request.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Country code number",
                "api_description": "Returns the digits between the `+` and the national number when the number is written in international format.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Format number",
                "api_description": "Returns the phone number on standardized formats.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Is fixed?",
                "api_description": "Returns `true` or `false` depending on whether the number is fixed or not.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Is mobile?",
                "api_description": "Returns `true` or `false` depending on whether the number is a mobile line or not.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Is possible?",
                "api_description": "Validates phone number length, returns `true` or `false`.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Is valid?",
                "api_description": "Validates both phone number length and the actual phone number digits, returns `true` or `false`.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Type",
                "api_description": "Returns phone number type (`fixed line`, `mobile`, `toll free`, etc); or `undefined` if the number is invalid or if there are no phone number type regular expressions for this country in metadata.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Country ISO 3166",
                "api_description": "Returns the officially assigned ISO alpha-2 country code, on [ISO 3166-1 alpha-2 format](https://en.wikipedia.org/wiki/ISO_3166-2).",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm developing a phone number validation tool for personal use. Can you provide an API that fetches full metadata, formats the numbers, and checks their validity? It would be helpful if the API can also determine if the numbers are fixed or mobile.",
        "relevant APIs": [
            [
                "Phone Validator API",
                "Fetch full metadata"
            ],
            [
                "Phone Validator API",
                "Format number"
            ],
            [
                "Phone Validator API",
                "Is valid?"
            ],
            [
                "Phone Validator API",
                "Is fixed?"
            ],
            [
                "Phone Validator API",
                "Is mobile?"
            ]
        ],
        "query_id": 83950
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Fake Brightcove",
                "api_name": "Ingest Status",
                "api_description": "Ingest Job Status",
                "required_parameters": [
                    {
                        "name": "account_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "job_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "account_id": "int",
                    "error_code": "str",
                    "error_message": "str",
                    "id": "str",
                    "priority": "str",
                    "started_at": "str",
                    "state": "str",
                    "submitted_at": "str",
                    "updated_at": "str",
                    "video_id": "int"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "Fake Brightcove",
                "api_name": "Temp Upload URLs",
                "api_description": "Generate Temp Upload URLs",
                "required_parameters": [
                    {
                        "name": "source_name",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "account_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bucket": "str",
                    "object_key": "str",
                    "access_key_id": "str",
                    "secret_access_key": "str",
                    "session_token": "str",
                    "signed_url": "str",
                    "api_request_url": "str"
                }
            }
        ],
        "query": "As a video editor, I want to check the progress of my video upload. Can you fetch the ingest job status for the video with the ID '99999' in my account? Also, generate temporary upload URLs for the video from the source 'original' in my account.",
        "relevant APIs": [
            [
                "Fake Brightcove",
                "Ingest Status"
            ],
            [
                "Fake Brightcove",
                "Temp Upload URLs"
            ]
        ],
        "query_id": 33330
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/readiness",
                "api_description": "Get the readiness of the user for the specified item.\n",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID of the user",
                        "default": ""
                    },
                    {
                        "name": "item_id",
                        "type": "STRING",
                        "description": "The ID of the item",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/study",
                "api_description": "Get items a specific user should study.\n",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID of the user you want to get learning items for",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/concepts",
                "api_description": "Retrieve a list of concepts for the current customer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/concepts/{id}",
                "api_description": "Retrieve the details of a specific concept by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "Concept ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/users/{user_id}/learning_stats",
                "api_description": "Get the most effective times of day for a user to study.\n",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID of the user you want to get learning stats for",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            }
        ],
        "query": "I'm working on a research project and require the learning statistics for a user. Could you please provide me with the user's most effective study times? The user ID is 'user123'. Additionally, I would like to study the recommended items for this user.",
        "relevant APIs": [
            [
                "Learning Engine",
                "/memre_api/v1/users/{user_id}/learning_stats"
            ],
            [
                "Learning Engine",
                "/memre_api/v1/study"
            ]
        ],
        "query_id": 3922
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Riddlie ",
                "api_name": "Flag Riddle",
                "api_description": "With this endpoint, you can flag a riddle. This helps the API developer to finetune the API for better service in the future.  You can only use four flags sending the number corresponding to the flag type as below:\n\n0: for flagging the riddle as \"Duplicate\"\n1: for flagging the riddle as \"Inappropriate\"\n2: for flagging the riddle as \"Not a Riddle\"\n3: for flagging the riddle as \"Missing Information\"",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "63bdef027183b71946b64ee6"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "flag",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Riddlie ",
                "api_name": "Update Level",
                "api_description": "This endpoint enables you to update the level of the Riddle. All the riddles are set to a medium level which is enumerated as \"1\".  You can suggest the level of a riddle by simply calling this endpoint with query parameters \"0\", \"1\", or \"2\". \n\"0\" is Easy\n\"1\" is Medium \n\"2\" is Hard",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "63bdef027183b71946b64ee6"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "level",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Riddlie ",
                "api_name": "Riddle by Keyword",
                "api_description": "Get one random riddle around a specific subject or keyword. For example, a riddle on a \"cat\".",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "cat"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Riddlie ",
                "api_name": "Riddle by Difficulty Level",
                "api_description": "Get one random riddle based on the difficulty. For example, by Easy, Medium, Hard.",
                "required_parameters": [
                    {
                        "name": "level",
                        "type": "STRING",
                        "description": "",
                        "default": "easy"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Riddlie ",
                "api_name": "Riddle by ID",
                "api_description": "Get a riddle by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "63bdef027183b71946b64ee6"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "63bdef0283b194664ee6c121"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Riddlie ",
                "api_name": "Upvote Riddle",
                "api_description": "Simply calling this endpoint registers a \"like\" to better serve the riddles in the future. There is no response back other than a status message.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "63bdef027183b71946b64ee6"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Riddlie ",
                "api_name": "Get Riddle of the Day",
                "api_description": "With this endpoint, you can request a riddle of the day. Each day API will serve a different riddle with an answer and other details.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Riddlie ",
                "api_name": "Get Random Riddle",
                "api_description": "This endpoint responds with a new random riddle with an answer and other details.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to flag the riddle with ID 63bdef027183b71946b64ee6 as inappropriate. Please fetch a random riddle around the keyword 'food' and provide the difficulty level. Also, fetch the riddle of the day and upvote it.",
        "relevant APIs": [
            [
                "Riddlie ",
                "Flag Riddle"
            ],
            [
                "Riddlie ",
                "Riddle by Keyword"
            ],
            [
                "Riddlie ",
                "Get Riddle of the Day"
            ],
            [
                "Riddlie ",
                "Upvote Riddle"
            ]
        ],
        "query_id": 24146
    },
    {
        "api_list": [
            {
                "category_name": "Communication",
                "tool_name": "Veriphone",
                "api_name": "verify",
                "api_description": "Global phone number verification",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "STRING",
                        "description": "The phone number to verify",
                        "default": "+4915123577723"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "default_country",
                        "type": "STRING",
                        "description": "The default country in a 2 letters ISO format. Example: US, RU.  Optional: the country will be infered from the prefix, from this parameter or from the IP address (in that order).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "phone": "str",
                    "phone_valid": "bool",
                    "phone_type": "str",
                    "phone_region": "str",
                    "country": "str",
                    "country_code": "str",
                    "country_prefix": "str",
                    "international_number": "str",
                    "local_number": "str",
                    "e164": "str",
                    "carrier": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "Veriphone",
                "api_name": "example",
                "api_description": "Get an example phone number for any country",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "The example number's country in a 2 letters ISO format. Example: US, RU.  Optional: the country will be infered from the IP address if this parameter is absent or invalid.",
                        "default": "GB"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type of example number to return. Values: fixed_line, mobile , premium_rate, shared_cost, toll_free, voip",
                        "default": "mobile"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "phone_type": "str",
                    "country_code": "str",
                    "country_prefix": "str",
                    "international_number": "str",
                    "local_number": "str",
                    "e164": "str"
                }
            }
        ],
        "query": "I want to check if the phone number +4915123577723 is valid and get the phone type, region, and carrier details. It would also be helpful to provide an example phone number for a VoIP type in the United Kingdom.",
        "relevant APIs": [
            [
                "Veriphone",
                "verify"
            ],
            [
                "Veriphone",
                "example"
            ]
        ],
        "query_id": 16970
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "vatlayer",
                "api_name": "Single EU VAT Rate",
                "api_description": "Using the \"rate\" endpoint, you may request the API to return standard and reduced VAT rates for a EU member state you specify. Important: Only one of the following three parameters for defining the country is allowed.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Option 1 - define country by 2-letter country code",
                        "default": ""
                    },
                    {
                        "name": "ip_address",
                        "type": "STRING",
                        "description": "Option 2 - define country by IP address",
                        "default": ""
                    },
                    {
                        "name": "use_client_ip",
                        "type": "STRING",
                        "description": "Option 3 - set to \"1\" in order to use the IP of the client making the API request",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "error": {
                        "code": "int",
                        "type": "str",
                        "info": "str"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "vatlayer",
                "api_name": "Request all EU VAT Rates",
                "api_description": "Use the API's \"rate_list\" endpoint to obtain standard & reduced VAT rates for all 28 current member states",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "error": {
                        "code": "int",
                        "type": "str",
                        "info": "str"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "vatlayer",
                "api_name": "Calculate EU VAT Compliant Price",
                "api_description": "Use the \"price\" endpoint, you may request the API to calculate a country-specific VAT compliant price on your behalf. Important: There are 3 options to define a country - choose only one!",
                "required_parameters": [
                    {
                        "name": "amount",
                        "type": "STRING",
                        "description": "\"amount\" parameter - append the amount to convert to VAT compliant price",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Option 1 - define country by 2-letter country code",
                        "default": ""
                    },
                    {
                        "name": "ip_address",
                        "type": "STRING",
                        "description": "Option 2 - define country by IP address",
                        "default": ""
                    },
                    {
                        "name": "use_client_ip",
                        "type": "STRING",
                        "description": "Option 3 - set to \"1\" in order to use the IP of the client making the API request",
                        "default": ""
                    },
                    {
                        "name": "incl",
                        "type": "STRING",
                        "description": "set to \"1\" in case your amount already contains the respective VAT percentage",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "define a reduced VAT \"type\" (product category) according to the API's \"type\" endpoint",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "error": {
                        "code": "int",
                        "type": "str",
                        "info": "str"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "vatlayer",
                "api_name": "Request list of types of goods",
                "api_description": "Request an entire list of all available \"types of goods\", which fall into reduced VAT categories in specific EU member states",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "error": {
                        "code": "int",
                        "type": "str",
                        "info": "str"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "vatlayer",
                "api_name": "Validate VAT Number",
                "api_description": "Using the \"validate\" endpoint, you may request the API to validate any EU VAT number and obtain information about the company it is assigned to",
                "required_parameters": [
                    {
                        "name": "vat_number",
                        "type": "STRING",
                        "description": "\"vat_number\" parameter - append the VAT number you want to validate",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "error": {
                        "code": "int",
                        "type": "str",
                        "info": "str"
                    }
                }
            }
        ],
        "query": "I'm planning to expand my business to multiple EU member states and I need to know the VAT rates for all 28 current member states. Can you provide me with a comprehensive list of these rates? It would be great if you could also validate the VAT numbers of my potential customers.",
        "relevant APIs": [
            [
                "vatlayer",
                "Request all EU VAT Rates"
            ],
            [
                "vatlayer",
                "Validate VAT Number"
            ]
        ],
        "query_id": 79215
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomColor",
                "api_description": "Get a random quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomQuote",
                "api_description": "Get a random quote.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "",
                        "default": "life"
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomArray",
                "api_description": "Generate a random array with numbers, words or mixed values.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "data_type",
                        "type": "STRING",
                        "description": "",
                        "default": "string"
                    },
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomWord",
                "api_description": "Get random words.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "adjective"
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomTvshow",
                "api_description": "Returns random TVshows.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomMovie",
                "api_description": "Returns random movies from over 1000 movie list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomUser",
                "api_description": "Returns random user data such as name, e-mail, etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "-2"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomName",
                "api_description": "Returns random people's names..",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "startingLetter",
                        "type": "STRING",
                        "description": "",
                        "default": "X"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomDate",
                "api_description": "Get random date.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "STRING",
                        "description": "",
                        "default": "2022-08-21"
                    },
                    {
                        "name": "end",
                        "type": "STRING",
                        "description": "",
                        "default": "2023-12-30"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Random Chunk API",
                "api_name": "getRandomPassword",
                "api_description": "Get random password string.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "length",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm working on a data visualization project and I need some random data. Can you generate a random array of numbers and a random password? Additionally, provide a random color and a random quote.",
        "relevant APIs": [
            [
                "Random Chunk API",
                "getRandomArray"
            ],
            [
                "Random Chunk API",
                "getRandomPassword"
            ],
            [
                "Random Chunk API",
                "getRandomColor"
            ],
            [
                "Random Chunk API",
                "getRandomQuote"
            ]
        ],
        "query_id": 76554
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Metals Futures Prices",
                "api_description": "page source : https://www.investing.com/commodities/metals",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "EUREX Futures Market Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 1
                            }
                        ],
                        "MCX Futures Market Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 18
                            }
                        ],
                        "Real Time Streaming Futures Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "NoneType",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 11
                            }
                        ],
                        "US Futures Market Quotes (10-minute Delayed)": [
                            {
                                "Chg.": "float",
                                "High": "float",
                                "Last": "str",
                                "Low": "float",
                                "Month": "str",
                                "Name": "str",
                                "Open": "float",
                                "Time": "str",
                                "_list_length": 12
                            }
                        ]
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Softs Futures Prices",
                "api_description": "page source : https://www.investing.com/commodities/softs",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "MCX Futures Market Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 6
                            }
                        ],
                        "Real Time Streaming Futures Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 9
                            }
                        ],
                        "US Futures Market Quotes (10-minute Delayed)": [
                            {
                                "Chg.": "float",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Name": "str",
                                "Open": "float",
                                "Time": "str",
                                "_list_length": 6
                            }
                        ]
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Energy Futures Prices",
                "api_description": "page source: https://www.investing.com/commodities/energy",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "MCX Futures Market Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 3
                            }
                        ],
                        "Real Time Streaming Futures Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 7
                            }
                        ],
                        "US Futures Market Quotes (10-minute Delayed)": [
                            {
                                "Chg.": "float",
                                "High": "float",
                                "Last": "str",
                                "Low": "float",
                                "Month": "str",
                                "Name": "str",
                                "Open": "float",
                                "Time": "str",
                                "_list_length": 13
                            }
                        ]
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Get Commodities",
                "api_description": "Get Commodities",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "country": "str",
                            "currency": "str",
                            "full_name": "str",
                            "group": "str",
                            "name": "str",
                            "title": "str",
                            "_list_length": 66
                        }
                    ],
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Commodity Groups",
                "api_description": "Get data for commodity groups",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        "list of str with length 5"
                    ],
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Grains Futures Prices",
                "api_description": "page source : https://www.investing.com/commodities/grains",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Commodity Indices",
                "api_description": "page source : https://www.investing.com/indices/commodities-indices",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "Chg. %": "str",
                            "High": "float",
                            "Index": "str",
                            "Last": "float",
                            "Low": "float",
                            "Time": "str",
                            "_list_length": 41
                        }
                    ],
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Meats Futures Prices",
                "api_description": "page source: https://www.investing.com/commodities/meats",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "Real Time Streaming Futures Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 3
                            }
                        ],
                        "US Futures Market Quotes (10-minute Delayed)": [
                            {
                                "Chg.": "float",
                                "High": "float",
                                "Last": "str",
                                "Low": "float",
                                "Month": "str",
                                "Name": "str",
                                "Open": "float",
                                "Time": "str",
                                "_list_length": 7
                            }
                        ]
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Real Time Commodity Futures Prices",
                "api_description": "page source : https://www.investing.com/commodities/real-time-futures",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "Area": "str",
                            "Chg.": "float",
                            "Chg. %": "str",
                            "High": "float",
                            "Last": "float",
                            "Low": "float",
                            "Month": "str",
                            "Name": "str",
                            "Time": "str",
                            "_list_length": 34
                        }
                    ],
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "List of Countries for Stocks",
                "api_description": "This is a list of available countries, it is used as a request on another endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        "list of str with length 94"
                    ],
                    "message": "str",
                    "status": "int"
                }
            }
        ],
        "query": "I am a financial consultant and I need real-time data on commodities futures prices. Can you provide me with the latest quotes for metals, softs, energy, grains, and meats? Additionally, I would like to know the commodity groups these futures belong to.",
        "relevant APIs": [
            [
                "Investing",
                "Metals Futures Prices"
            ],
            [
                "Investing",
                "Softs Futures Prices"
            ],
            [
                "Investing",
                "Energy Futures Prices"
            ],
            [
                "Investing",
                "Grains Futures Prices"
            ],
            [
                "Investing",
                "Meats Futures Prices"
            ],
            [
                "Investing",
                "Commodity Groups"
            ]
        ],
        "query_id": 11653
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "Aspose.Cells Cloud",
                "api_name": "HcPassThrough",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Cells Cloud",
                "api_name": "HcLocal",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Cells Cloud",
                "api_name": "GetRecognizeDocument",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the file to recognize.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storage",
                        "type": "STRING",
                        "description": "The image storage.",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "type": "NUMBER",
                        "description": "Language for OCR Core Aspose.OCR.Core.Transport \n                    BaseStructures.Language.LanguageGroup\n                \n            ",
                        "default": 1
                    },
                    {
                        "name": "dsrMode",
                        "type": "NUMBER",
                        "description": "An option to switch DSR algorithm",
                        "default": 2
                    },
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "The image folder.",
                        "default": ""
                    },
                    {
                        "name": "skewCorrect",
                        "type": "BOOLEAN",
                        "description": "An option to switch skew correction algorithm",
                        "default": true
                    },
                    {
                        "name": "resultType",
                        "type": "NUMBER",
                        "description": "The type of result: Text, HOCR, PDF or their combinations",
                        "default": 1
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Cells Cloud",
                "api_name": "DownloadFile",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/folder/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID to download",
                        "default": ""
                    },
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Cells Cloud",
                "api_name": "GetFilesList",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "Folder path e.g. '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Cells Cloud",
                "api_name": "ObjectExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File or folder path e.g. '/file.ext' or '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID",
                        "default": ""
                    },
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Cells Cloud",
                "api_name": "GetDiscUsage",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Cells Cloud",
                "api_name": "GetFileVersions",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Cells Cloud",
                "api_name": "StorageExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to download the latest version of a file named 'report.docx'. Can you provide me with the download link for the latest version of the file?",
        "relevant APIs": [
            [
                "Aspose.Cells Cloud",
                "GetFileVersions"
            ],
            [
                "Aspose.Cells Cloud",
                "DownloadFile"
            ]
        ],
        "query_id": 15511
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "ImmersiveRouletteAPI",
                "api_name": "Statistics",
                "api_description": "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "duration",
                        "type": "NUMBER",
                        "description": "",
                        "default": "3"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "ImmersiveRouletteAPI",
                "api_name": "latest-outcome",
                "api_description": "Last Spin data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "ImmersiveRouletteAPI",
                "api_name": "history",
                "api_description": "the last 20 spins histories includes all details about the game",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Could you please provide me with the statistics of the wheel results for the past 3 hours? I'm interested in the count, percentage, last occurrence, and hot frequency percentage. It would be great if you could also give me the latest spin data and the history of the last 20 spins.",
        "relevant APIs": [
            [
                "ImmersiveRouletteAPI",
                "Statistics"
            ],
            [
                "ImmersiveRouletteAPI",
                "latest-outcome"
            ],
            [
                "ImmersiveRouletteAPI",
                "history"
            ]
        ],
        "query_id": 7043
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in Russian",
                "api_description": "Get social media news in Russian",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in Portuguese",
                "api_description": "Get social media news in Portuguese",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in Dutch",
                "api_description": "Get social media news in Dutch",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in Japanese",
                "api_description": "Get social media news in Japanese",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in Italian",
                "api_description": "Get social media news in Italian",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in Indonesian",
                "api_description": "Get social media news in Indonesian",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in Hindi",
                "api_description": "Get social media news in Hindi",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in French",
                "api_description": "Get social media news in French",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in Spanish",
                "api_description": "Get social media news in Spanish",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "OneLike",
                "api_name": "Social Media News in German",
                "api_description": "Get social media news in German",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            }
        ],
        "query": "I'm interested in social media news in Dutch. Can you give me the latest updates? Additionally, I would like to know what's happening on social media in Japanese. Please keep me informed.",
        "relevant APIs": [
            [
                "OneLike",
                "Social Media News in Dutch"
            ],
            [
                "OneLike",
                "Social Media News in Japanese"
            ]
        ],
        "query_id": 63730
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Florida Realty API",
                "api_name": "getListing",
                "api_description": "Use this endpoint to get detailed information about a single condominium or townhouse.",
                "required_parameters": [
                    {
                        "name": "identifier",
                        "type": "STRING",
                        "description": "The unique identifier of a listing you'll got before from getListings.  Each OfferForPurchase has got an attribute named Identifier that is used  on this endpoint to get the details of the property.",
                        "default": "M5215311859"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"@context\": [\"list of str with length 10\"], \"@type\": \"str\", \"ActionStatus\": \"str\", \"Result\": {\"@type\": \"str\", \"DateModified\": \"str\", \"Creator\": {\"@type\": \"str\", \"Name\": \"str\", \"Address\": {\"@type\": \"str\", \"StreetAddress\": \"str\", \"PostalCode\": \"str\", \"AddressLocality\": \"str\", \"AddressCountry\": \"str\"}, \"ContactPoint\": {\"@type\": \"str\", \"Name\": \"str\", \"EMail\": \"str\"}, \"SameAs\": \"str\"}, \"Offers\": [{\"@context\": [\"list of str with length 15\"], \"@id\": \"str\", \"@type\": \"str\", \"Identifier\": \"str\", \"OfferedBy\": {\"@type\": \"str\", \"Name\": \"str\", \"JobTitle\": \"str\", \"Email\": \"str\", \"SameAs\": \"str\", \"Image\": {\"@type\": \"str\", \"ContentUrl\": \"str\"}, \"WorksFor\": {\"@type\": \"str\", \"Name\": \"str\", \"Telephone\": \"str\", \"Email\": \"str\", \"Logo\": {\"@type\": \"str\", \"ContentUrl\": \"str\"}}}, \"Price\": \"int\", \"PriceCurrency\": \"str\", \"PriceSpecification\": [{\"@type\": \"str\", \"Identifier\": \"str\", \"Name\": \"str\", \"Price\": \"int\", \"PriceCurrency\": \"str\", \"_list_length\": 1}], \"Availability\": \"str\", \"AvailabilityStarts\": \"str\", \"Busi"
            },
            {
                "category_name": "Business",
                "tool_name": "Florida Realty API",
                "api_name": "getImage",
                "api_description": "Load images of cities you retrieve by calling getCities().",
                "required_parameters": [
                    {
                        "name": "filename",
                        "type": "string",
                        "description": "The name of the image to load.",
                        "default": "capecoral.jpg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Florida Realty API",
                "api_name": "getCities",
                "api_description": "Get a list of supported cities with some data about those cities like the number of residents, the latitude, longitude, altitude  and a description and image of the city.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "@context": [
                        "list of str with length 12"
                    ],
                    "@type": "str",
                    "ActionStatus": "str",
                    "Result": [
                        {
                            "@type": "str",
                            "Identifier": "str",
                            "Name": "str",
                            "Latitude": "float",
                            "Longitude": "float",
                            "Altitude": {
                                "@type": "str",
                                "UnitCode": "str",
                                "Value": "int"
                            },
                            "Description": [
                                {
                                    "@value": "str",
                                    "@language": "str",
                                    "_list_length": 2
                                }
                            ],
                            "NumberOfResidents": "int",
                            "SameAs": "str",
                            "Photo": {
                                "@type": "str",
                                "EncodingFormat": "str",
                                "ContentUrl": "str"
                            },
                            "Address": {
                                "@type": "str",
                                "AddressRegion": "str"
                            },
                            "_list_length": 13
                        }
                    ]
                }
            },
            {
                "category_name": "Business",
                "tool_name": "Florida Realty API",
                "api_name": "getListings",
                "api_description": "Use this endpoint to retrieve a list of condominiums and townhouses in Southwest Florida and on the East Coast.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Supported values are RELEVANCE (best match), NEWEST (newest first), PRICE_LOW (cheapest first), PRICE_HIGH (cheapest last). By default RELEVANCE is used.",
                        "default": "RELEVANCE"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "If you want to implement a paging use offset. The maximum items are defined by the parameter limit starting at offset For example, to return for the frist 10 items set offset to 0 and limit to 10. To return the next 10 items set offset to 10 and limit to 10 and so on. By default offset ist 0.",
                        "default": "0"
                    },
                    {
                        "name": "price_max",
                        "type": "NUMBER",
                        "description": "The maximum price of the condos and townhouses you search for in US Dollar. By default 250000 for $250,000 is used.",
                        "default": "250000"
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of the city to search for condos and townhouses. Supported cities are Cape Coral, Fort Myers, West Palm Beach, Lake Worth, Lantana, Boynton Beach, Delray Beach, Boca Raton, Pompano Beach, Fort Lauderdale. New supported cities are Naples, Tampa and Saint Petersburg. By default Cape Coral is used.",
                        "default": "Cape Coral"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "The maximum number of items to return in the result list. By default 50 is used.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": "{\"@context\": [\"list of str with length 10\"], \"@type\": \"str\", \"ActionStatus\": \"str\", \"Result\": {\"@type\": \"str\", \"Creator\": {\"@type\": \"str\", \"Name\": \"str\", \"Address\": {\"@type\": \"str\", \"StreetAddress\": \"str\", \"PostalCode\": \"str\", \"AddressLocality\": \"str\", \"AddressCountry\": \"str\"}, \"ContactPoint\": {\"@type\": \"str\", \"Name\": \"str\", \"EMail\": \"str\"}, \"SameAs\": \"str\"}, \"Offers\": [{\"@context\": [\"list of str with length 15\"], \"@type\": \"str\", \"@id\": \"str\", \"Identifier\": \"str\", \"OfferedBy\": {\"@type\": \"str\", \"Name\": \"str\", \"JobTitle\": \"str\", \"WorksFor\": {\"@type\": \"str\", \"Name\": \"str\"}}, \"Price\": \"int\", \"PriceCurrency\": \"str\", \"Availability\": \"str\", \"BusinessFunction\": \"str\", \"ItemOffered\": {\"@type\": \"str\", \"@id\": \"str\", \"FloorLevel\": \"NoneType\", \"AmenityFeature\": \"empty list\", \"FloorSize\": {\"@type\": \"str\", \"Name\": \"str\", \"Value\": \"int\", \"UnitCode\": \"str\", \"UnitText\": \"str\"}, \"NumberOfBathroomsTotal\": \"int\", \"NumberOfBedrooms\": \"int\", \"NumberOfFullBathrooms\": \"int\", \"NumberOfPartialBathrooms\": \"int\", "
            }
        ],
        "query": "My friend is interested in purchasing a townhouse in West Palm Beach. Could you retrieve a list of available listings in West Palm Beach and provide the image of the city? Also, please generate a brief report comparing the prices of the listings in West Palm Beach and Fort Lauderdale.",
        "relevant APIs": [
            [
                "Florida Realty API",
                "getListings"
            ],
            [
                "Florida Realty API",
                "getCities"
            ],
            [
                "Florida Realty API",
                "getImage"
            ]
        ],
        "query_id": 24810
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "SheScoresAPI",
                "api_name": "Get players by country",
                "api_description": "Gets all the players from a team",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "Argentina"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "SheScoresAPI",
                "api_name": "Get player by ID",
                "api_description": "Get a player's information by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "SheScoresAPI",
                "api_name": "Get all countries",
                "api_description": "Gets all countries participating",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "SheScoresAPI",
                "api_name": "Get all players",
                "api_description": "Gets all the players from all the teams",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I am organizing a women's football tournament and I need to gather information about all the participating countries. Can you provide me with a list of all the countries that will be taking part in the Women's World Cup 2023? I would like to know the team names, players, and their respective positions.",
        "relevant APIs": [
            [
                "SheScoresAPI",
                "Get all countries"
            ],
            [
                "SheScoresAPI",
                "Get players by country"
            ]
        ],
        "query_id": 10770
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Joke of the Day By Category",
                "api_description": "Get the joke of the day of specific category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Money"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Random Joke By Category",
                "api_description": "Get the random joke by category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Political"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Random Joke",
                "api_description": "Get the random joke from a collection of most rated and most popular jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Jokes",
                "api_description": "Access our huge collection of jokes and paginate through them based on your desired limit and sorting criteria.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "score:desc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Categories of Jokes",
                "api_description": "Get all available categories of our Jokes collection which can be used to filter jokes based on specific category.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Jokes By Specific Category",
                "api_description": "Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Women"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "score:desc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Joke of the Day",
                "api_description": "Get the joke of the day from a collection of most rated and most popular jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My family and I are looking for some entertainment. Can you provide us with 50 jokes sorted by highest score? Additionally, give us a random joke from the 'Sports' category and the list of available joke categories.",
        "relevant APIs": [
            [
                "World of Jokes",
                "Get Jokes"
            ],
            [
                "World of Jokes",
                "Get Random Joke By Category"
            ],
            [
                "World of Jokes",
                "Get Categories of Jokes"
            ]
        ],
        "query_id": 49267
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "World Ranking",
                "api_description": "Fetch the world rankings for a given year",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    },
                    {
                        "name": "statId",
                        "type": "STRING",
                        "description": "",
                        "default": "186"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": {
                        "$oid": "str"
                    },
                    "name": "str",
                    "year": "str",
                    "weekNum": {
                        "$numberInt": "str"
                    },
                    "rankings": [
                        {
                            "lastName": "str",
                            "firstName": "str",
                            "rank": {
                                "$numberInt": "str"
                            },
                            "previousRank": {
                                "$numberInt": "str"
                            },
                            "events": {
                                "$numberInt": "str"
                            },
                            "totalPoints": {
                                "$numberDouble": "str"
                            },
                            "avgPoints": {
                                "$numberDouble": "str"
                            },
                            "pointsLost": {
                                "$numberDouble": "str"
                            },
                            "pointsGained": {
                                "$numberDouble": "str"
                            },
                            "playerId": "str",
                            "_list_length": 300
                        }
                    ],
                    "timestamp": {
                        "$date": {
                            "$numberLong": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "earnings",
                "api_description": "Fetch the player earnings for a given `tournId` and `year`.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    },
                    {
                        "name": "tournId",
                        "type": "STRING",
                        "description": "",
                        "default": "475"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": {
                        "$oid": "str"
                    },
                    "year": "str",
                    "tournId": "str",
                    "leaderboard": [
                        {
                            "playerId": "str",
                            "firstName": "str",
                            "lastName": "str",
                            "earnings": {
                                "$numberInt": "str"
                            },
                            "_list_length": 72
                        }
                    ],
                    "timestamp": {
                        "$date": {
                            "$numberLong": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "points",
                "api_description": "Fetch official FedExCup points earned per player for a given `tournId` and `year`. Note that PGA Tour non-members will not be officially ranked.",
                "required_parameters": [
                    {
                        "name": "tournId",
                        "type": "STRING",
                        "description": "",
                        "default": "475"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": {
                        "$oid": "str"
                    },
                    "year": "str",
                    "tournId": "str",
                    "leaderboard": [
                        {
                            "playerId": "str",
                            "firstName": "str",
                            "lastName": "str",
                            "points": {
                                "$numberDouble": "str"
                            },
                            "_list_length": 70
                        }
                    ],
                    "timestamp": {
                        "$date": {
                            "$numberLong": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "tournaments",
                "api_description": "Fetch tournament information, such as metadata, players, courses, and earnings. Query the `schedule` endpoint to retrieve the necessary `tournId` and `year` parameters. This info will be updated with a players entry list the Friday before the tournament.",
                "required_parameters": [
                    {
                        "name": "orgId",
                        "type": "ENUM",
                        "description": "Choose 1 for PGA Tour or  2 for LIV Tour.",
                        "default": ""
                    },
                    {
                        "name": "tournId",
                        "type": "STRING",
                        "description": "",
                        "default": "475"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "players",
                "api_description": "Fetch a PGA Tour player by his last name, first name, playerId, or a combination of these parameters.\n\nYou must provide at least one search parameter to the API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lastName",
                        "type": "STRING",
                        "description": "",
                        "default": "Morikawa"
                    },
                    {
                        "name": "playerId",
                        "type": "STRING",
                        "description": "",
                        "default": "50525"
                    },
                    {
                        "name": "firstName",
                        "type": "STRING",
                        "description": "",
                        "default": "Collin"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "_id": {
                        "$oid": "str"
                    },
                    "playerId": "str",
                    "firstName": "str",
                    "lastName": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "schedules",
                "api_description": "Fetch the schedule for the desired year and organization.",
                "required_parameters": [
                    {
                        "name": "orgId",
                        "type": "ENUM",
                        "description": "Choose 1 for PGA Tour or  2 for LIV Tour.",
                        "default": ""
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "organizations",
                "api_description": "Fetch the organizations that are supported by this golf data API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": {
                        "$oid": "str"
                    },
                    "orgName": "str",
                    "orgId": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "FedExCup Ranking",
                "api_description": "Fetch the FedExCup ranking leaderboard for a given year. These rankings are updated live during a tournament to show the player's projected ranking.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    },
                    {
                        "name": "statId",
                        "type": "STRING",
                        "description": "",
                        "default": "02671"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": {
                        "$oid": "str"
                    },
                    "year": "str",
                    "name": "str",
                    "tourAvg": "str",
                    "previousTourn": {
                        "name": "str",
                        "tournId": "str",
                        "endDate": "str"
                    },
                    "rankings": [
                        {
                            "playerId": "str",
                            "lastName": "str",
                            "firstName": "str",
                            "rank": "str",
                            "previousRank": "str",
                            "totalPointsProjected": "str",
                            "totalPoints": "str",
                            "events": "str",
                            "numWins": "str",
                            "numTop10s": "str",
                            "pointsBehind": "str",
                            "_list_length": 150
                        }
                    ],
                    "timestamp": {
                        "$date": {
                            "$numberLong": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "scorecards",
                "api_description": "Fetch a scorecard for a given `tournId`, `year`, `playerId`, and `roundId`.  Scorecards include shot-by-shot granularity.",
                "required_parameters": [
                    {
                        "name": "orgId",
                        "type": "ENUM",
                        "description": "Choose 1 for PGA Tour or  2 for LIV Tour.",
                        "default": ""
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    },
                    {
                        "name": "playerId",
                        "type": "STRING",
                        "description": "",
                        "default": "47504"
                    },
                    {
                        "name": "tournId",
                        "type": "STRING",
                        "description": "",
                        "default": "475"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "roundId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "Live Golf Data",
                "api_name": "leaderboards",
                "api_description": "Fetch the most recent leaderboard for a given `tournId`, `year`,  and `roundId`. Query the `schedule` endpoint for the desired `tournId` and `year`.\n\nLeaderboards are available 1-2 days before the event begins.",
                "required_parameters": [
                    {
                        "name": "orgId",
                        "type": "ENUM",
                        "description": "Choose 1 for PGA Tour or  2 for LIV Tour.",
                        "default": ""
                    },
                    {
                        "name": "tournId",
                        "type": "STRING",
                        "description": "",
                        "default": "475"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "roundId",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a golf tournament and I need information about the players. Can you provide me with the world rankings of the top players for the year 2022? Additionally, include the FedExCup points earned by these players and their recent scorecards.",
        "relevant APIs": [
            [
                "Live Golf Data",
                "World Ranking"
            ],
            [
                "Live Golf Data",
                "points"
            ],
            [
                "Live Golf Data",
                "scorecards"
            ]
        ],
        "query_id": 2121
    },
    {
        "api_list": [
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET queue",
                "api_description": "Returns the list of people in division, tier and according to the type of queue",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "queue",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "division",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "tier",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET player by name",
                "api_description": "Return you the summoner related the name given",
                "required_parameters": [
                    {
                        "name": "summonerName",
                        "type": "STRING",
                        "description": "",
                        "default": "Nogaruki"
                    },
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET player by puiid",
                "api_description": "Return you the summoner profile related to the puuid given",
                "required_parameters": [
                    {
                        "name": "puuid",
                        "type": "STRING",
                        "description": "",
                        "default": "qorSH3-x2S4Mi34VTL4QeRenrGeRkUKnVVcQa2e9gQXyDHJvl8CH7xotdh20FG3A5Hac43FM4rX3VA"
                    },
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET PlayerMatch",
                "api_description": "Return an detailed list of games for the number you passed for a player",
                "required_parameters": [
                    {
                        "name": "summonerName",
                        "type": "STRING",
                        "description": "",
                        "default": "Nogaruki"
                    },
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Number of match return\nBy default 10",
                        "default": "10"
                    },
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "Starting number in the player's game list\n\nBy default 0 ( last game played)",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET Champion details",
                "api_description": "Getting detail from champion name you give, translate by the language you give",
                "required_parameters": [
                    {
                        "name": "champion",
                        "type": "STRING",
                        "description": "",
                        "default": "Volibear"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET champions",
                "api_description": "Get list of all champions by default give you in english",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"Aatrox\": {\"version\": \"str\", \"id\": \"str\", \"key\": \"str\", \"name\": \"str\", \"title\": \"str\", \"blurb\": \"str\", \"info\": {\"attack\": \"int\", \"defense\": \"int\", \"magic\": \"int\", \"difficulty\": \"int\"}, \"image\": {\"full\": \"str\", \"sprite\": \"str\", \"group\": \"str\", \"x\": \"int\", \"y\": \"int\", \"w\": \"int\", \"h\": \"int\"}, \"tags\": [\"list of str with length 2\"], \"partype\": \"str\", \"stats\": {\"hp\": \"int\", \"hpperlevel\": \"int\", \"mp\": \"int\", \"mpperlevel\": \"int\", \"movespeed\": \"int\", \"armor\": \"int\", \"armorperlevel\": \"float\", \"spellblock\": \"int\", \"spellblockperlevel\": \"float\", \"attackrange\": \"int\", \"hpregen\": \"int\", \"hpregenperlevel\": \"int\", \"mpregen\": \"int\", \"mpregenperlevel\": \"int\", \"crit\": \"int\", \"critperlevel\": \"int\", \"attackdamage\": \"int\", \"attackdamageperlevel\": \"int\", \"attackspeedperlevel\": \"float\", \"attackspeed\": \"float\"}}, \"Ahri\": {\"version\": \"str\", \"id\": \"str\", \"key\": \"str\", \"name\": \"str\", \"title\": \"str\", \"blurb\": \"str\", \"info\": {\"attack\": \"int\", \"defense\": \"int\", \"magic\": \"int\", \"difficulty\": \"int\"}, \"image\": {\"full"
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET Champion rotation",
                "api_description": "Return's you a liste of free champion ids and liste of free champions ids for new player.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to see the summoner profile for the player with the summoner name 'Nogaruki' in League of Legends. Additionally, provide me with their recent match history and a list of free champion rotations.",
        "relevant APIs": [
            [
                "League of Legends API",
                "GET player by name"
            ],
            [
                "League of Legends API",
                "GET PlayerMatch"
            ],
            [
                "League of Legends API",
                "GET Champion rotation"
            ]
        ],
        "query_id": 47838
    }
]