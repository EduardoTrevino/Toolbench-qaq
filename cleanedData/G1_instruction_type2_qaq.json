[
    {
        "api_list": [
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "GetTaskResult [free of use]",
                "api_description": "To get the result of the task just provide the **task_id** that you obtained after requesting **GetSerpAsync**. When task is not finished yet you will receive **task_status: inprogress**. For a finished task you will get **task_status: succeeded**. Check the **Example Responses** tab to see the examples. \nPossible task statuses:\n- **pending** - task is waiting for its turn\n- **inprogress** - task has been passed to the worker\n- **succeeded** - task has been finished with success\n\nUse this endpoint how much you want. **It's free of charge**!\n\nThe average **GetCompleteDataAsync**  execution time is 10-40 seconds.  It all depends how many tasks are in the queue.",
                "required_parameters": [
                    {
                        "name": "task_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "task_id": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "GetMyTasks [free of use]",
                "api_description": "Retrieves your all tasks. Use this endpoint when lost your **task_id** . Use this endpoint how much you want. **It's free of charge**!",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "task_status",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "description": "str",
                    "status": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "Get server time",
                "api_description": "Returns server time.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "CancelTask [free of use]",
                "api_description": "Cancels pending task. Removes task from your job queue. Use this endpoint how much you want. **It's free of charge**!",
                "required_parameters": [
                    {
                        "name": "task_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "task_id": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "Get SERP [async]",
                "api_description": "Creates a task that will return complete SERP data for provided domain. Using this endpoint is very simple!\n1. Make a request\n2. Grab received **task_id**\n3. Provide the **task_id** to **GetTaskResult** endpoint to get complete domain data.\n\nThe average execution time is 5-40 seconds. It all depends how many tasks are in the queue.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "ENUM",
                        "description": "get search results from:\n- yandex.com\n- yandex.ru\n- yandex.by\n- yandex.kz\n- yandex.uz",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "0 - first page\n1 - second page",
                        "default": "0"
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "bitcoin"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "enums available:\nbe - belorussian\nde - german\nen - english\nfr - french\nid - indonesian\nkk - kazakh\nru - russian\ntr - turkish\ntt - tatar\nuk - ukrainian\n\ne.g. for multiple select: en,fr",
                        "default": ""
                    },
                    {
                        "name": "within",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "e.g. Paris, France",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "Domain": [
                            "list of str with length 1"
                        ],
                        "Region": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a trip to New York and I want to know the search engine results for the query 'best attractions in New York'. Can you create a task to retrieve the complete SERP data for this query? Once the task is completed, please provide me with the task ID so that I can use it to obtain the results using the 'GetTaskResult' endpoint. Additionally, I would like to specify the language as English and the region as New York.",
        "relevant APIs": [
            [
                "Yandex SERP",
                "Get SERP [async]"
            ],
            [
                "Yandex SERP",
                "GetTaskResult [free of use]"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 62757
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Realtor Data API for Real Estate",
                "api_name": "RealtorPropertyList",
                "api_description": "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`",
                "required_parameters": [
                    {
                        "name": "state_code",
                        "type": "STRING",
                        "description": "",
                        "default": "CA"
                    },
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "",
                        "default": "San Jose"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"agent\": [{\"office_name\": \"NoneType\", \"_list_length\": 1}], \"branding\": [{\"name\": \"str\", \"photo\": \"NoneType\", \"type\": \"str\", \"_list_length\": 1}], \"last_update_date\": \"str\", \"list_date\": \"str\", \"list_price\": \"int\", \"listing_id\": \"str\", \"location\": {\"address\": {\"city\": \"str\", \"coordinate\": {\"lat\": \"float\", \"lon\": \"float\"}, \"line\": \"str\", \"postal_code\": \"str\", \"state\": \"str\", \"state_code\": \"str\"}, \"county\": {\"fips_code\": \"str\", \"name\": \"str\"}, \"street_view_url\": \"str\"}, \"open_house_description\": \"str\", \"other_listings\": {\"rdc\": [{\"listing_id\": \"str\", \"listing_key\": \"NoneType\", \"primary\": \"bool\", \"status\": \"str\", \"_list_length\": 1}]}, \"permalink\": \"str\", \"photos\": [{\"href\": \"str\", \"_list_length\": 2}], \"price_reduced_amount\": \"NoneType\", \"primary_photo\": \"str\", \"property_description\": {\"baths\": \"int\", \"baths_1qtr\": \"NoneType\", \"baths_3qtr\": \"NoneType\", \"baths_full\": \"int\", \"baths_half\": \"int\", \"beds\": \"int\", \"garage\": \"int\", \"lot_sqft\": \"int\", \"name\": \"NoneType\", \"sold_date\": \"str\", \"sold_p"
            },
            {
                "category_name": "Business",
                "tool_name": "Realtor Data API for Real Estate",
                "api_name": "RealtorSchoolList",
                "api_description": "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`",
                "required_parameters": [
                    {
                        "name": "school_level",
                        "type": "STRING",
                        "description": "",
                        "default": "elementary"
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "",
                        "default": "San Jose"
                    },
                    {
                        "name": "state_code",
                        "type": "STRING",
                        "description": "",
                        "default": "CA"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "Realtor Data API for Real Estate",
                "api_name": "RealtorAgentList",
                "api_description": "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "state_code",
                        "type": "STRING",
                        "description": "",
                        "default": "CA"
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "",
                        "default": "San Jose"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a real estate developer looking for investment opportunities in San Jose, California. Can you provide me with a list of properties for sale, including the listing ID, list price, address, and photos? Additionally, I would like to know the agent details and branding associated with each property.",
        "relevant APIs": [
            [
                "Realtor Data API for Real Estate",
                "RealtorPropertyList"
            ],
            [
                "Realtor Data API for Real Estate",
                "RealtorAgentList"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 25052
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all {City} names",
                "api_description": "GET all City names",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "cityName": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all {State} names",
                "api_description": "GET all {State} names",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "stateName": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "Get all {Chain} names",
                "api_description": "Get all {Chain} names",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "restaurantChainName": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all Restaurants by {Chain} & {City} & {State}",
                "api_description": "**10 results per request. Use page number for Pagination.**",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": "West Bloomfield"
                    },
                    {
                        "name": "state",
                        "type": "string",
                        "description": "",
                        "default": "MI"
                    },
                    {
                        "name": "restaurantChainName",
                        "type": "string",
                        "description": "",
                        "default": "Subway"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matching_results": "int",
                    "restaurants": [
                        {
                            "id": "int",
                            "restaurantName": "str",
                            "address": "str",
                            "zipCode": "str",
                            "phone": "str",
                            "website": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "stateName": "str",
                            "cityName": "str",
                            "hoursInterval": "str",
                            "cuisineType": "str",
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all Restaurants by {Chain}",
                "api_description": "**10 results per request. Use page number for Pagination.**",
                "required_parameters": [
                    {
                        "name": "restaurantChainName",
                        "type": "string",
                        "description": "",
                        "default": "kfc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matching_results": "int",
                    "restaurants": [
                        {
                            "id": "int",
                            "restaurantName": "str",
                            "address": "str",
                            "zipCode": "str",
                            "phone": "str",
                            "website": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "stateName": "str",
                            "cityName": "str",
                            "hoursInterval": "str",
                            "cuisineType": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all Restaurants by {Chain} & {State}",
                "api_description": "**10 results per request. Use page number for Pagination.**",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "string",
                        "description": "",
                        "default": "AZ"
                    },
                    {
                        "name": "restaurantChainName",
                        "type": "string",
                        "description": "",
                        "default": "Subway"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matching_results": "int",
                    "restaurants": [
                        {
                            "id": "int",
                            "restaurantName": "str",
                            "address": "str",
                            "zipCode": "str",
                            "phone": "str",
                            "website": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "stateName": "str",
                            "cityName": "str",
                            "hoursInterval": "str",
                            "cuisineType": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "Get Restaurant {Logo} by {Chain} Name",
                "api_description": "Get Restaurant {Logo} by {Chain} Name",
                "required_parameters": [
                    {
                        "name": "restaurantChainName",
                        "type": "string",
                        "description": "",
                        "default": "Pizza Hut"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am organizing a company event and we want to provide a variety of food options. Can you find all the fast food restaurants in a specific city? It would be great to have their addresses, phone numbers, and hours of operation.",
        "relevant APIs": [
            [
                "Fast Food Restaurants USA - TOP 50 Chains",
                "GET all {City} names"
            ],
            [
                "Fast Food Restaurants USA - TOP 50 Chains",
                "Get all {Chain} names"
            ],
            [
                "Fast Food Restaurants USA - TOP 50 Chains",
                "GET all Restaurants by {Chain} & {City} & {State}"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 41142
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Translator",
                "api_name": "Get Languages",
                "api_description": "Get all supported languages",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to explore the different languages supported by the Translator tool. Can you assist me in obtaining the complete list of languages? It would be great to have this information for my research project.",
        "relevant APIs": [
            [
                "Translator",
                "Get Languages"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 86143
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am an avid football fan who enjoys betting on matches. Can you help me by providing the active Premium Tips using the Betigolo Tips API? Additionally, I would like to review the historical results of the Premium Tips in the past 30 days to assess their accuracy. Please include the match date, sport, country, league, home team, away team, tip, fair odd, tip odd, result, tip success, and tip profit in the response.",
        "relevant APIs": [
            [
                "Betigolo Tips",
                "Premium Tips"
            ],
            [
                "Betigolo Tips",
                "Premium History"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 52734
    },
    {
        "api_list": [
            {
                "category_name": "Medical",
                "tool_name": "GetGuidelines",
                "api_name": "all",
                "api_description": "All guidelines",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Medical",
                "tool_name": "GetGuidelines",
                "api_name": "vac",
                "api_description": "Vaccinations only",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is planning to start a family and wants to ensure a healthy pregnancy. Can you provide her with the latest medical guidelines for prenatal care and vaccinations? It would be great to have recommendations for each trimester and information about potential risks.",
        "relevant APIs": [
            [
                "GetGuidelines",
                "all"
            ],
            [
                "GetGuidelines",
                "vac"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 7658
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a travel blogger and would like to explore new destinations. Can you suggest some cities where Flixbus operates? I am particularly interested in cities with historical landmarks and natural attractions. Also, provide me with the available trips and schedules for each city.",
        "relevant APIs": [
            [
                "Flixbus",
                "cities"
            ],
            [
                "Flixbus",
                "search-trips"
            ],
            [
                "Flixbus",
                "schedule"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 70915
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the places by latitude and longitude",
                "api_description": "Get the places by latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "group",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the timezones",
                "api_description": "Get the timezones.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "timezone": "str",
                    "countries": [
                        {
                            "id": "str",
                            "name": "str",
                            "_list_length": 11
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the continents",
                "api_description": "Get the continents.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the countries",
                "api_description": "Get the countries.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "alpha3",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "alpha2",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "alpha2": "str",
                    "alpha3": "str",
                    "number": "int",
                    "countryCode": "str",
                    "location": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the states",
                "api_description": "Get the states.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "abbreviation",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "abbreviation": "str",
                    "country": {
                        "id": "str",
                        "name": "str",
                        "alpha2": "str",
                        "alpha3": "str",
                        "number": "int",
                        "countryCode": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the cities",
                "api_description": "Get the cities.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateName",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateAbbreviation",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "stateId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "state": {
                        "id": "str",
                        "name": "str",
                        "abbreviation": "str"
                    },
                    "country": {
                        "id": "str",
                        "name": "str",
                        "alpha2": "str",
                        "alpha3": "str",
                        "number": "int",
                        "countryCode": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the addresses by IP",
                "api_description": "Get the addresses by IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "",
                        "default": "54.72.54.234"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "postalCode": "str",
                    "street": "str",
                    "neighborhood": "str",
                    "city": {
                        "name": "str"
                    },
                    "state": {},
                    "country": {
                        "id": "str",
                        "name": "str",
                        "alpha2": "str",
                        "alpha3": "str"
                    },
                    "coordinates": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the addresses by latitude and longitude",
                "api_description": "Get the addresses by latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "",
                        "default": "51.5007292"
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "",
                        "default": "-0.1268141"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "postalCode": "str",
                    "street": "str",
                    "neighborhood": "str",
                    "city": {
                        "name": "str"
                    },
                    "state": {
                        "id": "str",
                        "name": "str",
                        "abbreviation": "str"
                    },
                    "country": {
                        "id": "str",
                        "name": "str",
                        "alpha2": "str",
                        "alpha3": "str"
                    },
                    "coordinates": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the addresses by postal code",
                "api_description": "Get the addresses by postal code.",
                "required_parameters": [
                    {
                        "name": "postalCode",
                        "type": "STRING",
                        "description": "",
                        "default": "SW1A 2JR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "countryAlpha2",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "countryAlpha3",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "countryName",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "countryId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateName",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "cityId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateAbbreviation",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "cityName",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "city": {},
                    "state": {
                        "name": "str"
                    },
                    "country": {
                        "name": "str",
                        "alpha3": "str"
                    },
                    "coordinates": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a journalist writing an article about different states in the US. Can you provide me with a list of states and their abbreviations? Also, suggest some famous landmarks in each state.",
        "relevant APIs": [
            [
                "Location",
                "Get the states"
            ],
            [
                "Location",
                "Get the cities"
            ],
            [
                "Location",
                "Get the countries"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 5815
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a trip from Berlin to Munich next month. Can you provide me with the Flixbus schedules from Berlin and Munich? Also, I would like to know the trip details for a specific trip from Berlin to Munich on a particular date.",
        "relevant APIs": [
            [
                "Flixbus",
                "stations"
            ],
            [
                "Flixbus",
                "schedule"
            ],
            [
                "Flixbus",
                "trip-details"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 45775
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Quarterly Cash Flow",
                "api_description": "Get Company Quarterly Cash Flow",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "",
                        "default": "quarterly"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"netIncomeLoss\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"totalDepreciationAndAmortization\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"otherNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"totalNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"changeInAccountsReceivable\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"changeInInventories\": {\"isMain\": \"b"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Quarterly Balance Sheet",
                "api_description": "Get Company Quarterly Balance Sheet",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "",
                        "default": "quarterly"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"cashOnHand\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"receivables\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"inventory\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"prePaidExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"NoneType\", \"fiveYrChage\": \"NoneType\", \"tenYrChange\": \"NoneType\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"otherCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"totalCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiv"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Quarterly Income Statement",
                "api_description": "Get Company Income Statement",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "",
                        "default": "quarterly"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"revenue\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"costOfGoodsSold\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"grossProfit\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"researchAndDevelopmentExpenses\": \"NoneType\", \"sgAndAExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"otherOperatingIncomeOrExpenses\": \"NoneType\", \"operatingExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_l"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Quarterly  Ratios",
                "api_description": "Get Company Ratios Latest Data",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "",
                        "default": "quarterly"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"currentRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"longTermDebtCapital\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"debtEquityRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"grossMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"operatingMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"EBITMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"f"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Ratios",
                "api_description": "Get Company ratios latest data",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"currentRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"longTermDebtCapital\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"debtEquityRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"grossMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"operatingMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"EBITMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"f"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Cash Flow",
                "api_description": "Get company cash flow latest data.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"netIncomeLoss\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"totalDepreciationAndAmortization\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"otherNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"totalNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"changeInAccountsReceivable\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"changeInInventories\": {\"isMain\": \"b"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Balance Sheet",
                "api_description": "Get Company latest data for balance sheet",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"cashOnHand\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"receivables\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"inventory\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"prePaidExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"NoneType\", \"fiveYrChage\": \"NoneType\", \"tenYrChange\": \"int\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"otherCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"NoneType\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"totalCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveY"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Income Statement",
                "api_description": "Get Company Income Statement",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"revenue\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"costOfGoodsSold\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"grossProfit\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"researchAndDevelopmentExpenses\": \"NoneType\", \"sgAndAExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"otherOperatingIncomeOrExpenses\": \"NoneType\", \"operatingExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_l"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get All Symbols",
                "api_description": "Get all available symbols in API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": [
                        "list of str with length 6387"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is interested in investing in stocks and wants to know more about Google. Can you fetch the quarterly cash flow, balance sheet, income statement, and ratios for Google? It would be great to have data on net income, total assets, revenue, and current ratio to assess the company's financial health.",
        "relevant APIs": [
            [
                "Finance Data",
                "Get Company Quarterly Cash Flow"
            ],
            [
                "Finance Data",
                "Get Company Quarterly Balance Sheet"
            ],
            [
                "Finance Data",
                "Get Company Quarterly Income Statement"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 70610
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning to bet on tomorrow's football matches. Can you share tomorrow's over 2.5 goals predictions? I want to increase my chances of winning. Also, if possible, please provide me with yesterday's BTTS/Goal Goal predictions.",
        "relevant APIs": [
            [
                "168predict VIP Football Predictions",
                "Tomorrow Sure VIP Over 2.5 Goals"
            ],
            [
                "168predict VIP Football Predictions",
                "Yesterday Sure VIP BTTS/Goal Goal"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 27847
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Competitor Small Image",
                "api_description": "Get competitor small image. It generates image/png.",
                "required_parameters": [
                    {
                        "name": "imageVersion",
                        "type": "NUMBER",
                        "description": "The imageVersion value.",
                        "default": 1
                    },
                    {
                        "name": "competitorId",
                        "type": "NUMBER",
                        "description": "The athlete id.",
                        "default": 1314
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Athlete Large Image",
                "api_description": "Get athlete large image. It generates image/png.",
                "required_parameters": [
                    {
                        "name": "athleteId",
                        "type": "NUMBER",
                        "description": "The athlete id.",
                        "default": 64139
                    },
                    {
                        "name": "imageVersion",
                        "type": "NUMBER",
                        "description": "The imageVersion value.",
                        "default": 12
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Competition Standings",
                "api_description": "Get competition standings.",
                "required_parameters": [
                    {
                        "name": "isPreview",
                        "type": "BOOLEAN",
                        "description": "Is it for use in a preview?",
                        "default": false
                    },
                    {
                        "name": "seasonNum",
                        "type": "NUMBER",
                        "description": "The season number.",
                        "default": 83
                    },
                    {
                        "name": "competition",
                        "type": "NUMBER",
                        "description": "The competition id.",
                        "default": 103
                    },
                    {
                        "name": "stageNum",
                        "type": "NUMBER",
                        "description": "The stage number.",
                        "default": 2
                    },
                    {
                        "name": "live",
                        "type": "BOOLEAN",
                        "description": "Get live standings.",
                        "default": false
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lastUpdateId",
                        "type": "NUMBER",
                        "description": "The last update id. Only fill this parameter if you want updated data",
                        "default": ""
                    },
                    {
                        "name": "groupCategory",
                        "type": "NUMBER",
                        "description": "The group category.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "NUMBER",
                        "description": "The type.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Athlete Trophy Stats",
                "api_description": "Get athlete trophy stats.",
                "required_parameters": [
                    {
                        "name": "athleteId",
                        "type": "NUMBER",
                        "description": "The athlete id.",
                        "default": 1911
                    },
                    {
                        "name": "competitionId",
                        "type": "NUMBER",
                        "description": "The competition id.",
                        "default": 5930
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "competitors": [
                        {
                            "color": "str",
                            "competitorNum": "int",
                            "countryId": "int",
                            "hasSquad": "bool",
                            "id": "int",
                            "imageVersion": "int",
                            "longName": "str",
                            "mainCompetitionId": "int",
                            "name": "str",
                            "nameForURL": "str",
                            "popularityRank": "int",
                            "sportId": "int",
                            "symbolicName": "str",
                            "type": "int",
                            "_list_length": 1
                        }
                    ],
                    "countries": [
                        {
                            "id": "int",
                            "imageVersion": "int",
                            "name": "str",
                            "nameForURL": "str",
                            "sportTypes": [
                                "list of int with length 8"
                            ],
                            "_list_length": 1
                        }
                    ],
                    "lastUpdateId": "int",
                    "sports": [
                        {
                            "drawSupport": "bool",
                            "id": "int",
                            "imageVersion": "int",
                            "name": "str",
                            "nameForURL": "str",
                            "_list_length": 1
                        }
                    ],
                    "stats": {
                        "columns": [
                            {
                                "entity": {
                                    "id": "int",
                                    "type": "str"
                                },
                                "name": "str",
                                "num": "int",
                                "order": "int",
                                "_list_length": 3
                            }
                        ],
                        "rowEntityType": "str",
                        "rows": [
                            {
                                "entityId": "int",
                                "num": "int",
                                "secondaryTitle": "str",
                                "title": "str",
                                "values": [
                                    {
                                        "columnNum": "int",
                                        "value": "str",
                                        "_list_length": 3
                                    }
                                ],
                                "_list_length": 1
                            }
                        ],
                        "showColumnIcons": "bool"
                    },
                    "ttl": "int"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Country Flag",
                "api_description": "Get country flag. It generates image/png.",
                "required_parameters": [
                    {
                        "name": "countryId",
                        "type": "NUMBER",
                        "description": "The country id.",
                        "default": 10
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Game Details",
                "api_description": "Get game details.",
                "required_parameters": [
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    },
                    {
                        "name": "gameId",
                        "type": "NUMBER",
                        "description": "The game id.",
                        "default": 3627363
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lastUpdateId",
                        "type": "NUMBER",
                        "description": "The last update id. Only fill this parameter if you want updated data",
                        "default": ""
                    },
                    {
                        "name": "matchupId",
                        "type": "NUMBER",
                        "description": "The matchup id.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"competitions\": [{\"color\": \"str\", \"competitorsType\": \"int\", \"countryId\": \"int\", \"currentPhaseName\": \"str\", \"currentPhaseNum\": \"int\", \"currentSeasonNum\": \"int\", \"currentStageNum\": \"int\", \"currentStageType\": \"int\", \"hasActiveGames\": \"bool\", \"hasBrackets\": \"bool\", \"hasStandings\": \"bool\", \"hasStandingsGroups\": \"bool\", \"id\": \"int\", \"imageVersion\": \"int\", \"liveGames\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"popularityRank\": \"int\", \"sportId\": \"int\", \"totalGames\": \"int\", \"_list_length\": 1}], \"countries\": [{\"id\": \"int\", \"imageVersion\": \"int\", \"liveGames\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"sportTypes\": [\"list of int with length 7\"], \"totalGames\": \"int\", \"_list_length\": 11}], \"game\": {\"awayCompetitor\": {\"color\": \"str\", \"countryId\": \"int\", \"id\": \"int\", \"imageVersion\": \"int\", \"isQualified\": \"bool\", \"isWinner\": \"bool\", \"lineups\": {\"hasFieldPositions\": \"bool\", \"members\": [{\"formation\": {\"id\": \"int\", \"name\": \"str\", \"shortName\": \"str\"}, \"hasStats\": \"bool\", \"id\": \"int\", \"position\": {\"id\":"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Fixtures",
                "api_description": "Get fixtures for competitors or competitions.",
                "required_parameters": [
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "competitorId",
                        "type": "NUMBER",
                        "description": "The competitor id. Only if you want the competitor's fixtures.",
                        "default": ""
                    },
                    {
                        "name": "lastUpdateId",
                        "type": "NUMBER",
                        "description": "The last update id. Only fill this parameter if you want updated data",
                        "default": ""
                    },
                    {
                        "name": "competition",
                        "type": "NUMBER",
                        "description": "The competition id. Only if you want competition's fixtures",
                        "default": 103
                    }
                ],
                "method": "GET",
                "template_response": {
                    "lastUpdateId": "int",
                    "requestedUpdateId": "int",
                    "summary": {},
                    "ttl": "int"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Featured Competitions",
                "api_description": "Get featured competitions.",
                "required_parameters": [
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    },
                    {
                        "name": "sport",
                        "type": "NUMBER",
                        "description": "The sport.",
                        "default": 1
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type.",
                        "default": "stats"
                    },
                    {
                        "name": "withSeasons",
                        "type": "BOOLEAN",
                        "description": "Include seasons?",
                        "default": true
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Game H2H Matches",
                "api_description": "Get game h2h matches.",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "NUMBER",
                        "description": "The game id.",
                        "default": 3627363
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lastUpdateId",
                        "type": "NUMBER",
                        "description": "The last update id. Only fill this parameter if you want updated data",
                        "default": ""
                    },
                    {
                        "name": "matchupId",
                        "type": "NUMBER",
                        "description": "The matchup id.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"competitions\": [{\"color\": \"str\", \"competitorsType\": \"int\", \"countryId\": \"int\", \"currentPhaseName\": \"str\", \"currentPhaseNum\": \"int\", \"currentSeasonNum\": \"int\", \"currentStageType\": \"int\", \"hasBrackets\": \"bool\", \"hasStandings\": \"bool\", \"hasStandingsGroups\": \"bool\", \"hasStats\": \"bool\", \"id\": \"int\", \"imageVersion\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"popularityRank\": \"int\", \"sportId\": \"int\", \"_list_length\": 1}], \"countries\": [{\"id\": \"int\", \"imageVersion\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"_list_length\": 16}], \"game\": {\"awayCompetitor\": {\"color\": \"str\", \"competitorNum\": \"int\", \"countryId\": \"int\", \"hasSquad\": \"bool\", \"id\": \"int\", \"imageVersion\": \"int\", \"lastMatchesLayoutData\": {\"columns\": [{\"num\": \"int\", \"title\": \"str\", \"_list_length\": 3}]}, \"mainCompetitionId\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"popularityRank\": \"int\", \"recentGames\": [{\"awayCompetitor\": {\"competitorNum\": \"int\", \"countryId\": \"int\", \"hasSquad\": \"bool\", \"id\": \"int\", \"imageVersion\": \"int\", \"isWinner\""
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Competition Details",
                "api_description": "Get competition details.",
                "required_parameters": [
                    {
                        "name": "competition",
                        "type": "NUMBER",
                        "description": "The competition id.",
                        "default": 103
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "withSeasons",
                        "type": "BOOLEAN",
                        "description": "Include seasons?",
                        "default": true
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a baseball enthusiast and want to stay updated on the latest news and breaking updates in the MLB. Can you provide me with real-time news articles, including headlines, summaries, and publication dates? It would be helpful to have the small images of the news sources and the large images of the featured athletes mentioned in the articles.",
        "relevant APIs": [
            [
                "AllScores",
                "Featured Competitions"
            ],
            [
                "AllScores",
                "Athlete Large Image"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 44238
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "rapid-porn",
                "api_name": "/photo",
                "api_description": "This is where the fun starts, replace category with a value to get ;))\nIf you get 500 Internal Server Error,\nPlease cross check your category inserted from the all-tags endpoint.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "",
                        "default": "ass"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "rapid-porn",
                "api_name": "/all-tags",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm writing a blog post about the positive aspects of adult entertainment and I want to include some random adult pictures to support my points. Can you provide me with a random adult picture from your API using the '/photo' endpoint? It would be great if the picture could be customized based on a specific category of my choice.",
        "relevant APIs": [
            [
                "rapid-porn",
                "/photo"
            ],
            [
                "rapid-porn",
                "/all-tags"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 74737
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "[Embedded signing] Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get field and field invite id",
                "api_description": "The endpoint returns field and field invite ids.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "id of the document",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get signing links",
                "api_description": "The endpoint allows to get all existing signing links and IDs of these signing links.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "code": "int"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids for template",
                "api_description": "The endpoint allows to get role ids for a template.",
                "required_parameters": [
                    {
                        "name": "template_id",
                        "type": "string",
                        "description": "ID of the template.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to retrieve the details of a specific document with the ID 'abc123'. Please provide me with the document metadata, fields, signatures, and invites.",
        "relevant APIs": [
            [
                "SignNow",
                "[Embedded signing] Get role ids"
            ],
            [
                "SignNow",
                "Get field and field invite id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 83742
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Watch Playlist",
                "api_description": "Get a watch list of tracks. This watch playlist appears when you press play on a track in YouTube Music.\n\n\nList of watch playlist items. The counterpart key is optional and only appears if a song has a corresponding video counterpart (UI song/video switcher).",
                "required_parameters": [
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "",
                        "default": "1A7Qw88As64"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "lyrics": "NoneType",
                    "playlistId": "str",
                    "related": "str",
                    "tracks": [
                        {
                            "artists": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 1
                                }
                            ],
                            "feedbackTokens": "NoneType",
                            "length": "str",
                            "likeStatus": "NoneType",
                            "thumbnail": [
                                {
                                    "height": "int",
                                    "url": "str",
                                    "width": "int",
                                    "_list_length": 3
                                }
                            ],
                            "title": "str",
                            "videoId": "str",
                            "videoType": "str",
                            "views": "str",
                            "_list_length": 25
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Lyrics",
                "api_description": "Returns lyrics of a song or video.",
                "required_parameters": [
                    {
                        "name": "browse_id",
                        "type": "STRING",
                        "description": "",
                        "default": "MPLYt_ZXONnvFeQpN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "lyrics": "NoneType",
                    "source": "NoneType"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Song Related",
                "api_description": "Gets related content for a song. Equivalent to the content shown in the \u201cRelated\u201d tab of the watch panel.",
                "required_parameters": [
                    {
                        "name": "browse_id",
                        "type": "STRING",
                        "description": "",
                        "default": "MPTRt_ZXONnvFeQpN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "contents": [
                        {
                            "album": {
                                "id": "str",
                                "name": "str"
                            },
                            "artists": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 1
                                }
                            ],
                            "isExplicit": "bool",
                            "thumbnails": [
                                {
                                    "height": "int",
                                    "url": "str",
                                    "width": "int",
                                    "_list_length": 2
                                }
                            ],
                            "title": "str",
                            "videoId": "str",
                            "_list_length": 20
                        }
                    ],
                    "title": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Song",
                "api_description": "Returns metadata and streaming information about a song or video.",
                "required_parameters": [
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "",
                        "default": "RS0FhoKAHvA"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"microformat\": {\"microformatDataRenderer\": {\"androidPackage\": \"str\", \"appName\": \"str\", \"availableCountries\": [\"list of str with length 249\"], \"category\": \"str\", \"description\": \"str\", \"familySafe\": \"bool\", \"iosAppArguments\": \"str\", \"iosAppStoreId\": \"str\", \"linkAlternates\": [{\"hrefUrl\": \"str\", \"_list_length\": 4}], \"noindex\": \"bool\", \"ogType\": \"str\", \"pageOwnerDetails\": {\"externalChannelId\": \"str\", \"name\": \"str\", \"youtubeProfileUrl\": \"str\"}, \"paid\": \"bool\", \"publishDate\": \"str\", \"schemaDotOrgType\": \"str\", \"siteName\": \"str\", \"tags\": [\"list of str with length 41\"], \"thumbnail\": {\"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 1}]}, \"title\": \"str\", \"twitterCardType\": \"str\", \"twitterSiteHandle\": \"str\", \"unlisted\": \"bool\", \"uploadDate\": \"str\", \"urlApplinksAndroid\": \"str\", \"urlApplinksIos\": \"str\", \"urlCanonical\": \"str\", \"urlTwitterAndroid\": \"str\", \"urlTwitterIos\": \"str\", \"videoDetails\": {\"durationIso8601\": \"str\", \"durationSeconds\": \"str\", \"externalVideoId\": \"str\""
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get User Playlists",
                "api_description": "Retrieve a list of playlists for a given user. Call this function again with the returned params to get the full list.",
                "required_parameters": [
                    {
                        "name": "params",
                        "type": "STRING",
                        "description": "",
                        "default": "6gPgAUdxVUJXcFlCQ3BNQkNpUjVkRjl3WVdkbFgzTnVZWEJ6YUc5MFgyMTFjMmxqWDNCaFoyVmZjbVZuYVc5dVlXd1NIMDEzUzBGTWVWcENhM2h2WVhkRFJFbFBZM2h6Vms1M0xWY3paM05wVW1jYVNnQUFaVzRBQVVaU0FBRkdVZ0FCQUVaRmJYVnphV05mWkdWMFlXbHNYMkZ5ZEdsemRBQUJBVU1BQUFFQUFBRUJBRlZETkRSb1ltVlNiME5hVmxaTlZtYzFlakJHWmtsM2R3QUI4dHF6cWdvR1FBRklBRkFx"
                    },
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "",
                        "default": "UC44hbeRoCZVVMVg5z0FfIww"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get User",
                "api_description": "Retrieve a user\u2019s page. A user may own videos or playlists.",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "channelId of the user",
                        "default": "UC44hbeRoCZVVMVg5z0FfIww"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "playlists": {
                        "browseId": "str",
                        "params": "str",
                        "results": [
                            {
                                "description": "str",
                                "playlistId": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "_list_length": 10
                            }
                        ]
                    },
                    "videos": {
                        "browseId": "str",
                        "results": [
                            {
                                "artists": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "_list_length": 1
                                    }
                                ],
                                "playlistId": "NoneType",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "videoId": "str",
                                "views": "str",
                                "_list_length": 10
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Album",
                "api_description": "Get information and tracks of an album.",
                "required_parameters": [
                    {
                        "name": "browse_id",
                        "type": "STRING",
                        "description": "browseId \u2013 browseId of the album, for example returned by **search()**",
                        "default": "MPREb_TXkYGyz3iEg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "id": "str",
                            "name": "str",
                            "_list_length": 2
                        }
                    ],
                    "audioPlaylistId": "str",
                    "duration": "str",
                    "duration_seconds": "int",
                    "thumbnails": [
                        {
                            "height": "int",
                            "url": "str",
                            "width": "int",
                            "_list_length": 4
                        }
                    ],
                    "title": "str",
                    "trackCount": "int",
                    "tracks": [
                        {
                            "album": "str",
                            "artists": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 2
                                }
                            ],
                            "duration": "str",
                            "duration_seconds": "int",
                            "isAvailable": "bool",
                            "isExplicit": "bool",
                            "likeStatus": "str",
                            "thumbnails": "NoneType",
                            "title": "str",
                            "videoId": "str",
                            "videoType": "str",
                            "_list_length": 7
                        }
                    ],
                    "type": "str",
                    "year": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Artist Albums",
                "api_description": "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases",
                "required_parameters": [
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "",
                        "default": "UCedvOgsKFzcK3hA5taf3KoQ"
                    },
                    {
                        "name": "params",
                        "type": "STRING",
                        "description": "\\\\\\\"params\\\\\\\" data obtained by **get_artist()**",
                        "default": "6gPgAUdxVUJXcFlCQ3BNQkNpUjVkRjl3WVdkbFgzTnVZWEJ6YUc5MFgyMTFjMmxqWDNCaFoyVmZjbVZuYVc5dVlXd1NIMDEzUzBGTWVWcENhM2h2WVhkRFJFbFBZM2h6Vms1NlR6QlNVWE5wVW1jYVNnQUFaVzRBQVVaU0FBRkdVZ0FCQUVaRmJYVnphV05mWkdWMFlXbHNYMkZ5ZEdsemRBQUJBVU1BQUFFQUFBRUJBRlZETUhZMlJuTlJTRTVmUVRGR09EWmlSbkpZWDNwb2R3QUI4dHF6cWdvR1FBRklBRkFV"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Artist",
                "api_description": "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "",
                        "default": "UCedvOgsKFzcK3hA5taf3KoQ"
                    }
                ],
                "method": "GET",
                "template_response": "{\"albums\": {\"browseId\": \"str\", \"params\": \"str\", \"results\": [{\"browseId\": \"str\", \"isExplicit\": \"bool\", \"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 2}], \"title\": \"str\", \"year\": \"str\", \"_list_length\": 10}]}, \"channelId\": \"str\", \"description\": \"str\", \"name\": \"str\", \"radioId\": \"NoneType\", \"related\": {\"browseId\": \"NoneType\", \"results\": [{\"browseId\": \"str\", \"subscribers\": \"str\", \"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 2}], \"title\": \"str\", \"_list_length\": 10}]}, \"shuffleId\": \"NoneType\", \"singles\": {\"browseId\": \"str\", \"params\": \"str\", \"results\": [{\"browseId\": \"str\", \"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 2}], \"title\": \"str\", \"year\": \"str\", \"_list_length\": 10}]}, \"songs\": {\"browseId\": \"str\", \"results\": [{\"album\": {\"id\": \"str\", \"name\": \"str\"}, \"artists\": [{\"id\": \"str\", \"name\": \"str\", \"_list_length\": 1}], \"isAvailable\": \"bool\", \"isExplicit\": \"bool\", \"likeStatus\": \"str\", \"thumbnails\": ["
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Trends",
                "api_description": "Get latest charts data from YouTube Music: Top songs, top videos, top artists and top trending videos. Global charts have no Trending section, US charts have an extra Genres section with some Genre charts.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "ISO 3166-1 Alpha-2 country code. Default: ZZ = Global\nhttps://www.iban.com/country-codes",
                        "default": "de"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artists": {
                        "items": [
                            {
                                "browseId": "str",
                                "rank": "str",
                                "subscribers": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "trend": "str",
                                "_list_length": 40
                            }
                        ],
                        "playlist": "NoneType"
                    },
                    "countries": {
                        "options": [
                            "list of str with length 62"
                        ],
                        "selected": {
                            "text": "str"
                        }
                    },
                    "trending": {
                        "items": [
                            {
                                "artists": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "_list_length": 2
                                    }
                                ],
                                "playlistId": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 1
                                    }
                                ],
                                "title": "str",
                                "videoId": "str",
                                "views": "NoneType",
                                "_list_length": 20
                            }
                        ],
                        "playlist": "str"
                    },
                    "videos": {
                        "items": [
                            {
                                "artists": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "_list_length": 3
                                    }
                                ],
                                "playlistId": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "videoId": "str",
                                "views": "str",
                                "_list_length": 40
                            }
                        ],
                        "playlist": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a party and need some upbeat songs to create a playlist. Can you suggest some trending songs and artists? I would like to include the top songs and videos from different genres. Please provide me with a list of trending music.",
        "relevant APIs": [
            [
                "Youtube Music API (Detailed)",
                "Trends"
            ],
            [
                "Youtube Music API (Detailed)",
                "Get Song"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 75338
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are planning a hiking trip and need to know the average temperature and precipitation in the mountains for the past month. Can you provide us with this information? Additionally, we would like to know the number of days with precipitation.",
        "relevant APIs": [
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 32807
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "FastAPI Project",
                "api_name": "Explore",
                "api_description": "explore api",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "another_interest",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "detail": [
                        {
                            "loc": [
                                "list of str with length 2"
                            ],
                            "msg": "str",
                            "type": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "FastAPI Project",
                "api_name": "interests",
                "api_description": "Gets interests",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "ta"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "interest_list": [
                        {
                            "interest": "str",
                            "key_id": "str",
                            "thumbnails": {
                                "hdpi": "str",
                                "xxxhdpi": "str",
                                "xxhdpi": "str",
                                "mdpi": "str",
                                "xhdpi": "str"
                            },
                            "web_icon": "str",
                            "_list_length": 14
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm an aspiring photographer and I'm looking for inspiration for my next photo project. Can you provide me with a list of interests related to photography and visual arts? Additionally, I would like to explore different countries and their iconic landmarks.",
        "relevant APIs": [
            [
                "FastAPI Project",
                "interests"
            ],
            [
                "FastAPI Project",
                "Explore"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 43269
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a flight enthusiast and I want to know the live positioning of an aircraft with the ICAO HEX code 'ABCD'. Can you fetch this information for me? Additionally, provide the total number of known aircraft in the database.",
        "relevant APIs": [
            [
                "FachaAPI",
                "Live Aircraft by ICAO"
            ],
            [
                "FachaAPI",
                "Aircraft Database Stats"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 6618
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Fake Brightcove",
                "api_name": "Ingest Status",
                "api_description": "Ingest Job Status",
                "required_parameters": [
                    {
                        "name": "account_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "job_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "account_id": "int",
                    "error_code": "str",
                    "error_message": "str",
                    "id": "str",
                    "priority": "str",
                    "started_at": "str",
                    "state": "str",
                    "submitted_at": "str",
                    "updated_at": "str",
                    "video_id": "int"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "Fake Brightcove",
                "api_name": "Temp Upload URLs",
                "api_description": "Generate Temp Upload URLs",
                "required_parameters": [
                    {
                        "name": "source_name",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "account_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bucket": "str",
                    "object_key": "str",
                    "access_key_id": "str",
                    "secret_access_key": "str",
                    "session_token": "str",
                    "signed_url": "str",
                    "api_request_url": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "As a video editor, I want to check the progress of my video upload. Can you fetch the ingest job status for the video with the ID '99999' in my account? Also, generate temporary upload URLs for the video from the source 'original' in my account.",
        "relevant APIs": [
            [
                "Fake Brightcove",
                "Ingest Status"
            ],
            [
                "Fake Brightcove",
                "Temp Upload URLs"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 33330
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am interested in purchasing a new home and would like to know the current real estate market in Scottsdale. Can you generate a search token for the city of Scottsdale and retrieve the available homes for sale? Please include the price, location, and photos of the properties.",
        "relevant APIs": [
            [
                "Trulia Real Estate Scraper",
                "Get search token"
            ],
            [
                "Trulia Real Estate Scraper",
                "Search for SALE"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 58949
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Fetch full metadata",
                "api_description": "This endpoint will return the full metadata of the number included on the request.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Country code number",
                "api_description": "Returns the digits between the `+` and the national number when the number is written in international format.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Format number",
                "api_description": "Returns the phone number on standardized formats.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Is fixed?",
                "api_description": "Returns `true` or `false` depending on whether the number is fixed or not.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Is mobile?",
                "api_description": "Returns `true` or `false` depending on whether the number is a mobile line or not.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Is possible?",
                "api_description": "Validates phone number length, returns `true` or `false`.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Is valid?",
                "api_description": "Validates both phone number length and the actual phone number digits, returns `true` or `false`.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Type",
                "api_description": "Returns phone number type (`fixed line`, `mobile`, `toll free`, etc); or `undefined` if the number is invalid or if there are no phone number type regular expressions for this country in metadata.",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Phone Validator API",
                "api_name": "Country ISO 3166",
                "api_description": "Returns the officially assigned ISO alpha-2 country code, on [ISO 3166-1 alpha-2 format](https://en.wikipedia.org/wiki/ISO_3166-2).",
                "required_parameters": [
                    {
                        "name": "phone",
                        "type": "NUMBER",
                        "description": "",
                        "default": "34913353535"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm developing a phone number validation tool for personal use. Can you provide an API that fetches full metadata, formats the numbers, and checks their validity? It would be helpful if the API can also determine if the numbers are fixed or mobile.",
        "relevant APIs": [
            [
                "Phone Validator API",
                "Fetch full metadata"
            ],
            [
                "Phone Validator API",
                "Format number"
            ],
            [
                "Phone Validator API",
                "Is valid?"
            ],
            [
                "Phone Validator API",
                "Is fixed?"
            ],
            [
                "Phone Validator API",
                "Is mobile?"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 83950
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "WNBA API",
                "api_name": "WNBA TEAM INFO",
                "api_description": "This endpoint gets team information for a specific WNBA team.",
                "required_parameters": [
                    {
                        "name": "teamid",
                        "type": "STRING",
                        "description": "Team Id",
                        "default": "18"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"team\": {\"id\": \"str\", \"uid\": \"str\", \"slug\": \"str\", \"location\": \"str\", \"name\": \"str\", \"abbreviation\": \"str\", \"displayName\": \"str\", \"shortDisplayName\": \"str\", \"color\": \"str\", \"alternateColor\": \"str\", \"isActive\": \"bool\", \"logos\": [{\"href\": \"str\", \"width\": \"int\", \"height\": \"int\", \"alt\": \"str\", \"rel\": [\"list of str with length 2\"], \"lastUpdated\": \"str\", \"_list_length\": 2}], \"record\": {\"items\": [{\"description\": \"str\", \"type\": \"str\", \"summary\": \"str\", \"stats\": [{\"name\": \"str\", \"value\": \"int\", \"_list_length\": 19}], \"_list_length\": 3}]}, \"athletes\": [{\"id\": \"str\", \"uid\": \"str\", \"guid\": \"str\", \"type\": \"str\", \"alternateIds\": {\"sdr\": \"str\"}, \"firstName\": \"str\", \"lastName\": \"str\", \"fullName\": \"str\", \"displayName\": \"str\", \"shortName\": \"str\", \"weight\": \"int\", \"displayWeight\": \"str\", \"height\": \"int\", \"displayHeight\": \"str\", \"age\": \"int\", \"dateOfBirth\": \"str\", \"links\": [{\"language\": \"str\", \"rel\": [\"list of str with length 3\"], \"href\": \"str\", \"text\": \"str\", \"shortText\": \"str\", \"isExternal\": \"bool\", \"is"
            },
            {
                "category_name": "Sports",
                "tool_name": "WNBA API",
                "api_name": "WNBA Teams.",
                "api_description": "The endpoint provides you with a list of all WNBA teams.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Sports",
                "tool_name": "WNBA API",
                "api_name": "WNBA Standings",
                "api_description": "The endpoint provides you with the team standings for the WNBA",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "group",
                        "type": "STRING",
                        "description": "acceptable group names: 'league', 'conference'. Default: 'league'",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "sports": [
                        {
                            "id": "str",
                            "uid": "str",
                            "name": "str",
                            "slug": "str",
                            "leagues": [
                                {
                                    "id": "str",
                                    "uid": "str",
                                    "name": "str",
                                    "abbreviation": "str",
                                    "shortName": "str",
                                    "slug": "str",
                                    "teams": [
                                        {
                                            "team": {
                                                "id": "str",
                                                "uid": "str",
                                                "slug": "str",
                                                "abbreviation": "str",
                                                "displayName": "str",
                                                "shortDisplayName": "str",
                                                "name": "str",
                                                "nickname": "str",
                                                "location": "str",
                                                "color": "str",
                                                "alternateColor": "str",
                                                "isActive": "bool",
                                                "isAllStar": "bool",
                                                "logos": [
                                                    {
                                                        "href": "str",
                                                        "alt": "str",
                                                        "rel": [
                                                            "list of str with length 2"
                                                        ],
                                                        "width": "int",
                                                        "height": "int",
                                                        "_list_length": 2
                                                    }
                                                ],
                                                "links": [
                                                    {
                                                        "language": "str",
                                                        "rel": [
                                                            "list of str with length 3"
                                                        ],
                                                        "href": "str",
                                                        "text": "str",
                                                        "shortText": "str",
                                                        "isExternal": "bool",
                                                        "isPremium": "bool",
                                                        "isHidden": "bool",
                                                        "_list_length": 5
                                                    }
                                                ]
                                            },
                                            "_list_length": 12
                                        }
                                    ],
                                    "year": "int",
                                    "season": {
                                        "year": "int",
                                        "displayName": "str"
                                    },
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "WNBA API",
                "api_name": "WNBA ScoreBoard",
                "api_description": "This endpoint provides you with the WNBA scoreboard data for a specified date if available.",
                "required_parameters": [
                    {
                        "name": "month",
                        "type": "STRING",
                        "description": "",
                        "default": "04"
                    },
                    {
                        "name": "day",
                        "type": "STRING",
                        "description": "",
                        "default": "04"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "02"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "leagues": [
                        {
                            "id": "str",
                            "uid": "str",
                            "name": "str",
                            "abbreviation": "str",
                            "slug": "str",
                            "season": {
                                "year": "int",
                                "startDate": "str",
                                "endDate": "str",
                                "displayName": "str",
                                "type": {
                                    "id": "str",
                                    "type": "int",
                                    "name": "str",
                                    "abbreviation": "str"
                                }
                            },
                            "logos": [
                                {
                                    "href": "str",
                                    "width": "int",
                                    "height": "int",
                                    "alt": "str",
                                    "rel": [
                                        "list of str with length 2"
                                    ],
                                    "lastUpdated": "str",
                                    "_list_length": 1
                                }
                            ],
                            "calendarType": "str",
                            "calendarIsWhitelist": "bool",
                            "calendarStartDate": "str",
                            "calendarEndDate": "str",
                            "calendar": [
                                "list of str with length 97"
                            ],
                            "_list_length": 1
                        }
                    ],
                    "events": "empty list"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "WNBA API",
                "api_name": "WNBA Schedule",
                "api_description": "This endpoint provides you with the WNBA schedule data for a specified date as long as it is available.",
                "required_parameters": [
                    {
                        "name": "month",
                        "type": "STRING",
                        "description": "",
                        "default": "05"
                    },
                    {
                        "name": "day",
                        "type": "STRING",
                        "description": "",
                        "default": "05"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"20230616\": {\"calendar\": [\"list of str with length 100\"], \"leagueName\": \"str\", \"calendartype\": \"str\", \"leagues\": \"empty list\", \"games\": [{\"date\": \"str\", \"uid\": \"str\", \"name\": \"str\", \"competitions\": [{\"date\": \"str\", \"venue\": {\"address\": {\"city\": \"str\", \"state\": \"str\"}, \"fullName\": \"str\", \"indoor\": \"bool\", \"id\": \"str\", \"capacity\": \"int\"}, \"conferenceCompetition\": \"bool\", \"notes\": \"empty list\", \"tickets\": [{\"summary\": \"str\", \"numberAvailable\": \"int\", \"links\": [{\"href\": \"str\", \"_list_length\": 2}], \"_list_length\": 1}], \"timeValid\": \"bool\", \"geoBroadcasts\": [{\"market\": {\"id\": \"str\", \"type\": \"str\"}, \"media\": {\"shortName\": \"str\"}, \"type\": {\"id\": \"str\", \"shortName\": \"str\"}, \"lang\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"format\": {\"regulation\": {\"periods\": \"int\"}}, \"broadcasts\": [{\"market\": \"str\", \"names\": [\"list of str with length 1\"], \"_list_length\": 1}], \"playByPlayAvailable\": \"bool\", \"type\": {\"id\": \"str\", \"abbreviation\": \"str\"}, \"uid\": \"str\", \"competitors\": [{\"uid\": \"str\", \"homeAway\""
            },
            {
                "category_name": "Sports",
                "tool_name": "WNBA API",
                "api_name": "WNBA Summary",
                "api_description": "This endpoint gets the WNBA game summary data for a specific game.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "401244185"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "WNBA API",
                "api_name": "WNBA Box Score",
                "api_description": "This endpoint returns the WNBA game box score data for a specified game.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Game id",
                        "default": "401244185"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "WNBA API",
                "api_name": "WNBA Play By Play",
                "api_description": "This endpoint provides the NBA game play-by-play data for a specific game.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Game id",
                        "default": "401244185"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a basketball enthusiast and I'm interested in the WNBA. Can you give me the team info for the team with the ID 18? Also, I'd like to know the schedule for May 5, 2022. Additionally, I'm curious about the box score and play-by-play data for a specific game. Please provide me with the box score and play-by-play data for the game with the ID 401244185.",
        "relevant APIs": [
            [
                "WNBA API",
                "WNBA TEAM INFO"
            ],
            [
                "WNBA API",
                "WNBA Schedule"
            ],
            [
                "WNBA API",
                "WNBA Box Score"
            ],
            [
                "WNBA API",
                "WNBA Play By Play"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 60837
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is interested in partnering with a business on WhatsApp. Can you help us determine if the phone number +1 555-555-5555 is registered on WhatsApp? Additionally, we would like to fetch the profile picture of this number in low resolution as a base64 encoded file. Furthermore, could you provide us with the business information for this number, including the description, website, email, business hours, address, and category if it is a WhatsApp for Business account?",
        "relevant APIs": [
            [
                "Whatsapp Scraper",
                "Is registered on whatsapp?"
            ],
            [
                "Whatsapp Scraper",
                "Fetch business info"
            ],
            [
                "Whatsapp Scraper",
                "Fetch profile picture"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 31402
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to check the availability of the item in the order with the ID 7 using the getInventory API. After that, I want to retrieve the details of the user with the username 'janedoe' using the getUserByName API.",
        "relevant APIs": [
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 40436
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "cat-facts",
                "api_name": "Get all facts about cat",
                "api_description": "This endpoint returns all available fact about cats in our database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "AllFacts": [
                        "list of str with length 279"
                    ]
                }
            },
            {
                "category_name": "Other",
                "tool_name": "cat-facts",
                "api_name": "Get a random fact about cats",
                "api_description": "This endpoint returns a random fact about cats",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Fact": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is a cat lover and I want to surprise her with an interesting cat fact every day for a month. Can you provide me with a random cat fact and a list of all cat facts? This will make her days even more delightful.",
        "relevant APIs": [
            [
                "cat-facts",
                "Get all facts about cat"
            ],
            [
                "cat-facts",
                "Get a random fact about cats"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 32001
    },
    {
        "api_list": [
            {
                "category_name": "Travel",
                "tool_name": "BART",
                "api_name": "Schedule information",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "cmd",
                        "type": "STRING",
                        "description": "See more examples at http://api.bart.gov/docs/overview/examples.aspx",
                        "default": "arrive"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "orig",
                        "type": "STRING",
                        "description": "",
                        "default": "24th"
                    },
                    {
                        "name": "dest",
                        "type": "STRING",
                        "description": "",
                        "default": "rock"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "BART",
                "api_name": "Advisory information",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "cmd",
                        "type": "STRING",
                        "description": "See more examples http://api.bart.gov/docs/overview/examples.aspx",
                        "default": "bsa"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "orig",
                        "type": "STRING",
                        "description": "Optional station filter. Uses 4 character BART station abbreviations (http://api.bart.gov/docs/overview/abbrev.aspx)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "BART",
                "api_name": "Route information",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "cmd",
                        "type": "STRING",
                        "description": "See more examples http://api.bart.gov/docs/overview/examples.aspx",
                        "default": "routes"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "BART",
                "api_name": "Station information",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "cmd",
                        "type": "STRING",
                        "description": "See more examples at http://api.bart.gov/docs/overview/examples.aspx",
                        "default": "stns"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "BART",
                "api_name": "Real-time information",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "cmd",
                        "type": "STRING",
                        "description": "See more examples http://api.bart.gov/docs/overview/examples.aspx",
                        "default": "etd"
                    },
                    {
                        "name": "orig",
                        "type": "STRING",
                        "description": "Specifies the station. Stations are referenced by their abbreviations (http://api.bart.gov/docs/overview/abbrev.aspx). You can also use 'ALL' to get all of the current ETD's.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Can you give me details about the stations in the BART network? I also need information about the routes available from the 24th Street station.",
        "relevant APIs": [
            [
                "BART",
                "Station information"
            ],
            [
                "BART",
                "Route information"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 20704
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "[Embedded signing] Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get field and field invite id",
                "api_description": "The endpoint returns field and field invite ids.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "id of the document",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get signing links",
                "api_description": "The endpoint allows to get all existing signing links and IDs of these signing links.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "code": "int"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids for template",
                "api_description": "The endpoint allows to get role ids for a template.",
                "required_parameters": [
                    {
                        "name": "template_id",
                        "type": "string",
                        "description": "ID of the template.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to retrieve the metadata, signatures, seals, texts, and checks for a document with the ID 'cba789'. Can you assist me in obtaining this information? Also, I want to get the role IDs and field invite IDs.",
        "relevant APIs": [
            [
                "SignNow",
                "[Embedded signing] Get role ids"
            ],
            [
                "SignNow",
                "Get field and field invite id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 58096
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get all employees' payment cards.",
                "api_description": "This endpoint gets all the available records in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": [
                        {
                            "cardTypeCode": "str",
                            "cardTypeFullName": "str",
                            "issuingBank": "str",
                            "cardNumber": "int",
                            "cardHolderName": "str",
                            "ccv_ccv2": "int",
                            "issueDate": "str",
                            "expiryDate": "str",
                            "billingDate": "int",
                            "cardPIN": "int",
                            "creditLimit": "int",
                            "cardHolderID": "int",
                            "_list_length": 952
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get a specific employee by employee ID.",
                "api_description": "This endpoint gets one record by a specific employee ID that is unique for each employee in the employees table, up to 900 employees with their information.\nFor example:  employee ID , first name, email, and  etc...",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "715505"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": {
                        "empID": "int",
                        "namePrefix": "str",
                        "firstName": "str",
                        "middleInitial": "str",
                        "lastName": "str",
                        "gender": "str",
                        "email": "str",
                        "fatherName": "str",
                        "motherName": "str",
                        "dateOfBirth": "str",
                        "timeOfBirth": "str",
                        "ageInYears": "float",
                        "weightInKgs": "int",
                        "dateOfJoining": "str",
                        "yearOfJoining": "int",
                        "monthOfJoining": "int",
                        "monthNameOfJoining": "str",
                        "shortMonth": "str",
                        "dayOfJoining": "int",
                        "DOWofJoining": "str",
                        "shortDOW": "str",
                        "ageInCompany_Years": "float",
                        "salary": "int",
                        "lastPercentHike": "str",
                        "ssn": "str",
                        "phoneNumber": "str",
                        "placeName": "str",
                        "county": "str",
                        "city": "str",
                        "state": "str",
                        "zip": "int",
                        "region": "str",
                        "username": "str",
                        "password": "str",
                        "bankCardNumber": "int"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get a specific payment card by card number.",
                "api_description": "This endpoint gets one record by a specific card number that is unique for each card in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "30965048563652"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": {
                        "cardTypeCode": "str",
                        "cardTypeFullName": "str",
                        "issuingBank": "str",
                        "cardNumber": "int",
                        "cardHolderName": "str",
                        "ccv_ccv2": "int",
                        "issueDate": "str",
                        "expiryDate": "str",
                        "billingDate": "int",
                        "cardPIN": "int",
                        "creditLimit": "int",
                        "cardHolderID": "int"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Paginate through campany employees information.",
                "api_description": "This endpoint lets you paginate through all the available records in the employees' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...",
                "required_parameters": [
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "end",
                        "type": "NUMBER",
                        "description": "",
                        "default": "25"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str",
                        "start": "int",
                        "end": "int",
                        "previousPage": "NoneType",
                        "currentPage": "int",
                        "nextPage": "int",
                        "totalPages": "int"
                    },
                    "data": [
                        {
                            "empID": "int",
                            "namePrefix": "str",
                            "firstName": "str",
                            "middleInitial": "str",
                            "lastName": "str",
                            "gender": "str",
                            "email": "str",
                            "fatherName": "str",
                            "motherName": "str",
                            "dateOfBirth": "str",
                            "timeOfBirth": "str",
                            "ageInYears": "float",
                            "weightInKgs": "int",
                            "dateOfJoining": "str",
                            "yearOfJoining": "int",
                            "monthOfJoining": "int",
                            "monthNameOfJoining": "str",
                            "shortMonth": "str",
                            "dayOfJoining": "int",
                            "DOWofJoining": "str",
                            "shortDOW": "str",
                            "ageInCompany_Years": "float",
                            "salary": "int",
                            "lastPercentHike": "str",
                            "ssn": "str",
                            "phoneNumber": "str",
                            "placeName": "str",
                            "county": "str",
                            "city": "str",
                            "state": "str",
                            "zip": "int",
                            "region": "str",
                            "username": "str",
                            "password": "str",
                            "bankCardNumber": "int",
                            "_list_length": 25
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Paginate through  employees payment cards infomation.",
                "api_description": "This endpoint lets you paginate through all the available records in the bank cards' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 bank cards with their information.\nFor example:  card number, holder name,  card type, and etc...",
                "required_parameters": [
                    {
                        "name": "end",
                        "type": "NUMBER",
                        "description": "",
                        "default": "25"
                    },
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str",
                        "start": "int",
                        "end": "int",
                        "previousPage": "NoneType",
                        "currentPage": "int",
                        "nextPage": "int",
                        "totalPages": "int"
                    },
                    "data": [
                        {
                            "cardTypeCode": "str",
                            "cardTypeFullName": "str",
                            "issuingBank": "str",
                            "cardNumber": "int",
                            "cardHolderName": "str",
                            "ccv_ccv2": "int",
                            "issueDate": "str",
                            "expiryDate": "str",
                            "billingDate": "int",
                            "cardPIN": "int",
                            "creditLimit": "int",
                            "cardHolderID": "int",
                            "_list_length": 25
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get employee information associated with a specific payment card.",
                "api_description": "This endpoint gets employee record associated with a specific card number that is unique for each card, and displays  the employee information in the response.\nFor example:  employee ID , first name, and  etc...",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "30965048563652"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": {
                        "empID": "int",
                        "namePrefix": "str",
                        "firstName": "str",
                        "middleInitial": "str",
                        "lastName": "str",
                        "gender": "str",
                        "email": "str",
                        "fatherName": "str",
                        "motherName": "str",
                        "dateOfBirth": "str",
                        "timeOfBirth": "str",
                        "ageInYears": "float",
                        "weightInKgs": "int",
                        "dateOfJoining": "str",
                        "yearOfJoining": "int",
                        "monthOfJoining": "int",
                        "monthNameOfJoining": "str",
                        "shortMonth": "str",
                        "dayOfJoining": "int",
                        "DOWofJoining": "str",
                        "shortDOW": "str",
                        "ageInCompany_Years": "float",
                        "salary": "int",
                        "lastPercentHike": "str",
                        "ssn": "str",
                        "phoneNumber": "str",
                        "placeName": "str",
                        "county": "str",
                        "city": "str",
                        "state": "str",
                        "zip": "int",
                        "region": "str",
                        "username": "str",
                        "password": "str",
                        "bankCardNumber": "int"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get payment cards information associated with a specific employee.",
                "api_description": "This endpoint gets all bank payment cards records associated with a specific employee ID that is unique for each employee and displays all cards information in the response.\nFor example:  card number, expiry date, and etc...",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "715505"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": {
                        "cardTypeCode": "str",
                        "cardTypeFullName": "str",
                        "issuingBank": "str",
                        "cardNumber": "int",
                        "cardHolderName": "str",
                        "ccv_ccv2": "int",
                        "issueDate": "str",
                        "expiryDate": "str",
                        "billingDate": "int",
                        "cardPIN": "int",
                        "creditLimit": "int",
                        "cardHolderID": "int"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get all campany employees information.",
                "api_description": "This endpoint gets all the available records in the employees table, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": [
                        {
                            "empID": "int",
                            "namePrefix": "str",
                            "firstName": "str",
                            "middleInitial": "str",
                            "lastName": "str",
                            "gender": "str",
                            "email": "str",
                            "fatherName": "str",
                            "motherName": "str",
                            "dateOfBirth": "str",
                            "timeOfBirth": "str",
                            "ageInYears": "float",
                            "weightInKgs": "int",
                            "dateOfJoining": "str",
                            "yearOfJoining": "int",
                            "monthOfJoining": "int",
                            "monthNameOfJoining": "str",
                            "shortMonth": "str",
                            "dayOfJoining": "int",
                            "DOWofJoining": "str",
                            "shortDOW": "str",
                            "ageInCompany_Years": "float",
                            "salary": "int",
                            "lastPercentHike": "str",
                            "ssn": "str",
                            "phoneNumber": "str",
                            "placeName": "str",
                            "county": "str",
                            "city": "str",
                            "state": "str",
                            "zip": "int",
                            "region": "str",
                            "username": "str",
                            "password": "str",
                            "bankCardNumber": "int",
                            "_list_length": 953
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to retrieve the bank card details for a specific employee with ID 715505. Additionally, I want to know the employee's email, date of joining, and salary. Can you provide me with this information?",
        "relevant APIs": [
            [
                "Human Resources API",
                "Get a specific employee by employee ID."
            ],
            [
                "Human Resources API",
                "Get payment cards information associated with a specific employee."
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 42351
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Passbook",
                "api_name": "Download Pass",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "passtypeidentifier",
                        "type": "STRING",
                        "description": "",
                        "default": "pass.example.id1"
                    },
                    {
                        "name": "serialnumber",
                        "type": "STRING",
                        "description": "",
                        "default": "27f145d2-5713-4a8d-af64-b269f95ade3b"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Passbook",
                "api_name": "List Passes",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm attending a conference and I need to have my pass ready on my phone. Can you help me download a pass with the passTypeIdentifier 'pass.example.id1' and the serialNumber '27f145d2-5713-4a8d-af64-b269f95ade3b'? It would be great if you could also provide me with a list of all available passes.",
        "relevant APIs": [
            [
                "Passbook",
                "List Passes"
            ],
            [
                "Passbook",
                "Download Pass"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 33112
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "LeagueOverallTopPlayers",
                "api_description": "Get the overall top players for a specific cricket league in a given season, including player statistics and other relevant information.",
                "required_parameters": [
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The ID of the cricket tournament for which you want to retrieve the overall top players.",
                        "default": 11165
                    },
                    {
                        "name": "seasonId",
                        "type": "NUMBER",
                        "description": "The ID of the cricket season for which you want to retrieve the overall top players.",
                        "default": 41321
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"topPlayers\": {\"battingAverage\": [{\"playedEnough\": \"bool\", \"player\": {\"cricketPlayerInfo\": {}, \"id\": \"int\", \"name\": \"str\", \"position\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"userCount\": \"int\"}, \"statistics\": {\"appearances\": \"int\", \"battingAverage\": \"float\", \"battingInnings\": \"int\", \"battingMatches\": \"int\", \"id\": \"int\", \"innings\": \"int\", \"matches\": \"int\", \"runsScored\": \"int\", \"type\": \"str\"}, \"team\": {\"id\": \"int\", \"name\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"_list_length\": 15}], \"battingStrikeRate\": [{\"playedEnough\": \"bool\", \"player\": {\"cricketPlayerInfo\": {}, \"id\": \"int\", \"name\": \"str\", \"position\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"userCount\": \"int\"}, \"statistics\": {\"appearances\": \"int\", \"battingInnings\": \"int\", \"battingMatches\": \"int\", \"battingStrikeRate\": \"int\", \"id\": \"int\", \"innings\": \"int\", \"matches\": \"int\""
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "LeagueTotalTeamEvents",
                "api_description": "Get the total team events for a specific Cricket league for a given season by providing its unique tournament ID and season ID.",
                "required_parameters": [
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The unique tournament ID for which you want to retrieve the league's total team events.",
                        "default": 11184
                    },
                    {
                        "name": "seasonId",
                        "type": "NUMBER",
                        "description": "The season ID for which you want to retrieve the league's total team events.",
                        "default": 16828
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"tournamentTeamEvents\": {\"65888\": {\"187575\": [{\"awayScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"inningDeclare\": \"int\", \"overs\": \"int\", \"runRate\": \"float\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"awayTeam\": {\"disabled\": \"bool\", \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"customId\": \"str\", \"finalResultOnly\": \"bool\", \"homeScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"inningDeclare\": \"int\", \"overs\": \"int\", \"runRate\": \"float\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"homeTeam\": {\"disabled\": \"bool\", \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \""
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "PreMatchForm",
                "api_description": "Get pre-match form information for a specific cricket match.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the cricket match for which you want to get pre-match form information.",
                        "default": 10534787
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "awayTeam": {
                        "form": [
                            "list of str with length 5"
                        ],
                        "position": "int",
                        "value": "str"
                    },
                    "homeTeam": {
                        "form": [
                            "list of str with length 5"
                        ],
                        "position": "int",
                        "value": "str"
                    },
                    "label": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "get-player-placeholder",
                "api_description": "Get the player placeholder image in PNG format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "Categories",
                "api_description": "Get a list of all cricket categories.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "categories": [
                        {
                            "flag": "str",
                            "id": "int",
                            "name": "str",
                            "priority": "int",
                            "slug": "str",
                            "sport": {
                                "id": "int",
                                "name": "str",
                                "slug": "str"
                            },
                            "_list_length": 15
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "LeagueNextMatches",
                "api_description": "Get a list of next matches for a cricket league using the tournament ID, season ID, and page number.",
                "required_parameters": [
                    {
                        "name": "seasonId",
                        "type": "NUMBER",
                        "description": "The season ID for which you want to retrieve the league's next matches.",
                        "default": 44608
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Zero-based page number.",
                        "default": ""
                    },
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The unique tournament ID for which you want to retrieve the league's next matches.",
                        "default": 19048
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "TeamLastMatches",
                "api_description": "Get the last matches for a cricket team by specifying the team ID and the page number (starting from 0).",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number (starting from 0) of the last matches you want to retrieve.",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the cricket team for which you want to retrieve the last matches.",
                        "default": 187760
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "MatchDetails",
                "api_description": "Get detailed information for a specific cricket match by providing the match ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the cricket match for which you want to get the details.",
                        "default": 10534787
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"event\": {\"awayScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"overs\": \"float\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"awayTeam\": {\"country\": {}, \"fullName\": \"str\", \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"bet365ExcludedCountryCodes\": [\"list of str with length 6\"], \"changes\": {\"changeTimestamp\": \"int\", \"changes\": [\"list of str with length 6\"]}, \"coverage\": \"int\", \"cricketBallProperties\": [\"list of str with length 19\"], \"crowdsourcingDataDisplayEnabled\": \"bool\", \"currentBattingTeamId\": \"int\", \"customId\": \"str\", \"endTimestamp\": \"int\", \"fanRatingEvent\": \"bool\", \"finalResultOnly\": \"bool\", \"hasBet365LiveStream\": \"bool\", \"hasGlobalHighlights\": \"bool\", \"homeScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\":"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "ManagerPlaceholderImage",
                "api_description": "Get the manager placeholder image in PNG format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "MatchSchedules",
                "api_description": "This operation returns the cricket match schedules for the given date, including match timings, teams, and other relevant information.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "The year for which you want to retrieve the cricket match schedules (e.g., 2022).",
                        "default": 2022
                    },
                    {
                        "name": "day",
                        "type": "NUMBER",
                        "description": "The day of the month for which you want to retrieve the cricket match schedules (1-31).",
                        "default": 14
                    },
                    {
                        "name": "month",
                        "type": "NUMBER",
                        "description": "The month for which you want to retrieve the cricket match schedules (1-12).",
                        "default": 8
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"events\": [{\"awayScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"overs\": \"float\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"awayTeam\": {\"country\": {}, \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"changes\": {\"changeTimestamp\": \"int\", \"changes\": [\"list of str with length 1\"]}, \"coverage\": \"int\", \"crowdsourcingDataDisplayEnabled\": \"bool\", \"customId\": \"str\", \"endTimestamp\": \"int\", \"finalResultOnly\": \"bool\", \"hasGlobalHighlights\": \"bool\", \"homeScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"overs\": \"int\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"homeTeam\": {\"country\": {}, \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"te"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning to attend a cricket match next month. Can you provide me with the match schedules for August 2022? Along with that, I would like to know the overall top players in the tournament and their statistics.",
        "relevant APIs": [
            [
                "CricketAPI2",
                "MatchSchedules"
            ],
            [
                "CricketAPI2",
                "LeagueOverallTopPlayers"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 77855
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "Reqres - dont change!",
                "api_name": "Users",
                "api_description": "Users",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "per_page": "int",
                    "total": "int",
                    "total_pages": "int",
                    "data": [
                        {
                            "id": "int",
                            "email": "str",
                            "first_name": "str",
                            "last_name": "str",
                            "avatar": "str",
                            "_list_length": 6
                        }
                    ],
                    "support": {
                        "url": "str",
                        "text": "str"
                    }
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "Reqres - dont change!",
                "api_name": "User by id",
                "api_description": "User by id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "array[]",
                        "type": "ARRAY",
                        "description": "",
                        "default": "[\"asd\", \"dsa\"]"
                    },
                    {
                        "name": "array[]",
                        "type": "ARRAY",
                        "description": "",
                        "default": "2"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "int",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "avatar": "str"
                    },
                    "support": {
                        "url": "str",
                        "text": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "For my advertising project, I need to fetch user data from the Reqres API. Retrieve the list of users and their details, such as email, first name, last name, and avatar. Additionally, retrieve the user with ID 1 and display their email, first name, last name, and avatar. Ensure you include the support URL and text in the response.",
        "relevant APIs": [
            [
                "Reqres - dont change!",
                "Users"
            ],
            [
                "Reqres - dont change!",
                "User by id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 21596
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to gather comprehensive information about the domain 'exampledomain.com'. Can you provide me with its availability status and complete details?",
        "relevant APIs": [
            [
                "Domain Info",
                "Full information"
            ],
            [
                "Domain Info",
                "Check domain info"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 76957
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I would like to log in to my account using the username 'johnsmith' and password 'password123'. After logging in, I want to get the details of my user profile.",
        "relevant APIs": [
            [
                "Swagger PetStore",
                "loginUser"
            ],
            [
                "Swagger PetStore",
                "getUserByName"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 60484
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to surprise my family with a weekend getaway. Can you suggest a nice destination within a 200-mile radius of our current location? Please provide driving directions from our location to the suggested destination.",
        "relevant APIs": [
            [
                "Waze",
                "Autocomplete"
            ],
            [
                "Waze",
                "Driving Directions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 74098
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideoFromUser",
                "api_description": "Get all videos credited to a user (both uploaded and appears).",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosByTag",
                "api_description": "Get a list of videos that have the specified tag.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "tag",
                        "type": "STRING",
                        "description": "The tag to get",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Page number to show",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": "most_commented"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllChannels",
                "api_description": "Get a list of all public channels.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: newest, oldest, alphabetical, most_videos, most_subscribed, or most_recently_updated.",
                        "default": "most_recently_updated"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedTags",
                "api_description": "Get a list of related tags for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The Name of category",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosComment",
                "api_description": "Get a list of the comments on a video.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "The ID of the video.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a film student doing research on videos with the tag 'animation'. Can you provide me with videos that have this tag? I would like to see the most commented videos first.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetVideosByTag"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 77514
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the places by latitude and longitude",
                "api_description": "Get the places by latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "group",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the timezones",
                "api_description": "Get the timezones.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "timezone": "str",
                    "countries": [
                        {
                            "id": "str",
                            "name": "str",
                            "_list_length": 11
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the continents",
                "api_description": "Get the continents.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the countries",
                "api_description": "Get the countries.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "alpha3",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "alpha2",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "alpha2": "str",
                    "alpha3": "str",
                    "number": "int",
                    "countryCode": "str",
                    "location": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the states",
                "api_description": "Get the states.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "abbreviation",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "abbreviation": "str",
                    "country": {
                        "id": "str",
                        "name": "str",
                        "alpha2": "str",
                        "alpha3": "str",
                        "number": "int",
                        "countryCode": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the cities",
                "api_description": "Get the cities.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateName",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateAbbreviation",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "stateId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "state": {
                        "id": "str",
                        "name": "str",
                        "abbreviation": "str"
                    },
                    "country": {
                        "id": "str",
                        "name": "str",
                        "alpha2": "str",
                        "alpha3": "str",
                        "number": "int",
                        "countryCode": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the addresses by IP",
                "api_description": "Get the addresses by IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "",
                        "default": "54.72.54.234"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "postalCode": "str",
                    "street": "str",
                    "neighborhood": "str",
                    "city": {
                        "name": "str"
                    },
                    "state": {},
                    "country": {
                        "id": "str",
                        "name": "str",
                        "alpha2": "str",
                        "alpha3": "str"
                    },
                    "coordinates": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the addresses by latitude and longitude",
                "api_description": "Get the addresses by latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "",
                        "default": "51.5007292"
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "",
                        "default": "-0.1268141"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "postalCode": "str",
                    "street": "str",
                    "neighborhood": "str",
                    "city": {
                        "name": "str"
                    },
                    "state": {
                        "id": "str",
                        "name": "str",
                        "abbreviation": "str"
                    },
                    "country": {
                        "id": "str",
                        "name": "str",
                        "alpha2": "str",
                        "alpha3": "str"
                    },
                    "coordinates": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Location",
                "api_name": "Get the addresses by postal code",
                "api_description": "Get the addresses by postal code.",
                "required_parameters": [
                    {
                        "name": "postalCode",
                        "type": "STRING",
                        "description": "",
                        "default": "SW1A 2JR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "countryAlpha2",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "countryAlpha3",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "countryName",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "countryId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateName",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "cityId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "stateAbbreviation",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "cityName",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "city": {},
                    "state": {
                        "name": "str"
                    },
                    "country": {
                        "name": "str",
                        "alpha3": "str"
                    },
                    "coordinates": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "As a travel blogger, I want to write an article about the continents and their unique features. Can you provide me with a list of continents and some interesting facts about each? Additionally, suggest some popular cities in each continent.",
        "relevant APIs": [
            [
                "Location",
                "Get the continents"
            ],
            [
                "Location",
                "Get the countries"
            ],
            [
                "Location",
                "Get the cities"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 5810
    }
]