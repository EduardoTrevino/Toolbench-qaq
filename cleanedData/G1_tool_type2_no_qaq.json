[
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Autocomplete places",
                "api_description": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                        "default": "0"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                        "default": "US,CA"
                    },
                    {
                        "name": "adminDivision1",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                        "default": ""
                    },
                    {
                        "name": "accuracyRadiusKm",
                        "type": "NUMBER",
                        "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "adminDivision2",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                        "default": ""
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to find places which name starts with this prefix.",
                        "default": "Sea"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                        "default": "CITY"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Search places",
                "api_description": "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filters places by \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                        "default": "CITY"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                        "default": "0"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                        "default": "US,CA"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                        "default": "10"
                    },
                    {
                        "name": "adminDivision1",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                        "default": ""
                    },
                    {
                        "name": "adminDivision2",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                        "default": ""
                    },
                    {
                        "name": "accuracyRadiusKm",
                        "type": "NUMBER",
                        "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to find places with a similar name.",
                        "default": "New York"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by IP",
                "api_description": "Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "IP Address (v4 and v6 are supported).",
                        "default": "200.194.51.97"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by my IP",
                "api_description": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by ID",
                "api_description": "Returns a single Place identified by an ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the Place.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by Geoname ID",
                "api_description": "Returns a single Place identified by a Geoname ID.",
                "required_parameters": [
                    {
                        "name": "geonameId",
                        "type": "NUMBER",
                        "description": "Unique identificator given by Geonames",
                        "default": "5391959"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            }
        ],
        "query": "I'm planning a solo trip and I want to visit cities with a vibrant nightlife. Can you recommend cities with a lively nightlife scene? It would be great if you could provide the localized names of these cities.",
        "relevant APIs": [
            [
                "Spott",
                "Search places"
            ],
            [
                "Spott",
                "Autocomplete places"
            ]
        ],
        "query_id": 73151
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Autocomplete places",
                "api_description": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                        "default": "0"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                        "default": "US,CA"
                    },
                    {
                        "name": "adminDivision1",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                        "default": ""
                    },
                    {
                        "name": "accuracyRadiusKm",
                        "type": "NUMBER",
                        "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "adminDivision2",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                        "default": ""
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to find places which name starts with this prefix.",
                        "default": "Sea"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                        "default": "CITY"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Search places",
                "api_description": "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filters places by \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                        "default": "CITY"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                        "default": "0"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                        "default": "US,CA"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                        "default": "10"
                    },
                    {
                        "name": "adminDivision1",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                        "default": ""
                    },
                    {
                        "name": "adminDivision2",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                        "default": ""
                    },
                    {
                        "name": "accuracyRadiusKm",
                        "type": "NUMBER",
                        "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to find places with a similar name.",
                        "default": "New York"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by IP",
                "api_description": "Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "IP Address (v4 and v6 are supported).",
                        "default": "200.194.51.97"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by my IP",
                "api_description": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by ID",
                "api_description": "Returns a single Place identified by an ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the Place.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by Geoname ID",
                "api_description": "Returns a single Place identified by a Geoname ID.",
                "required_parameters": [
                    {
                        "name": "geonameId",
                        "type": "NUMBER",
                        "description": "Unique identificator given by Geonames",
                        "default": "5391959"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            }
        ],
        "query": "I am planning a solo trip and I want to visit some peaceful cities. Can you recommend some calm and serene cities around the world? I would like to know the names of these cities, their population, and the country they are located in. It would be great if you can also provide some images of these cities.",
        "relevant APIs": [
            [
                "Spott",
                "Search places"
            ],
            [
                "Spott",
                "Get place by ID"
            ],
            [
                "Spott",
                "Autocomplete places"
            ]
        ],
        "query_id": 5671
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get extra character details",
                "api_description": "Get extra details about a character. (Currently being updated with more data)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get show facts & rotten tomato scores",
                "api_description": "You can find show data including season by season rotten tomato scores by hitting the home route.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get character by id",
                "api_description": "Providing the character id, you will get that specific character in the response. You can find a character id by hitting `/characters` and grabbing an id from there.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get recurring characters",
                "api_description": "This endpoint gets the recurring characters within the show.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get main characters",
                "api_description": "This route will provide you with the show's main characters",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get all characters",
                "api_description": "This will provide the show's characters with a tiny bit of data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to learn more about the characters in the TV show New Girl. Can you provide me with detailed information about the main characters as well as the recurring characters?",
        "relevant APIs": [
            [
                "New Girl",
                "Get main characters"
            ],
            [
                "New Girl",
                "Get recurring characters"
            ]
        ],
        "query_id": 49173
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "TEST",
                "api_name": "TEST",
                "api_description": "Testing",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to test the functionality of the TEST tool for my company's database. Can you provide me with the necessary steps to execute the testing process? Also, please provide me with any additional information or requirements for this test.",
        "relevant APIs": [
            [
                "TEST",
                "TEST"
            ]
        ],
        "query_id": 85759
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Dividend",
                "api_description": "Contains the annual dividends (split-adjusted without special dividend)\n\nAPI_Dividend\nSyntax:\n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "1962-01-01"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "API_Dividend",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-31"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "year": "str",
                    "dividend": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Index_Isin",
                "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nisin = search shareuid with ISIN",
                "required_parameters": [
                    {
                        "name": "API_Index",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "isin",
                        "type": "STRING",
                        "description": "",
                        "default": "US4592001014"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "shareuid": "str",
                    "isin": "str",
                    "wkn": "str",
                    "currency": "str",
                    "shortname": "str",
                    "name": "str",
                    "country": "str",
                    "indizes": "str",
                    "sector": "str",
                    "lastbalanceupdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Index_Name",
                "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "ibm"
                    },
                    {
                        "name": "API_Index",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "shareuid": "str",
                    "isin": "str",
                    "wkn": "str",
                    "currency": "str",
                    "shortname": "str",
                    "name": "str",
                    "country": "str",
                    "indizes": "str",
                    "sector": "str",
                    "lastbalanceupdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Index_Wkn",
                "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nwkn = search shareuid with WKN",
                "required_parameters": [
                    {
                        "name": "wkn",
                        "type": "STRING",
                        "description": "",
                        "default": "851399"
                    },
                    {
                        "name": "API_Index",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "shareuid": "str",
                    "isin": "str",
                    "wkn": "str",
                    "currency": "str",
                    "shortname": "str",
                    "name": "str",
                    "country": "str",
                    "indizes": "str",
                    "sector": "str",
                    "lastbalanceupdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetobook",
                "api_description": "contains the price-book ratio (P / B ratio) for each past trading day",
                "required_parameters": [
                    {
                        "name": "API_Pricetobook",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-15"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2019-12-15"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "pb": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetocashflow",
                "api_description": "Contains the price-cash-flow ratio (P / C ratio) for each past trading day\n\nAPI_Pricetocashflow\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-15"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-01-06"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "API_Pricetocashflow",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetoearning",
                "api_description": "Contains the price-earnings ratio (P / E ratio) for each past trading day\n\nAPI_Pricetoearning\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-05-15"
                    },
                    {
                        "name": "API_Pricetoearning",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-04-15"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetosales",
                "api_description": "Contains the price turnover ratio (P / S ratio) for each past trading day.\n\nAPI_Pricetosales\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-06-08"
                    },
                    {
                        "name": "API_Pricetosales",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-05-15"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Roa",
                "api_description": "Contains the profitability (ROA ratio) for the financial year.\n\nAPI_Roa\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "API_Roa",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-06-08"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2018-05-15"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Roe",
                "api_description": "Contains the equity ratio (ROE ratio) for the financial year.\n\nAPI_Roe\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2018-05-08"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-06-08"
                    },
                    {
                        "name": "API_Roe",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Please fetch the shareuid for the company name IBM. Also, provide me with the price-book ratio for the share with the number 2 from 2019-12-15 to 2020-03-15.",
        "relevant APIs": [
            [
                "Finanzoo API_Fundamentals",
                "API_Index_Name"
            ],
            [
                "Finanzoo API_Fundamentals",
                "API_Pricetobook"
            ]
        ],
        "query_id": 19662
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Coinmill Currency",
                "api_name": "Coinmill",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I need to fetch the latest exchange rates for multiple currencies in order to display them on my family's travel blog. Which API function should I use from the Coinmill Currency tool to retrieve the exchange rates for USD, EUR, GBP, and JPY? What parameters are required for this API call?",
        "relevant APIs": [
            [
                "Coinmill Currency",
                "Coinmill"
            ]
        ],
        "query_id": 85530
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Nearby - (ArcGIS)",
                "api_description": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nOnly type values from **/v2/types (ArcGIS)** are valid.\n\nMaximum returned places is 50.",
                "required_parameters": [
                    {
                        "name": "lng",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-123.0413988"
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "49.2803703"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "radius",
                        "type": "NUMBER",
                        "description": "**Meters**\nDefault: 200\nMaximum: 50000",
                        "default": "500"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Default: 'coffee shop'",
                        "default": "coffee shop"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "results": [
                        {
                            "location": {
                                "lat": "str",
                                "lng": "str"
                            },
                            "name": "str",
                            "address": "str",
                            "phone": "str",
                            "distanceMeter": "str",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Nearby - (Google)",
                "api_description": "Returns a **JSON array of nearby places** sorted by distance from the origin coordinates in ascending order.\n\nOnly values from **/types (Google)** are valid types.\n\nMaximum places returned per request is 20.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "49.283030"
                    },
                    {
                        "name": "lng",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-123.118990"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Default is **cafe**.",
                        "default": "cafe"
                    },
                    {
                        "name": "radius",
                        "type": "NUMBER",
                        "description": "**Meters**\nDefault: 200\nMax: 50000",
                        "default": "200"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "place_id": "str",
                    "location": {
                        "lat": "float",
                        "lng": "float"
                    },
                    "address": "str",
                    "rating": "int",
                    "distanceMeter": "float"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Types - (Google)",
                "api_description": "Get a list of establishment types.\n\nThese types will only work with **/nearby (Google)**.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Random (Google)",
                "api_description": "Return a random place nearby.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "49.2803703"
                    },
                    {
                        "name": "lng",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-123.0413988"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Default: 'cafe'",
                        "default": "cafe"
                    },
                    {
                        "name": "radius",
                        "type": "NUMBER",
                        "description": "**Meters**\nDefault: 200\nMax: 50000\n",
                        "default": "500"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "place_id": "str",
                    "location": {
                        "lat": "float",
                        "lng": "float"
                    },
                    "rating": "float",
                    "address": "str",
                    "distanceMeter": "float"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Place Details - (Google)",
                "api_description": "Get contact and opening hours for a place.\n\nRequires a **place id** provided by **/nearby (Google)**.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Place ID.\nThis value can be retrieved from */nearby* or */random* endpoints.",
                        "default": "ChIJCxzX9tpwhlQRIFVwULOI2FM"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "place_id": "str",
                    "location": {
                        "lat": "float",
                        "lng": "float"
                    },
                    "address": "str",
                    "types": [
                        "list of str with length 5"
                    ],
                    "map_url": "str",
                    "phone": "str",
                    "opening_hours": {
                        "open_now": "bool",
                        "periods": [
                            {
                                "close": {
                                    "day": "int",
                                    "time": "str"
                                },
                                "open": {
                                    "day": "int",
                                    "time": "str"
                                },
                                "_list_length": 4
                            }
                        ],
                        "weekday_text": [
                            "list of str with length 7"
                        ]
                    },
                    "website": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Types - (ArcGIS)",
                "api_description": "Types (categories) of establishments. These types will only work with **/v2/nearby (ArcGIS)**.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm planning a weekend getaway and need to find a nearby hotel. Can you recommend a hotel with good ratings, provide its name, address, phone number, and distance from my location?",
        "relevant APIs": [
            [
                "Nearby Places",
                "Nearby - (Google)"
            ],
            [
                "Nearby Places",
                "Place Details - (Google)"
            ],
            [
                "Nearby Places",
                "Random (Google)"
            ]
        ],
        "query_id": 5695
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "house-prices/get-points-of-interest",
                "api_description": "Get nearest points of interest",
                "required_parameters": [
                    {
                        "name": "property_id",
                        "type": "NUMBER",
                        "description": "The value of property_id field returned in .../house-prices/estimate endpoint.",
                        "default": "27175510"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "house-prices/estimate",
                "api_description": "Returned list of estimated house prices",
                "required_parameters": [
                    {
                        "name": "area",
                        "type": "STRING",
                        "description": "The value of suggestions/value json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value  returned by the endpoint.",
                        "default": "Greenwich Close, Crawley RH11"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "property_type",
                        "type": "STRING",
                        "description": "One of the following detached|flat|terraced|semi&#95;detached",
                        "default": ""
                    },
                    {
                        "name": "page_number",
                        "type": "NUMBER",
                        "description": "The page index for paging purpose",
                        "default": "1"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "One of the following price&#95;paid|last&#95;sold|address|estimated&#95;value",
                        "default": "address"
                    },
                    {
                        "name": "page_size",
                        "type": "NUMBER",
                        "description": "The number of items per response (max 40)",
                        "default": "40"
                    },
                    {
                        "name": "ordering",
                        "type": "STRING",
                        "description": "One of the following ascending|descending",
                        "default": "descending"
                    },
                    {
                        "name": "identifier",
                        "type": "STRING",
                        "description": "The value of suggestions/identifier json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value returned by the endpoint.",
                        "default": "west-sussex/crawley/greenwich-close"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "properties/get-broadband",
                "api_description": "Get broadband information",
                "required_parameters": [
                    {
                        "name": "listing_id",
                        "type": "NUMBER",
                        "description": "The value of listing_id field returned in .../properties/list endpoint",
                        "default": "56354192"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "properties/get-running-costs",
                "api_description": "Get running costs",
                "required_parameters": [
                    {
                        "name": "listing_id",
                        "type": "NUMBER",
                        "description": "The value of listing_id field returned in .../properties/list endpoint",
                        "default": "56354192"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "One of the following residential|commercial",
                        "default": "residential"
                    },
                    {
                        "name": "section",
                        "type": "STRING",
                        "description": "One of the following for-sale|to-rent",
                        "default": "to-rent"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "properties/get-area-stats",
                "api_description": "Get area stats",
                "required_parameters": [
                    {
                        "name": "listing_id",
                        "type": "NUMBER",
                        "description": "The value of listing_id field returned in .../properties/list endpoint",
                        "default": "56354192"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "properties/get-nearby",
                "api_description": "Get nearest points of interest",
                "required_parameters": [
                    {
                        "name": "listing_id",
                        "type": "NUMBER",
                        "description": "The value of listing_id field returned in .../properties/list endpoint",
                        "default": "56354192"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "auto-complete",
                "api_description": "Get auto complete suggestion by term or phrase",
                "required_parameters": [
                    {
                        "name": "search_term",
                        "type": "STRING",
                        "description": "",
                        "default": "greenwich"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "STRING",
                        "description": "One of the following properties|listings. Use  listings value to get suggestion for .../properties/list endpoint. Use properties value to get suggestion for .../house-prices/estimate endpoint.",
                        "default": "listings"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "house-prices/get-sales-history",
                "api_description": "Get sales history",
                "required_parameters": [
                    {
                        "name": "property_id",
                        "type": "NUMBER",
                        "description": "The value of property_id field returned in .../house-prices/estimate endpoint.",
                        "default": "27175510"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "house-prices/get-running-costs",
                "api_description": "Get running costs",
                "required_parameters": [
                    {
                        "name": "property_id",
                        "type": "NUMBER",
                        "description": "The value of property_id field returned in .../house-prices/estimate endpoint.",
                        "default": "27175510"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Zoopla_v2",
                "api_name": "house-prices/get-market-activity",
                "api_description": "Get market activity in an area",
                "required_parameters": [
                    {
                        "name": "area",
                        "type": "STRING",
                        "description": "The value of suggestions/value json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value  returned by the endpoint.",
                        "default": "Greenwich Close, Crawley RH11"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "identifier",
                        "type": "STRING",
                        "description": "The value of suggestions/identifier json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value returned by the endpoint.",
                        "default": "west-sussex/crawley/greenwich-close"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "My family is planning to move to Crawley, and we need information on the running costs of residential properties in the area. Can you provide us with the estimated house prices, along with the running costs and nearby points of interest? It would be helpful to know the broadband information as well.",
        "relevant APIs": [
            [
                "Zoopla_v2",
                "house-prices/estimate"
            ],
            [
                "Zoopla_v2",
                "properties/get-running-costs"
            ],
            [
                "Zoopla_v2",
                "house-prices/get-points-of-interest"
            ],
            [
                "Zoopla_v2",
                "properties/get-broadband"
            ]
        ],
        "query_id": 75659
    },
    {
        "api_list": [
            {
                "category_name": "Jobs",
                "tool_name": "JobSearch",
                "api_name": "/api/v1/Jobs/Search",
                "api_description": "Search for your dream job",
                "required_parameters": [
                    {
                        "name": "SearchQuery",
                        "type": "STRING",
                        "description": "",
                        "default": "java"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "PageSize",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "PageNumber",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "PageSize": [
                            "list of str with length 1"
                        ],
                        "PageNumber": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "JobSearch",
                "api_name": "/api/v1/Jobs/{slug}",
                "api_description": "Get details of a job by slug",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "",
                        "default": "freelance-content-writercopywriter-9399"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "url": "str",
                    "company": "str",
                    "location": "str",
                    "postDate": "str",
                    "salary": "NoneType",
                    "jobSource": "str",
                    "slug": "str",
                    "sentiment": {
                        "polarity": "int",
                        "subjectivity": "int"
                    },
                    "dateAdded": "str",
                    "keyPhrases": [
                        {
                            "affinity": "int",
                            "text": "str",
                            "_list_length": 5
                        }
                    ],
                    "tags": [
                        {
                            "text": "str",
                            "_list_length": 3
                        }
                    ],
                    "summary": "str",
                    "originalPosting": "str",
                    "viewCount": "int"
                }
            }
        ],
        "query": "My sister is a recent graduate and she's looking for an entry-level job. Can you assist in finding job listings suitable for recent graduates? Please search for jobs using the keyword 'entry-level' and provide details such as the job title, company name, location, post date, and URL. It would be helpful to know the sentiment analysis and key phrases associated with each job listing. Additionally, please include the salary information and job source.",
        "relevant APIs": [
            [
                "JobSearch",
                "/api/v1/Jobs/Search"
            ],
            [
                "JobSearch",
                "/api/v1/Jobs/{slug}"
            ]
        ],
        "query_id": 83532
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Greet Generator",
                "api_name": "Get Greet",
                "api_description": "Get Greet",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "description": "",
                        "default": "Amir"
                    },
                    {
                        "name": "cringeLevel",
                        "type": "string",
                        "description": "",
                        "default": "5"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "str"
                }
            }
        ],
        "query": "Please generate a greet for my friend Sophia with a cringe level of 7.",
        "relevant APIs": [
            [
                "Greet Generator",
                "Get Greet"
            ]
        ],
        "query_id": 87540
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Search person by name",
                "api_description": "Search for a person by parameters will return a list of persons that match your query",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "Elon Musk"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "countryId": "int",
                    "occupation": "NoneType",
                    "nationality": "NoneType",
                    "birthYear": "NoneType",
                    "birthMonth": "NoneType",
                    "birthDate": "NoneType",
                    "address": "str",
                    "countryOfResidence": "NoneType",
                    "honorific": "NoneType",
                    "number": "NoneType",
                    "isForeign": "NoneType",
                    "documentType": "NoneType",
                    "documentIssuedOn": "NoneType",
                    "documentIssuedBy": "NoneType",
                    "documentNumber": "NoneType",
                    "hideAddress": "NoneType",
                    "email": "NoneType",
                    "phone": "NoneType",
                    "countryCode": "str",
                    "companies": [
                        {
                            "name": "str",
                            "shortName": "NoneType",
                            "brandName": "NoneType",
                            "countryCode": "str",
                            "percentage": "NoneType",
                            "amount": "NoneType",
                            "appointedOn": "NoneType",
                            "resignedOn": "NoneType",
                            "role": {
                                "id": "int",
                                "name": "str",
                                "providerId": "NoneType",
                                "countryId": "int",
                                "translation": {
                                    "en": "str",
                                    "ro": "str",
                                    "ru": "str"
                                },
                                "isInactive": "NoneType",
                                "priority": "NoneType"
                            },
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Get company [Full data]",
                "api_description": "The Get company details endpoint will return all full company data, including company contacts, financial reports and other data",
                "required_parameters": [
                    {
                        "name": "internationalNumber",
                        "type": "STRING",
                        "description": "",
                        "default": "0458.780.306"
                    },
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "",
                        "default": "be"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"id\": \"int\", \"name\": \"str\", \"internationalNumber\": \"str\", \"localNumber\": \"str\", \"countryId\": \"int\", \"dateCreated\": \"str\", \"dateDisolved\": \"NoneType\", \"accountingAuthorityId\": \"NoneType\", \"createdAt\": \"str\", \"updatedAt\": \"str\", \"alternateNames\": \"empty list\", \"shortName\": \"str\", \"brandName\": \"str\", \"canSellShares\": \"NoneType\", \"address\": \"str\", \"hasPublicDebt\": \"NoneType\", \"paysVat\": \"bool\", \"vatNumber\": \"NoneType\", \"vatDate\": \"str\", \"vatCancelDate\": \"NoneType\", \"paysExcise\": \"NoneType\", \"exciseNumber\": \"NoneType\", \"exciseDate\": \"NoneType\", \"exciseCancelDate\": \"NoneType\", \"additionalData\": {}, \"europeanNumber\": \"NoneType\", \"typeId\": \"int\", \"statusText\": \"NoneType\", \"publicDebtAmount\": \"NoneType\", \"subscribedShareCapital\": \"NoneType\", \"paidShareCapital\": \"str\", \"terms\": \"NoneType\", \"annualAssembly\": \"str\", \"endDateFinancialYear\": \"str\", \"vatRemovalBasis\": \"NoneType\", \"vatRestorationBasis\": \"NoneType\", \"currentEmployeesNumber\": \"NoneType\", \"sharesValue\": \"NoneType\", \"sharesIssued\": \"None"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Search company by Name",
                "api_description": "Search for a company by parameters will return a list of companies that match your query",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Company name or number or other identifiers",
                        "default": "Tesla"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "ISO2 country code",
                        "default": "be"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "shortName": "NoneType",
                    "brandName": "str",
                    "internationalNumber": "str",
                    "countryCode": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Get company [Basic data]",
                "api_description": "The Get company details endpoint will return all basic company data on B2BHint.",
                "required_parameters": [
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "",
                        "default": "be"
                    },
                    {
                        "name": "internationalNumber",
                        "type": "STRING",
                        "description": "",
                        "default": "0458.780.306"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"id\": \"int\", \"name\": \"str\", \"internationalNumber\": \"str\", \"localNumber\": \"str\", \"countryId\": \"int\", \"dateCreated\": \"str\", \"dateDisolved\": \"NoneType\", \"accountingAuthorityId\": \"NoneType\", \"createdAt\": \"str\", \"updatedAt\": \"str\", \"alternateNames\": \"empty list\", \"shortName\": \"str\", \"brandName\": \"str\", \"canSellShares\": \"NoneType\", \"address\": \"str\", \"hasPublicDebt\": \"NoneType\", \"paysVat\": \"bool\", \"vatNumber\": \"NoneType\", \"vatDate\": \"str\", \"vatCancelDate\": \"NoneType\", \"paysExcise\": \"NoneType\", \"exciseNumber\": \"NoneType\", \"exciseDate\": \"NoneType\", \"exciseCancelDate\": \"NoneType\", \"additionalData\": {}, \"europeanNumber\": \"NoneType\", \"typeId\": \"int\", \"statusText\": \"NoneType\", \"publicDebtAmount\": \"NoneType\", \"subscribedShareCapital\": \"NoneType\", \"paidShareCapital\": \"str\", \"terms\": \"NoneType\", \"annualAssembly\": \"str\", \"endDateFinancialYear\": \"str\", \"vatRemovalBasis\": \"NoneType\", \"vatRestorationBasis\": \"NoneType\", \"currentEmployeesNumber\": \"NoneType\", \"sharesValue\": \"NoneType\", \"sharesIssued\": \"None"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Search company by Email",
                "api_description": "Search for a company by email will return a list of companies that match the selected email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "rsing@tesla.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "shortName": "NoneType",
                    "brandName": "NoneType",
                    "internationalNumber": "str",
                    "countryCode": "str"
                }
            }
        ],
        "query": "My family is considering relocating to a different country and we are interested in finding job opportunities. Can you assist us in finding companies in the B2BHint database that are hiring? We are specifically looking for companies in the technology sector located in Canada. Please provide us with a list of matching companies and their basic company data using the Search company by Name API. Additionally, we would like to retrieve the full company data for a selected company using the Get company [Full data] API.",
        "relevant APIs": [
            [
                "B2BHint",
                "Search company by Name"
            ],
            [
                "B2BHint",
                "Get company [Full data]"
            ]
        ],
        "query_id": 13722
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Cheap Translate",
                "api_name": "/goo/translate/languages",
                "api_description": "Get all Goog supported language",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"auto\": \"str\", \"af\": \"str\", \"sq\": \"str\", \"am\": \"str\", \"ar\": \"str\", \"hy\": \"str\", \"as\": \"str\", \"ay\": \"str\", \"az\": \"str\", \"bm\": \"str\", \"eu\": \"str\", \"be\": \"str\", \"bn\": \"str\", \"bho\": \"str\", \"bs\": \"str\", \"bg\": \"str\", \"ca\": \"str\", \"ceb\": \"str\", \"ny\": \"str\", \"zh-CN\": \"str\", \"zh-TW\": \"str\", \"co\": \"str\", \"hr\": \"str\", \"cs\": \"str\", \"da\": \"str\", \"dv\": \"str\", \"doi\": \"str\", \"nl\": \"str\", \"en\": \"str\", \"eo\": \"str\", \"et\": \"str\", \"ee\": \"str\", \"tl\": \"str\", \"fi\": \"str\", \"fr\": \"str\", \"fy\": \"str\", \"gl\": \"str\", \"ka\": \"str\", \"de\": \"str\", \"el\": \"str\", \"gn\": \"str\", \"gu\": \"str\", \"ht\": \"str\", \"ha\": \"str\", \"haw\": \"str\", \"iw\": \"str\", \"hi\": \"str\", \"hmn\": \"str\", \"hu\": \"str\", \"is\": \"str\", \"ig\": \"str\", \"ilo\": \"str\", \"id\": \"str\", \"ga\": \"str\", \"it\": \"str\", \"ja\": \"str\", \"jw\": \"str\", \"kn\": \"str\", \"kk\": \"str\", \"km\": \"str\", \"rw\": \"str\", \"gom\": \"str\", \"ko\": \"str\", \"kri\": \"str\", \"ku\": \"str\", \"ckb\": \"str\", \"ky\": \"str\", \"lo\": \"str\", \"la\": \"str\", \"lv\": \"str\", \"ln\": \"str\", \"lt\": \"str\", \"lg\": \"str\", \"lb\": \"str\", \"mk\": \"str\", \"mai\": "
            },
            {
                "category_name": "Translation",
                "tool_name": "Cheap Translate",
                "api_name": "/translate/languages",
                "api_description": "Get all supported language",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"af\": \"str\", \"sq\": \"str\", \"am\": \"str\", \"ar\": \"str\", \"hy\": \"str\", \"as\": \"str\", \"az\": \"str\", \"bn\": \"str\", \"ba\": \"str\", \"eu\": \"str\", \"bs\": \"str\", \"bg\": \"str\", \"yue\": \"str\", \"ca\": \"str\", \"lzh\": \"str\", \"zh-Hans\": \"str\", \"zh-Hant\": \"str\", \"hr\": \"str\", \"cs\": \"str\", \"da\": \"str\", \"prs\": \"str\", \"dv\": \"str\", \"nl\": \"str\", \"en\": \"str\", \"et\": \"str\", \"fo\": \"str\", \"fj\": \"str\", \"fil\": \"str\", \"fi\": \"str\", \"fr\": \"str\", \"fr-CA\": \"str\", \"gl\": \"str\", \"ka\": \"str\", \"de\": \"str\", \"el\": \"str\", \"gu\": \"str\", \"ht\": \"str\", \"he\": \"str\", \"hi\": \"str\", \"mww\": \"str\", \"hu\": \"str\", \"is\": \"str\", \"id\": \"str\", \"ikt\": \"str\", \"iu\": \"str\", \"iu-Latn\": \"str\", \"ga\": \"str\", \"it\": \"str\", \"ja\": \"str\", \"kn\": \"str\", \"kk\": \"str\", \"km\": \"str\", \"tlh-Latn\": \"str\", \"ko\": \"str\", \"ku\": \"str\", \"kmr\": \"str\", \"ky\": \"str\", \"lo\": \"str\", \"lv\": \"str\", \"lt\": \"str\", \"mk\": \"str\", \"mg\": \"str\", \"ms\": \"str\", \"ml\": \"str\", \"mt\": \"str\", \"mr\": \"str\", \"mn-Cyrl\": \"str\", \"mn-Mong\": \"str\", \"my\": \"str\", \"mi\": \"str\", \"ne\": \"str\", \"nb\": \"str\", \"or\": \"str\", \"ps\": \"st"
            }
        ],
        "query": "My friend is traveling to China and needs assistance with translation. Could you please provide a list of supported languages for translation using the Cheap Translate tool? It would be helpful to know if Chinese is one of the supported languages.",
        "relevant APIs": [
            [
                "Cheap Translate",
                "/goo/translate/languages"
            ],
            [
                "Cheap Translate",
                "/translate/languages"
            ]
        ],
        "query_id": 46413
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "OfferInfo",
                "api_description": "get offer data",
                "required_parameters": [
                    {
                        "name": "joburl",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "SearchOffers",
                "api_description": "get all offers url",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Secretary"
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Frankfurt"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "nextOffset": "int",
                    "currentOffset": "str",
                    "offers": [
                        "list of str with length 10"
                    ]
                }
            }
        ],
        "query": "I'm planning to relocate to Frankfurt and I'm looking for a job as a Secretary. Can you provide me with a list of job offers in Frankfurt? Also, could you give me more details about a specific job offer using its URL?",
        "relevant APIs": [
            [
                "Google Jobs",
                "SearchOffers"
            ],
            [
                "Google Jobs",
                "OfferInfo"
            ]
        ],
        "query_id": 15058
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Quotes_v2",
                "api_name": "Quotes by Keywords",
                "api_description": "Returns Quotes containing specified keyword",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "",
                        "default": "success"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Quotes_v2",
                "api_name": "Get Available Authors",
                "api_description": "Returns list of available authors",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Quotes_v2",
                "api_name": "Quotes By Authors",
                "api_description": "Returns the quotes by specified authors",
                "required_parameters": [
                    {
                        "name": "author",
                        "type": "STRING",
                        "description": "",
                        "default": "Albert-Einstein"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Quotes_v2",
                "api_name": "Quote of The Day",
                "api_description": "Returns Quote of the Day",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Quotes_v2",
                "api_name": "Random Quotes",
                "api_description": "Get a Random Quote on Each Request",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm feeling a bit down today, could you provide me with an uplifting quote? Additionally, could you provide me with the list of available authors using the Get Available Authors API?",
        "relevant APIs": [
            [
                "Quotes_v2",
                "Random Quotes"
            ],
            [
                "Quotes_v2",
                "Get Available Authors"
            ]
        ],
        "query_id": 68228
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/index-trend",
                "api_description": "Get index trend earnings history information for a particular stock",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/cashflow-statement",
                "api_description": "Get stock cash flow statements.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/profile",
                "api_description": "Get stock profile information such as company name, descriptions, website, etc...",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/calendar-events",
                "api_description": "Get stock calendar events.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/balance-sheet",
                "api_description": "Get stock balance sheet data.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/recommendation-trend",
                "api_description": "Get stock recommendations and trends.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/net-share-purchase-activity",
                "api_description": "Get net share purchase activity information for a particular stock",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/institution-ownership",
                "api_description": "Get stock institution ownership.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/sec-filings",
                "api_description": "Get stock SEC filings.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/earnings",
                "api_description": "Get earnings information for a particular stock",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I need to know the calendar events, cash flow statements, and recommendation trends for Apple Inc. Can you assist me with this financial information?",
        "relevant APIs": [
            [
                "Yahoo Finance_v2",
                "stock/calendar-events"
            ],
            [
                "Yahoo Finance_v2",
                "stock/cashflow-statement"
            ],
            [
                "Yahoo Finance_v2",
                "stock/recommendation-trend"
            ]
        ],
        "query_id": 3215
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "DomainStatus",
                "api_description": "Returns domain status if is webmail or disposable.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "errors": {
                        "status": "bool",
                        "code": "int",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "Enrichment",
                "api_description": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person\u2019s name, location and social handles from an email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "b.mohamed@tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "NoneType",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "NoneType",
                        "gender": "str",
                        "phone_number": "NoneType",
                        "position": "str",
                        "twitter": "NoneType",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "DomainSearch",
                "api_description": "You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user /account/sessions endpoint. Use width, height and quality arguments to change the output settings.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name from which you want to find the email addresses. For example, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"stripe.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",
                        "default": "stripe.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "department",
                        "type": "STRING",
                        "description": "Get only email addresses for people working in the selected department(s).",
                        "default": "pr"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Specifies the number of email addresses to skip. The default is 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"organization\": {\"location\": {\"country\": \"str\", \"city\": \"str\", \"state\": \"str\", \"street_address\": \"str\"}, \"social_links\": {\"twitter_url\": \"str\", \"facebook_url\": \"str\", \"linkedin_url\": \"str\"}, \"disposable\": \"bool\", \"webmail\": \"bool\", \"website_url\": \"str\", \"phone_number\": \"str\", \"industries\": \"str\", \"postal_code\": \"str\", \"employee_count\": \"int\", \"founded\": \"str\", \"company_size\": \"str\", \"last_updated\": \"str\", \"revenue\": \"str\", \"accept_all\": \"bool\", \"description\": \"str\", \"pattern\": \"str\", \"domain_score\": \"int\", \"organization\": \"str\", \"whois\": {\"registrar_name\": \"str\", \"created_date\": \"str\", \"referral_url\": \"str\"}}, \"emails\": [{\"email\": \"str\", \"first_name\": \"str\", \"last_name\": \"str\", \"full_name\": \"str\", \"gender\": \"str\", \"phone_number\": \"NoneType\", \"type\": \"str\", \"country\": \"str\", \"position\": \"str\", \"department\": \"str\", \"seniority\": \"str\", \"twitter\": \"NoneType\", \"linkedin\": \"str\", \"accept_all\": \"bool\", \"pattern\": \"str\", \"score\": \"int\", \"verification\": {\"date\": \"NoneType\", \"status\": "
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "LinkedinFinder",
                "api_description": "This API endpoint generates or retrieves the most likely email address from a Linkedin URL.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the Linkedin. For example, \"https://www.linkedin.com/in/alex-maccaw-ab592978\".",
                        "default": "https://www.linkedin.com/in/alex-maccaw-ab592978"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "bool",
                        "position": "str",
                        "twitter": "str",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "NoneType",
                            "status": "NoneType"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 2
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailVerifier",
                "api_description": "verify the deliverability of an email address.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "The email address you want to verify.",
                        "default": "b.mohamed@tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "email": {
                            "mx_records": "bool",
                            "smtp_server": "bool",
                            "smtp_check": "bool",
                            "accept_all": "bool",
                            "block": "bool",
                            "email": "str",
                            "gibberish": "bool",
                            "disposable": "bool",
                            "webmail": "bool",
                            "regex": "bool",
                            "whois": {
                                "registrar_name": "str",
                                "created_date": "str",
                                "referral_url": "str"
                            },
                            "status": "str",
                            "result": "str",
                            "score": "int"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailFinder",
                "api_description": "generates or retrieves the most likely email address from a domain name, a first name and a last name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name from which you want to find the email addresses. For example, \"stripe.com\"",
                        "default": "stripe.com"
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "The person's first name. It doesn't need to be in lowercase.",
                        "default": "Moskoz"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "The person's last name. It doesn't need to be in lowercase.",
                        "default": "Dustin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "bool",
                        "position": "str",
                        "twitter": "NoneType",
                        "linkedin": "str",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": "empty list"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "AuthorFinder",
                "api_description": "This API endpoint generates or retrieves the most likely email address from a blog post url.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the article. For example, \"https://clearbit.com/blog/company-name-to-domain-api\".",
                        "default": "https://clearbit.com/blog/company-name-to-domain-api"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "NoneType",
                        "position": "str",
                        "twitter": "str",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ],
                        "info": {
                            "title": "str",
                            "description": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailCount",
                "api_description": "Domain name from which you want to find the email addresses.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The email address you want to find sources.",
                        "default": "tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "total": "int",
                        "personal_emails": "int",
                        "generic_emails": "int",
                        "department": {
                            "engineering": "int",
                            "finance": "int",
                            "hr": "int",
                            "it": "int",
                            "marketing": "int",
                            "operations": "int",
                            "management": "int",
                            "sales": "int",
                            "legal": "int",
                            "support": "int",
                            "communication": "int",
                            "executive": "int"
                        },
                        "seniority": {
                            "junior": "int",
                            "senior": "int",
                            "executive": "int"
                        }
                    }
                }
            }
        ],
        "query": "I need to verify if the domain 'example.com' is a webmail or disposable. Also, retrieve the person and company data based on the email 'john.doe@example.com'.",
        "relevant APIs": [
            [
                "Tomba",
                "DomainStatus"
            ],
            [
                "Tomba",
                "Enrichment"
            ]
        ],
        "query_id": 50984
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Nearby - (ArcGIS)",
                "api_description": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nOnly type values from **/v2/types (ArcGIS)** are valid.\n\nMaximum returned places is 50.",
                "required_parameters": [
                    {
                        "name": "lng",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-123.0413988"
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "49.2803703"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "radius",
                        "type": "NUMBER",
                        "description": "**Meters**\nDefault: 200\nMaximum: 50000",
                        "default": "500"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Default: 'coffee shop'",
                        "default": "coffee shop"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "results": [
                        {
                            "location": {
                                "lat": "str",
                                "lng": "str"
                            },
                            "name": "str",
                            "address": "str",
                            "phone": "str",
                            "distanceMeter": "str",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Nearby - (Google)",
                "api_description": "Returns a **JSON array of nearby places** sorted by distance from the origin coordinates in ascending order.\n\nOnly values from **/types (Google)** are valid types.\n\nMaximum places returned per request is 20.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "49.283030"
                    },
                    {
                        "name": "lng",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-123.118990"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Default is **cafe**.",
                        "default": "cafe"
                    },
                    {
                        "name": "radius",
                        "type": "NUMBER",
                        "description": "**Meters**\nDefault: 200\nMax: 50000",
                        "default": "200"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "place_id": "str",
                    "location": {
                        "lat": "float",
                        "lng": "float"
                    },
                    "address": "str",
                    "rating": "int",
                    "distanceMeter": "float"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Types - (Google)",
                "api_description": "Get a list of establishment types.\n\nThese types will only work with **/nearby (Google)**.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Random (Google)",
                "api_description": "Return a random place nearby.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "49.2803703"
                    },
                    {
                        "name": "lng",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-123.0413988"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Default: 'cafe'",
                        "default": "cafe"
                    },
                    {
                        "name": "radius",
                        "type": "NUMBER",
                        "description": "**Meters**\nDefault: 200\nMax: 50000\n",
                        "default": "500"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "place_id": "str",
                    "location": {
                        "lat": "float",
                        "lng": "float"
                    },
                    "rating": "float",
                    "address": "str",
                    "distanceMeter": "float"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Place Details - (Google)",
                "api_description": "Get contact and opening hours for a place.\n\nRequires a **place id** provided by **/nearby (Google)**.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Place ID.\nThis value can be retrieved from */nearby* or */random* endpoints.",
                        "default": "ChIJCxzX9tpwhlQRIFVwULOI2FM"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "place_id": "str",
                    "location": {
                        "lat": "float",
                        "lng": "float"
                    },
                    "address": "str",
                    "types": [
                        "list of str with length 5"
                    ],
                    "map_url": "str",
                    "phone": "str",
                    "opening_hours": {
                        "open_now": "bool",
                        "periods": [
                            {
                                "close": {
                                    "day": "int",
                                    "time": "str"
                                },
                                "open": {
                                    "day": "int",
                                    "time": "str"
                                },
                                "_list_length": 4
                            }
                        ],
                        "weekday_text": [
                            "list of str with length 7"
                        ]
                    },
                    "website": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Nearby Places",
                "api_name": "Types - (ArcGIS)",
                "api_description": "Types (categories) of establishments. These types will only work with **/v2/nearby (ArcGIS)**.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm organizing a company team-building event and we need to find nearby places to engage in outdoor activities. Please fetch a list of parks, sports complexes, and adventure centers within a 1-kilometer radius of our office. It would be great if you could include their names, addresses, and distance from our location.",
        "relevant APIs": [
            [
                "Nearby Places",
                "Nearby - (ArcGIS)"
            ],
            [
                "Nearby Places",
                "Nearby - (Google)"
            ]
        ],
        "query_id": 14198
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Hepsiburada Data",
                "api_name": "Get Comments from product id",
                "api_description": "Retrieve comments based on a product id.",
                "required_parameters": [
                    {
                        "name": "product_id",
                        "type": "STRING",
                        "description": "",
                        "default": "hbcv00000c2fqc"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "comments": "empty list",
                    "stars": "empty list"
                }
            }
        ],
        "query": "I'm interested in analyzing customer feedback on Hepsiburada. Can you help me retrieve comments and star ratings for a specific product? I would like to explore the comments and ratings for the product with the ID 'hbcv00000c2fqc'. Thank you!",
        "relevant APIs": [
            [
                "Hepsiburada Data",
                "Get Comments from product id"
            ]
        ],
        "query_id": 85155
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "ping",
                "api_description": "Check that server is still alive",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "datetime": "str",
                    "version": "str",
                    "uptime": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "tickerData",
                "api_description": "Returns a list of ticker records",
                "required_parameters": [
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "Ticker period",
                        "default": "1h"
                    },
                    {
                        "name": "startDate",
                        "type": "STRING",
                        "description": "Start date",
                        "default": "2010-04-12T14:30"
                    },
                    {
                        "name": "tickerName",
                        "type": "STRING",
                        "description": "Ticker name",
                        "default": "gold"
                    },
                    {
                        "name": "endDate",
                        "type": "STRING",
                        "description": "End date",
                        "default": "2010-04-20T12:30"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "records": [
                        {
                            "closeDateTime": "str",
                            "open": "float",
                            "close": "float",
                            "high": "float",
                            "low": "float",
                            "volume": "int",
                            "_list_length": 142
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "tickersList",
                "api_description": "Returns a list of available tickers",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is a financial advisor and he needs to analyze the historical data for the gold ticker from April 12, 2010, 14:30 to April 20, 2010, 12:30. Can you fetch the ticker data for this period and provide the records including close date-time, open price, close price, highest price, lowest price, and volume? Also, he wants to know if the stocks_archive tool is still functional. Please ping the server and provide the server time, version, and uptime.",
        "relevant APIs": [
            [
                "stocks_archive",
                "tickerData"
            ],
            [
                "stocks_archive",
                "ping"
            ]
        ],
        "query_id": 28240
    },
    {
        "api_list": [
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get content",
                "api_description": "Gets image, video, and audio data sent by users.",
                "required_parameters": [
                    {
                        "name": "messageId",
                        "type": "STRING",
                        "description": "Message ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get rich menu ID of user",
                "api_description": "Gets the ID of the rich menu linked to a user.",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "User ID. Found in the source object of webhook event objects. Do not use the LINE ID used in LINE.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Download rich menu image",
                "api_description": "Downloads an image associated with a rich menu.",
                "required_parameters": [
                    {
                        "name": "richMenuId",
                        "type": "STRING",
                        "description": "ID of the rich menu with the image to be downloaded",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get rich menu list",
                "api_description": "Gets a list of all uploaded rich menus.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get rich menu",
                "api_description": "Gets a rich menu via a rich menu ID.",
                "required_parameters": [
                    {
                        "name": "richMenuId",
                        "type": "STRING",
                        "description": "ID of an uploaded rich menu",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get profile",
                "api_description": "Gets user profile information.",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "User ID that is returned in a webhook event object. Do not use the LINE ID found on LINE.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get default rich menu ID",
                "api_description": "Gets the ID of the default rich menu set with the Messaging API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get number of sent reply messages",
                "api_description": "Gets the number of messages sent with the /bot/message/reply endpoint.",
                "required_parameters": [
                    {
                        "name": "date\t",
                        "type": "STRING",
                        "description": "Date the messages were sent. Format: yyyyMMdd (Example: 20191231) Timezone: UTC+9",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Could you please provide me with the ID of the rich menu linked to the user with the ID '12345'? Furthermore, I would like to download the image associated with the rich menu having the ID '67890'.",
        "relevant APIs": [
            [
                "LINE Messaging",
                "Get rich menu ID of user"
            ],
            [
                "LINE Messaging",
                "Download rich menu image"
            ]
        ],
        "query_id": 66927
    },
    {
        "api_list": [
            {
                "category_name": "Travel",
                "tool_name": "Deutsche Bahn",
                "api_name": "Search trips",
                "api_description": "Find trips between two stations",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Travel date in format DD.MM.YYYY",
                        "default": "16.02.2022"
                    },
                    {
                        "name": "from_id",
                        "type": "STRING",
                        "description": "Departure id",
                        "default": "008011201"
                    },
                    {
                        "name": "passenger0_age",
                        "type": "NUMBER",
                        "description": "Age of the first passenger",
                        "default": "45"
                    },
                    {
                        "name": "time",
                        "type": "TIME (24-hour HH:MM)",
                        "description": "Travel time",
                        "default": "09:00"
                    },
                    {
                        "name": "to_id",
                        "type": "STRING",
                        "description": "Arrival id",
                        "default": "008011155"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "passenger3_age",
                        "type": "NUMBER",
                        "description": "Age of the fourth passenger",
                        "default": ""
                    },
                    {
                        "name": "passenger2_discount",
                        "type": "ENUM",
                        "description": "Discount of the third passenger",
                        "default": ""
                    },
                    {
                        "name": "passenger4_discount",
                        "type": "ENUM",
                        "description": "Discount of the fifth passenger",
                        "default": ""
                    },
                    {
                        "name": "passenger1_discount",
                        "type": "ENUM",
                        "description": "Discount of the second passenger",
                        "default": ""
                    },
                    {
                        "name": "passenger3_discount",
                        "type": "ENUM",
                        "description": "Discount of the fourth passenger",
                        "default": ""
                    },
                    {
                        "name": "passenger2_age",
                        "type": "NUMBER",
                        "description": "Age of the third passenger",
                        "default": ""
                    },
                    {
                        "name": "passenger0_discount",
                        "type": "ENUM",
                        "description": "Discount of the first passenger",
                        "default": ""
                    },
                    {
                        "name": "passenger4_age",
                        "type": "NUMBER",
                        "description": "Age of the fifth passenger",
                        "default": ""
                    },
                    {
                        "name": "passenger1_age",
                        "type": "NUMBER",
                        "description": "Age of the second passenger",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Travel",
                "tool_name": "Deutsche Bahn",
                "api_name": "Autocomplete",
                "api_description": "Search for train and public transport stations in Germany and across Europe",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query parameter",
                        "default": "berlin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I need assistance in finding train and public transport stations in Germany and across Europe. Can you help me with that? I'm particularly interested in stations in Berlin. Once I have the station names, I want to search for the train schedule from Berlin to Munich on 16.02.2022 at 09:00. It would be great if you could also provide the fare information for a passenger aged 45.",
        "relevant APIs": [
            [
                "Deutsche Bahn",
                "Autocomplete"
            ],
            [
                "Deutsche Bahn",
                "Search trips"
            ]
        ],
        "query_id": 70835
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "News Network",
                "api_name": "Get News",
                "api_description": "Return list of news by selected region and category.\nVisit our [demo site](https://core-api.net/news/news.html)",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "ae: United Arab Emirates\nar: Argentina\nat: Austria\nau: Australia\nbe: Belgium\nbg: Bulgaria\nbr: Brazil\nca: Canada\nch: Switzerland\ncn: China \nco: Colombia\ncu: Cuba\ncz:\tCzech Republic\nde: Germany\neg: Egypt\nfr: France\ngb: United Kingdom\ngr: Greece\nhk: Hong Kong\nhu: Hungray\nid: Indonesia\nie: Ireland\nil: Israel\nin: India\nit: Italy\njp: Japan\nkr: South Korea\nlt: Lithuania\nlv: Latvia\nma: Morocco\nmx: Mexico\nmy: Malaysia\nng: Nigeria\nnl: Netherlands\nno: Norway\nnz: New Zealand\nph: Philippines\npl: Poland\npt: Portugal\nro: Romania\nrs: Serbia\nru: Russia\nsa: Saudi Arabia\nse: Sweden\nsg: Singapore\nsi: Slovenia\nsk: Slovakia\nth: Thailand\ntr: Turkey\ntw: Taiwan\nua: Ukraine\nus: United States\nve: Venuzuela\nza: South Africa",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "": {}
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "News Network",
                "api_name": "Search News",
                "api_description": "Search news by given keyword.\nVisit our [demo site](https://core-api.net/news/news.html)",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Joe Biden"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "\nar: arabic\nde: german\nen: english\nes: Spanish\nfr: French\nhe: hebrew\nit: italian\nnl: dutch\nno: norwegian\npt: portuguese\nru: russian\nse: swedish\nzh: chinese",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "keyword": "str",
                    "articles": [
                        {
                            "source": {
                                "id": "NoneType",
                                "name": "str"
                            },
                            "author": "str",
                            "title": "str",
                            "description": "str",
                            "url": "str",
                            "urlToImage": "str",
                            "publishedAt": "str",
                            "content": "str",
                            "_list_length": 100
                        }
                    ]
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "News Network",
                "api_name": "Available Region List",
                "api_description": "Return list of available regions.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ae": "str",
                    "ar": "str",
                    "at": "str",
                    "au": "str",
                    "be": "str",
                    "bg": "str",
                    "br": "str",
                    "ca": "str",
                    "ch": "str",
                    "cn": "str",
                    "co": "str",
                    "cu": "str",
                    "cz": "str",
                    "de": "str",
                    "eg": "str",
                    "fr": "str",
                    "gb": "str",
                    "gr": "str",
                    "hk": "str",
                    "hu": "str",
                    "id": "str",
                    "ie": "str",
                    "il": "str",
                    "in": "str",
                    "it": "str",
                    "jp": "str",
                    "kr": "str",
                    "lt": "str",
                    "lv": "str",
                    "ma": "str",
                    "mx": "str",
                    "my": "str",
                    "ng": "str",
                    "nl": "str",
                    "no": "str",
                    "nz": "str",
                    "ph": "str",
                    "pl": "str",
                    "pt": "str",
                    "ro": "str",
                    "rs": "str",
                    "ru": "str",
                    "sa": "str",
                    "se": "str",
                    "sg": "str",
                    "si": "str",
                    "sk": "str",
                    "th": "str",
                    "tr": "str",
                    "tw": "str",
                    "ua": "str",
                    "us": "str",
                    "ve": "str",
                    "za": "str"
                }
            }
        ],
        "query": "I am a researcher studying the impact of climate change on different regions. Can you search for news articles about climate change using the keyword 'climate change' in English? Additionally, provide me with the latest news articles in Spanish and French.",
        "relevant APIs": [
            [
                "News Network",
                "Search News"
            ],
            [
                "News Network",
                "Get News"
            ]
        ],
        "query_id": 13497
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "Taekwondo_Athlete_World_Ranking",
                "api_name": "/GET_U-58_ATHLETE_RANKING",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "Country",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "athlete_Rank": "int",
                    "athlete_name": "str",
                    "athlete_GAL": "str",
                    "athlete_Country": "str",
                    "athlete_Points": "float"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "Taekwondo_Athlete_World_Ranking",
                "api_name": "/GET_U-54_ATHLETE_RANKING",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "Country",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "athlete_Rank": "int",
                    "athlete_name": "str",
                    "athlete_GAL": "str",
                    "athlete_Country": "str",
                    "athlete_Points": "float"
                }
            }
        ],
        "query": "I'm planning a taekwondo event and I want to invite the top-ranked athletes from different weight categories. Can you fetch the rankings, names, countries, and points for athletes in the U-58 and U-54 categories? Additionally, include their global athletic licenses.",
        "relevant APIs": [
            [
                "Taekwondo_Athlete_World_Ranking",
                "/GET_U-58_ATHLETE_RANKING"
            ],
            [
                "Taekwondo_Athlete_World_Ranking",
                "/GET_U-54_ATHLETE_RANKING"
            ]
        ],
        "query_id": 12296
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Google Search",
                "api_description": "The Google Search Parameters are applicable when making a request to the Search API to retrieve Google search results for a given search term. The search term is specified in the q parameter. The location your search is run from is determined by the location parameter, which can be populated with a full_name value from the Locations API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The keyword you want to use to perform the search.",
                        "default": "tacos"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "include_answer_box",
                        "type": "BOOLEAN",
                        "description": "Determines whether to include the answer box (sometimes called the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"featured snippet\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") in the `organic_results` array and treat it as the first result. This may be desirable if you treat the result Bing displayed in the `answer_box` as the first organic result.\n",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Determines the page of results to return, defaults to `1`. Use in combination with the num parameter to implement pagination.",
                        "default": ""
                    },
                    {
                        "name": "flatten_results",
                        "type": "BOOLEAN",
                        "description": "Can be set to `true` or `false`. Determines whether VALUE SERP flattens the `inline_videos`, `inline_images`, `inline_tweets`, `top_stories` and `local_results` and shows them inline with the `organic_results`. This is useful if you want a simplified list of all of the results shown for an organic web search, irrespective of the type of result. When `flatten_results=true `then a new property type is added to each item in the `organic_results` array indicating the type of result (i.e. \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ad\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inline_tweets\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" etc).\n",
                        "default": ""
                    },
                    {
                        "name": "nfpr",
                        "type": "NUMBER",
                        "description": "Determines whether to exclude results from auto-corrected queries that were spelt wrong. Can be set to `1` to exclude auto-corrected results, or `0 `(default) to include them.\n",
                        "default": ""
                    },
                    {
                        "name": "tbs",
                        "type": "STRING",
                        "description": "Sets a specific string to be added to the Google `tbs` parameter in the underlying Google query. The `tbs` parameter is normally generated automatically by the API, but it can be set explicitly also.\n",
                        "default": ""
                    },
                    {
                        "name": "num",
                        "type": "NUMBER",
                        "description": "Determines the number of results to show per page. Use in combination with the `page` parameter to implement pagination. \n",
                        "default": ""
                    },
                    {
                        "name": "time_period_max",
                        "type": "STRING",
                        "description": "Determines the maximum (i.e. 'to') time to use when `time_period` is set to `custom`. Should be in the form `MM/DD/YYYY`, I.e. for 31st December 2018 `time_period_max` would be `12/31/2018`.\n",
                        "default": ""
                    },
                    {
                        "name": "safe",
                        "type": "STRING",
                        "description": "Determines whether `Safe Search` is enabled for the results. Can be set to `active` to enable Safe Search, or `off` to disable Safe Search.\n",
                        "default": ""
                    },
                    {
                        "name": "knowledge_graph_id",
                        "type": "STRING",
                        "description": "The `knowledge_graph_id` request parameter sets the `kgmid` Google parameter. You can use this to prompt a specific knowledge graph to show in the results, an example would be `knowledge_graph_id=/m/0jg24`\n",
                        "default": ""
                    },
                    {
                        "name": "uule",
                        "type": "STRING",
                        "description": "The Google UULE parameter - use to pass through a custom `uule` parameter to Google. VALUE SERP automatically generates the `uule` when you use the `location` parameter but we allow you to overwrite it directly by specifying a `uule` directly.\n",
                        "default": ""
                    },
                    {
                        "name": "lr",
                        "type": "STRING",
                        "description": "The `lr` parameter limits the results to websites containing the specified language. View the full list of supported `lr` values [here](https://www.valueserp.com/docs/search-api/reference/google-lr-languages).\n",
                        "default": ""
                    },
                    {
                        "name": "cr",
                        "type": "STRING",
                        "description": "The `cr` parameter instructs Google to limit the results to websites in the specified country. View the full list of supported `cr` values [here](https://www.valueserp.com/docs/search-api/reference/google-cr-countries).\n",
                        "default": ""
                    },
                    {
                        "name": "filter",
                        "type": "NUMBER",
                        "description": "Determines if the filters for` Similar Results` and `Omitted Results` are on or off. Can be set to `1` (default) to enable these filters, or `0` to disable these filters.\n",
                        "default": ""
                    },
                    {
                        "name": "time_period_min",
                        "type": "STRING",
                        "description": "Determines the minimum (i.e. 'from') time to use when `time_period` is set to `custom`. Should be in the form `MM/DD/YYYY`, I.e. for 31st December 2018 `time_period_min` would be `12/31/2018`.\n",
                        "default": ""
                    },
                    {
                        "name": "google_domain",
                        "type": "STRING",
                        "description": "The Google domain to use to run the search query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com`.",
                        "default": ""
                    },
                    {
                        "name": "time_period",
                        "type": "STRING",
                        "description": "Determines the time period of the results shown. It can be set to `last_hour`, `last_day` (for the last 24 hours), `last_week` (for the last 7 days), `last_month`, `last_year` or `custom`. When using `custom` you must also specify one or both of the `time_period_min` or `time_period_max` parameters to define the custom time period.\n",
                        "default": ""
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Determines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP[ built-in locations](https://www.valueserp.com/docs/locations-api) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_auto` parameter).",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n",
                        "default": ""
                    },
                    {
                        "name": "location_auto",
                        "type": "BOOLEAN",
                        "description": "If the `location` field is set to a VALUE SERP [built-in location](https://www.valueserp.com/docs/locations-api) from the [Locations API](https://www.valueserp.com/docs/locations-api), and `location_auto` is set to `true` (default) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.",
                        "default": ""
                    },
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "info": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Locations",
                "api_description": "The VALUE SERP Locations API allows you to search for VALUE SERP supported Google search locations. You can supply the `full_name` returned by the Locations API as the `location` parameter in a Search API query to retrieve search results localized to that location.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query to use to search for locations, i.e. new york or mumbai.\n\ni.e. `London`",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Limits the results to a specific type of location. Valid values are: `city`, `country`, `county`, `dma_region`, `municipality`, `neighborhood`, `state`, `postal_code` or `province`. Multiple location types should be presented as a comma separated list (i.e.`type=state,city` to include Location results that are of type `state` or `city`).\n",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limits the number of search results returned per page. Defaults to `10`. The maximum number of location results returned per page is `100`. Use in conjunction with the the `page` parameter to implement pagination.\n",
                        "default": ""
                    },
                    {
                        "name": "parent_id",
                        "type": "STRING",
                        "description": "Limits the search to child locations of the given `parent_id`. Useful for retrieving all sub-locations of a given location (all cities within a country, for example).\n",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The `id` of a specific location (location ids are returned with all results from the Locations API).\n",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Specifies the page of results to retrieve from `0` (first page) to a maximum page number of `100` (Value SERP does not support paging beyond the 100th page). Defaults to `0`. Use in conjunction with the limit parameter to limit the number of results returned per page.\n",
                        "default": ""
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Limits the results to locations in specific countries. See [supported countries](https://www.valueserp.com/docs/search-api/reference/google-countries) for a full list of all supported values. Multiple countries should be presented as a comma separated list (i.e. `country_code=de,fr,us` for Germany, France and the United States).\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Google Product Online Sellers",
                "api_description": "The Google Product Online Sellers Parameters are applicable when making a request with `search_type=product` and `product_type=sellers_online` to retrieve product online sellers results for a given product ID. The product ID is specified in the `product_id` parameter and you should also specify a location parameter to geo-locate the request (locations can be retrieved via the Locations API).\n\nGoogle Product IDs are returned by Google Shopping search requests.\n\n**Products & Location**\nGoogle Product pages are highly location-sensitive so it is important that you specify a location that matches the location that was used to retrieve the `product_id` in the original Google Shopping search request.",
                "required_parameters": [
                    {
                        "name": "product_id",
                        "type": "STRING",
                        "description": "The Google Product ID to retrieve. Google Product IDs are returned by [Google Shopping search ](https://www.valueserp.com/docs/search-api/results/google/shopping)requests.",
                        "default": ""
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Should be set to `product_type=reviews`\n",
                        "default": "sellers_online"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "product"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n",
                        "default": ""
                    },
                    {
                        "name": "location_auto",
                        "type": "STRING",
                        "description": "If the `location` field is set to a VALUE SERP built-in location from the Locations API, and `location_auto` is set to `true` (default) then the google_domain, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.\n",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n",
                        "default": ""
                    },
                    {
                        "name": "uule",
                        "type": "STRING",
                        "description": "The Google UULE parameter - use to pass through a custom uule parameter to Google. VALUE SERP automatically generates the uule when you use the `location` parameter but we allow you to overwrite it directly by specifying a uule directly.\n",
                        "default": ""
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Determines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP `built-in locations `then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_autoparameter`).\n\nNote that Google Product requests are highly location-sensitive. It's important that you set a `location` parameter for the geographic location in which the `product_id` was found.",
                        "default": ""
                    },
                    {
                        "name": "product_free_shipping",
                        "type": "BOOLEAN",
                        "description": "Determines whether to filter to only products with free shipping. Valid values are `true` or `false`.\n",
                        "default": ""
                    },
                    {
                        "name": "google_domain",
                        "type": "STRING",
                        "description": "The Google domain to use to run the query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com.`\n",
                        "default": ""
                    },
                    {
                        "name": "product_condition_new",
                        "type": "BOOLEAN",
                        "description": "Determines whether to filter to only new (non-used) products. Valid values are `true` or `false`.\n",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "\nSets the sort ordering of the product online sellers returned. Valid values are:\n`base_price`\nSort product online sellers results by base price.\n`total_price`\nSort product online sellers results by total price.\n`promotion`\nSort product online sellers results by current promotion deals (special offers).\n`seller_rating`\nSort product online sellers results by seller rating (high to low).",
                        "default": ""
                    },
                    {
                        "name": "product_condition_used",
                        "type": "BOOLEAN",
                        "description": "Determines whether to filter to only used (non-new) products. Valid values are `true` or `false`.\n",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Determines the page of results to return, defaults to `1`.\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Google Product",
                "api_description": "The Google Product Parameters are applicable when making a request with `search_type=product` to retrieve product results for a given product ID. The product ID is specified in the `product_id `parameter and you should also specify a `location` parameter to geo-locate the request (locations can be retrieved via the [Locations API](https://www.valueserp.com/docs/locations-api/overview)).\n\nGoogle Product IDs are returned by Google Shopping search requests.",
                "required_parameters": [
                    {
                        "name": "product_id",
                        "type": "STRING",
                        "description": "The Google Product ID to retrieve. Google Product IDs are returned by [Google Shopping search ](https://www.valueserp.com/docs/search-api/results/google/shopping)requests.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "product"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n",
                        "default": ""
                    },
                    {
                        "name": "uule",
                        "type": "STRING",
                        "description": "The Google UULE parameter - use to pass through a custom uule parameter to Google. VALUE SERP automatically generates the uule when you use the `location` parameter but we allow you to overwrite it directly by specifying a uule directly.\n",
                        "default": ""
                    },
                    {
                        "name": "location_auto",
                        "type": "STRING",
                        "description": "If the `location` field is set to a VALUE SERP built-in location from the Locations API, and `location_auto` is set to `true` (default) then the google_domain, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.\n",
                        "default": ""
                    },
                    {
                        "name": "google_domain",
                        "type": "STRING",
                        "description": "The Google domain to use to run the query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com.`\n",
                        "default": ""
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Determines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP `built-in locations `then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_autoparameter`).\n\nNote that Google Product requests are highly location-sensitive. It's important that you set a `location` parameter for the geographic location in which the `product_id` was found.",
                        "default": ""
                    },
                    {
                        "name": "product_condition_new",
                        "type": "BOOLEAN",
                        "description": "Determines whether to filter to only new (non-used) products. Valid values are `true` or `false.`\n",
                        "default": ""
                    },
                    {
                        "name": "product_condition_used",
                        "type": "BOOLEAN",
                        "description": "Determines whether to filter to only used (non-new) products. Valid values are `true` or `false.`\n",
                        "default": ""
                    },
                    {
                        "name": "product_free_shipping",
                        "type": "BOOLEAN",
                        "description": "Determines whether to filter to only products with free shipping. Valid values are `true` or `false.`\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Google Place Details",
                "api_description": "The Google Place Details Parameters are applicable when making a request with search_type=place_details to retrieve place details for a Place. The Place is specified in the data_id parameter, data_id values are returned from search_type=places Places requests.\n\nIf the data_id is not available you may also request a place_details request using a data_cid (a standardised Google Place identifier you may already have access to). However, data_id is the recommended identifier to use.",
                "required_parameters": [
                    {
                        "name": "search_type",
                        "type": "STRING",
                        "description": "",
                        "default": "place_details"
                    },
                    {
                        "name": "data_cid",
                        "type": "STRING",
                        "description": "The `data_cid` (a standard Google Place identifier) of the Place to retrieve place details for. `data_cid` values are returned in [Places requests](https://www.valueserp.com/docs/search-api/searches/google/places).\n\nNote that either a `data_id` or `data_cid` identifier must be supplied.",
                        "default": ""
                    },
                    {
                        "name": "data_id",
                        "type": "STRING",
                        "description": "The `data_id` of the Place to retrieve place details for. `data_id` values are returned in [Places requests](https://www.valueserp.com/docs/search-api/searches/google/places).\n\nNote that either a `data_id` or `data_cid` identifier must be supplied.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Google Product Specifications",
                "api_description": "The Google Product Specifications Parameters are applicable when making a request with `search_type=product` and `product_type=specifications` to retrieve product specifications results for a given product ID. The product ID is specified in the `product_id` parameter and you should also specify a location parameter to geo-locate the request (locations can be retrieved via the Locations API).\n\nGoogle Product IDs are returned by Google Shopping search requests.\n\n**Products & Location**\nGoogle Product pages are highly location-sensitive so it is important that you specify a `location` that matches the location that was used to retrieve the `product_id` in the original Google Shopping search request.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "product"
                    },
                    {
                        "name": "product_id",
                        "type": "STRING",
                        "description": "The Google Product ID to retrieve. Google Product IDs are returned by [Google Shopping search ](https://www.valueserp.com/docs/search-api/results/google/shopping)requests.",
                        "default": ""
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Should be set to `product_type=reviews`\n",
                        "default": "specifications"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Determines the page of results to return, defaults to `1`.\n",
                        "default": ""
                    },
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n",
                        "default": ""
                    },
                    {
                        "name": "google_domain",
                        "type": "STRING",
                        "description": "The Google domain to use to run the query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com.`\n",
                        "default": ""
                    },
                    {
                        "name": "uule",
                        "type": "STRING",
                        "description": "The Google UULE parameter - use to pass through a custom uule parameter to Google. VALUE SERP automatically generates the uule when you use the `location` parameter but we allow you to overwrite it directly by specifying a uule directly.\n",
                        "default": ""
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Determines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP `built-in locations `then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_autoparameter`).\n\nNote that Google Product requests are highly location-sensitive. It's important that you set a `location` parameter for the geographic location in which the `product_id` was found.",
                        "default": ""
                    },
                    {
                        "name": "location_auto",
                        "type": "STRING",
                        "description": "If the `location` field is set to a VALUE SERP built-in location from the Locations API, and `location_auto` is set to `true` (default) then the google_domain, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Google Product Reviews",
                "api_description": "The Google Product Reviews Parameters are applicable when making a request with `search_type=product` and `product_type=reviews` to retrieve product reviews results for a given product ID. The product ID is specified in the `product_id` parameter and you should also specify a location parameter to geo-locate the request (locations can be retrieved via the Locations API).\n\nGoogle Product IDs are returned by Google Shopping search requests.\n\n**Products & Location**\nGoogle Product pages are highly location-sensitive so it is important that you specify a location that matches the location that was used to retrieve the `product_id` in the original Google Shopping search request.\n\n**Place Reviews Pagination**\nProduct Reviews results do not contain a traditional pagination section where a specific page of results is uniquely addressable. Instead, each `product_type=reviews` result will return a `next_page_token` in its' product_results.pagination object. This `next_page_token `can be passed in to the `next_page_token` request parameter to retrieve the next page of Product Reviews results.",
                "required_parameters": [
                    {
                        "name": "product_id",
                        "type": "STRING",
                        "description": "The Google Product ID to retrieve. Google Product IDs are returned by [Google Shopping search ](https://www.valueserp.com/docs/search-api/results/google/shopping)requests.",
                        "default": ""
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Should be set to `product_type=reviews`\n",
                        "default": "reviews"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "product"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "next_page_token",
                        "type": "STRING",
                        "description": "Product Reviews results do not contain a traditional pagination section where a specific page of results is uniquely addressable. Instead, each `product_type=reviews` result will return a `next_page_token` in its `product_results.pagination` object. This `next_page_token` can be passed in to the next_page_token request parameter to retrieve the next page of Product Reviews results.\n",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n",
                        "default": ""
                    },
                    {
                        "name": "uule",
                        "type": "STRING",
                        "description": "The Google UULE parameter - use to pass through a custom uule parameter to Google. VALUE SERP automatically generates the uule when you use the `location` parameter but we allow you to overwrite it directly by specifying a uule directly.\n",
                        "default": ""
                    },
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n",
                        "default": ""
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Determines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP `built-in locations `then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_autoparameter`).\n\nNote that Google Product requests are highly location-sensitive. It's important that you set a `location` parameter for the geographic location in which the `product_id` was found.",
                        "default": ""
                    },
                    {
                        "name": "location_auto",
                        "type": "STRING",
                        "description": "If the `location` field is set to a VALUE SERP built-in location from the Locations API, and `location_auto` is set to `true` (default) then the google_domain, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.\n",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "\nSets the sort ordering of the product reviews returned. Valid values are:\n`relevance`\nSort product reviews results by relevance, the default.\n`date`\nSort product reviews results by date, most recent first.",
                        "default": ""
                    },
                    {
                        "name": "google_domain",
                        "type": "STRING",
                        "description": "The Google domain to use to run the query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com.`\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Google Shopping",
                "api_description": "The Google Shopping Parameters are applicable when making a request with `search_type=shopping` to retrieve Shopping results for a given search term. The search term is specified in the `q` parameter and the optional location parameter can be used to geo-locate the shopping request (`locations` can be retrieved via the [Locations API](https://www.valueserp.com/docs/locations-api/overview)).",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The keyword you want to use to perform the Shopping search.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "shopping"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "shopping_filters",
                        "type": "STRING",
                        "description": "A shopping filter (i.e. \\\"Brand\\\") to filter the results to. Shopping filter values are returned in the `filters` property of the [shopping response](https://www.valueserp.com/docs/search-api/results/google/shopping).\n",
                        "default": ""
                    },
                    {
                        "name": "shopping_condition",
                        "type": "STRING",
                        "description": "The condition of products returned. Can be set to `new` or `used`.\n",
                        "default": ""
                    },
                    {
                        "name": "shopping_price_max",
                        "type": "STRING",
                        "description": "The maximum price of products. For example `shopping_price_max=4.99`\n",
                        "default": ""
                    },
                    {
                        "name": "shopping_price_min",
                        "type": "STRING",
                        "description": "The minimum price of products. For example `shopping_price_min=4.99`\n",
                        "default": ""
                    },
                    {
                        "name": "shopping_merchants",
                        "type": "STRING",
                        "description": "A comma-separated list of merchant IDs to retrieve shopping results. Merchant ID's can be found in the `merchagg:` section of any Google Shopping URL.\n",
                        "default": ""
                    },
                    {
                        "name": "uule",
                        "type": "STRING",
                        "description": "The Google UULE parameter - use to pass through a custom `uule` parameter to Google. VALUE SERP automatically generates the `uule` when you use the `location` parameter but we allow you to overwrite it directly by specifying a `uule` directly.\n",
                        "default": ""
                    },
                    {
                        "name": "google_domain",
                        "type": "STRING",
                        "description": "The Google domain to use to run the search query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com`.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Determines the page of results to return, defaults to `1`. Use in combination with the `num` parameter to implement pagination.\n",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sets the sort ordering of the shopping results returned. Valid values are:\n\n`relevance`\nSort shopping results by relevance to the search term supplied in the q parameter, the default.\n`price_low_to_high`\nSort shopping results by lowest to highest price.\n`price_high_to_low`\nSort shopping results by highest to lowest price.\n`review_score`\nSort shopping results by review score, highest review score first.",
                        "default": ""
                    },
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n",
                        "default": ""
                    },
                    {
                        "name": "shopping_buy_on_google",
                        "type": "BOOLEAN",
                        "description": "Determines whether the \\\\\\\"Buy on Google\\\\\\\" option is selected when running a `search_type=shopping` search. Valid values are `true` or false.\n",
                        "default": ""
                    },
                    {
                        "name": "num",
                        "type": "STRING",
                        "description": "Determines the number of results to show per page. Use in combination with the `page` parameter to implement pagination.\n\nNote the `num` parameter is not always honoured by Google for `search_type=shopping` requests. When using the num parameter you are requesting that number of results per page. There is no guarantee that that number of results will necessarily be served.",
                        "default": ""
                    },
                    {
                        "name": "location_auto",
                        "type": "BOOLEAN",
                        "description": "If the `location` field is set to a VALUE SERP [built-in location](https://www.valueserp.com/docs/locations-api) from the [Locations API](https://www.valueserp.com/docs/locations-api), and `location_auto` is set to `true` (default) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.",
                        "default": ""
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Determines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP[ built-in locations](https://www.valueserp.com/docs/locations-api) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_auto` parameter).",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Google Places",
                "api_description": "VALUE SERP parses Google Local & Maps results (i.e. local business listings) when the search_type parameter is set to search_type=places. When this parameter is set VALUE SERP provides a places_results array in the result JSON that contains the [Places or Maps results](https://www.valueserp.com/docs/search-api/results/google/places).\n\n**Google Local vs. Google Maps**\n`search_type=places` requests can be executed in two modes to retrieve data from a [Google Local results page](https://www.google.com/search?q=pizza&gl=us&hl=en&uule=w+CAIQICIgTWFuaGF0dGFuLE5ldyBZb3JrLFVuaXRlZCBTdGF0ZXM&tbm=lcl) or from a [Google Maps results page](https://www.google.com/maps/search/pizza/@43.437677,-3.8392765,15z).\n\nYou set the Location of the `search_type=places` request using the `location` request parameter and this can be expressed as either a text location name from the [Locations API](https://www.valueserp.com/docs/locations-api/overview) (which will result in a [Google Local result](https://www.google.com/search?q=pizza&gl=us&hl=en&uule=w+CAIQICIgTWFuaGF0dGFuLE5ldyBZb3JrLFVuaXRlZCBTdGF0ZXM&tbm=lcl)), or as a latitude, longitude and zoom level (which will result in a [Google Maps result](https://www.google.com/maps/search/pizza/@43.437677,-3.8392765,15z)).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Determines the page of results to return, defaults to `1`. Use in combination with the `num` parameter to implement pagination.\n",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n",
                        "default": ""
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "**Google Local**\n\nDetermines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP[ built-in locations](https://www.valueserp.com/docs/locations-api) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_auto` parameter).\n\n**Google Maps**\nFormatting the `location` parameter for Google Maps requests\n\nTo get Google Maps results based on latitude and longitude coordinates you should specify your `location` parameter in the form `location=lat:43.437677,lon:-3.8392765,zoom:15` where `43.437677` is your latitude value, `-3.8392765` is your longitude value and `15` is your zoom value.\n\nDelimit each section with a comma `,`, and delimit each name/value pair with a colon `:`.\n\nValid `zoom` values are between `3` (maximum zoom-out) and `21` (maximum zoom-in).\n\nGoogle can return results outside the bounds of the zoom level in some instances. If this behaviour is not desirable then specifying `strict:true` in the `location` parameter will only return results within the current zoom level. Eg. `lat:39.58467741051493,lon:-0.6752313712718961,zoom:15,strict:true`",
                        "default": ""
                    },
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n",
                        "default": ""
                    },
                    {
                        "name": "num",
                        "type": "NUMBER",
                        "description": "Note the maximum number of results per page Google allow, for Places results, is `20`.\n\nDetermines the number of results to show per `page`. Use in combination with the `page` parameter to implement pagination. \n",
                        "default": ""
                    },
                    {
                        "name": "google_domain",
                        "type": "STRING",
                        "description": "The Google domain to use to run the search query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com`.",
                        "default": ""
                    },
                    {
                        "name": "location_auto",
                        "type": "BOOLEAN",
                        "description": "If the `location` field is set to a VALUE SERP [built-in location](https://www.valueserp.com/docs/locations-api) from the [Locations API](https://www.valueserp.com/docs/locations-api), and `location_auto` is set to `true` (default) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "VALUE SERP",
                "api_name": "Google Video",
                "api_description": "The Google Video Parameters are applicable when making a request with search_type=videos to retrieve video results for a given search term. The search term is specified in the q parameter and the optional location parameter can be used to geo-locate the videos request (locations can be retrieved via the Locations API).",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The keyword you want to use to perform the search.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "video"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Determines the page of results to return, defaults to `1`. Use in combination with the `num` parameter to implement pagination.\n",
                        "default": ""
                    },
                    {
                        "name": "num",
                        "type": "NUMBER",
                        "description": "Determines the number of results to show per page. Use in combination with the `page` parameter to implement pagination",
                        "default": ""
                    },
                    {
                        "name": "time_period_max",
                        "type": "STRING",
                        "description": "Determines the maximum (i.e. 'to') time to use when `time_period` is set to `custom`. Should be in the form `MM/DD/YYYY`, I.e. for 31st December 2018 `time_period_max` would be `12/31/2018`.\n",
                        "default": ""
                    },
                    {
                        "name": "safe",
                        "type": "STRING",
                        "description": "Determines whether `Safe Search` is enabled for the results. Can be set to `active` to enable Safe Search, or `off` to disable Safe Search.\n",
                        "default": ""
                    },
                    {
                        "name": "nfpr",
                        "type": "NUMBER",
                        "description": "Determines whether to exclude results from auto-corrected queries that were spelt wrong. Can be set to `1` to exclude auto-corrected results, or `0` (default) to include them.",
                        "default": ""
                    },
                    {
                        "name": "time_period_min",
                        "type": "STRING",
                        "description": "Determines the minimum (i.e. 'from') time to use when `time_period` is set to `custom`. Should be in the form `MM/DD/YYYY`, I.e. for 31st December 2018 `time_period_min` would be `12/31/2018`.\n",
                        "default": ""
                    },
                    {
                        "name": "cr",
                        "type": "STRING",
                        "description": "The `cr` parameter instructs Google to limit the results to websites in the specified country. View the full list of supported `cr` values [here](https://www.valueserp.com/docs/search-api/reference/google-cr-countries).\n",
                        "default": ""
                    },
                    {
                        "name": "time_period",
                        "type": "STRING",
                        "description": "Determines the time period of the results shown. It can be set to `last_hour`, `last_day` (for the last 24 hours), `last_week` (for the last 7 days), `last_month`, `last_year` or `custom`. When using `custom` you must also specify one or both of the `time_period_min` or `time_period_max` parameters to define the custom time period.\n",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n",
                        "default": ""
                    },
                    {
                        "name": "uule",
                        "type": "STRING",
                        "description": "The Google UULE parameter - use to pass through a custom `uule` parameter to Google. VALUE SERP automatically generates the `uule` when you use the `location` parameter but we allow you to overwrite it directly by specifying a `uule` directly.\n",
                        "default": ""
                    },
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n",
                        "default": ""
                    },
                    {
                        "name": "lr",
                        "type": "STRING",
                        "description": "The `lr` parameter limits the results to websites containing the specified language. View the full list of supported `lr` values [here](https://www.valueserp.com/docs/search-api/reference/google-lr-languages).\n",
                        "default": ""
                    },
                    {
                        "name": "google_domain",
                        "type": "STRING",
                        "description": "The Google domain to use to run the search query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com`.",
                        "default": ""
                    },
                    {
                        "name": "location_auto",
                        "type": "BOOLEAN",
                        "description": "If the `location` field is set to a VALUE SERP [built-in location](https://www.valueserp.com/docs/locations-api) from the [Locations API](https://www.valueserp.com/docs/locations-api), and `location_auto` is set to `true` (default) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.",
                        "default": ""
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Determines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP[ built-in locations](https://www.valueserp.com/docs/locations-api) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_auto` parameter).",
                        "default": ""
                    },
                    {
                        "name": "filter",
                        "type": "NUMBER",
                        "description": "Determines if the filters for `Similar Results` and `Omitted Results` are on or off. Can be set to `1 ` (default) to enable these filters, or `0` to disable these filters.\n",
                        "default": ""
                    },
                    {
                        "name": "tbs",
                        "type": "STRING",
                        "description": "Sets a specific string to be added to the Google `tbs` parameter in the underlying Google query. The `tbs` parameter is normally generated automatically by the API, but it can be set explicitly also.\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "My friends and I are planning a hiking trip to Yosemite National Park. Can you provide us with the weather forecast for the park for the next 3 days? We would like to know the temperature, precipitation probability, and wind speed. Additionally, we are interested in finding hiking trails in the park. Could you suggest some popular trails and provide information on their difficulty level and scenic views?",
        "relevant APIs": [
            [
                "VALUE SERP",
                "Google Search"
            ],
            [
                "VALUE SERP",
                "Google Place Details"
            ],
            [
                "VALUE SERP",
                "Google Video"
            ]
        ],
        "query_id": 25483
    },
    {
        "api_list": [
            {
                "category_name": "Mapping",
                "tool_name": "Dargan",
                "api_name": "Distance",
                "api_description": "Gets the distance between 2 postcodes in KM",
                "required_parameters": [
                    {
                        "name": "postcodeA",
                        "type": "STRING",
                        "description": "",
                        "default": "CF103NP"
                    },
                    {
                        "name": "postcodeB",
                        "type": "STRING",
                        "description": "",
                        "default": "CF103RB"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "A": {
                        "postcode": "str",
                        "latitude": "float",
                        "longitude": "float"
                    },
                    "B": {
                        "postcode": "str",
                        "latitude": "float",
                        "longitude": "float"
                    },
                    "Distance": "float"
                }
            },
            {
                "category_name": "Mapping",
                "tool_name": "Dargan",
                "api_name": "Geocode",
                "api_description": "Returns the latitude and longitude for a given postcode",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "",
                        "default": "CF103NP"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "postcode": "str",
                    "latitude": "float",
                    "longitude": "float"
                }
            },
            {
                "category_name": "Mapping",
                "tool_name": "Dargan",
                "api_name": "In Radius",
                "api_description": "Find all postcodes within a certain radius (in KM) of a postcode",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "",
                        "default": "CF103NP"
                    },
                    {
                        "name": "radius",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0.1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Distance": "float",
                    "Postcode": "str"
                }
            }
        ],
        "query": "I'm a developer working on a location-based app and I need to retrieve the latitude and longitude coordinates for CF103NP. Can you please provide me with this information? Additionally, I would like to calculate the distance between CF103NP and CF103RB.",
        "relevant APIs": [
            [
                "Dargan",
                "Geocode"
            ],
            [
                "Dargan",
                "Distance"
            ]
        ],
        "query_id": 78490
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Groundhog Day API",
                "api_name": "predictions",
                "api_description": "Get all predictions for a given year.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "A calendar year",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "predictions": [
                        {
                            "year": "int",
                            "shadow": "int",
                            "details": "str",
                            "groundhog": {
                                "id": "int",
                                "slug": "str",
                                "shortname": "str",
                                "name": "str",
                                "city": "str",
                                "region": "str",
                                "country": "str",
                                "coordinates": "str",
                                "source": "str",
                                "contact": "str",
                                "currentPrediction": "str",
                                "isGroundhog": "int",
                                "type": "str",
                                "active": "int",
                                "description": "str",
                                "image": "str"
                            },
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Groundhog Day API",
                "api_name": "groundhogs",
                "api_description": "Returns all prognosticating animals with their known predictions.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "isGroundhog",
                        "type": "STRING",
                        "description": "Filter groundhogs by type (actual, alive groundhogs, or other prognosticators)",
                        "default": "1"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Filter groundhogs by country of origin (USA or Canada).",
                        "default": "Canada or USA"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "groundhogs": [
                        {
                            "id": "int",
                            "slug": "str",
                            "shortname": "str",
                            "name": "str",
                            "city": "str",
                            "region": "str",
                            "country": "str",
                            "coordinates": "str",
                            "source": "str",
                            "contact": "str",
                            "currentPrediction": "str",
                            "isGroundhog": "int",
                            "type": "str",
                            "active": "int",
                            "successor": "str",
                            "description": "str",
                            "image": "str",
                            "predictionsCount": "int",
                            "predictions": [
                                {
                                    "year": "int",
                                    "shadow": "NoneType",
                                    "details": "str",
                                    "_list_length": 138
                                }
                            ],
                            "_list_length": 32
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Groundhog Day API",
                "api_name": "root",
                "api_description": "Returns a welcome message.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "_links": {
                        "self": {
                            "href": "str"
                        },
                        "groundhogs": {
                            "href": "str"
                        },
                        "groundhog": {
                            "href": "str"
                        },
                        "predictions": {
                            "href": "str"
                        },
                        "spec": {
                            "href": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Groundhog Day API",
                "api_name": "spec",
                "api_description": "Gets the schema for the JSON API as a yaml file.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Groundhog Day API",
                "api_name": "groundhog",
                "api_description": "Returns a prognosticating animal and its known predictions.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "Groundhog name in kebab-case: (eg, lucy-the-lobster)",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "groundhog": {
                        "id": "int",
                        "slug": "str",
                        "shortname": "str",
                        "name": "str",
                        "city": "str",
                        "region": "str",
                        "country": "str",
                        "coordinates": "str",
                        "source": "str",
                        "contact": "str",
                        "currentPrediction": "str",
                        "isGroundhog": "int",
                        "type": "str",
                        "active": "int",
                        "description": "str",
                        "image": "str",
                        "predictions": [
                            {
                                "year": "int",
                                "shadow": "int",
                                "details": "str",
                                "_list_length": 5
                            }
                        ]
                    }
                }
            }
        ],
        "query": "I am planning a trip to Punxsutawney, Pennsylvania for Groundhog Day next year. Can you provide me with the predictions for the year 2023? I would like to know the details of each prediction, including whether the groundhog saw its shadow or not. Additionally, please give me information about Punxsutawney Phil, including his image and contact details.",
        "relevant APIs": [
            [
                "Groundhog Day API",
                "predictions"
            ],
            [
                "Groundhog Day API",
                "groundhog"
            ]
        ],
        "query_id": 72092
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "OfferInfo",
                "api_description": "get offer data",
                "required_parameters": [
                    {
                        "name": "joburl",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "SearchOffers",
                "api_description": "get all offers url",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Secretary"
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Frankfurt"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "nextOffset": "int",
                    "currentOffset": "str",
                    "offers": [
                        "list of str with length 10"
                    ]
                }
            }
        ],
        "query": "My company is hiring and we are interested in secretary positions in Frankfurt. Can you assist us in finding the URLs of the top 10 offers? Also, please provide the details of each offer, including the job description, requirements, and company information.",
        "relevant APIs": [
            [
                "Google Jobs",
                "SearchOffers"
            ],
            [
                "Google Jobs",
                "OfferInfo"
            ]
        ],
        "query_id": 65125
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Funds",
                "api_name": "v1GetFundLatestPrice",
                "api_description": "Get fund latest price",
                "required_parameters": [
                    {
                        "name": "isin",
                        "type": "STRING",
                        "description": "Fund's ISIN",
                        "default": "LU0690375182"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "market": "str",
                    "price": "float",
                    "humanDate": "str",
                    "epochSecs": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Funds",
                "api_name": "v1GetFundHistoricalPrices",
                "api_description": "Get fund's historical prices",
                "required_parameters": [
                    {
                        "name": "isin",
                        "type": "STRING",
                        "description": "Fund's ISIN",
                        "default": "LU0690375182"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "Finishing date. Format YYYY-MM-DD.",
                        "default": "2020-12-31"
                    },
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Starting date. Format YYYY-MM-DD.",
                        "default": "2015-01-25"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "humanDate": "str",
                    "epochSecs": "int",
                    "price": "float"
                }
            }
        ],
        "query": "I need to analyze the performance of a mutual fund. Could you fetch the latest price and historical prices of the fund with ISIN LU0690375182? It would be great if you could provide the prices from 2015-01-25 to 2020-12-31.",
        "relevant APIs": [
            [
                "Funds",
                "v1GetFundLatestPrice"
            ],
            [
                "Funds",
                "v1GetFundHistoricalPrices"
            ]
        ],
        "query_id": 45533
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Pk to Username",
                "api_description": "Find username from PK (userid)",
                "required_parameters": [
                    {
                        "name": "pk",
                        "type": "STRING",
                        "description": "",
                        "default": "177402262"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Validate Username",
                "api_description": "Instagram Username validation",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "lelepons"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Music Search",
                "api_description": "Search music/sound/audio names and get artists cover and sounds url",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search Sounds/Audio name with artists/movie name\n\nE.g \nJustin Bieber Love me\n\n",
                        "default": "Titanic My Heart Will Go On"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Search Locations",
                "api_description": "Location name search from keyword",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "toronto"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Search Hashtags",
                "api_description": "Search tags name by keyword",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "fitness"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Profile",
                "api_description": "Instagram Profile",
                "required_parameters": [
                    {
                        "name": "ig",
                        "type": "STRING",
                        "description": "",
                        "default": "lelepons"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a company event in Toronto and need to find suitable locations to host it. Can you help me search for locations using a keyword? I would also like to validate the usernames of our company's Instagram account and profile.",
        "relevant APIs": [
            [
                "Instagram_v2",
                "Search Locations"
            ],
            [
                "Instagram_v2",
                "Validate Username"
            ],
            [
                "Instagram_v2",
                "Profile"
            ]
        ],
        "query_id": 48483
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "ping",
                "api_description": "Check that server is still alive",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "datetime": "str",
                    "version": "str",
                    "uptime": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "tickerData",
                "api_description": "Returns a list of ticker records",
                "required_parameters": [
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "Ticker period",
                        "default": "1h"
                    },
                    {
                        "name": "startDate",
                        "type": "STRING",
                        "description": "Start date",
                        "default": "2010-04-12T14:30"
                    },
                    {
                        "name": "tickerName",
                        "type": "STRING",
                        "description": "Ticker name",
                        "default": "gold"
                    },
                    {
                        "name": "endDate",
                        "type": "STRING",
                        "description": "End date",
                        "default": "2010-04-20T12:30"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "records": [
                        {
                            "closeDateTime": "str",
                            "open": "float",
                            "close": "float",
                            "high": "float",
                            "low": "float",
                            "volume": "int",
                            "_list_length": 142
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "tickersList",
                "api_description": "Returns a list of available tickers",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a stock market analyst and I need to analyze the trends for gold. Can you fetch the ticker data for gold from April 12, 2010, 14:30 to April 20, 2010, 12:30? Please include the open, close, high, low prices, and volume for each record. Also, it would be great if you could provide the server time, version, and uptime to ensure the server is running smoothly.",
        "relevant APIs": [
            [
                "stocks_archive",
                "tickerData"
            ],
            [
                "stocks_archive",
                "ping"
            ]
        ],
        "query_id": 19696
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "DomainStatus",
                "api_description": "Returns domain status if is webmail or disposable.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "errors": {
                        "status": "bool",
                        "code": "int",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "Enrichment",
                "api_description": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person\u2019s name, location and social handles from an email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "b.mohamed@tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "NoneType",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "NoneType",
                        "gender": "str",
                        "phone_number": "NoneType",
                        "position": "str",
                        "twitter": "NoneType",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "DomainSearch",
                "api_description": "You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user /account/sessions endpoint. Use width, height and quality arguments to change the output settings.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name from which you want to find the email addresses. For example, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"stripe.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",
                        "default": "stripe.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "department",
                        "type": "STRING",
                        "description": "Get only email addresses for people working in the selected department(s).",
                        "default": "pr"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Specifies the number of email addresses to skip. The default is 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"organization\": {\"location\": {\"country\": \"str\", \"city\": \"str\", \"state\": \"str\", \"street_address\": \"str\"}, \"social_links\": {\"twitter_url\": \"str\", \"facebook_url\": \"str\", \"linkedin_url\": \"str\"}, \"disposable\": \"bool\", \"webmail\": \"bool\", \"website_url\": \"str\", \"phone_number\": \"str\", \"industries\": \"str\", \"postal_code\": \"str\", \"employee_count\": \"int\", \"founded\": \"str\", \"company_size\": \"str\", \"last_updated\": \"str\", \"revenue\": \"str\", \"accept_all\": \"bool\", \"description\": \"str\", \"pattern\": \"str\", \"domain_score\": \"int\", \"organization\": \"str\", \"whois\": {\"registrar_name\": \"str\", \"created_date\": \"str\", \"referral_url\": \"str\"}}, \"emails\": [{\"email\": \"str\", \"first_name\": \"str\", \"last_name\": \"str\", \"full_name\": \"str\", \"gender\": \"str\", \"phone_number\": \"NoneType\", \"type\": \"str\", \"country\": \"str\", \"position\": \"str\", \"department\": \"str\", \"seniority\": \"str\", \"twitter\": \"NoneType\", \"linkedin\": \"str\", \"accept_all\": \"bool\", \"pattern\": \"str\", \"score\": \"int\", \"verification\": {\"date\": \"NoneType\", \"status\": "
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "LinkedinFinder",
                "api_description": "This API endpoint generates or retrieves the most likely email address from a Linkedin URL.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the Linkedin. For example, \"https://www.linkedin.com/in/alex-maccaw-ab592978\".",
                        "default": "https://www.linkedin.com/in/alex-maccaw-ab592978"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "bool",
                        "position": "str",
                        "twitter": "str",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "NoneType",
                            "status": "NoneType"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 2
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailVerifier",
                "api_description": "verify the deliverability of an email address.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "The email address you want to verify.",
                        "default": "b.mohamed@tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "email": {
                            "mx_records": "bool",
                            "smtp_server": "bool",
                            "smtp_check": "bool",
                            "accept_all": "bool",
                            "block": "bool",
                            "email": "str",
                            "gibberish": "bool",
                            "disposable": "bool",
                            "webmail": "bool",
                            "regex": "bool",
                            "whois": {
                                "registrar_name": "str",
                                "created_date": "str",
                                "referral_url": "str"
                            },
                            "status": "str",
                            "result": "str",
                            "score": "int"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailFinder",
                "api_description": "generates or retrieves the most likely email address from a domain name, a first name and a last name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name from which you want to find the email addresses. For example, \"stripe.com\"",
                        "default": "stripe.com"
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "The person's first name. It doesn't need to be in lowercase.",
                        "default": "Moskoz"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "The person's last name. It doesn't need to be in lowercase.",
                        "default": "Dustin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "bool",
                        "position": "str",
                        "twitter": "NoneType",
                        "linkedin": "str",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": "empty list"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "AuthorFinder",
                "api_description": "This API endpoint generates or retrieves the most likely email address from a blog post url.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the article. For example, \"https://clearbit.com/blog/company-name-to-domain-api\".",
                        "default": "https://clearbit.com/blog/company-name-to-domain-api"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "NoneType",
                        "position": "str",
                        "twitter": "str",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ],
                        "info": {
                            "title": "str",
                            "description": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailCount",
                "api_description": "Domain name from which you want to find the email addresses.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The email address you want to find sources.",
                        "default": "tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "total": "int",
                        "personal_emails": "int",
                        "generic_emails": "int",
                        "department": {
                            "engineering": "int",
                            "finance": "int",
                            "hr": "int",
                            "it": "int",
                            "marketing": "int",
                            "operations": "int",
                            "management": "int",
                            "sales": "int",
                            "legal": "int",
                            "support": "int",
                            "communication": "int",
                            "executive": "int"
                        },
                        "seniority": {
                            "junior": "int",
                            "senior": "int",
                            "executive": "int"
                        }
                    }
                }
            }
        ],
        "query": "Can you find the email address for the person with the first name Moskoz and last name Dustin at stripe.com? Also, provide me with the company details and the email count for stripe.com.",
        "relevant APIs": [
            [
                "Tomba",
                "EmailFinder"
            ],
            [
                "Tomba",
                "EmailCount"
            ]
        ],
        "query_id": 33971
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Real Estate Records",
                "api_name": "transactions",
                "api_description": "Show transactions given a zipcode. The API returns 50 records each time in descending order by date and supports pagination. This API requires a subscription cost.\n\nThe returned data shows the summary of information. To get further detail (such as the unit of a building that posts the most recent transaction, use summary API.\n\nSample data of the API when query zipcode 10019 is:\n \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"310\",\n        \"STREET\": \"W 56th St\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL COOP UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-07-21T00:00:00.000Z\",\n      \"lastSalesAmount\": 514000,\n      \"maxSalesAmount\": 1359000,\n      \"TotalRecords\": 74\n    },",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "",
                        "default": "10019"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "err": "NoneType",
                    "count": "int",
                    "data": [
                        {
                            "_id": {
                                "STREET_NUMBER": "str",
                                "STREET": "str",
                                "PROPERTY_TYPE": "str",
                                "ZIPCODE": "str",
                                "STATE": "str"
                            },
                            "lastSalesDate": "str",
                            "lastSalesAmount": "int",
                            "maxSalesAmount": "int",
                            "TotalRecords": "int",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Real Estate Records",
                "api_name": "detail",
                "api_description": "Return all detailed historical transactions of a given address. To call this API, it requires to call summary API first using address information. Then use the Id value returned from the summary API and call this API with the same Id. This API requires a subscription cost.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "6144a05f3afc5ca06e88a2ab"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "err": "NoneType",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Real Estate Records",
                "api_name": "summary",
                "api_description": "Get a summary of property records by units given an address (if it's a multi-unit building). Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. This API requires a subscription cost. \n\nThis API provides details a level further than the \"address\" endpoint. For instance,  for 220 Central Park S, New York, NY 10019 it returns\n  \"data\": [\n    {\n      \"_id\": {\n        \"id\": \"6144a17b3afc5ca06ea0dd95\",\n        \"Loc\": {\n          \"coordinates\": [\n            -73.9802,\n            40.76719\n          ],\n          \"type\": \"Point\"\n        },\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"UNIT\": \"67\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 59500000,\n      \"SQFT\": 0,\n      \"TotalRecords\": 1\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "",
                        "default": "220"
                    },
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "",
                        "default": "Central Park S"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "",
                        "default": "10019"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "err": "NoneType",
                    "count": "int",
                    "data": [
                        {
                            "_id": {
                                "id": "str",
                                "Loc": {
                                    "coordinates": [
                                        "list of float with length 2"
                                    ],
                                    "type": "str"
                                },
                                "STREET_NUMBER": "str",
                                "STREET": "str",
                                "UNIT": "str",
                                "PROPERTY_TYPE": "str",
                                "ZIPCODE": "str",
                                "STATE": "str"
                            },
                            "lastSalesDate": "str",
                            "lastSalesAmount": "int",
                            "maxSalesAmount": "int",
                            "SQFT": "int",
                            "TotalRecords": "int",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Real Estate Records",
                "api_name": "address",
                "api_description": "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
                "required_parameters": [
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "",
                        "default": "Central Park S"
                    },
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "",
                        "default": "220"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "",
                        "default": "10019"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "err": "NoneType",
                    "data": [
                        {
                            "_id": {
                                "STREET_NUMBER": "str",
                                "STREET": "str",
                                "PROPERTY_TYPE": "str",
                                "ZIPCODE": "str",
                                "STATE": "str"
                            },
                            "Location": {
                                "coordinates": [
                                    "list of float with length 2"
                                ],
                                "type": "str"
                            },
                            "lastSalesDate": "str",
                            "lastSalesAmount": "int",
                            "maxSalesAmount": "int",
                            "TotalRecords": "int",
                            "_list_length": 5
                        }
                    ]
                }
            }
        ],
        "query": "As a real estate developer, I'm interested in analyzing the market trends for a specific area. Can you provide me with a summary of property records and transactions for an address on Central Park S in zipcode 10019? Additionally, I would like to see the detailed historical transactions for that address.",
        "relevant APIs": [
            [
                "Real Estate Records",
                "summary"
            ],
            [
                "Real Estate Records",
                "transactions"
            ],
            [
                "Real Estate Records",
                "detail"
            ]
        ],
        "query_id": 58705
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getDraftProspects",
                "api_description": "Be forewarned that this endpoint returns a **lot** of data and there does not appear to be a way to paginate results.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Number of page of the results. 500 results are loaded per page.",
                        "default": 2
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getTeamRoster",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the team.",
                        "default": 28
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "season",
                        "type": "NUMBER",
                        "description": "Return a team's specific season.",
                        "default": 20172018
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getPlayer",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the player.",
                        "default": 8466138
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getTeams",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "season",
                        "type": "NUMBER",
                        "description": "Return a team's specific season.",
                        "default": 20172018
                    },
                    {
                        "name": "expand",
                        "type": "STRING",
                        "description": "Expand your response for some additional data.",
                        "default": "team.roster"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getDivision",
                "api_description": "You can use this to also retrieve inactive divisions. For example, the ID for the old Patrick division is `13`.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the division.",
                        "default": 15
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getGameContent",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the game. The first 4 digits identify the season of the game (ie. 2017 for the 2017-2018 season). The next 2 digits give the type of game, where 01 = preseason, 02 = regular season, 03 = playoffs, 04 = all-star. The final 4 digits identify the specific game number. For regular season and preseason games, this ranges from 0001 to the number of games played. (1271 for seasons with 31 teams (2017 and onwards) and 1230 for seasons with 30 teams). For playoff games, the 2nd digit of the specific number gives the round of the playoffs, the 3rd digit specifies the matchup, and the 4th digit specifies the game (out of 7).",
                        "default": 2017020851
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getTeamStats",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the team.",
                        "default": 28
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getStandingTypes",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getTeam",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the team.",
                        "default": 28
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "expand",
                        "type": "STRING",
                        "description": "Expand your response for some additional data.",
                        "default": "team.roster"
                    },
                    {
                        "name": "season",
                        "type": "NUMBER",
                        "description": "Return a team's specific season.",
                        "default": 20172018
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "NHL Stats and Live Data",
                "api_name": "getDraft",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My friend is a huge fan of the NHL and wants to know more about the Anaheim Ducks. Can you fetch details of the team, including the roster and additional data for the 20172018 season? Additionally, could you provide the player information for the player with ID 8466138?",
        "relevant APIs": [
            [
                "NHL Stats and Live Data",
                "getTeam"
            ],
            [
                "NHL Stats and Live Data",
                "getTeamRoster"
            ],
            [
                "NHL Stats and Live Data",
                "getPlayer"
            ]
        ],
        "query_id": 69319
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "CamRest676",
                "api_name": "bookRestaurant",
                "api_description": "Returns the restaurants the user is looking for",
                "required_parameters": [
                    {
                        "name": "pricerange",
                        "type": "STRING",
                        "description": "pricerange desired by the user",
                        "default": "moderate"
                    },
                    {
                        "name": "area",
                        "type": "STRING",
                        "description": "area where the restaurant is located",
                        "default": "elarea"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "food",
                        "type": "STRING",
                        "description": "type of food",
                        "default": "spanish"
                    },
                    {
                        "name": "restaurantName",
                        "type": "STRING",
                        "description": "a restaurant",
                        "default": "McDonalds"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Could you assist me in finding a restaurant for a business lunch? I need a moderate-priced restaurant in the elarea that serves Spanish food. It would be great if you could provide some recommendations.",
        "relevant APIs": [
            [
                "CamRest676",
                "bookRestaurant"
            ]
        ],
        "query_id": 88197
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "Physical quantities, constants and equations ",
                "api_name": "Get equations",
                "api_description": "This endpoint return back data of equations formatted as JSON",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quantity": "str",
                    "categories": [
                        {
                            "title": "str",
                            "equations": [
                                {
                                    "equation": "str",
                                    "_list_length": 1
                                }
                            ],
                            "locals": {
                                "de": {
                                    "title": "str"
                                }
                            },
                            "_list_length": 4
                        }
                    ]
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Physical quantities, constants and equations ",
                "api_name": "Get All constants",
                "api_description": "This endpoint return back data of physical constants formatted as JSON",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "str",
                    "name": "str",
                    "value": "str",
                    "category": "str",
                    "pack": "str",
                    "locals": {
                        "de": {
                            "name": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Physical quantities, constants and equations ",
                "api_name": "Get All Physical quantities",
                "api_description": "This endpoint return back data of physical quantities",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "str",
                    "name": "str",
                    "description": "str",
                    "wikipedia": "str",
                    "vector": "bool",
                    "category": "str",
                    "pack": "str",
                    "locals": {
                        "de": {
                            "name": "str",
                            "description": "str",
                            "wikipedia": "str"
                        }
                    }
                }
            }
        ],
        "query": "I'm a physics student and I'm interested in exploring the different physical quantities, constants, and equations. Can you provide me with a list of physical quantities along with their symbols, descriptions, and Wikipedia links? Additionally, I'm interested in understanding the relationships between different quantities and the corresponding equations. Please include the equations and their categories, as well as any local translations available.",
        "relevant APIs": [
            [
                "Physical quantities, constants and equations ",
                "Get All Physical quantities"
            ],
            [
                "Physical quantities, constants and equations ",
                "Get equations"
            ]
        ],
        "query_id": 37553
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get Trump articles from specific newspaper",
                "api_description": "This endpoint returns all articles for Trump from a specific newspaper",
                "required_parameters": [
                    {
                        "name": "newspaper",
                        "type": "string",
                        "description": "",
                        "default": "boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Response": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get Biden Articles from specific newspaper",
                "api_description": "this endpoint returns all articles for Biden from a specified newspaper",
                "required_parameters": [
                    {
                        "name": "newspaper",
                        "type": "string",
                        "description": "",
                        "default": "boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Response": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get All Trump Articles",
                "api_description": "This endpoint returns all newspaper artices for Trump",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get all Biden Articles",
                "api_description": "This end point will return all articles from each major newspaper for Biden",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "My friends and I are analyzing the media coverage of Trump and Biden. Can you fetch all the Trump articles from the Boston Globe, New York Times, CNN, Washington Post, Los Angeles Times, and Chicago Tribute? Additionally, retrieve all the Biden articles from the same newspapers.",
        "relevant APIs": [
            [
                "PAC API",
                "Get Trump articles from specific newspaper"
            ],
            [
                "PAC API",
                "Get Biden Articles from specific newspaper"
            ]
        ],
        "query_id": 72543
    }
]