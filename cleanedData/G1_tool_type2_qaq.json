[
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "Test",
                "api_name": "test",
                "api_description": "1",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "",
                        "default": "Arrow"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Test",
                "api_name": "test_copy",
                "api_description": "1",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "",
                        "default": "Arrow"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a fan of independent cinema and I'm looking for some hidden gems. Can you recommend some lesser-known movies that deserve more recognition? It would be great if you could provide the movie title, release year, and a brief description. Additionally, it would be helpful to know the actors and director of each movie.",
        "relevant APIs": [
            [
                "Test",
                "test"
            ],
            [
                "Test",
                "test_copy"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 48770
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get extra character details",
                "api_description": "Get extra details about a character. (Currently being updated with more data)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get show facts & rotten tomato scores",
                "api_description": "You can find show data including season by season rotten tomato scores by hitting the home route.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get character by id",
                "api_description": "Providing the character id, you will get that specific character in the response. You can find a character id by hitting `/characters` and grabbing an id from there.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get recurring characters",
                "api_description": "This endpoint gets the recurring characters within the show.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get main characters",
                "api_description": "This route will provide you with the show's main characters",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get all characters",
                "api_description": "This will provide the show's characters with a tiny bit of data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is planning to watch 'New Girl' and wants to know more about the main characters. Can you fetch the details of the main characters, including their names, occupations, and quirks? Additionally, it would be helpful to provide the recurring characters in the show. Thank you!",
        "relevant APIs": [
            [
                "New Girl",
                "Get main characters"
            ],
            [
                "New Girl",
                "Get recurring characters"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 65624
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "OfferInfo",
                "api_description": "get offer data",
                "required_parameters": [
                    {
                        "name": "joburl",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "SearchOffers",
                "api_description": "get all offers url",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Secretary"
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Frankfurt"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "nextOffset": "int",
                    "currentOffset": "str",
                    "offers": [
                        "list of str with length 10"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is hiring and we are interested in secretary positions in Frankfurt. Can you assist us in finding the URLs of the top 10 offers? Also, please provide the details of each offer, including the job description, requirements, and company information.",
        "relevant APIs": [
            [
                "Google Jobs",
                "SearchOffers"
            ],
            [
                "Google Jobs",
                "OfferInfo"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 65125
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get extra character details",
                "api_description": "Get extra details about a character. (Currently being updated with more data)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get show facts & rotten tomato scores",
                "api_description": "You can find show data including season by season rotten tomato scores by hitting the home route.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get character by id",
                "api_description": "Providing the character id, you will get that specific character in the response. You can find a character id by hitting `/characters` and grabbing an id from there.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get recurring characters",
                "api_description": "This endpoint gets the recurring characters within the show.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get main characters",
                "api_description": "This route will provide you with the show's main characters",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get all characters",
                "api_description": "This will provide the show's characters with a tiny bit of data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to learn more about the characters in the TV show New Girl. Can you provide me with detailed information about the main characters as well as the recurring characters?",
        "relevant APIs": [
            [
                "New Girl",
                "Get main characters"
            ],
            [
                "New Girl",
                "Get recurring characters"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 49173
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "DownloadFileWithFormat",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The destination format.",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The document name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Original document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "DownloadFile",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/folder/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    },
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID to download",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "ObjectExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File or folder path e.g. '/file.ext' or '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID",
                        "default": ""
                    },
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetFilesList",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "Folder path e.g. '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetPages",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Document name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetDiscUsage",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetFileVersions",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetMasters",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Document name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetShapes",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Document name.",
                        "default": ""
                    },
                    {
                        "name": "pageName",
                        "type": "STRING",
                        "description": "Page name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "StorageExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Please provide information about the existence of the diagram stored at '/documents/diagrams/flowchart.vdx'. Additionally, download the file.",
        "relevant APIs": [
            [
                "Aspose.Diagram Cloud",
                "ObjectExists"
            ],
            [
                "Aspose.Diagram Cloud",
                "DownloadFile"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 15335
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "product_search",
                "api_description": "Returns the list of products based on keyword.",
                "required_parameters": [
                    {
                        "name": "store_id",
                        "type": "STRING",
                        "description": "",
                        "default": "1122"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "womens shoes"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "count",
                        "type": "STRING",
                        "description": "maximum 25",
                        "default": "25"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "product_details",
                "api_description": "Returns detailed product information.\nIncluding:\n```\nproduct variants (with different dimension like size, color and etc.\nratings and reviews\nitem images/videos\nprice\npromotion\nchild products\n```",
                "required_parameters": [
                    {
                        "name": "store_id",
                        "type": "STRING",
                        "description": "The id of the store which product details data is being retrieved from. (optional)\nValue comes from nearby store API.",
                        "default": "3330"
                    },
                    {
                        "name": "tcin",
                        "type": "STRING",
                        "description": "Target product id.\nValue comes from product search API.",
                        "default": "16251811"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "User's longitude information. (optional)",
                        "default": "-122.200"
                    },
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "User's latitude information. (optional)",
                        "default": "37.820"
                    },
                    {
                        "name": "zip",
                        "type": "STRING",
                        "description": "User's zipcode. (optional)",
                        "default": "94611"
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code of user's location. (optional)",
                        "default": "CA"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"product\": {\"tcin\": \"str\", \"item\": {\"enrichment\": {\"images\": {\"primary_image\": \"str\", \"alternate_image_urls\": [\"list of str with length 7\"], \"content_labels\": [{\"image_url\": \"str\", \"_list_length\": 9}], \"alternate_images\": [\"list of str with length 7\"], \"primary_image_url\": \"str\", \"base_url\": \"str\", \"swatch_image\": \"str\", \"swatch_image_url\": \"str\"}, \"return_policies\": [{\"user_type\": \"str\", \"day_count\": \"int\", \"_list_length\": 2}], \"buy_url\": \"str\", \"size_chart_fragment_url\": \"str\", \"videos\": [{\"video_title\": \"str\", \"video_poster_image\": \"str\", \"video_captions\": [{\"caption_url\": \"str\", \"language\": \"str\", \"_list_length\": 1}], \"video_files\": [{\"video_url\": \"str\", \"video_height_pixels\": \"str\", \"mime_type\": \"str\", \"_list_length\": 1}], \"video_length_seconds\": \"str\", \"_list_length\": 1}]}, \"is_limited_time_offer\": \"bool\", \"relationship_type_code\": \"str\", \"primary_brand\": {\"linking_id\": \"str\", \"name\": \"str\", \"canonical_url\": \"str\"}, \"handling\": {\"import_designation_description\": \"str\"},"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "nearby_stores",
                "api_description": "Returns the list of stores near to specified ZIP code.",
                "required_parameters": [
                    {
                        "name": "place",
                        "type": "STRING",
                        "description": "",
                        "default": "10010"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "within",
                        "type": "STRING",
                        "description": "Radius of searching distance in miles",
                        "default": "100"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "nearby_stores": {
                            "stores": [
                                {
                                    "store_id": "str",
                                    "mailing_address": {
                                        "country_code": "str",
                                        "address_line1": "str",
                                        "city": "str",
                                        "state": "str",
                                        "region": "str",
                                        "postal_code": "str"
                                    },
                                    "location_name": "str",
                                    "main_voice_phone_number": "str",
                                    "distance": "float",
                                    "rolling_operating_hours": {
                                        "main_hours": {
                                            "days": [
                                                {
                                                    "date": "str",
                                                    "hours": [
                                                        {
                                                            "end_date": "str",
                                                            "end_time": "str",
                                                            "begin_time": "str",
                                                            "_list_length": 1
                                                        }
                                                    ],
                                                    "day_name": "str",
                                                    "is_open": "bool",
                                                    "_list_length": 14
                                                }
                                            ]
                                        }
                                    },
                                    "status": "str",
                                    "_list_length": 20
                                }
                            ],
                            "count": "int"
                        }
                    }
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "product_fulfillment",
                "api_description": "Returns product fulfillment information.",
                "required_parameters": [
                    {
                        "name": "tcin",
                        "type": "STRING",
                        "description": "Target product id.\nValue comes from product search API.\n",
                        "default": "51952757"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "zip",
                        "type": "STRING",
                        "description": "The zipcode of user's search location.\n(optional)",
                        "default": "94611"
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code where is user is located at. (optional)",
                        "default": "CA"
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "User's longitude Information (optional)",
                        "default": "-122.200"
                    },
                    {
                        "name": "store_id",
                        "type": "STRING",
                        "description": "The id of the Target store from which the fulfillment information is being retrieved.\nValue comes from nearby stores api.\n(optional)",
                        "default": "3330"
                    },
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "User's longitude Information (optional)",
                        "default": "37.820"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"product\": {\"tcin\": \"str\", \"__typename\": \"str\", \"fulfillment\": {\"scheduled_delivery\": {\"availability_status\": \"str\", \"location_available_to_promise_quantity\": \"float\"}, \"is_out_of_stock_in_all_store_locations\": \"bool\", \"product_id\": \"str\", \"shipping_options\": {\"availability_status\": \"str\", \"available_to_promise_quantity\": \"float\", \"services\": [{\"max_delivery_date\": \"str\", \"shipping_method_id\": \"str\", \"min_delivery_date\": \"str\", \"shipping_method_short_description\": \"str\", \"cutoff\": \"str\", \"is_base_shipping_method\": \"bool\", \"service_level_description\": \"str\", \"is_two_day_shipping\": \"bool\", \"_list_length\": 1}], \"loyalty_availability_status\": \"str\"}, \"store_options\": [{\"location_available_to_promise_quantity\": \"float\", \"order_pickup\": {\"availability_status\": \"str\"}, \"in_store_only\": {\"availability_status\": \"str\"}, \"search_response_store_type\": \"str\", \"store\": {\"mailing_address\": {\"address_line1\": \"str\", \"city\": \"str\", \"state\": \"str\", \"postal_code\": \"str\"}, \"location_name\": \"str\"}"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "search_autocomplete",
                "api_description": "Product autocompletion based on search keyword.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "tv"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm currently at home in zip code 94611 and looking for nearby Target stores. Can you fetch a list of stores near me and provide details like store name, address, and operating hours? Additionally, I'd like to see the product fulfillment information for a specific product with the TCIN '51952757'.",
        "relevant APIs": [
            [
                "Target.com Shopping - API",
                "nearby_stores"
            ],
            [
                "Target.com Shopping - API",
                "product_fulfillment"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 43933
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "autocomplete usa",
                "api_name": "Autocomplete Addresses",
                "api_description": "Autocomplete USA Addresses",
                "required_parameters": [
                    {
                        "name": "address",
                        "type": "string",
                        "description": "",
                        "default": "6185 Gar"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Id": "str",
                    "RequestId": "NoneType",
                    "ClientSessionId": "NoneType",
                    "StatusCode": "int",
                    "Result": [
                        "list of str with length 10"
                    ],
                    "MaxAllowedUsage": "NoneType",
                    "UsageStatistics": "NoneType",
                    "IsError": "bool",
                    "Errors": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "autocomplete usa",
                "api_name": "Autocomplete Zipcodes-Zip4",
                "api_description": "Autocomplete USA Zipcodes-Zip4",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "string",
                        "description": "",
                        "default": "110"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Id": "str",
                    "RequestId": "NoneType",
                    "ClientSessionId": "NoneType",
                    "StatusCode": "int",
                    "Result": [
                        "list of str with length 10"
                    ],
                    "MaxAllowedUsage": "NoneType",
                    "UsageStatistics": "NoneType",
                    "IsError": "bool",
                    "Errors": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "autocomplete usa",
                "api_name": "Autocomplete Zipcodes Lite",
                "api_description": "Autocomplete USA Zipcodes Lite",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "string",
                        "description": "",
                        "default": "110"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Id": "str",
                    "RequestId": "NoneType",
                    "ClientSessionId": "NoneType",
                    "StatusCode": "int",
                    "Result": [
                        "list of str with length 6"
                    ],
                    "MaxAllowedUsage": "NoneType",
                    "UsageStatistics": "NoneType",
                    "IsError": "bool",
                    "Errors": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "autocomplete usa",
                "api_name": "Autocomplete Cities",
                "api_description": "Autocomplete USA Cities",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": "Sacr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Id": "str",
                    "RequestId": "NoneType",
                    "ClientSessionId": "NoneType",
                    "StatusCode": "int",
                    "Result": [
                        "list of str with length 9"
                    ],
                    "MaxAllowedUsage": "NoneType",
                    "UsageStatistics": "NoneType",
                    "IsError": "bool",
                    "Errors": "empty list"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a road trip along the West Coast. Can you provide me with a list of addresses that match 'Pacific Highway'? Additionally, I am interested in getting the details of the zip codes and cities associated with these addresses.",
        "relevant APIs": [
            [
                "autocomplete usa",
                "Autocomplete Addresses"
            ],
            [
                "autocomplete usa",
                "Autocomplete Zipcodes-Zip4"
            ],
            [
                "autocomplete usa",
                "Autocomplete Cities"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 34211
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "expense data",
                "api_name": "/Calculate_expenses",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "expense data",
                "api_name": "/read_expenses",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to analyze my family's monthly expenses and identify areas where we can save money. Can you fetch the expense records for the past six months and provide a breakdown of the expenses by category? It would be great if you could suggest ways to reduce expenses in each category.",
        "relevant APIs": [
            [
                "expense data",
                "/read_expenses"
            ],
            [
                "expense data",
                "/Calculate_expenses"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 79741
    },
    {
        "api_list": [
            {
                "category_name": "Medical",
                "tool_name": "Drug Info and Price History",
                "api_name": "Drug Info",
                "api_description": "Returns information about the given drug",
                "required_parameters": [
                    {
                        "name": "drug",
                        "type": "STRING",
                        "description": "",
                        "default": "advil"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"product_ndc\": \"str\", \"generic_name\": \"str\", \"labeler_name\": \"str\", \"brand_name\": \"str\", \"active_ingredients\": [{\"name\": \"str\", \"strength\": \"str\", \"_list_length\": 2}], \"finished\": \"bool\", \"packaging\": [{\"package_ndc\": \"str\", \"description\": \"str\", \"marketing_start_date\": \"str\", \"sample\": \"bool\", \"_list_length\": 21}], \"listing_expiration_date\": \"str\", \"openfda\": {\"manufacturer_name\": [\"list of str with length 1\"], \"rxcui\": [\"list of str with length 1\"], \"spl_set_id\": [\"list of str with length 1\"], \"is_original_packager\": [\"list of bool with length 1\"], \"nui\": [\"list of str with length 3\"], \"pharm_class_moa\": [\"list of str with length 1\"], \"pharm_class_cs\": [\"list of str with length 1\"], \"pharm_class_epc\": [\"list of str with length 1\"], \"unii\": [\"list of str with length 2\"]}, \"marketing_category\": \"str\", \"dosage_form\": \"str\", \"spl_id\": \"str\", \"product_type\": \"str\", \"route\": [\"list of str with length 1\"], \"marketing_start_date\": \"str\", \"product_id\": \"str\", \"application_number\": \"str\", \"br"
            },
            {
                "category_name": "Medical",
                "tool_name": "Drug Info and Price History",
                "api_name": "genericname",
                "api_description": "Given a brand name, returns a generic name",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drug",
                        "type": "STRING",
                        "description": "",
                        "default": "advil"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generic_name": "str"
                }
            },
            {
                "category_name": "Medical",
                "tool_name": "Drug Info and Price History",
                "api_name": "Price History",
                "api_description": "Returns an array of price histories when given a valid drug ID.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a medical professional and I need comprehensive information about a specific drug for my patient's treatment plan. Please provide me with details such as the generic name, brand name, active ingredients, packaging, and manufacturer. It would also be helpful to know if there is any available price history for the drug.",
        "relevant APIs": [
            [
                "Drug Info and Price History",
                "Drug Info"
            ],
            [
                "Drug Info and Price History",
                "Price History"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 66451
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "OfferInfo",
                "api_description": "get offer data",
                "required_parameters": [
                    {
                        "name": "joburl",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "SearchOffers",
                "api_description": "get all offers url",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Secretary"
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Frankfurt"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "nextOffset": "int",
                    "currentOffset": "str",
                    "offers": [
                        "list of str with length 10"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is expanding its team in Frankfurt. Can you find the job offers for the keyword 'Developer'? Additionally, provide the job details for the first offer on the list.",
        "relevant APIs": [
            [
                "Google Jobs",
                "SearchOffers"
            ],
            [
                "Google Jobs",
                "OfferInfo"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 56737
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Funds",
                "api_name": "v1GetFundLatestPrice",
                "api_description": "Get fund latest price",
                "required_parameters": [
                    {
                        "name": "isin",
                        "type": "STRING",
                        "description": "Fund's ISIN",
                        "default": "LU0690375182"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "market": "str",
                    "price": "float",
                    "humanDate": "str",
                    "epochSecs": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Funds",
                "api_name": "v1GetFundHistoricalPrices",
                "api_description": "Get fund's historical prices",
                "required_parameters": [
                    {
                        "name": "isin",
                        "type": "STRING",
                        "description": "Fund's ISIN",
                        "default": "LU0690375182"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "Finishing date. Format YYYY-MM-DD.",
                        "default": "2020-12-31"
                    },
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Starting date. Format YYYY-MM-DD.",
                        "default": "2015-01-25"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "humanDate": "str",
                    "epochSecs": "int",
                    "price": "float"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to analyze the performance of a mutual fund. Could you fetch the latest price and historical prices of the fund with ISIN LU0690375182? It would be great if you could provide the prices from 2015-01-25 to 2020-12-31.",
        "relevant APIs": [
            [
                "Funds",
                "v1GetFundLatestPrice"
            ],
            [
                "Funds",
                "v1GetFundHistoricalPrices"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 45533
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "/random_credit_card",
                "api_description": "This endpoint generate a list of fake credit cards",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "credit_card_expire": "str",
                            "credit_card_number": "str",
                            "credit_card_provider": "str",
                            "credit_card_security_code": "str",
                            "id": "int",
                            "uid": "str",
                            "_list_length": 5
                        }
                    ],
                    "info": {
                        "disclaimer": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "/random_crypto",
                "api_description": "This endpoint generate a list of fake crypto assets",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "int",
                            "name": "str",
                            "price": "str",
                            "symbol": "str",
                            "uid": "str",
                            "_list_length": 5
                        }
                    ],
                    "info": {
                        "disclaimer": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "/random_crypto_by_id",
                "api_description": "Retrieve fake crypto assets by id.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "int",
                            "name": "str",
                            "price": "str",
                            "symbol": "str",
                            "uid": "str",
                            "_list_length": 1
                        }
                    ],
                    "info": {
                        "disclaimer": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "/random_post",
                "api_description": "This endpoint generate a list of fake posts",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "author": "str",
                            "id": "int",
                            "publishedAt": "str",
                            "summary": "str",
                            "tags": [
                                "list of str with length 4"
                            ],
                            "text": "str",
                            "title": "str",
                            "uid": "str",
                            "url": "str",
                            "_list_length": 5
                        }
                    ],
                    "info": {
                        "disclaimer": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "/random_address_by_id",
                "api_description": "Retrieve a fake address by id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "buildingNumber": "str",
                            "city": "str",
                            "country": "str",
                            "id": "int",
                            "postcode": "str",
                            "streetName": "str",
                            "uid": "str",
                            "_list_length": 1
                        }
                    ],
                    "info": {
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "random_profiles",
                "api_description": "This endpoint generate a list of fake user profiles",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "avatar": "str",
                            "blood_group": "str",
                            "company": "str",
                            "date_of_birth": {
                                "age": "int",
                                "birthdate": "str"
                            },
                            "gender": "str",
                            "id": "int",
                            "job": "str",
                            "location": {
                                "address": "str",
                                "city": "str",
                                "coordinates": {
                                    "latitude": "str",
                                    "longitude": "str"
                                },
                                "country": "str",
                                "postcode": "str",
                                "state": "str"
                            },
                            "login": {
                                "md5": "str",
                                "password": "str",
                                "sha1": "str",
                                "sha256": "str",
                                "username": "str"
                            },
                            "mail": "str",
                            "name": {
                                "first_name": "str",
                                "last_name": "str",
                                "name": "str",
                                "prefix": "str"
                            },
                            "phones": {
                                "country_code": "str",
                                "msisd": "str",
                                "phone_number": "str"
                            },
                            "picture": {
                                "large": "str",
                                "medium": "str",
                                "thumbnail": "str"
                            },
                            "residence": "str",
                            "sex": "str",
                            "ssn": "str",
                            "uid": "str",
                            "website": [
                                "list of str with length 3"
                            ],
                            "_list_length": 5
                        }
                    ],
                    "info": {
                        "disclaimer": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "random_profile_by_id",
                "api_description": "Retrieve fake profiles by id.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "avatar": "str",
                            "blood_group": "str",
                            "company": "str",
                            "date_of_birth": {
                                "age": "int",
                                "birthdate": "str"
                            },
                            "gender": "str",
                            "id": "int",
                            "job": "str",
                            "location": {
                                "address": "str",
                                "city": "str",
                                "coordinates": {
                                    "latitude": "str",
                                    "longitude": "str"
                                },
                                "country": "str",
                                "postcode": "str",
                                "state": "str"
                            },
                            "login": {
                                "md5": "str",
                                "password": "str",
                                "sha1": "str",
                                "sha256": "str",
                                "username": "str"
                            },
                            "mail": "str",
                            "name": {
                                "first_name": "str",
                                "last_name": "str",
                                "name": "str",
                                "prefix": "str"
                            },
                            "phones": {
                                "country_code": "str",
                                "msisd": "str",
                                "phone_number": "str"
                            },
                            "picture": {
                                "large": "str",
                                "medium": "str",
                                "thumbnail": "str"
                            },
                            "residence": "str",
                            "sex": "str",
                            "ssn": "str",
                            "uid": "str",
                            "website": [
                                "list of str with length 4"
                            ],
                            "_list_length": 1
                        }
                    ],
                    "info": {
                        "disclaimer": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "/random_bank_by_id",
                "api_description": "Retrieve fake banks by id.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "bban": "str",
                            "iban": "str",
                            "id": "int",
                            "swift": "str",
                            "swift11": "str",
                            "uid": "str",
                            "_list_length": 1
                        }
                    ],
                    "info": {
                        "disclaimer": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "/random_credit_card_by_id",
                "api_description": "Retrieve fake credit cards by id.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "credit_card_expire": "str",
                            "credit_card_number": "str",
                            "credit_card_provider": "str",
                            "credit_card_security_code": "str",
                            "id": "int",
                            "uid": "str",
                            "_list_length": 1
                        }
                    ],
                    "info": {
                        "disclaimer": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Fake Data Generator",
                "api_name": "/random_post_by_id",
                "api_description": "Retrieve fake post by id.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "author": "str",
                            "id": "int",
                            "publishedAt": "str",
                            "summary": "str",
                            "tags": [
                                "list of str with length 4"
                            ],
                            "text": "str",
                            "title": "str",
                            "uid": "str",
                            "url": "str",
                            "_list_length": 1
                        }
                    ],
                    "info": {
                        "disclaimer": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Can you help me in creating a fake user profile for my personal website? I would like to include a random post, a random credit card, and a random crypto asset. Please make sure the data is diverse and interesting.",
        "relevant APIs": [
            [
                "Fake Data Generator",
                "random_profiles"
            ],
            [
                "Fake Data Generator",
                "/random_post"
            ],
            [
                "Fake Data Generator",
                "/random_credit_card"
            ],
            [
                "Fake Data Generator",
                "/random_crypto"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 76706
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "DownloadFileWithFormat",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The destination format.",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The document name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Original document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "DownloadFile",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/folder/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    },
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID to download",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "ObjectExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File or folder path e.g. '/file.ext' or '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID",
                        "default": ""
                    },
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetFilesList",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "Folder path e.g. '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetPages",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Document name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetDiscUsage",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetFileVersions",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetMasters",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Document name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetShapes",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Document name.",
                        "default": ""
                    },
                    {
                        "name": "pageName",
                        "type": "STRING",
                        "description": "Page name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "StorageExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is a designer and needs to download a diagram file named 'design.vsdx' stored in the 'designs' folder. Can you assist with providing the download link?",
        "relevant APIs": [
            [
                "Aspose.Diagram Cloud",
                "DownloadFile"
            ],
            [
                "Aspose.Diagram Cloud",
                "ObjectExists"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 48950
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "DogBreeds",
                "api_name": "Get Specific dog breed",
                "api_description": "Get all info from specific dog breed",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "string",
                        "description": "",
                        "default": "shiba-inu"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data_characteristics": [
                        {
                            "title": "str",
                            "star_title": "str",
                            "characteristics": [
                                {
                                    "type": "str",
                                    "star": "str",
                                    "description": "str",
                                    "_list_length": 6
                                }
                            ],
                            "_list_length": 5
                        }
                    ],
                    "characteristics_vital": [
                        {
                            "title": "str",
                            "stat": "str",
                            "_list_length": 4
                        }
                    ],
                    "more_about": [
                        {
                            "title": "str",
                            "more_about_description": [
                                {
                                    "description": "str",
                                    "_list_length": 6
                                }
                            ],
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Other",
                "tool_name": "DogBreeds",
                "api_name": "Get all dog breeds",
                "api_description": "Get all info from dog breeds",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "slug": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning to get a dog and I want to make sure I choose the right breed for my lifestyle. Can you provide me with a list of dog breeds along with their profiles, including information on their temperament, size, exercise needs, grooming requirements, and compatibility with children and other pets? It would be helpful if you could also mention any specific health concerns or common behavioral issues associated with each breed.",
        "relevant APIs": [
            [
                "DogBreeds",
                "Get all dog breeds"
            ],
            [
                "DogBreeds",
                "Get Specific dog breed"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 65425
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Companies balance sheet statements",
                "api_description": "Returns companies balance sheet statements.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol name",
                        "default": "AAPL"
                    },
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapid_api"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Error Message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Companies Profile",
                "api_description": "This API returns companies profile (Price,Beta,Volume Average, Market Capitalisation, Last Dividend, 52 week range, stock price change, stock price change in percentage, Company Name, Exchange, Description, Industry,Sector,CEO,Website and image).",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol names",
                        "default": "AAPL"
                    },
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapid_api"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Error Message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Stock Quote Price",
                "api_description": "This API returns stock price in real time",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol names",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "symbol": "str",
                    "name": "str",
                    "price": "float",
                    "changesPercentage": "float",
                    "change": "float",
                    "dayLow": "float",
                    "dayHigh": "float",
                    "yearHigh": "float",
                    "yearLow": "float",
                    "marketCap": "int",
                    "priceAvg50": "float",
                    "priceAvg200": "float",
                    "exchange": "str",
                    "volume": "int",
                    "avgVolume": "int",
                    "open": "float",
                    "previousClose": "float",
                    "eps": "float",
                    "pe": "float",
                    "earningsAnnouncement": "str",
                    "sharesOutstanding": "int",
                    "timestamp": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Earning Call Transcript API PREMIUM",
                "api_description": "Analyzing Earnings Conference Call With NLP",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol name",
                        "default": "AAPL"
                    },
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapid_api"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quarter",
                        "type": "NUMBER",
                        "description": "",
                        "default": "4"
                    },
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Error Message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Companies cash flow statements",
                "api_description": "Returns companies cash flow statements",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol name",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapid_api"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Error Message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm interested in the profile of Apple Inc. Please provide me with information about the company's industry, CEO, website, and description. Additionally, I would like to know the stock price and volume for the company.",
        "relevant APIs": [
            [
                "Financial Modeling Prep",
                "Companies Profile"
            ],
            [
                "Financial Modeling Prep",
                "Stock Quote Price"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 70158
    },
    {
        "api_list": [
            {
                "category_name": "Mapping",
                "tool_name": "ArcGIS Platform Geocoding",
                "api_name": "Bulk geocoding",
                "api_description": "Geocode an entire list of addresses in one request using the geocodeAddresses operation. Geocoding many addresses at once is also known as batch or bulk geocoding.\n\n![bulk geocoding](https://developers.arcgis.com/rest/geocode/api-reference/GUID-FD609701-B9B5-49DB-BFD9-A936280A09C6-web.png)\n\n[API reference `geocodeAddresses` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-geocode-addresses.htm)",
                "required_parameters": [
                    {
                        "name": "addresses",
                        "type": "STRING",
                        "description": "A record set representing the addresses to be geocoded. Each record must include an OBJECTID attribute with a unique value as well as values for the address fields supported by the service.",
                        "default": "%7B%20%22records%22%3A%20%5B%20%7B%20%22attributes%22%3A%20%7B%20%22OBJECTID%22%3A%201%2C%20%22Address%22%3A%20%22380%20New%20York%20St%22%2C%20%22Neighborhood%22%3A%20%22%22%2C%20%22City%22%3A%20%22Redlands%22%2C%20%22Subregion%22%3A%20%22%22%2C%20%22Region%22%3A%20%22CA%22%20%7D%20%7D%2C%20%7B%20%22attributes%22%3A%20%7B%20%22OBJECTID%22%3A%202%2C%20%22Address%22%3A%20%221%20World%20Way%22%2C%20%22Neighborhood%22%3A%20%22%22%2C%20%22City%22%3A%20%22Los%20Angeles%22%2C%20%22Subregion%22%3A%20%22%22%2C%20%22Region%22%3A%20%22CA%22%20%7D%20%7D%20%5D%20%7D"
                    },
                    {
                        "name": "f",
                        "type": "STRING",
                        "description": "(Required) Format of the response: json, pjson, html, ...",
                        "default": "pjson"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "(Required) How to create an API key: https://youtu.be/Q1x4NZPK8Ws",
                        "default": "{{API key}}"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "matchOutOfRange",
                        "type": "STRING",
                        "description": "A Boolean which specifies if StreetAddress matches should be returned even when the input house number is outside of the house number range defined for the input street. Out-of-range matches have Addr_type=StreetAddressExt. The geometry of such matches is a point corresponding to the end of the street segment where the range value is closest to the input house number. If matchOutOfRange is not specified in a request, its value is set to true by default.",
                        "default": "false"
                    },
                    {
                        "name": "preferredLabelValues",
                        "type": "STRING",
                        "description": "Allows simple configuration of output fields returned in a response from the ArcGIS World Geocoding Service by specifying which address component values should be included in output fields. Supports a single value as input. If the parameter is blank or excluded from a request then default address label formats will be used.",
                        "default": "localCity"
                    },
                    {
                        "name": "outFields",
                        "type": "STRING",
                        "description": "The list of fields to be returned within the attributes object of the geocodeAddresses response. Descriptions for each of these fields are available in the Service output topic.",
                        "default": "AddNum,StAddr,City"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "A place or address type that can be used to filter geocodeAddresses results. The parameter supports input of single category values or multiple comma-separated values. See Category filtering for complete details about the category parameter.",
                        "default": "Address"
                    },
                    {
                        "name": "locationType",
                        "type": "STRING",
                        "description": "Specifies if the output geometry of PointAddress and Subaddress matches should be the rooftop point or street entrance location. Valid values are rooftop and street. The default value is rooftop.",
                        "default": "street"
                    },
                    {
                        "name": "searchExtent",
                        "type": "STRING",
                        "description": "A set of bounding box coordinates that limit the search area to a specific region. This is especially useful for applications in which a user will search for places and addresses within the current map extent. Helper to get search extent with https://arcgis-js-api-extent-helper.gavinr.com/",
                        "default": "-104,35.6,-94.32,41"
                    },
                    {
                        "name": "sourceCountry",
                        "type": "STRING",
                        "description": "A value representing the country. When a value is passed for this parameter, all of the addresses in the input table are sent to the specified country to be geocoded. For example, if sourceCountry=USA is passed with a batch request, it is assumed that all of the addresses in the table are in the United States, so only matching addresses in USA are returned. Using this parameter can increase batch geocoding performance when all addresses are within a single country.",
                        "default": "USA"
                    },
                    {
                        "name": "outSR",
                        "type": "NUMBER",
                        "description": "The spatial reference of the x/y coordinates returned by a geocode request. This is useful for applications using a map with a spatial reference different than that of the geocode service.",
                        "default": 102100
                    },
                    {
                        "name": "langCode",
                        "type": "STRING",
                        "description": "Sets the language in which reverse-geocoded addresses are returned. Addresses in many countries are available in more than one language; in these cases the langCode parameter can be used to specify which language should be used for addresses returned by the reverseGeocode operation. This is useful for ensuring that addresses are returned in the expected language. For example, a web application could be designed to get the browser language and pass it as the langCode parameter value in a reverseGeocode request.",
                        "default": "fr"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Mapping",
                "tool_name": "ArcGIS Platform Geocoding",
                "api_name": "Autocomplete suggestions",
                "api_description": "The ArcGIS World Geocoding Service includes a method that allows character-by-character autocomplete suggestions to be generated for user input in a client application. This capability facilitates the interactive search user experience by reducing the number of characters that need to be typed before a suggested match is obtained. The idea is that a client application can provide a list of suggestions that is updated with each character entered by a user until the place they are looking for is returned in the list.\n\n![Autocomplete diagram](https://developers.arcgis.com/rest/geocode/api-reference/GUID-9A754AFE-8154-46C3-8A31-3566963F971E-web.png)\n\n[API reference `suggest` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-suggest.htm)",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "(Required) The input text entered by a user, which is used by the suggest operation to generate a list of possible matches.",
                        "default": "starbu"
                    },
                    {
                        "name": "f",
                        "type": "STRING",
                        "description": "(Required) Format of the response: json or pjson",
                        "default": "pjson"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "searchExtent",
                        "type": "STRING",
                        "description": "A set of bounding box coordinates that limit the search area for suggestions to a specific region. This is especially useful for applications in which a user will search for places and addresses within the current map extent. Helper to get search extent with https://arcgis-js-api-extent-helper.gavinr.com/",
                        "default": "-104,35.6,-94.32,41"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "A place or address type that can be used to filter suggest results. The parameter supports input of single category values or multiple comma-separated values. The category parameter must be passed in a request with the text parameter. See Category filtering for complete details about the category parameter.",
                        "default": "Address,Postal"
                    },
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "Limits the returned suggestions to values in a particular country. Valid 2- and 3-character country code values for each country are available in Geocode coverage.",
                        "default": "USA"
                    },
                    {
                        "name": "preferredLabelValues",
                        "type": "STRING",
                        "description": "Allows simple configuration of suggestion labels returned in a response from the ArcGIS World Geocoding Service by specifying which address component values should be included in the label. If the parameter is blank or excluded from a request then default address formats are used.",
                        "default": "postalCity"
                    },
                    {
                        "name": "maxSuggestions",
                        "type": "NUMBER",
                        "description": "The maximum number of suggestions returned by a suggest response, up to the maximum number allowed by the service. Currently, the ArcGIS World Geocoding Service allows up to 15 suggestions to be returned. If maxSuggestions is not included in the suggest request, the default value is 5.\n\n",
                        "default": 10
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Defines an origin point that is used to prefer or boost geocoding candidates based on their proximity to the location. Candidates near the location are prioritized relative to those further away. This is useful in mobile applications where a user wants to search for places in the vicinity of their current GPS location, or in mapping applications where users want to search for places near the center of the map.",
                        "default": "-117.196,34.056"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "message": "str",
                        "details": "empty list"
                    }
                }
            },
            {
                "category_name": "Mapping",
                "tool_name": "ArcGIS Platform Geocoding",
                "api_name": "Search address",
                "api_description": "The findAddressCandidates operation geocodes one location per request; the input address can be combined into a single input field or divided among multiple parameters.\n\n![geoceode screenshot](https://developers.arcgis.com/rest/geocode/api-reference/GUID-F2F78690-5FB5-4BF1-8633-26BF184C45A9-web.png)\n\n[API reference for `findAddressCandidates` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-find-address-candidates.htm)",
                "required_parameters": [
                    {
                        "name": "f",
                        "type": "STRING",
                        "description": "Search for an address, POI category, intersection, etc.",
                        "default": "json"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "(Required) Format of the response: json, pjson, html, ...",
                        "default": "{{API key}}"
                    },
                    {
                        "name": "searchExtent",
                        "type": "STRING",
                        "description": "The list of fields to be returned within the attributes object of the response. Descriptions for each of these fields are available in the Output fields section of this document. Helper to get search extent with https://arcgis-js-api-extent-helper.gavinr.com/",
                        "default": "%7B%0A%20%20%22spatialReference%22%3A%20%7B%0A%20%20%20%20%22wkid%22%3A%204326%0A%20%20%7D%2C%0A%20%20%22xmin%22%3A%202.0239333156489683%2C%0A%20%20%22ymin%22%3A%2041.33418375384584%2C%0A%20%20%22xmax%22%3A%202.287605190648613%2C%0A%20%20%22ymax%22%3A%2041.440306977522305%0A%7D"
                    },
                    {
                        "name": "singleLine",
                        "type": "STRING",
                        "description": "Specifies whether the results of the operation will be persisted",
                        "default": "balmes con diagonal, barcelona"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "magicKey",
                        "type": "STRING",
                        "description": "Defines an origin point that is used to prefer or boost geocoding candidates based on their proximity to the location. Candidates near the location are prioritized relative to those further away. This is useful in mobile applications where a user wants to search for places in the vicinity of their current GPS location, or in mapping applications where users want to search for places near the center of the map.",
                        "default": "JS91CYhQDS5vDPhvSMyGZby0YFbaUDoaM5bHMoFF"
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "A place or address type that can be used to filter findAddressCandidates results. The parameter supports input of single category values or multiple comma-separated values. The category parameter can be passed in a request with the SingleLine or address parameters. It can also be passed in a request on its own without the singleline or address parameters. See Category filtering for complete details about the category parameter.",
                        "default": "-117.196,34.056"
                    },
                    {
                        "name": "address2",
                        "type": "STRING",
                        "description": "A string that represents the third line of a street address. This can include street name/house number, building name, place name, or subunit.",
                        "default": "Beetham Tower"
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The standard postal code for an address, typically, a 3\u20136-digit alphanumeric code.",
                        "default": "Florida"
                    },
                    {
                        "name": "outFields",
                        "type": "STRING",
                        "description": "A string that represents the first line of a street address. In most cases this field will be used for street name and house number input, but it can also be used to input building name or place name.",
                        "default": "*"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The spatial reference of the x/y coordinates returned by a geocode request. This is useful for applications using a map with a spatial reference different than that of the geocode service.",
                        "default": "Address"
                    },
                    {
                        "name": "postal",
                        "type": "NUMBER",
                        "description": "A postal code extension, such as the United States Postal Service ZIP+4 code, provides finer resolution or higher accuracy when also passing postal.",
                        "default": 92373
                    },
                    {
                        "name": "preferredLabelValues",
                        "type": "STRING",
                        "description": "",
                        "default": "postalCity"
                    },
                    {
                        "name": "sourceCountry",
                        "type": "STRING",
                        "description": "Allows simple configuration of output fields returned in a response from the ArcGIS World Geocoding Service by specifying which address component values should be included in output fields. Supports a single value or a comma-delimited collection of values as input. If the parameter is blank or excluded from a request then default address label formats will be used.\n\n",
                        "default": "USA"
                    },
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "The findAddressCandidates operation retrieves results quicker when you pass in valid SingleLine and magicKey values than when you don't pass in magicKey. However, to get these advantages, you need to make a prior request to suggest, which provides a magicKey. This may or may not be relevant to your workflow.",
                        "default": "USA"
                    },
                    {
                        "name": "neighborhood",
                        "type": "STRING",
                        "description": "The next largest administrative division associated with an address, typically, a city or municipality. A city is a subdivision of a subregion or a region.",
                        "default": "Herrera"
                    },
                    {
                        "name": "outSR",
                        "type": "NUMBER",
                        "description": "The maximum number of locations to be returned by a search, up to the maximum number allowed by the service. If not specified, then all matching candidates up to the service maximum are returned.",
                        "default": 102100
                    },
                    {
                        "name": "maxLocations",
                        "type": "NUMBER",
                        "description": "A Boolean which specifies if StreetAddress matches should be returned even when the input house number is outside of the house number range defined for the input street. Out-of-range matches have Addr_type=StreetAddressExt. The geometry of such matches is a point corresponding to the end of the street segment where the range value is closest to the input house number. If matchOutOfRange is not specified in a request, its value is set to true by default.",
                        "default": 10
                    },
                    {
                        "name": "subregion",
                        "type": "STRING",
                        "description": "The largest administrative division associated with an address, typically, a state or province.",
                        "default": "Vienne"
                    },
                    {
                        "name": "forStorage",
                        "type": "STRING",
                        "description": "Get search extent with https://arcgis-js-api-extent-helper.gavinr.com/",
                        "default": "true"
                    },
                    {
                        "name": "address3",
                        "type": "STRING",
                        "description": "The smallest administrative division associated with an address, typically, a neighborhood or a section of a larger populated place. A neighborhood is a subdivision of a city.",
                        "default": "Suite 4208"
                    },
                    {
                        "name": "langCode",
                        "type": "STRING",
                        "description": "Limits the candidates returned by the findAddressCandidates operation to the specified country or countries. For example, if sourceCountry=USA is included in the request, it is assumed that the address is in the United States, so only matching addresses in USA are returned. Using this parameter prevents potential unexpected results in other countries for ambiguous searches.",
                        "default": "fr"
                    },
                    {
                        "name": "locationType",
                        "type": "STRING",
                        "description": "Sets the language in which geocode results are returned. Addresses and places in many countries are available in more than one language; in these cases the langCode parameter can be used to specify which language should be used for results returned by the findAddressCandidates operation. This is useful for ensuring that results are returned in the expected language. For example, a web application could be designed to get the browser language and pass it as the langCode parameter value in a findAddressCandidates request.",
                        "default": "street"
                    },
                    {
                        "name": "matchOutOfRange",
                        "type": "STRING",
                        "description": "Specifies if the output geometry of PointAddress and Subaddress matches should be the rooftop point or street entrance location. Valid values are rooftop and street. The default value is rooftop.",
                        "default": "false"
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The next largest administrative division associated with an address. Depending on the country, a subregion can represent a county, state, or province.",
                        "default": "Los Angeles"
                    },
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "A string that represents the second line of a street address. This can include street name/house number, building name, place name, or subunit.",
                        "default": "Avenida Revolucion 8208"
                    },
                    {
                        "name": "postalExt",
                        "type": "NUMBER",
                        "description": "A value representing the country. Providing this value increases geocoding speed. Acceptable values include the full country name in English or the official language of the country, the 2-character country code, or the 3-character country code. A list of supported countries and codes is available in the Geocode coverage topic.",
                        "default": 1112
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "message": "str",
                        "details": "empty list"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "As a travel blogger, I'm always looking for new destinations to write about. Can you suggest some offbeat places based on my preferences? I prefer secluded beaches and remote hiking trails. Please provide the addresses and coordinates of these hidden gems.",
        "relevant APIs": [
            [
                "ArcGIS Platform Geocoding",
                "Autocomplete suggestions"
            ],
            [
                "ArcGIS Platform Geocoding",
                "Search address"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 36204
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "OfferInfo",
                "api_description": "get offer data",
                "required_parameters": [
                    {
                        "name": "joburl",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "SearchOffers",
                "api_description": "get all offers url",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Secretary"
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Frankfurt"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "nextOffset": "int",
                    "currentOffset": "str",
                    "offers": [
                        "list of str with length 10"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning to relocate to Frankfurt and I'm looking for a job as a Secretary. Can you provide me with a list of job offers in Frankfurt? Also, could you give me more details about a specific job offer using its URL?",
        "relevant APIs": [
            [
                "Google Jobs",
                "SearchOffers"
            ],
            [
                "Google Jobs",
                "OfferInfo"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 15058
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "{type}/parent/get-recent-investment-rating-change",
                "api_description": "Get recent investment rating change as displayed in the Parent tab",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "description": "One of the following values : etf|fund",
                        "default": "etf"
                    },
                    {
                        "name": "securityId",
                        "type": "STRING",
                        "description": "The value of securityId field returned in .../market/v2/get-returns",
                        "default": "F00000O2CG"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "{type}/portfolio/get-credit-quality",
                "api_description": "Get credit quality as displayed in the Portfolio tab",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "description": "One of the following values : etf|fund",
                        "default": "etf"
                    },
                    {
                        "name": "securityId",
                        "type": "STRING",
                        "description": "The value of securityId field returned in .../market/v2/get-returns",
                        "default": "F00000O2CG"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "{type}/price/get-other-fees",
                "api_description": "Get other fees as displayed in the Price tab",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "description": "One of the following values : etf|fund",
                        "default": "etf"
                    },
                    {
                        "name": "securityId",
                        "type": "STRING",
                        "description": "The value of securityId field returned in .../market/v2/get-returns",
                        "default": "F00000O2CG"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "{type}/parent/get-highest-rated-investments",
                "api_description": "Get highest rated investments as displayed in the Parent tab",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "description": "One of the following values : etf|fund",
                        "default": "etf"
                    },
                    {
                        "name": "securityId",
                        "type": "STRING",
                        "description": "The value of securityId field returned in .../market/v2/get-returns",
                        "default": "F00000O2CG"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "{type}/sustainability/get-product-involvement",
                "api_description": "Get product involvement in the Sustainability tab",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "description": "One of the following values : etf|fund",
                        "default": "etf"
                    },
                    {
                        "name": "securityId",
                        "type": "STRING",
                        "description": "The value of securityId field returned in .../market/v2/get-returns",
                        "default": "F00000O2CG"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "{type}/analysis/get-comparables",
                "api_description": "Get Morningstar's analysis comparables related to an ETF or FUND",
                "required_parameters": [
                    {
                        "name": "securityId",
                        "type": "STRING",
                        "description": "The value of securityId field returned in .../market/v2/get-returns",
                        "default": "F00000O2CG"
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "description": "One of the following values : etf|fund",
                        "default": "etf"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "articles/list",
                "api_description": "List latest articles",
                "required_parameters": [
                    {
                        "name": "performanceId",
                        "type": "STRING",
                        "description": "Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints",
                        "default": "0P0000OQN8"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "articles/get-details",
                "api_description": "Get articles details",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Value of id returned in .../articles/list endpoint",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "news/get-details",
                "api_description": "Get news details",
                "required_parameters": [
                    {
                        "name": "sourceId",
                        "type": "STRING",
                        "description": "Value of sourceId returned in .../news/list endpoint",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Value of id returned in .../news/list endpoint",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Morning Star",
                "api_name": "news/list",
                "api_description": "List latest news",
                "required_parameters": [
                    {
                        "name": "performanceId",
                        "type": "STRING",
                        "description": "Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints",
                        "default": "0P0000OQN8"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family is interested in investing in a fund and they need detailed information. Can you provide them with the recent investment rating change, credit quality, highest rated investments, and product involvement for the fund? The securityId is F00000O2CG.",
        "relevant APIs": [
            [
                "Morning Star",
                "{type}/parent/get-recent-investment-rating-change"
            ],
            [
                "Morning Star",
                "{type}/portfolio/get-credit-quality"
            ],
            [
                "Morning Star",
                "{type}/parent/get-highest-rated-investments"
            ],
            [
                "Morning Star",
                "{type}/sustainability/get-product-involvement"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 2701
    },
    {
        "api_list": [
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Sailors",
                "api_description": "Get list of all **Lost Ark** sailors details",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "name": "str",
                            "rank": "str",
                            "icon": "str",
                            "speed": "str",
                            "resistance": {
                                "kelp_beds": "str",
                                "sandstorm": "str",
                                "siren": "str",
                                "cold_snap": "str",
                                "tempest": "str",
                                "dead_waters": "str"
                            },
                            "_list_length": 155
                        }
                    ]
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Character Skills",
                "api_description": "List of Lost Ark Character Skills",
                "required_parameters": [
                    {
                        "name": "character_name",
                        "type": "string",
                        "description": "",
                        "default": "Scrapper"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "character": "str",
                        "id": "str",
                        "skills": [
                            {
                                "name": "str",
                                "type": "str",
                                "id": "str",
                                "icon": "str",
                                "require_level": "str",
                                "cooldown": "str",
                                "stagger": "str",
                                "description": "str",
                                "tripods": [
                                    {
                                        "level": "str",
                                        "points": "str",
                                        "upgrades": [
                                            {
                                                "name": "str",
                                                "icon": "str",
                                                "level": "str",
                                                "description": "str",
                                                "_list_length": 3
                                            }
                                        ],
                                        "_list_length": 3
                                    }
                                ],
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Cards Collection",
                "api_description": "Get List of all** Lost Ark Cards** details",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "name": "str",
                            "length": "int",
                            "cards": [
                                "list of str with length 7"
                            ],
                            "effect": [
                                "list of str with length 5"
                            ],
                            "bonus": [
                                "list of str with length 4"
                            ],
                            "_list_length": 273
                        }
                    ]
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Weapon Recipes",
                "api_description": "Get List of** Lost Ark** craftable Weapons.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "name": "str",
                            "materials": [
                                {
                                    "item": "str",
                                    "amount": "int",
                                    "_list_length": 3
                                }
                            ],
                            "details": "str",
                            "_list_length": 38
                        }
                    ]
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Food Recipes",
                "api_description": "Get List of Lost Ark Food Recipes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "name": "str",
                            "materials": [
                                {
                                    "item": "str",
                                    "amount": "int",
                                    "_list_length": 2
                                }
                            ],
                            "details": "str",
                            "_list_length": 113
                        }
                    ]
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Stronghold Item Recipes",
                "api_description": "Get List of Lost Ark Stronghold Item Recipes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "name": "str",
                            "materials": [
                                {
                                    "item": "str",
                                    "amount": "int",
                                    "_list_length": 5
                                }
                            ],
                            "details": "str",
                            "_list_length": 54
                        }
                    ]
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Chest Item Recipes",
                "api_description": "Get List of **Lost Ark** Chest Item Recipes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "name": "str",
                            "materials": [
                                {
                                    "item": "str",
                                    "amount": "int",
                                    "_list_length": 4
                                }
                            ],
                            "details": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Classes List",
                "api_description": "List of Lost Ark Classes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "class": "str",
                            "characters": [
                                {
                                    "name": "str",
                                    "id": "str",
                                    "_list_length": 4
                                }
                            ],
                            "_list_length": 5
                        }
                    ],
                    "backup": "bool"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Life Skill Tool Recipes",
                "api_description": "Get List of Lost Ark Life Skill Tool Recipes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "name": "str",
                            "materials": [
                                {
                                    "item": "str",
                                    "amount": "int",
                                    "_list_length": 6
                                }
                            ],
                            "details": "str",
                            "_list_length": 38
                        }
                    ]
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Lost Ark Simple",
                "api_name": "Get Battle Item Recipes",
                "api_description": "Get List of Lost Ark Battle Item Recipes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "name": "str",
                            "materials": [
                                {
                                    "item": "str",
                                    "amount": "int",
                                    "_list_length": 6
                                }
                            ],
                            "details": "str",
                            "_list_length": 60
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to create a comprehensive guide for Lost Ark players. Can you fetch me the list of all classes in the game, along with the characters associated with each class? Additionally, please provide me with the details of the stronghold item recipes and battle item recipes.",
        "relevant APIs": [
            [
                "Lost Ark Simple",
                "Get Classes List"
            ],
            [
                "Lost Ark Simple",
                "Get Stronghold Item Recipes"
            ],
            [
                "Lost Ark Simple",
                "Get Battle Item Recipes"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 22514
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Companies balance sheet statements",
                "api_description": "Returns companies balance sheet statements.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol name",
                        "default": "AAPL"
                    },
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapid_api"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Error Message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Companies Profile",
                "api_description": "This API returns companies profile (Price,Beta,Volume Average, Market Capitalisation, Last Dividend, 52 week range, stock price change, stock price change in percentage, Company Name, Exchange, Description, Industry,Sector,CEO,Website and image).",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol names",
                        "default": "AAPL"
                    },
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapid_api"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Error Message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Stock Quote Price",
                "api_description": "This API returns stock price in real time",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol names",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapidapi"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "symbol": "str",
                    "name": "str",
                    "price": "float",
                    "changesPercentage": "float",
                    "change": "float",
                    "dayLow": "float",
                    "dayHigh": "float",
                    "yearHigh": "float",
                    "yearLow": "float",
                    "marketCap": "int",
                    "priceAvg50": "float",
                    "priceAvg200": "float",
                    "exchange": "str",
                    "volume": "int",
                    "avgVolume": "int",
                    "open": "float",
                    "previousClose": "float",
                    "eps": "float",
                    "pe": "float",
                    "earningsAnnouncement": "str",
                    "sharesOutstanding": "int",
                    "timestamp": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Earning Call Transcript API PREMIUM",
                "api_description": "Analyzing Earnings Conference Call With NLP",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol name",
                        "default": "AAPL"
                    },
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapid_api"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quarter",
                        "type": "NUMBER",
                        "description": "",
                        "default": "4"
                    },
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Error Message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Financial Modeling Prep",
                "api_name": "Companies cash flow statements",
                "api_description": "Returns companies cash flow statements",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "symbol name",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "",
                        "default": "rapid_api"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Error Message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a financial blogger and I'm interested in writing about Apple Inc.'s financial performance. Can you help me gather the necessary data? I would like to have the balance sheet statements, profile, stock quote price, and cash flow statements for the company. The symbol should be 'AAPL' and the API key should be 'rapid_api'.",
        "relevant APIs": [
            [
                "Financial Modeling Prep",
                "Companies balance sheet statements"
            ],
            [
                "Financial Modeling Prep",
                "Companies Profile"
            ],
            [
                "Financial Modeling Prep",
                "Stock Quote Price"
            ],
            [
                "Financial Modeling Prep",
                "Companies cash flow statements"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 78791
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "TEST",
                "api_name": "TEST",
                "api_description": "Testing",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to test the functionality of the TEST tool for my company's database. Can you provide me with the necessary steps to execute the testing process? Also, please provide me with any additional information or requirements for this test.",
        "relevant APIs": [
            [
                "TEST",
                "TEST"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 85759
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "autocomplete usa",
                "api_name": "Autocomplete Addresses",
                "api_description": "Autocomplete USA Addresses",
                "required_parameters": [
                    {
                        "name": "address",
                        "type": "string",
                        "description": "",
                        "default": "6185 Gar"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Id": "str",
                    "RequestId": "NoneType",
                    "ClientSessionId": "NoneType",
                    "StatusCode": "int",
                    "Result": [
                        "list of str with length 10"
                    ],
                    "MaxAllowedUsage": "NoneType",
                    "UsageStatistics": "NoneType",
                    "IsError": "bool",
                    "Errors": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "autocomplete usa",
                "api_name": "Autocomplete Zipcodes-Zip4",
                "api_description": "Autocomplete USA Zipcodes-Zip4",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "string",
                        "description": "",
                        "default": "110"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Id": "str",
                    "RequestId": "NoneType",
                    "ClientSessionId": "NoneType",
                    "StatusCode": "int",
                    "Result": [
                        "list of str with length 10"
                    ],
                    "MaxAllowedUsage": "NoneType",
                    "UsageStatistics": "NoneType",
                    "IsError": "bool",
                    "Errors": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "autocomplete usa",
                "api_name": "Autocomplete Zipcodes Lite",
                "api_description": "Autocomplete USA Zipcodes Lite",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "string",
                        "description": "",
                        "default": "110"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Id": "str",
                    "RequestId": "NoneType",
                    "ClientSessionId": "NoneType",
                    "StatusCode": "int",
                    "Result": [
                        "list of str with length 6"
                    ],
                    "MaxAllowedUsage": "NoneType",
                    "UsageStatistics": "NoneType",
                    "IsError": "bool",
                    "Errors": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "autocomplete usa",
                "api_name": "Autocomplete Cities",
                "api_description": "Autocomplete USA Cities",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": "Sacr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Id": "str",
                    "RequestId": "NoneType",
                    "ClientSessionId": "NoneType",
                    "StatusCode": "int",
                    "Result": [
                        "list of str with length 9"
                    ],
                    "MaxAllowedUsage": "NoneType",
                    "UsageStatistics": "NoneType",
                    "IsError": "bool",
                    "Errors": "empty list"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a road trip across the United States and I need to find addresses for my accommodation. Can you please autocomplete the addresses for 6185 Gar and provide me with a list of options? Additionally, I would like to know the cities that are close to these addresses. Please autocomplete the cities for the addresses as well.",
        "relevant APIs": [
            [
                "autocomplete usa",
                "Autocomplete Addresses"
            ],
            [
                "autocomplete usa",
                "Autocomplete Cities"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 692
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "DownloadFileWithFormat",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The destination format.",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The document name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Original document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "DownloadFile",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/folder/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    },
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID to download",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "ObjectExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File or folder path e.g. '/file.ext' or '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID",
                        "default": ""
                    },
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetFilesList",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "Folder path e.g. '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetPages",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Document name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetDiscUsage",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetFileVersions",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetMasters",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Document name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "GetShapes",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Document name.",
                        "default": ""
                    },
                    {
                        "name": "pageName",
                        "type": "STRING",
                        "description": "Page name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "folder",
                        "type": "STRING",
                        "description": "Document folder.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Aspose.Diagram Cloud",
                "api_name": "StorageExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "RequestId": "str",
                    "Error": {
                        "Code": "str",
                        "Message": "str",
                        "Description": "str",
                        "DateTime": "str",
                        "InnerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to get the list of files in the folder '/diagrams' and also check the storage usage. Can you provide me with the file names, sizes, and modified dates? Additionally, retrieve the storage disk usage.",
        "relevant APIs": [
            [
                "Aspose.Diagram Cloud",
                "GetFilesList"
            ],
            [
                "Aspose.Diagram Cloud",
                "GetDiscUsage"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 6677
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "OfferInfo",
                "api_description": "get offer data",
                "required_parameters": [
                    {
                        "name": "joburl",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Google Jobs",
                "api_name": "SearchOffers",
                "api_description": "get all offers url",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Secretary"
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Frankfurt"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "nextOffset": "int",
                    "currentOffset": "str",
                    "offers": [
                        "list of str with length 10"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Can you help me search for job offers in Frankfurt? I am interested in the URLs of the latest offers. Additionally, please fetch the details of each offer, including the job description, requirements, and company information.",
        "relevant APIs": [
            [
                "Google Jobs",
                "SearchOffers"
            ],
            [
                "Google Jobs",
                "OfferInfo"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 65119
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Facebook User Info",
                "api_name": "find_comment_find_get",
                "api_description": "Find Comment by UID or by_object_id(PageID, GroupID) ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "by_facebook_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "by_object_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Facebook User Info",
                "api_name": "find_feed_find_get",
                "api_description": "Find Feed by UID or by_object_id(PageID, GroupID) ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "by_facebook_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "by_object_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Facebook User Info",
                "api_name": "find_user_find_get",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "by_facebook_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "by_phone",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "err": "int",
                    "msg": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to find all the comments made by my friend on Facebook. Can you help me retrieve the comments by their Facebook ID?",
        "relevant APIs": [
            [
                "Facebook User Info",
                "find_comment_find_get"
            ],
            [
                "Facebook User Info",
                "find_user_find_get"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 17978
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "Emplois OPT-NC",
                "api_name": "All",
                "api_description": "L'int\u00e9gralit\u00e9 des [offres d'emploi](https://office.opt.nc/fr/emploi-et-carriere/postuler-lopt-nc/offres-emploi), sans pagination.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "nid": "str",
                    "titre": "str",
                    "intitule_poste": "str",
                    "reference_se": "str",
                    "niveau_diplome": "str",
                    "mission": "str",
                    "diplome_formation": "str",
                    "experience": "str",
                    "duree_contrat": "str",
                    "date_mise_en_ligne": "str",
                    "date_recrutement": "str",
                    "direction": "str",
                    "service": "str",
                    "site": "str",
                    "url_fiche_poste": "str",
                    "lien": "str",
                    "langcode": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is looking to hire new employees. Can you fetch the list of job offers from OPT-NC, including the job titles, required qualifications, and recruitment dates?",
        "relevant APIs": [
            [
                "Emplois OPT-NC",
                "All"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 87569
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Directions Between 2 Locations",
                "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**",
                "required_parameters": [
                    {
                        "name": "start_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the starting point (required)",
                        "default": "-16.0755888102153"
                    },
                    {
                        "name": "end_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the ending point (required)",
                        "default": "-17.447938"
                    },
                    {
                        "name": "end_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the ending point (required)",
                        "default": "14.693425"
                    },
                    {
                        "name": "start_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the starting point (required)",
                        "default": "14.14129815"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "distance_unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "steps": [
                        {
                            "direction": "str",
                            "distance": "str",
                            "duration": "str",
                            "instruction": "str",
                            "location": [
                                "list of float with length 2"
                            ],
                            "_list_length": 15
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Measure Distance",
                "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from a hospital in Koalack to Dakar**",
                "required_parameters": [
                    {
                        "name": "lon2",
                        "type": "NUMBER",
                        "description": "Longitude of the second location (required)",
                        "default": "-17.447938"
                    },
                    {
                        "name": "lat2",
                        "type": "NUMBER",
                        "description": "Latitude of the second location (required)",
                        "default": "14.693425"
                    },
                    {
                        "name": "lon1",
                        "type": "NUMBER",
                        "description": "Longitude of the first location (required)",
                        "default": "-16.0755888102153"
                    },
                    {
                        "name": "lat1",
                        "type": "NUMBER",
                        "description": "Latitude of the first location (required)",
                        "default": "14.14129815"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "unit": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Reverse Geocode",
                "api_description": "This endpoint allows you to perform reverse geocoding in Senegal by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "The longitude of the location.",
                        "default": "-17.447938"
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "The latitude of the location.",
                        "default": "14.693425"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "amenity": "str",
                    "boundingbox": [
                        "list of str with length 4"
                    ],
                    "category": "str",
                    "city": "str",
                    "country": "str",
                    "display_name": "str",
                    "region": "str",
                    "suburb": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Facilities Lookup",
                "api_description": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The region where the facility is located",
                        "default": "Dakar"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
                        "default": "hospital"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The city where the facility is located",
                        "default": "Touba"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "The number of facilities to query.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hospital": [
                        {
                            "ISO3166-2-lvl4": "str",
                            "address": "str",
                            "amenity": "str",
                            "country_code": "str",
                            "county": "str",
                            "display_name": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "postcode": "str",
                            "region": "str",
                            "road": "str",
                            "suburb": "str",
                            "village": "str",
                            "website": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Geocode",
                "api_description": "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
                "required_parameters": [
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "he name of the location to look up.",
                        "default": "Dakar"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "display_name": "str",
                    "latitude": "str",
                    "longitude": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am organizing a business event in Senegal and I need to calculate the distance between two locations. Please provide me with the distance and duration from Dakar to Thies. Additionally, I would like to know the facilities available in Dakar. Can you give me a list of restaurants and banks in the city?",
        "relevant APIs": [
            [
                "Senegal API",
                "Measure Distance"
            ],
            [
                "Senegal API",
                "Facilities Lookup"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 39393
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Ethereum random address generator. ETH key pairs generator",
                "api_name": "eth",
                "api_description": "This API generates a random ethereum public address with its private key",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "address": "str",
                    "private_key": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to generate a new Ethereum address and its corresponding private key. Can you provide me with a random Ethereum public address and its private key? It would be great if I could use it for my cryptocurrency transactions.",
        "relevant APIs": [
            [
                "Ethereum random address generator. ETH key pairs generator",
                "eth"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 85582
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "users-by-rest-ids",
                "api_description": "users-by-rest-ids",
                "required_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Users IDs (you can separate with commas)",
                        "default": "44196397,155659213"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"data\": {\"users\": [{\"result\": {\"__typename\": \"str\", \"id\": \"str\", \"rest_id\": \"str\", \"affiliates_highlighted_label\": {\"label\": {\"url\": {\"urlType\": \"str\", \"url\": \"str\"}, \"badge\": {\"url\": \"str\"}, \"description\": \"str\", \"userLabelType\": \"str\"}}, \"has_nft_avatar\": \"bool\", \"legacy\": {\"created_at\": \"str\", \"default_profile\": \"bool\", \"default_profile_image\": \"bool\", \"description\": \"str\", \"entities\": {\"description\": {\"urls\": \"empty list\"}}, \"fast_followers_count\": \"int\", \"favourites_count\": \"int\", \"followers_count\": \"int\", \"friends_count\": \"int\", \"has_custom_timelines\": \"bool\", \"is_translator\": \"bool\", \"listed_count\": \"int\", \"location\": \"str\", \"media_count\": \"int\", \"name\": \"str\", \"normal_followers_count\": \"int\", \"pinned_tweet_ids_str\": \"empty list\", \"profile_banner_url\": \"str\", \"profile_image_url_https\": \"str\", \"profile_interstitial_type\": \"str\", \"protected\": \"bool\", \"screen_name\": \"str\", \"statuses_count\": \"int\", \"translator_type\": \"str\", \"verified\": \"bool\", \"withheld_in_countries\": \"empty list\"}"
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "user-tweets",
                "api_description": "user-tweets",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "40"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "user": {
                            "result": {
                                "__typename": "str",
                                "timeline": {
                                    "timeline": {
                                        "instructions": [
                                            {
                                                "type": "str",
                                                "_list_length": 2
                                            }
                                        ],
                                        "responseObjects": {
                                            "feedbackActions": "empty list",
                                            "immediateReactions": "empty list"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "user-likes",
                "api_description": "user-likes",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"user\": {\"result\": {\"__typename\": \"str\", \"timeline_v2\": {\"timeline\": {\"instructions\": [{\"type\": \"str\", \"entries\": [{\"entryId\": \"str\", \"sortIndex\": \"str\", \"content\": {\"entryType\": \"str\", \"itemContent\": {\"itemType\": \"str\", \"tweet_results\": {\"result\": {\"__typename\": \"str\", \"rest_id\": \"str\", \"core\": {\"user_results\": {\"result\": {\"__typename\": \"str\", \"id\": \"str\", \"rest_id\": \"str\", \"affiliates_highlighted_label\": {\"label\": {\"url\": {\"urlType\": \"str\", \"url\": \"str\"}, \"badge\": {\"url\": \"str\"}, \"description\": \"str\", \"userLabelType\": \"str\"}}, \"has_nft_avatar\": \"bool\", \"legacy\": {\"blocked_by\": \"bool\", \"blocking\": \"bool\", \"can_dm\": \"bool\", \"can_media_tag\": \"bool\", \"created_at\": \"str\", \"default_profile\": \"bool\", \"default_profile_image\": \"bool\", \"description\": \"str\", \"entities\": {\"description\": {\"urls\": \"empty list\"}}, \"fast_followers_count\": \"int\", \"favourites_count\": \"int\", \"follow_request_sent\": \"bool\", \"followed_by\": \"bool\", \"followers_count\": \"int\", \"following\": \"bool\", \"friends_count\": \""
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "user-media",
                "api_description": "user-media",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"user\": {\"result\": {\"__typename\": \"str\", \"timeline_v2\": {\"timeline\": {\"instructions\": [{\"type\": \"str\", \"entries\": [{\"entryId\": \"str\", \"sortIndex\": \"str\", \"content\": {\"entryType\": \"str\", \"itemContent\": {\"itemType\": \"str\", \"tweet_results\": {\"result\": {\"__typename\": \"str\", \"rest_id\": \"str\", \"core\": {\"user_results\": {\"result\": {\"__typename\": \"str\", \"id\": \"str\", \"rest_id\": \"str\", \"affiliates_highlighted_label\": {\"label\": {\"url\": {\"urlType\": \"str\", \"url\": \"str\"}, \"badge\": {\"url\": \"str\"}, \"description\": \"str\", \"userLabelType\": \"str\"}}, \"has_nft_avatar\": \"bool\", \"legacy\": {\"created_at\": \"str\", \"default_profile\": \"bool\", \"default_profile_image\": \"bool\", \"description\": \"str\", \"entities\": {\"description\": {\"urls\": \"empty list\"}}, \"fast_followers_count\": \"int\", \"favourites_count\": \"int\", \"followers_count\": \"int\", \"friends_count\": \"int\", \"has_custom_timelines\": \"bool\", \"is_translator\": \"bool\", \"listed_count\": \"int\", \"location\": \"str\", \"media_count\": \"int\", \"name\": \"str\", \"normal_followers_"
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "user-followers",
                "api_description": "user-followers",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "20"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "user": {
                            "result": {
                                "__typename": "str",
                                "timeline": {
                                    "timeline": {
                                        "instructions": [
                                            {
                                                "type": "str",
                                                "_list_length": 3
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "user-tweets-and-replies",
                "api_description": "user-tweets-and-replies",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "40"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "user": {
                            "result": {
                                "__typename": "str",
                                "timeline": {
                                    "timeline": {
                                        "instructions": [
                                            {
                                                "type": "str",
                                                "_list_length": 2
                                            }
                                        ],
                                        "metadata": {
                                            "scribeConfig": {
                                                "page": "str"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "user-following",
                "api_description": "user-following",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "user": {
                            "result": {
                                "__typename": "str",
                                "timeline": {
                                    "timeline": {
                                        "instructions": [
                                            {
                                                "type": "str",
                                                "_list_length": 3
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "v2/user-tweets-and-replies",
                "api_description": "v2/user-tweets-and-replies",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "40"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "user": {
                            "result": {
                                "__typename": "str",
                                "timeline_v2": {
                                    "timeline": {
                                        "instructions": [
                                            {
                                                "type": "str",
                                                "_list_length": 2
                                            }
                                        ],
                                        "metadata": {
                                            "scribeConfig": {
                                                "page": "str"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "search",
                "api_description": "search",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Search query\n\nYou can use advanced search queries. E.g. dogecoin (from:elonmusk) Check out for more information: https://twitter.com/search-advanced",
                        "default": "dogecoin"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "result_filter",
                        "type": "ENUM",
                        "description": "Result filter",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    },
                    {
                        "name": "tweet_search_mode",
                        "type": "ENUM",
                        "description": "Popular (default) or latest (live) tweets",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of Tweet results",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": "{\"globalObjects\": {\"tweets\": {\"1668216093213638659\": {\"created_at\": \"str\", \"id\": \"int\", \"id_str\": \"str\", \"full_text\": \"str\", \"truncated\": \"bool\", \"display_text_range\": [\"list of int with length 2\"], \"entities\": {\"hashtags\": [{\"text\": \"str\", \"indices\": [\"list of int with length 2\"], \"_list_length\": 7}], \"symbols\": \"empty list\", \"user_mentions\": \"empty list\", \"urls\": [{\"url\": \"str\", \"expanded_url\": \"str\", \"display_url\": \"str\", \"indices\": [\"list of int with length 2\"], \"_list_length\": 1}], \"media\": [{\"id\": \"int\", \"id_str\": \"str\", \"indices\": [\"list of int with length 2\"], \"media_url\": \"str\", \"media_url_https\": \"str\", \"url\": \"str\", \"display_url\": \"str\", \"expanded_url\": \"str\", \"type\": \"str\", \"original_info\": {\"width\": \"int\", \"height\": \"int\", \"focus_rects\": [{\"x\": \"int\", \"y\": \"int\", \"h\": \"int\", \"w\": \"int\", \"_list_length\": 5}]}, \"sizes\": {\"thumb\": {\"w\": \"int\", \"h\": \"int\", \"resize\": \"str\"}, \"large\": {\"w\": \"int\", \"h\": \"int\", \"resize\": \"str\"}, \"medium\": {\"w\": \"int\", \"h\": \"int\", \"resize\": \"str\"}, "
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Data",
                "api_name": "auto-complete",
                "api_description": "auto-complete",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Search query",
                        "default": "Elon"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"num_results\": \"int\", \"users\": [{\"id\": \"int\", \"id_str\": \"str\", \"verified\": \"bool\", \"ext_is_blue_verified\": \"bool\", \"badges\": \"empty list\", \"is_dm_able\": \"bool\", \"is_secret_dm_able\": \"bool\", \"is_blocked\": \"bool\", \"name\": \"str\", \"screen_name\": \"str\", \"profile_image_url\": \"str\", \"profile_image_url_https\": \"str\", \"location\": \"str\", \"is_protected\": \"bool\", \"rounded_score\": \"int\", \"social_proof\": \"int\", \"connecting_user_count\": \"int\", \"connecting_user_ids\": \"empty list\", \"social_proofs_ordered\": \"empty list\", \"social_context\": {\"following\": \"bool\", \"followed_by\": \"bool\"}, \"tokens\": \"empty list\", \"inline\": \"bool\", \"_list_length\": 10}], \"topics\": [{\"topic\": \"str\", \"rounded_score\": \"int\", \"tokens\": \"empty list\", \"inline\": \"bool\", \"result_context\": {\"display_string\": \"str\", \"types\": [{\"type\": \"str\", \"_list_length\": 1}]}, \"_list_length\": 3}], \"events\": [{\"topic\": \"str\", \"rounded_score\": \"int\", \"tokens\": \"empty list\", \"topic_type\": \"str\", \"inline\": \"bool\", \"url\": \"str\", \"supporting_text\": \"str\", "
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "As a social media manager, I need to analyze user engagement. Retrieve the tweets and replies for a specific user with the ID 44196397. Also, fetch their likes, media, and followers.",
        "relevant APIs": [
            [
                "Twitter Data",
                "user-tweets-and-replies"
            ],
            [
                "Twitter Data",
                "user-likes"
            ],
            [
                "Twitter Data",
                "user-media"
            ],
            [
                "Twitter Data",
                "user-followers"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 76740
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "FemaleFighterImagePlaceholder",
                "api_description": "Get female fighter placeholder image",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "TeamImage",
                "api_description": "Get player image in PNG format for a specific team.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The team ID you want to retrieve the image.",
                        "default": 469994
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "TeamDetails",
                "api_description": "Get detailed information about a specific team.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The team ID you want to retrieve the details.",
                        "default": 465171
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"team\": {\"category\": {\"flag\": \"str\", \"id\": \"int\", \"name\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}}, \"country\": {\"alpha2\": \"str\", \"name\": \"str\"}, \"fullName\": \"str\", \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"playerTeamInfo\": {\"birthDateTimestamp\": \"int\", \"birthplace\": \"str\", \"height\": \"float\", \"id\": \"int\", \"reach\": \"float\", \"weightClass\": \"str\"}, \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"tournament\": {\"category\": {\"flag\": \"str\", \"id\": \"int\", \"name\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}}, \"id\": \"int\", \"isLive\": \"bool\", \"name\": \"str\", \"priority\": \"int\", \"slug\": \"str\", \"uniqueTournament\": {\"category\": {\"flag\": \"str\", \"id\": \"int\", \"name\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}}, \"country\": {\"alpha2\": \"str\", \"name\": \"str\"}, \"di"
            },
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "TeamNextEvents",
                "api_description": "Get information about the next events for a specific team.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Zero-based page.",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The team ID you want to retrieve the next events.",
                        "default": 465171
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "EventStatistics",
                "api_description": "Get statistics for a specific MMA event.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the event you want to get statistics.",
                        "default": 11243946
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statistics": [
                        {
                            "groups": [
                                {
                                    "groupName": "str",
                                    "statisticsItems": [
                                        {
                                            "away": "str",
                                            "compareCode": "int",
                                            "home": "str",
                                            "name": "str",
                                            "_list_length": 1
                                        }
                                    ],
                                    "_list_length": 5
                                }
                            ],
                            "period": "str",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "TournamentNextMainEvents",
                "api_description": "Get next main events for a unique tournamente",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Zero based page.",
                        "default": ""
                    },
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "This operation allows you to retrieve the next main events for a specified MMA tournament.",
                        "default": 19906
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "MaleFighterImagePlaceholder",
                "api_description": "Get male fighter placeholder image",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "EventDetails",
                "api_description": "Get information about a MMA event based on its ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the event you want to get information about.",
                        "default": "11257051"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"event\": {\"awayScore\": {}, \"awayTeam\": {\"country\": {\"alpha2\": \"str\", \"name\": \"str\"}, \"disabled\": \"bool\", \"fullName\": \"str\", \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"playerTeamInfo\": {\"birthDateTimestamp\": \"int\", \"birthplace\": \"str\", \"currentRanking\": \"int\", \"height\": \"float\", \"id\": \"int\", \"nickname\": \"str\", \"reach\": \"float\", \"residence\": \"str\", \"weightClass\": \"str\"}, \"ranking\": \"int\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"teamRankings\": [{\"gender\": \"str\", \"position\": \"int\", \"rankingTypeName\": \"str\", \"rankingTypeSlug\": \"str\", \"uniqueTournamentId\": \"int\", \"uniqueTournamentName\": \"str\", \"uniqueTournamentSlug\": \"str\", \"weightClass\": \"str\", \"_list_length\": 1}], \"type\": \"int\", \"userCount\": \"int\", \"wdlRecord\": {\"draws\": \"int\", \"losses\": \"int\", \"wins\": \"int\"}}, \"awayTeamRanking\": \"int\", \"changes\": {\"chang"
            },
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "TeamLastEvents",
                "api_description": "Get information about the last events for a specific team.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Zero-based page.",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The team ID you want to retrieve the last events.",
                        "default": 465171
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "MMAAPI",
                "api_name": "MmaOctogonImage",
                "api_description": "Get MMA octagon image",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a fan of female fighters in mixed martial arts and I'm looking for a placeholder image. Can you provide me with a female fighter placeholder image? Additionally, I would like to know the last events for a specific team.",
        "relevant APIs": [
            [
                "MMAAPI",
                "FemaleFighterImagePlaceholder"
            ],
            [
                "MMAAPI",
                "TeamLastEvents"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 2412
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "animes",
                "api_name": "Get anime detail",
                "api_description": "This endpoint will allow a user to get the data of a specific anime. It will take the anime's mal_id as a parameter and return the anime's data in JSON format. The data returned will include the anime's title, aired episodes, genre, and a brief synopsis.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "Insert the anime `mal_id`",
                        "default": "5114"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Get the fields that you want.\nDisponible fields:  \n\n- * (to all data)\n- id,\n- title, \n- main_picture,\n- start_date,\n- end_data,\n- synopsis,\n- mean,\n- rank,\n- popularity,\n- `num_list_users,`\n- `num_scoring_users`,\n- status,\n- genres,\n- num_episodes,\n- source,\n- studios,\n- volume,\n- chapter,\n- light_novel,\n- media_type,\n- mal_id,\n- broadcast,\n- statistics,\n- related_manga,\n- related_anime,\n- season,\n- year,\n- title_english,\n- title_japanese,\n- synonyms",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "anime": {
                        "id": "str",
                        "title": "str",
                        "title_english": "str",
                        "mal_id": "int",
                        "main_picture": {
                            "large": "str",
                            "medium": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "animes",
                "api_name": "Get animes",
                "api_description": "This endpoint allows for the retrieval of data about anime. The query parameters include q (the search query), limit (the number of results per page), offset (the number of results to skip), ascending (sort order), order (sort order), `media_type `(anime type), studio (studio name), source (source material), status (`currently_airing `or `finished_airing`), genre, season, `year_equal `(equal to a year specified), `year_less `(less than a year specified), `year_greater `(greater than a year specified), language, and nsfw (not safe for work content).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "year_greater",
                        "type": "NUMBER",
                        "description": "Find the animes with the year greater than the given one\n",
                        "default": ""
                    },
                    {
                        "name": "media_type",
                        "type": "STRING",
                        "description": "The media type of the anime.\nThey are:\n\n- music,\n- tv,\n- ona,\n- ova,\n- movie,\n- special",
                        "default": ""
                    },
                    {
                        "name": "studio",
                        "type": "STRING",
                        "description": "Filter the animes by the studio",
                        "default": ""
                    },
                    {
                        "name": "year_less",
                        "type": "NUMBER",
                        "description": "Find the animes with the year less than the given one\n",
                        "default": ""
                    },
                    {
                        "name": "nsfw",
                        "type": "STRING",
                        "description": "Activate the nsfw content. If you don't want it, don't use it",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Filter the animes by the actual status of the anime.\n\n- currently_airing,\n- finished_airing,\n- ` not_yet_aired`",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the number of data recieved",
                        "default": ""
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Search the anime title in english or japanase.",
                        "default": ""
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "Filter the animes by the genre",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "BOOLEAN",
                        "description": "Especify the order if asc or desc.",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "Recieve the data after the number of the offset.",
                        "default": ""
                    },
                    {
                        "name": "season",
                        "type": "STRING",
                        "description": "Filter the animes by their season",
                        "default": ""
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Get the fields that you want.\nDisponible fields:  \n\n- * (to all data)\n- id,\n- title, \n- main_picture,\n- start_date,\n- end_data,\n- synopsis,\n- mean,\n- rank,\n- popularity,\n- `num_list_users,`\n- `num_scoring_users`,\n- status,\n- genres,\n- num_episodes,\n- source,\n- studios,\n- volume,\n- chapter,\n- light_novel,\n- media_type,\n- mal_id,\n- broadcast,\n- statistics,\n- related_manga,\n- related_anime,\n- season,\n- year,\n- title_english,\n- title_japanese,\n- synonyms",
                        "default": ""
                    },
                    {
                        "name": "year_equal",
                        "type": "NUMBER",
                        "description": "Filter the anime by the year release",
                        "default": ""
                    },
                    {
                        "name": "source",
                        "type": "STRING",
                        "description": "Filter the anime by the source.\nThey are:\n\n- manga,\n- visual_novel,\n- novel,\n- `4_koma_manga`,\n- book,\n- card_game,\n- game,\n- light_novel,\n- mixed_media,\n- music,\n- novel,\n- original,\n- web_manga,\n- web_novel,\n- visual_novel,\n- picture_book,\n- other",
                        "default": ""
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order the data with the field tha you want",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a movie night with my friends and we want to watch an anime. Can you recommend an anime that has a high ranking, good reviews, and is currently airing? Also, provide us with the synopsis, number of episodes, and the main picture of the anime. Thanks!",
        "relevant APIs": [
            [
                "animes",
                "Get animes"
            ],
            [
                "animes",
                "Get anime detail"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 74709
    },
    {
        "api_list": [
            {
                "category_name": "Mapping",
                "tool_name": "ArcGIS Platform Geocoding",
                "api_name": "Bulk geocoding",
                "api_description": "Geocode an entire list of addresses in one request using the geocodeAddresses operation. Geocoding many addresses at once is also known as batch or bulk geocoding.\n\n![bulk geocoding](https://developers.arcgis.com/rest/geocode/api-reference/GUID-FD609701-B9B5-49DB-BFD9-A936280A09C6-web.png)\n\n[API reference `geocodeAddresses` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-geocode-addresses.htm)",
                "required_parameters": [
                    {
                        "name": "addresses",
                        "type": "STRING",
                        "description": "A record set representing the addresses to be geocoded. Each record must include an OBJECTID attribute with a unique value as well as values for the address fields supported by the service.",
                        "default": "%7B%20%22records%22%3A%20%5B%20%7B%20%22attributes%22%3A%20%7B%20%22OBJECTID%22%3A%201%2C%20%22Address%22%3A%20%22380%20New%20York%20St%22%2C%20%22Neighborhood%22%3A%20%22%22%2C%20%22City%22%3A%20%22Redlands%22%2C%20%22Subregion%22%3A%20%22%22%2C%20%22Region%22%3A%20%22CA%22%20%7D%20%7D%2C%20%7B%20%22attributes%22%3A%20%7B%20%22OBJECTID%22%3A%202%2C%20%22Address%22%3A%20%221%20World%20Way%22%2C%20%22Neighborhood%22%3A%20%22%22%2C%20%22City%22%3A%20%22Los%20Angeles%22%2C%20%22Subregion%22%3A%20%22%22%2C%20%22Region%22%3A%20%22CA%22%20%7D%20%7D%20%5D%20%7D"
                    },
                    {
                        "name": "f",
                        "type": "STRING",
                        "description": "(Required) Format of the response: json, pjson, html, ...",
                        "default": "pjson"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "(Required) How to create an API key: https://youtu.be/Q1x4NZPK8Ws",
                        "default": "{{API key}}"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "matchOutOfRange",
                        "type": "STRING",
                        "description": "A Boolean which specifies if StreetAddress matches should be returned even when the input house number is outside of the house number range defined for the input street. Out-of-range matches have Addr_type=StreetAddressExt. The geometry of such matches is a point corresponding to the end of the street segment where the range value is closest to the input house number. If matchOutOfRange is not specified in a request, its value is set to true by default.",
                        "default": "false"
                    },
                    {
                        "name": "preferredLabelValues",
                        "type": "STRING",
                        "description": "Allows simple configuration of output fields returned in a response from the ArcGIS World Geocoding Service by specifying which address component values should be included in output fields. Supports a single value as input. If the parameter is blank or excluded from a request then default address label formats will be used.",
                        "default": "localCity"
                    },
                    {
                        "name": "outFields",
                        "type": "STRING",
                        "description": "The list of fields to be returned within the attributes object of the geocodeAddresses response. Descriptions for each of these fields are available in the Service output topic.",
                        "default": "AddNum,StAddr,City"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "A place or address type that can be used to filter geocodeAddresses results. The parameter supports input of single category values or multiple comma-separated values. See Category filtering for complete details about the category parameter.",
                        "default": "Address"
                    },
                    {
                        "name": "locationType",
                        "type": "STRING",
                        "description": "Specifies if the output geometry of PointAddress and Subaddress matches should be the rooftop point or street entrance location. Valid values are rooftop and street. The default value is rooftop.",
                        "default": "street"
                    },
                    {
                        "name": "searchExtent",
                        "type": "STRING",
                        "description": "A set of bounding box coordinates that limit the search area to a specific region. This is especially useful for applications in which a user will search for places and addresses within the current map extent. Helper to get search extent with https://arcgis-js-api-extent-helper.gavinr.com/",
                        "default": "-104,35.6,-94.32,41"
                    },
                    {
                        "name": "sourceCountry",
                        "type": "STRING",
                        "description": "A value representing the country. When a value is passed for this parameter, all of the addresses in the input table are sent to the specified country to be geocoded. For example, if sourceCountry=USA is passed with a batch request, it is assumed that all of the addresses in the table are in the United States, so only matching addresses in USA are returned. Using this parameter can increase batch geocoding performance when all addresses are within a single country.",
                        "default": "USA"
                    },
                    {
                        "name": "outSR",
                        "type": "NUMBER",
                        "description": "The spatial reference of the x/y coordinates returned by a geocode request. This is useful for applications using a map with a spatial reference different than that of the geocode service.",
                        "default": 102100
                    },
                    {
                        "name": "langCode",
                        "type": "STRING",
                        "description": "Sets the language in which reverse-geocoded addresses are returned. Addresses in many countries are available in more than one language; in these cases the langCode parameter can be used to specify which language should be used for addresses returned by the reverseGeocode operation. This is useful for ensuring that addresses are returned in the expected language. For example, a web application could be designed to get the browser language and pass it as the langCode parameter value in a reverseGeocode request.",
                        "default": "fr"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Mapping",
                "tool_name": "ArcGIS Platform Geocoding",
                "api_name": "Autocomplete suggestions",
                "api_description": "The ArcGIS World Geocoding Service includes a method that allows character-by-character autocomplete suggestions to be generated for user input in a client application. This capability facilitates the interactive search user experience by reducing the number of characters that need to be typed before a suggested match is obtained. The idea is that a client application can provide a list of suggestions that is updated with each character entered by a user until the place they are looking for is returned in the list.\n\n![Autocomplete diagram](https://developers.arcgis.com/rest/geocode/api-reference/GUID-9A754AFE-8154-46C3-8A31-3566963F971E-web.png)\n\n[API reference `suggest` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-suggest.htm)",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "(Required) The input text entered by a user, which is used by the suggest operation to generate a list of possible matches.",
                        "default": "starbu"
                    },
                    {
                        "name": "f",
                        "type": "STRING",
                        "description": "(Required) Format of the response: json or pjson",
                        "default": "pjson"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "searchExtent",
                        "type": "STRING",
                        "description": "A set of bounding box coordinates that limit the search area for suggestions to a specific region. This is especially useful for applications in which a user will search for places and addresses within the current map extent. Helper to get search extent with https://arcgis-js-api-extent-helper.gavinr.com/",
                        "default": "-104,35.6,-94.32,41"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "A place or address type that can be used to filter suggest results. The parameter supports input of single category values or multiple comma-separated values. The category parameter must be passed in a request with the text parameter. See Category filtering for complete details about the category parameter.",
                        "default": "Address,Postal"
                    },
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "Limits the returned suggestions to values in a particular country. Valid 2- and 3-character country code values for each country are available in Geocode coverage.",
                        "default": "USA"
                    },
                    {
                        "name": "preferredLabelValues",
                        "type": "STRING",
                        "description": "Allows simple configuration of suggestion labels returned in a response from the ArcGIS World Geocoding Service by specifying which address component values should be included in the label. If the parameter is blank or excluded from a request then default address formats are used.",
                        "default": "postalCity"
                    },
                    {
                        "name": "maxSuggestions",
                        "type": "NUMBER",
                        "description": "The maximum number of suggestions returned by a suggest response, up to the maximum number allowed by the service. Currently, the ArcGIS World Geocoding Service allows up to 15 suggestions to be returned. If maxSuggestions is not included in the suggest request, the default value is 5.\n\n",
                        "default": 10
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Defines an origin point that is used to prefer or boost geocoding candidates based on their proximity to the location. Candidates near the location are prioritized relative to those further away. This is useful in mobile applications where a user wants to search for places in the vicinity of their current GPS location, or in mapping applications where users want to search for places near the center of the map.",
                        "default": "-117.196,34.056"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "message": "str",
                        "details": "empty list"
                    }
                }
            },
            {
                "category_name": "Mapping",
                "tool_name": "ArcGIS Platform Geocoding",
                "api_name": "Search address",
                "api_description": "The findAddressCandidates operation geocodes one location per request; the input address can be combined into a single input field or divided among multiple parameters.\n\n![geoceode screenshot](https://developers.arcgis.com/rest/geocode/api-reference/GUID-F2F78690-5FB5-4BF1-8633-26BF184C45A9-web.png)\n\n[API reference for `findAddressCandidates` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-find-address-candidates.htm)",
                "required_parameters": [
                    {
                        "name": "f",
                        "type": "STRING",
                        "description": "Search for an address, POI category, intersection, etc.",
                        "default": "json"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "(Required) Format of the response: json, pjson, html, ...",
                        "default": "{{API key}}"
                    },
                    {
                        "name": "searchExtent",
                        "type": "STRING",
                        "description": "The list of fields to be returned within the attributes object of the response. Descriptions for each of these fields are available in the Output fields section of this document. Helper to get search extent with https://arcgis-js-api-extent-helper.gavinr.com/",
                        "default": "%7B%0A%20%20%22spatialReference%22%3A%20%7B%0A%20%20%20%20%22wkid%22%3A%204326%0A%20%20%7D%2C%0A%20%20%22xmin%22%3A%202.0239333156489683%2C%0A%20%20%22ymin%22%3A%2041.33418375384584%2C%0A%20%20%22xmax%22%3A%202.287605190648613%2C%0A%20%20%22ymax%22%3A%2041.440306977522305%0A%7D"
                    },
                    {
                        "name": "singleLine",
                        "type": "STRING",
                        "description": "Specifies whether the results of the operation will be persisted",
                        "default": "balmes con diagonal, barcelona"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "magicKey",
                        "type": "STRING",
                        "description": "Defines an origin point that is used to prefer or boost geocoding candidates based on their proximity to the location. Candidates near the location are prioritized relative to those further away. This is useful in mobile applications where a user wants to search for places in the vicinity of their current GPS location, or in mapping applications where users want to search for places near the center of the map.",
                        "default": "JS91CYhQDS5vDPhvSMyGZby0YFbaUDoaM5bHMoFF"
                    },
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "A place or address type that can be used to filter findAddressCandidates results. The parameter supports input of single category values or multiple comma-separated values. The category parameter can be passed in a request with the SingleLine or address parameters. It can also be passed in a request on its own without the singleline or address parameters. See Category filtering for complete details about the category parameter.",
                        "default": "-117.196,34.056"
                    },
                    {
                        "name": "address2",
                        "type": "STRING",
                        "description": "A string that represents the third line of a street address. This can include street name/house number, building name, place name, or subunit.",
                        "default": "Beetham Tower"
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The standard postal code for an address, typically, a 3\u20136-digit alphanumeric code.",
                        "default": "Florida"
                    },
                    {
                        "name": "outFields",
                        "type": "STRING",
                        "description": "A string that represents the first line of a street address. In most cases this field will be used for street name and house number input, but it can also be used to input building name or place name.",
                        "default": "*"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The spatial reference of the x/y coordinates returned by a geocode request. This is useful for applications using a map with a spatial reference different than that of the geocode service.",
                        "default": "Address"
                    },
                    {
                        "name": "postal",
                        "type": "NUMBER",
                        "description": "A postal code extension, such as the United States Postal Service ZIP+4 code, provides finer resolution or higher accuracy when also passing postal.",
                        "default": 92373
                    },
                    {
                        "name": "preferredLabelValues",
                        "type": "STRING",
                        "description": "",
                        "default": "postalCity"
                    },
                    {
                        "name": "sourceCountry",
                        "type": "STRING",
                        "description": "Allows simple configuration of output fields returned in a response from the ArcGIS World Geocoding Service by specifying which address component values should be included in output fields. Supports a single value or a comma-delimited collection of values as input. If the parameter is blank or excluded from a request then default address label formats will be used.\n\n",
                        "default": "USA"
                    },
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "The findAddressCandidates operation retrieves results quicker when you pass in valid SingleLine and magicKey values than when you don't pass in magicKey. However, to get these advantages, you need to make a prior request to suggest, which provides a magicKey. This may or may not be relevant to your workflow.",
                        "default": "USA"
                    },
                    {
                        "name": "neighborhood",
                        "type": "STRING",
                        "description": "The next largest administrative division associated with an address, typically, a city or municipality. A city is a subdivision of a subregion or a region.",
                        "default": "Herrera"
                    },
                    {
                        "name": "outSR",
                        "type": "NUMBER",
                        "description": "The maximum number of locations to be returned by a search, up to the maximum number allowed by the service. If not specified, then all matching candidates up to the service maximum are returned.",
                        "default": 102100
                    },
                    {
                        "name": "maxLocations",
                        "type": "NUMBER",
                        "description": "A Boolean which specifies if StreetAddress matches should be returned even when the input house number is outside of the house number range defined for the input street. Out-of-range matches have Addr_type=StreetAddressExt. The geometry of such matches is a point corresponding to the end of the street segment where the range value is closest to the input house number. If matchOutOfRange is not specified in a request, its value is set to true by default.",
                        "default": 10
                    },
                    {
                        "name": "subregion",
                        "type": "STRING",
                        "description": "The largest administrative division associated with an address, typically, a state or province.",
                        "default": "Vienne"
                    },
                    {
                        "name": "forStorage",
                        "type": "STRING",
                        "description": "Get search extent with https://arcgis-js-api-extent-helper.gavinr.com/",
                        "default": "true"
                    },
                    {
                        "name": "address3",
                        "type": "STRING",
                        "description": "The smallest administrative division associated with an address, typically, a neighborhood or a section of a larger populated place. A neighborhood is a subdivision of a city.",
                        "default": "Suite 4208"
                    },
                    {
                        "name": "langCode",
                        "type": "STRING",
                        "description": "Limits the candidates returned by the findAddressCandidates operation to the specified country or countries. For example, if sourceCountry=USA is included in the request, it is assumed that the address is in the United States, so only matching addresses in USA are returned. Using this parameter prevents potential unexpected results in other countries for ambiguous searches.",
                        "default": "fr"
                    },
                    {
                        "name": "locationType",
                        "type": "STRING",
                        "description": "Sets the language in which geocode results are returned. Addresses and places in many countries are available in more than one language; in these cases the langCode parameter can be used to specify which language should be used for results returned by the findAddressCandidates operation. This is useful for ensuring that results are returned in the expected language. For example, a web application could be designed to get the browser language and pass it as the langCode parameter value in a findAddressCandidates request.",
                        "default": "street"
                    },
                    {
                        "name": "matchOutOfRange",
                        "type": "STRING",
                        "description": "Specifies if the output geometry of PointAddress and Subaddress matches should be the rooftop point or street entrance location. Valid values are rooftop and street. The default value is rooftop.",
                        "default": "false"
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The next largest administrative division associated with an address. Depending on the country, a subregion can represent a county, state, or province.",
                        "default": "Los Angeles"
                    },
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "A string that represents the second line of a street address. This can include street name/house number, building name, place name, or subunit.",
                        "default": "Avenida Revolucion 8208"
                    },
                    {
                        "name": "postalExt",
                        "type": "NUMBER",
                        "description": "A value representing the country. Providing this value increases geocoding speed. Acceptable values include the full country name in English or the official language of the country, the 2-character country code, or the 3-character country code. A list of supported countries and codes is available in the Geocode coverage topic.",
                        "default": 1112
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "message": "str",
                        "details": "empty list"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a road trip from San Francisco to Los Angeles. Can you provide me with a list of suggested addresses along the route? Additionally, suggest some popular attractions and landmarks that we can visit on the way.",
        "relevant APIs": [
            [
                "ArcGIS Platform Geocoding",
                "Bulk geocoding"
            ],
            [
                "ArcGIS Platform Geocoding",
                "Autocomplete suggestions"
            ],
            [
                "ArcGIS Platform Geocoding",
                "Search address"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 11096
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Directions Between 2 Locations",
                "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**",
                "required_parameters": [
                    {
                        "name": "start_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the starting point (required)",
                        "default": "-16.0755888102153"
                    },
                    {
                        "name": "end_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the ending point (required)",
                        "default": "-17.447938"
                    },
                    {
                        "name": "end_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the ending point (required)",
                        "default": "14.693425"
                    },
                    {
                        "name": "start_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the starting point (required)",
                        "default": "14.14129815"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "distance_unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "steps": [
                        {
                            "direction": "str",
                            "distance": "str",
                            "duration": "str",
                            "instruction": "str",
                            "location": [
                                "list of float with length 2"
                            ],
                            "_list_length": 15
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Measure Distance",
                "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from a hospital in Koalack to Dakar**",
                "required_parameters": [
                    {
                        "name": "lon2",
                        "type": "NUMBER",
                        "description": "Longitude of the second location (required)",
                        "default": "-17.447938"
                    },
                    {
                        "name": "lat2",
                        "type": "NUMBER",
                        "description": "Latitude of the second location (required)",
                        "default": "14.693425"
                    },
                    {
                        "name": "lon1",
                        "type": "NUMBER",
                        "description": "Longitude of the first location (required)",
                        "default": "-16.0755888102153"
                    },
                    {
                        "name": "lat1",
                        "type": "NUMBER",
                        "description": "Latitude of the first location (required)",
                        "default": "14.14129815"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "unit": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Reverse Geocode",
                "api_description": "This endpoint allows you to perform reverse geocoding in Senegal by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "The longitude of the location.",
                        "default": "-17.447938"
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "The latitude of the location.",
                        "default": "14.693425"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "amenity": "str",
                    "boundingbox": [
                        "list of str with length 4"
                    ],
                    "category": "str",
                    "city": "str",
                    "country": "str",
                    "display_name": "str",
                    "region": "str",
                    "suburb": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Facilities Lookup",
                "api_description": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The region where the facility is located",
                        "default": "Dakar"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
                        "default": "hospital"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The city where the facility is located",
                        "default": "Touba"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "The number of facilities to query.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hospital": [
                        {
                            "ISO3166-2-lvl4": "str",
                            "address": "str",
                            "amenity": "str",
                            "country_code": "str",
                            "county": "str",
                            "display_name": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "postcode": "str",
                            "region": "str",
                            "road": "str",
                            "suburb": "str",
                            "village": "str",
                            "website": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Geocode",
                "api_description": "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
                "required_parameters": [
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "he name of the location to look up.",
                        "default": "Dakar"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "display_name": "str",
                    "latitude": "str",
                    "longitude": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a family trip to Senegal and I need to find the distance and duration between two locations. Please provide me with the directions from Dakar to Saly Portudal. Also, I would like to know the facilities available in the region of Mbour. Can you give me a list of hospitals and colleges in that area?",
        "relevant APIs": [
            [
                "Senegal API",
                "Directions Between 2 Locations"
            ],
            [
                "Senegal API",
                "Facilities Lookup"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 39392
    },
    {
        "api_list": [
            {
                "category_name": "Communication",
                "tool_name": "Phone Formatter",
                "api_name": "regions",
                "api_description": "Returns a collection of supported regions for the specified\n IETF BCP 47 language tag string.",
                "required_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language in BCP 47 format",
                        "default": "us"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "Phone Formatter",
                "api_name": "simpleRegions",
                "api_description": "Returns a collection of supported regions. Method use \"Accept-Language\" header value for output list of\n regions on specific language",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "Phone Formatter",
                "api_name": "simple",
                "api_description": "A simplified version of the formatting method that does not accept additional filtering and parsing parameters\n and uses the language value from the \"Accept-Language\" header.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "phone",
                        "type": "STRING",
                        "description": "Phone number",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a trip to France and I need information about the local phone number formats and supported regions. Can you provide me with a list of supported regions in France and their corresponding phone number formats?",
        "relevant APIs": [
            [
                "Phone Formatter",
                "regions"
            ],
            [
                "Phone Formatter",
                "simpleRegions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 41875
    },
    {
        "api_list": [
            {
                "category_name": "Financial",
                "tool_name": "Candlestick Chart",
                "api_name": "Binance charts",
                "api_description": "This endpoint creates candlestick charts for any cryptocurrency listed on [Binance](https://www.binance.com) that you want!",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Symbol for the traiding pair\n\nYou can see every traiding pair available [here](https://coinmarketcap.com/en/exchanges/binance)",
                        "default": "BTCUSDT"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Amount of candles in the chart\n\n- Default: 16\n- Type: Integer. Maximum 1000",
                        "default": "16"
                    },
                    {
                        "name": "interval",
                        "type": "STRING",
                        "description": "Time interval for each candle.\n\n- Default: 1m\n\n## Time intervals\n- m: Minutes\n- h: Hours\n- d: Days\n- w: Weeks\n- M: Months\n\nList of intervals:\n- 1m\n- 3m\n- 5m\n- 15m\n- 30m\n- 1h\n- 2h\n- 4h\n- 6h\n- 8h\n- 12h\n- 1d\n- 3d\n- 1w\n- 1M",
                        "default": "1m"
                    },
                    {
                        "name": "lastPrice",
                        "type": "NUMBER",
                        "description": "The last price that the chart must have. This could be useful if there is some delay between your analysis and the call to this API, and that delay could make a difference between the numbers and the chart. If not given, the chart will be created with Binance last price\n\n- Type: Number",
                        "default": "57500"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "chartImage": "str"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "Candlestick Chart",
                "api_name": "Health",
                "api_description": "Health check",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is conducting a research project on the price movements of various cryptocurrencies. Can you generate candlestick charts for the trading pairs BTCUSDT, ETHUSDT, and DOGEUSDT on Binance with 100 candles and a time interval of 1 day? Additionally, I would like to know the health status of the Candlestick Chart API.",
        "relevant APIs": [
            [
                "Candlestick Chart",
                "Binance charts"
            ],
            [
                "Candlestick Chart",
                "Health"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 34946
    },
    {
        "api_list": [
            {
                "category_name": "Medical",
                "tool_name": "Drug Info and Price History",
                "api_name": "Drug Info",
                "api_description": "Returns information about the given drug",
                "required_parameters": [
                    {
                        "name": "drug",
                        "type": "STRING",
                        "description": "",
                        "default": "advil"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"product_ndc\": \"str\", \"generic_name\": \"str\", \"labeler_name\": \"str\", \"brand_name\": \"str\", \"active_ingredients\": [{\"name\": \"str\", \"strength\": \"str\", \"_list_length\": 2}], \"finished\": \"bool\", \"packaging\": [{\"package_ndc\": \"str\", \"description\": \"str\", \"marketing_start_date\": \"str\", \"sample\": \"bool\", \"_list_length\": 21}], \"listing_expiration_date\": \"str\", \"openfda\": {\"manufacturer_name\": [\"list of str with length 1\"], \"rxcui\": [\"list of str with length 1\"], \"spl_set_id\": [\"list of str with length 1\"], \"is_original_packager\": [\"list of bool with length 1\"], \"nui\": [\"list of str with length 3\"], \"pharm_class_moa\": [\"list of str with length 1\"], \"pharm_class_cs\": [\"list of str with length 1\"], \"pharm_class_epc\": [\"list of str with length 1\"], \"unii\": [\"list of str with length 2\"]}, \"marketing_category\": \"str\", \"dosage_form\": \"str\", \"spl_id\": \"str\", \"product_type\": \"str\", \"route\": [\"list of str with length 1\"], \"marketing_start_date\": \"str\", \"product_id\": \"str\", \"application_number\": \"str\", \"br"
            },
            {
                "category_name": "Medical",
                "tool_name": "Drug Info and Price History",
                "api_name": "genericname",
                "api_description": "Given a brand name, returns a generic name",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drug",
                        "type": "STRING",
                        "description": "",
                        "default": "advil"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generic_name": "str"
                }
            },
            {
                "category_name": "Medical",
                "tool_name": "Drug Info and Price History",
                "api_name": "Price History",
                "api_description": "Returns an array of price histories when given a valid drug ID.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is experiencing a headache and wants to know if 'advil' is a suitable medication. Can you give us information about this drug, including the generic name and active ingredients? We would also like to know the price history of 'advil'.",
        "relevant APIs": [
            [
                "Drug Info and Price History",
                "Drug Info"
            ],
            [
                "Drug Info and Price History",
                "genericname"
            ],
            [
                "Drug Info and Price History",
                "Price History"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 49830
    }
]