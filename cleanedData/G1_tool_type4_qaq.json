[
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "sport_v2",
                "api_name": "copy of endpoint:  Soccer - Sports Open Data",
                "api_description": " Sports Open Data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "sport_v2",
                "api_name": "Soccer - Sports Open Data",
                "api_description": " Sports Open Data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I work for a sports company and we are planning to organize a soccer event. Can you give us a list of popular soccer players who are available for appearances or endorsements? It would be great to know their contact information and their previous endorsement deals.",
        "relevant APIs": [
            [
                "sport_v2",
                "copy of endpoint:  Soccer - Sports Open Data"
            ],
            [
                "sport_v2",
                "Soccer - Sports Open Data"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 44159
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get Trump articles from specific newspaper",
                "api_description": "This endpoint returns all articles for Trump from a specific newspaper",
                "required_parameters": [
                    {
                        "name": "newspaper",
                        "type": "string",
                        "description": "",
                        "default": "boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Response": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get Biden Articles from specific newspaper",
                "api_description": "this endpoint returns all articles for Biden from a specified newspaper",
                "required_parameters": [
                    {
                        "name": "newspaper",
                        "type": "string",
                        "description": "",
                        "default": "boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Response": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get All Trump Articles",
                "api_description": "This endpoint returns all newspaper artices for Trump",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get all Biden Articles",
                "api_description": "This end point will return all articles from each major newspaper for Biden",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are analyzing the media coverage of Trump and Biden. Can you fetch all the Trump articles from the Boston Globe, New York Times, CNN, Washington Post, Los Angeles Times, and Chicago Tribute? Additionally, retrieve all the Biden articles from the same newspapers.",
        "relevant APIs": [
            [
                "PAC API",
                "Get Trump articles from specific newspaper"
            ],
            [
                "PAC API",
                "Get Biden Articles from specific newspaper"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 72543
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "Test",
                "api_name": "test",
                "api_description": "1",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "",
                        "default": "Arrow"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Test",
                "api_name": "test_copy",
                "api_description": "1",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "",
                        "default": "Arrow"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a fan of independent cinema and I'm looking for some hidden gems. Can you recommend some lesser-known movies that deserve more recognition? It would be great if you could provide the movie title, release year, and a brief description. Additionally, it would be helpful to know the actors and director of each movie.",
        "relevant APIs": [
            [
                "Test",
                "test"
            ],
            [
                "Test",
                "test_copy"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 48770
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Cheap Translate",
                "api_name": "/goo/translate/languages",
                "api_description": "Get all Goog supported language",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"auto\": \"str\", \"af\": \"str\", \"sq\": \"str\", \"am\": \"str\", \"ar\": \"str\", \"hy\": \"str\", \"as\": \"str\", \"ay\": \"str\", \"az\": \"str\", \"bm\": \"str\", \"eu\": \"str\", \"be\": \"str\", \"bn\": \"str\", \"bho\": \"str\", \"bs\": \"str\", \"bg\": \"str\", \"ca\": \"str\", \"ceb\": \"str\", \"ny\": \"str\", \"zh-CN\": \"str\", \"zh-TW\": \"str\", \"co\": \"str\", \"hr\": \"str\", \"cs\": \"str\", \"da\": \"str\", \"dv\": \"str\", \"doi\": \"str\", \"nl\": \"str\", \"en\": \"str\", \"eo\": \"str\", \"et\": \"str\", \"ee\": \"str\", \"tl\": \"str\", \"fi\": \"str\", \"fr\": \"str\", \"fy\": \"str\", \"gl\": \"str\", \"ka\": \"str\", \"de\": \"str\", \"el\": \"str\", \"gn\": \"str\", \"gu\": \"str\", \"ht\": \"str\", \"ha\": \"str\", \"haw\": \"str\", \"iw\": \"str\", \"hi\": \"str\", \"hmn\": \"str\", \"hu\": \"str\", \"is\": \"str\", \"ig\": \"str\", \"ilo\": \"str\", \"id\": \"str\", \"ga\": \"str\", \"it\": \"str\", \"ja\": \"str\", \"jw\": \"str\", \"kn\": \"str\", \"kk\": \"str\", \"km\": \"str\", \"rw\": \"str\", \"gom\": \"str\", \"ko\": \"str\", \"kri\": \"str\", \"ku\": \"str\", \"ckb\": \"str\", \"ky\": \"str\", \"lo\": \"str\", \"la\": \"str\", \"lv\": \"str\", \"ln\": \"str\", \"lt\": \"str\", \"lg\": \"str\", \"lb\": \"str\", \"mk\": \"str\", \"mai\": "
            },
            {
                "category_name": "Translation",
                "tool_name": "Cheap Translate",
                "api_name": "/translate/languages",
                "api_description": "Get all supported language",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"af\": \"str\", \"sq\": \"str\", \"am\": \"str\", \"ar\": \"str\", \"hy\": \"str\", \"as\": \"str\", \"az\": \"str\", \"bn\": \"str\", \"ba\": \"str\", \"eu\": \"str\", \"bs\": \"str\", \"bg\": \"str\", \"yue\": \"str\", \"ca\": \"str\", \"lzh\": \"str\", \"zh-Hans\": \"str\", \"zh-Hant\": \"str\", \"hr\": \"str\", \"cs\": \"str\", \"da\": \"str\", \"prs\": \"str\", \"dv\": \"str\", \"nl\": \"str\", \"en\": \"str\", \"et\": \"str\", \"fo\": \"str\", \"fj\": \"str\", \"fil\": \"str\", \"fi\": \"str\", \"fr\": \"str\", \"fr-CA\": \"str\", \"gl\": \"str\", \"ka\": \"str\", \"de\": \"str\", \"el\": \"str\", \"gu\": \"str\", \"ht\": \"str\", \"he\": \"str\", \"hi\": \"str\", \"mww\": \"str\", \"hu\": \"str\", \"is\": \"str\", \"id\": \"str\", \"ikt\": \"str\", \"iu\": \"str\", \"iu-Latn\": \"str\", \"ga\": \"str\", \"it\": \"str\", \"ja\": \"str\", \"kn\": \"str\", \"kk\": \"str\", \"km\": \"str\", \"tlh-Latn\": \"str\", \"ko\": \"str\", \"ku\": \"str\", \"kmr\": \"str\", \"ky\": \"str\", \"lo\": \"str\", \"lv\": \"str\", \"lt\": \"str\", \"mk\": \"str\", \"mg\": \"str\", \"ms\": \"str\", \"ml\": \"str\", \"mt\": \"str\", \"mr\": \"str\", \"mn-Cyrl\": \"str\", \"mn-Mong\": \"str\", \"my\": \"str\", \"mi\": \"str\", \"ne\": \"str\", \"nb\": \"str\", \"or\": \"str\", \"ps\": \"st"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is traveling to China and needs assistance with translation. Could you please provide a list of supported languages for translation using the Cheap Translate tool? It would be helpful to know if Chinese is one of the supported languages.",
        "relevant APIs": [
            [
                "Cheap Translate",
                "/goo/translate/languages"
            ],
            [
                "Cheap Translate",
                "/translate/languages"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 46413
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "News Network",
                "api_name": "Get News",
                "api_description": "Return list of news by selected region and category.\nVisit our [demo site](https://core-api.net/news/news.html)",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "ae: United Arab Emirates\nar: Argentina\nat: Austria\nau: Australia\nbe: Belgium\nbg: Bulgaria\nbr: Brazil\nca: Canada\nch: Switzerland\ncn: China \nco: Colombia\ncu: Cuba\ncz:\tCzech Republic\nde: Germany\neg: Egypt\nfr: France\ngb: United Kingdom\ngr: Greece\nhk: Hong Kong\nhu: Hungray\nid: Indonesia\nie: Ireland\nil: Israel\nin: India\nit: Italy\njp: Japan\nkr: South Korea\nlt: Lithuania\nlv: Latvia\nma: Morocco\nmx: Mexico\nmy: Malaysia\nng: Nigeria\nnl: Netherlands\nno: Norway\nnz: New Zealand\nph: Philippines\npl: Poland\npt: Portugal\nro: Romania\nrs: Serbia\nru: Russia\nsa: Saudi Arabia\nse: Sweden\nsg: Singapore\nsi: Slovenia\nsk: Slovakia\nth: Thailand\ntr: Turkey\ntw: Taiwan\nua: Ukraine\nus: United States\nve: Venuzuela\nza: South Africa",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "": {}
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "News Network",
                "api_name": "Search News",
                "api_description": "Search news by given keyword.\nVisit our [demo site](https://core-api.net/news/news.html)",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Joe Biden"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "\nar: arabic\nde: german\nen: english\nes: Spanish\nfr: French\nhe: hebrew\nit: italian\nnl: dutch\nno: norwegian\npt: portuguese\nru: russian\nse: swedish\nzh: chinese",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "keyword": "str",
                    "articles": [
                        {
                            "source": {
                                "id": "NoneType",
                                "name": "str"
                            },
                            "author": "str",
                            "title": "str",
                            "description": "str",
                            "url": "str",
                            "urlToImage": "str",
                            "publishedAt": "str",
                            "content": "str",
                            "_list_length": 100
                        }
                    ]
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "News Network",
                "api_name": "Available Region List",
                "api_description": "Return list of available regions.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ae": "str",
                    "ar": "str",
                    "at": "str",
                    "au": "str",
                    "be": "str",
                    "bg": "str",
                    "br": "str",
                    "ca": "str",
                    "ch": "str",
                    "cn": "str",
                    "co": "str",
                    "cu": "str",
                    "cz": "str",
                    "de": "str",
                    "eg": "str",
                    "fr": "str",
                    "gb": "str",
                    "gr": "str",
                    "hk": "str",
                    "hu": "str",
                    "id": "str",
                    "ie": "str",
                    "il": "str",
                    "in": "str",
                    "it": "str",
                    "jp": "str",
                    "kr": "str",
                    "lt": "str",
                    "lv": "str",
                    "ma": "str",
                    "mx": "str",
                    "my": "str",
                    "ng": "str",
                    "nl": "str",
                    "no": "str",
                    "nz": "str",
                    "ph": "str",
                    "pl": "str",
                    "pt": "str",
                    "ro": "str",
                    "rs": "str",
                    "ru": "str",
                    "sa": "str",
                    "se": "str",
                    "sg": "str",
                    "si": "str",
                    "sk": "str",
                    "th": "str",
                    "tr": "str",
                    "tw": "str",
                    "ua": "str",
                    "us": "str",
                    "ve": "str",
                    "za": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a researcher studying the impact of climate change on different regions. Can you search for news articles about climate change using the keyword 'climate change' in English? Additionally, provide me with the latest news articles in Spanish and French.",
        "relevant APIs": [
            [
                "News Network",
                "Search News"
            ],
            [
                "News Network",
                "Get News"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 13497
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Currency Converter_v2",
                "api_name": "Convert",
                "api_description": "Convert between Currencies.",
                "required_parameters": [
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "Currency to which you are converting.",
                        "default": "BRL"
                    },
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Currency from which you are converting.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "amount",
                        "type": "NUMBER",
                        "description": "(Optional) Amount value in From Currency. Default value is 1.",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Currency Converter_v2",
                "api_name": "List",
                "api_description": "List of Supported Currencies",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a cryptocurrency investor and I need to convert the value of my Bitcoin holdings to USD. Can you assist me with the currency conversion? I would like to convert 1 Bitcoin to USD.",
        "relevant APIs": [
            [
                "Currency Converter_v2",
                "Convert"
            ],
            [
                "Currency Converter_v2",
                "List"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 70359
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Artist featuring",
                "api_description": "Artist featuring",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Artist ID",
                        "default": "2w9zwq3AktTeYYMuhMjju8"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "artist": {
                            "id": "str",
                            "uri": "str",
                            "profile": {
                                "name": "str"
                            },
                            "relatedContent": {
                                "featuring": {
                                    "totalCount": "int",
                                    "items": [
                                        {
                                            "uri": "str",
                                            "id": "str",
                                            "owner": {
                                                "name": "str"
                                            },
                                            "name": "str",
                                            "description": "str",
                                            "images": {
                                                "totalCount": "int",
                                                "items": [
                                                    {
                                                        "sources": [
                                                            {
                                                                "url": "str",
                                                                "width": "NoneType",
                                                                "height": "NoneType",
                                                                "_list_length": 1
                                                            }
                                                        ],
                                                        "_list_length": 1
                                                    }
                                                ]
                                            },
                                            "_list_length": 8
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "extensions": "empty list"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Artist discovered on",
                "api_description": "Artist discovered on playlists (max 50)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Artist ID",
                        "default": "2w9zwq3AktTeYYMuhMjju8"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "artist": {
                            "id": "str",
                            "uri": "str",
                            "profile": {
                                "name": "str"
                            },
                            "relatedContent": {
                                "discoveredOn": {
                                    "totalCount": "int",
                                    "items": [
                                        {
                                            "uri": "str",
                                            "id": "str",
                                            "owner": {
                                                "name": "str"
                                            },
                                            "name": "str",
                                            "description": "str",
                                            "images": {
                                                "totalCount": "int",
                                                "items": [
                                                    {
                                                        "sources": [
                                                            {
                                                                "url": "str",
                                                                "width": "NoneType",
                                                                "height": "NoneType",
                                                                "_list_length": 1
                                                            }
                                                        ],
                                                        "_list_length": 1
                                                    }
                                                ]
                                            },
                                            "_list_length": 50
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "extensions": "empty list"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Artist appears on",
                "api_description": "Get artist appears on albums (max 50)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Artist ID",
                        "default": "2w9zwq3AktTeYYMuhMjju8"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "artist": {
                            "id": "str",
                            "uri": "str",
                            "profile": {
                                "name": "str"
                            },
                            "relatedContent": {
                                "appearsOn": {
                                    "totalCount": "int",
                                    "items": [
                                        {
                                            "releases": {
                                                "totalCount": "int",
                                                "items": [
                                                    {
                                                        "uri": "str",
                                                        "id": "str",
                                                        "name": "str",
                                                        "artists": {
                                                            "items": [
                                                                {
                                                                    "uri": "str",
                                                                    "profile": {
                                                                        "name": "str"
                                                                    },
                                                                    "_list_length": 1
                                                                }
                                                            ]
                                                        },
                                                        "coverArt": {
                                                            "sources": [
                                                                {
                                                                    "url": "str",
                                                                    "width": "int",
                                                                    "height": "int",
                                                                    "_list_length": 3
                                                                }
                                                            ]
                                                        },
                                                        "sharingInfo": {
                                                            "shareId": "str",
                                                            "shareUrl": "str"
                                                        },
                                                        "_list_length": 1
                                                    }
                                                ]
                                            },
                                            "_list_length": 50
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "extensions": "empty list"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Artist singles",
                "api_description": "Get artist singles",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Artist ID",
                        "default": "2w9zwq3AktTeYYMuhMjju8"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "artist": {
                            "discography": {
                                "singles": {
                                    "totalCount": "int",
                                    "items": [
                                        {
                                            "releases": {
                                                "items": [
                                                    {
                                                        "id": "str",
                                                        "uri": "str",
                                                        "name": "str",
                                                        "type": "str",
                                                        "date": {
                                                            "year": "int",
                                                            "isoString": "str"
                                                        },
                                                        "coverArt": {
                                                            "sources": [
                                                                {
                                                                    "url": "str",
                                                                    "width": "int",
                                                                    "height": "int",
                                                                    "_list_length": 3
                                                                }
                                                            ]
                                                        },
                                                        "playability": {
                                                            "playable": "bool",
                                                            "reason": "str"
                                                        },
                                                        "sharingInfo": {
                                                            "shareId": "str",
                                                            "shareUrl": "str"
                                                        },
                                                        "tracks": {
                                                            "totalCount": "int"
                                                        },
                                                        "_list_length": 1
                                                    }
                                                ]
                                            },
                                            "_list_length": 20
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "extensions": "empty list"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Artist albums",
                "api_description": "Get artist albums",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Artist ID",
                        "default": "2w9zwq3AktTeYYMuhMjju8"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "artist": {
                            "discography": {
                                "albums": {
                                    "totalCount": "int",
                                    "items": [
                                        {
                                            "releases": {
                                                "items": [
                                                    {
                                                        "id": "str",
                                                        "uri": "str",
                                                        "name": "str",
                                                        "type": "str",
                                                        "date": {
                                                            "year": "int",
                                                            "isoString": "str"
                                                        },
                                                        "coverArt": {
                                                            "sources": [
                                                                {
                                                                    "url": "str",
                                                                    "width": "int",
                                                                    "height": "int",
                                                                    "_list_length": 3
                                                                }
                                                            ]
                                                        },
                                                        "playability": {
                                                            "playable": "bool",
                                                            "reason": "str"
                                                        },
                                                        "sharingInfo": {
                                                            "shareId": "str",
                                                            "shareUrl": "str"
                                                        },
                                                        "tracks": {
                                                            "totalCount": "int"
                                                        },
                                                        "_list_length": 1
                                                    }
                                                ]
                                            },
                                            "_list_length": 11
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "extensions": "empty list"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Artist discography overview",
                "api_description": "Get artist discography overview",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Artist ID",
                        "default": "2w9zwq3AktTeYYMuhMjju8"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "artist": {
                            "id": "str",
                            "uri": "str",
                            "profile": {
                                "name": "str"
                            },
                            "discography": {
                                "albums": {
                                    "totalCount": "int"
                                },
                                "singles": {
                                    "totalCount": "int"
                                },
                                "compilations": {
                                    "totalCount": "int"
                                }
                            }
                        }
                    },
                    "extensions": "empty list"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Artist overview",
                "api_description": "Get artist overview",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "2w9zwq3AktTeYYMuhMjju8"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"data\": {\"artist\": {\"id\": \"str\", \"uri\": \"str\", \"following\": \"bool\", \"sharingInfo\": {\"shareUrl\": \"str\", \"shareId\": \"str\"}, \"profile\": {\"name\": \"str\", \"verified\": \"bool\", \"pinnedItem\": {\"comment\": \"str\", \"type\": \"str\", \"item\": {\"uri\": \"str\", \"name\": \"str\", \"images\": {\"items\": [{\"sources\": [{\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\", \"_list_length\": 1}], \"_list_length\": 1}]}}}, \"biography\": {\"text\": \"str\"}, \"externalLinks\": {\"items\": [{\"name\": \"str\", \"url\": \"str\", \"_list_length\": 4}]}, \"playlists\": {\"totalCount\": \"int\", \"items\": [{\"uri\": \"str\", \"name\": \"str\", \"description\": \"str\", \"owner\": {\"name\": \"str\"}, \"images\": {\"items\": [{\"sources\": [{\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\", \"_list_length\": 1}], \"_list_length\": 1}]}, \"_list_length\": 8}]}}, \"visuals\": {\"gallery\": {\"items\": [{\"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 1}], \"_list_length\": 5}]}, \"avatarImage\": {\"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_"
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Get artists",
                "api_description": "Get one or more artists",
                "required_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Artist IDs (you can use commas)",
                        "default": "2w9zwq3AktTeYYMuhMjju8"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "external_urls": {
                                "spotify": "str"
                            },
                            "followers": {
                                "href": "NoneType",
                                "total": "int"
                            },
                            "genres": [
                                "list of str with length 3"
                            ],
                            "id": "str",
                            "images": [
                                {
                                    "height": "int",
                                    "url": "str",
                                    "width": "int",
                                    "_list_length": 3
                                }
                            ],
                            "name": "str",
                            "popularity": "int",
                            "type": "str",
                            "uri": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Album metadata",
                "api_description": "Get album metadata",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Album ID",
                        "default": "3IBcauSj5M2A6lTeffJzdv"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"data\": {\"album\": {\"uri\": \"str\", \"name\": \"str\", \"artists\": {\"totalCount\": \"int\", \"items\": [{\"uri\": \"str\", \"profile\": {\"name\": \"str\"}, \"visuals\": {\"avatarImage\": {\"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}]}}, \"sharingInfo\": {\"shareUrl\": \"str\"}, \"_list_length\": 1}]}, \"coverArt\": {\"extractedColors\": {\"colorRaw\": {\"hex\": \"str\"}}, \"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}]}, \"discs\": {\"totalCount\": \"int\", \"items\": [{\"number\": \"int\", \"tracks\": {\"totalCount\": \"int\"}, \"_list_length\": 1}]}, \"tracks\": {\"totalCount\": \"int\", \"items\": [{\"track\": {\"playability\": {\"playable\": \"bool\", \"reason\": \"str\"}, \"duration\": {\"totalMilliseconds\": \"int\"}}, \"_list_length\": 10}]}, \"releases\": {\"totalCount\": \"int\", \"items\": \"empty list\"}, \"type\": \"str\", \"date\": {\"isoString\": \"str\", \"precision\": \"str\"}, \"playability\": {\"playable\": \"bool\", \"reason\": \"str\"}, \"label\": \"str\", \"copyright\": {\"totalCount\": \"int\", \"items\": [{\"type\": \"str\", \"text\": \"st"
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Album tracks",
                "api_description": "Get album tracks",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Album ID",
                        "default": "3IBcauSj5M2A6lTeffJzdv"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "300"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "album": {
                            "playability": {
                                "playable": "bool"
                            },
                            "tracks": {
                                "totalCount": "int",
                                "items": [
                                    {
                                        "uid": "str",
                                        "track": {
                                            "saved": "bool",
                                            "uri": "str",
                                            "name": "str",
                                            "playcount": "str",
                                            "discNumber": "int",
                                            "trackNumber": "int",
                                            "contentRating": {
                                                "label": "str"
                                            },
                                            "relinkingInformation": "NoneType",
                                            "duration": {
                                                "totalMilliseconds": "int"
                                            },
                                            "playability": {
                                                "playable": "bool"
                                            },
                                            "artists": {
                                                "items": [
                                                    {
                                                        "uri": "str",
                                                        "profile": {
                                                            "name": "str"
                                                        },
                                                        "_list_length": 1
                                                    }
                                                ]
                                            }
                                        },
                                        "_list_length": 10
                                    }
                                ]
                            }
                        }
                    },
                    "extensions": "empty list"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a party and I want to create a playlist with songs featuring my favorite artist. Can you provide me with a list of songs that feature the artist with ID '2w9zwq3AktTeYYMuhMjju8'? I would like the songs to have their names, descriptions, and images.",
        "relevant APIs": [
            [
                "Spotify Web",
                "Artist featuring"
            ],
            [
                "Spotify Web",
                "Get artists"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 24777
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Tiktok_v2",
                "api_name": "Feeds by secUid",
                "api_description": "Fetch feeds from secUid\n\nYou can get secUid from Profile api",
                "required_parameters": [
                    {
                        "name": "schemaType",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "username",
                        "type": "string",
                        "description": "",
                        "default": "therock"
                    },
                    {
                        "name": "secUid",
                        "type": "STRING",
                        "description": "",
                        "default": "MS4wLjABAAAAM3R2BtjzVT-uAtstkl2iugMzC6AtnpkojJbjiOdDDrdsTiTR75-8lyWJCY5VvDrZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Tiktok_v2",
                "api_name": "Generate Signature",
                "api_description": "Generate Signature from TikToc API Url\n\nFollowing API Path will work with this signature\n\n/node/share/user/\n/api/post/itemlist/\n/api/challenge/itemlist/\n/api/music/item_list/",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.tiktok.com/node/share/user/@therock"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Tiktok_v2",
                "api_name": "Video by Url",
                "api_description": "Fetch video data from TikToc video url \n\ne.g. \nhttps://www.****.com/@therock/video/6800111723257941253\n(copy exact url from browser)",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.tiktok.com/@tiktok/video/6800111723257941253"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Tiktok_v2",
                "api_name": "Profile",
                "api_description": "Get T-tok Profile Data",
                "required_parameters": [
                    {
                        "name": "schemaType",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "therock"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Tiktok_v2",
                "api_name": "Feeds",
                "api_description": "Fetch TikToc user recent feeds by username",
                "required_parameters": [
                    {
                        "name": "schemaType",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "username",
                        "type": "string",
                        "description": "",
                        "default": "tiktok"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Tiktok_v2",
                "api_name": "Hashtag",
                "api_description": "Search TikToc feeds by hashtag",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "description": "",
                        "default": "fitness"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Tiktok_v2",
                "api_name": "Music by Id",
                "api_description": "This ID you can extract from TikToc music url",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "6548327243720952577"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a surprise birthday party for my friend. Can you help me fetch recent TikToc feeds from her secUid to see if she has any clues about her birthday plans? Her secUid is MS4wLjABAAAAM3R2BtjzVT-uAtstkl2iugMzC6AtnpkojJbjiOdDDrdsTiTR75-8lyWJCY5VvDrZ. Also, generate a signature for her TikToc profile URL to access her profile data.",
        "relevant APIs": [
            [
                "Tiktok_v2",
                "Feeds by secUid"
            ],
            [
                "Tiktok_v2",
                "Profile"
            ],
            [
                "Tiktok_v2",
                "Generate Signature"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 73587
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Face Animer",
                "api_name": "Get Result",
                "api_description": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data.",
                "required_parameters": [
                    {
                        "name": "taskId",
                        "type": "STRING",
                        "description": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data. ",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "data": "NoneType",
                    "msg": "str",
                    "time": "int",
                    "requestId": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Face Animer",
                "api_name": "Create Job ID",
                "api_description": "Create Job ID",
                "required_parameters": [
                    {
                        "name": "templateId",
                        "type": "STRING",
                        "description": "templateId could be from 0 to 21 (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)",
                        "default": ""
                    },
                    {
                        "name": "imageUrl",
                        "type": "STRING",
                        "description": "Enter valid image url",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "data": "NoneType",
                    "msg": "str",
                    "time": "int",
                    "requestId": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to enhance the emotional expression of my digital characters in a game. How can I use the Face Animer API to achieve this? Please explain the process of creating a job ID with a template ID and an image URL, and then retrieving the animation result. Additionally, can you provide some recommendations for the most expressive animation effects available?",
        "relevant APIs": [
            [
                "Face Animer",
                "Create Job ID"
            ],
            [
                "Face Animer",
                "Get Result"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 8129
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Facebook User Info",
                "api_name": "find_comment_find_get",
                "api_description": "Find Comment by UID or by_object_id(PageID, GroupID) ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "by_facebook_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "by_object_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Facebook User Info",
                "api_name": "find_feed_find_get",
                "api_description": "Find Feed by UID or by_object_id(PageID, GroupID) ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "by_facebook_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "by_object_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Facebook User Info",
                "api_name": "find_user_find_get",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "by_facebook_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "by_phone",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "err": "int",
                    "msg": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to find all the comments made by my friend on Facebook. Can you help me retrieve the comments by their Facebook ID?",
        "relevant APIs": [
            [
                "Facebook User Info",
                "find_comment_find_get"
            ],
            [
                "Facebook User Info",
                "find_user_find_get"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 17978
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "Tickets for an Event",
                "api_description": "All tickets for an event that you have access to",
                "required_parameters": [
                    {
                        "name": "event_id",
                        "type": "STRING",
                        "description": "The unique identifier of the event.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "A Single Ticket",
                "api_description": "Information about a single ticket.",
                "required_parameters": [
                    {
                        "name": "event_id",
                        "type": "STRING",
                        "description": "Unique identifier of the event.",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Unique identifier of the ticket.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "A Single Event",
                "api_description": "Information about a single event you have access to",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The unique identifier of the event",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "Your Events",
                "api_description": "A list of events owned or accessible by the current token holder",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "Me",
                "api_description": "Information about the current token holder",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "user": "NoneType"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I would like to know more details about an event with the ID 'EVT12345'. Could you provide me with information about the event and all the tickets available for purchase?",
        "relevant APIs": [
            [
                "Ticketbud",
                "A Single Event"
            ],
            [
                "Ticketbud",
                "Tickets for an Event"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 16700
    },
    {
        "api_list": [
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Listing Availability",
                "api_description": "Retrieve listing availability and stay length rules for the requested month.\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "the year",
                        "default": "2024"
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "the listing id\n",
                        "default": "619966061834034729"
                    },
                    {
                        "name": "month",
                        "type": "NUMBER",
                        "description": "the month",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Listing status Full",
                "api_description": "Retrieve the calculated status (available/not available for stay) for the next 12 months of a listing based on previous and following days stay rules.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "the listing id",
                        "default": "619966061834034729"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Listing Prices",
                "api_description": "Retrieve listing prices for the requested month",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "the listing id\n",
                        "default": "619966061834034729"
                    },
                    {
                        "name": "month",
                        "type": "STRING",
                        "description": "the month",
                        "default": "1"
                    },
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "the year",
                        "default": "2024"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Listing status",
                "api_description": "Retrieve the calculated status (available/not available for stay) of a listing based on previous and following days stay rules.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "the listing id",
                        "default": "619966061834034729"
                    },
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "the year",
                        "default": "2024"
                    },
                    {
                        "name": "month",
                        "type": "NUMBER",
                        "description": "the month",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Prices and Availability by administrative divisions",
                "api_description": "Retrieve average Price, average price of available properties only, availability percent and number of processed properties in an geographical administrative division. Geographic area names can be found from \"Get administrative divisions\" endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie listings with cities with the same name but in different countries). Can be filtered on bedrooms and max guest capacity.",
                "required_parameters": [
                    {
                        "name": "month",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "",
                        "default": "IT"
                    },
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2024"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "admin3",
                        "type": "STRING",
                        "description": "",
                        "default": "Roma"
                    },
                    {
                        "name": "bedrooms",
                        "type": "STRING",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "admin1",
                        "type": "STRING",
                        "description": "",
                        "default": "Lazio"
                    },
                    {
                        "name": "admin2",
                        "type": "STRING",
                        "description": "",
                        "default": "Citta metropolitana di Roma Capitale"
                    },
                    {
                        "name": "maxGuestCapacity",
                        "type": "NUMBER",
                        "description": "",
                        "default": "4"
                    },
                    {
                        "name": "place",
                        "type": "STRING",
                        "description": "",
                        "default": "Trastevere"
                    },
                    {
                        "name": "admin4",
                        "type": "STRING",
                        "description": "",
                        "default": "Municipio Roma I"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Get administrative divisions",
                "api_description": "Retrieve geographical admin names to be used in Listing by georef endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie cities with the same name but in different countries). Returns 50 results",
                "required_parameters": [
                    {
                        "name": "countrycode",
                        "type": "STRING",
                        "description": "",
                        "default": "IT"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "admin2",
                        "type": "STRING",
                        "description": "",
                        "default": "RM"
                    },
                    {
                        "name": "admin1",
                        "type": "STRING",
                        "description": "",
                        "default": "07"
                    },
                    {
                        "name": "admin4",
                        "type": "STRING",
                        "description": "",
                        "default": "05809101"
                    },
                    {
                        "name": "admin3",
                        "type": "STRING",
                        "description": "",
                        "default": "058091"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Prices and Availability by lat lng",
                "api_description": "Retrieve average Price, average price of available properties only, availability percent and number of processed properties in a range from a given geographical point. Max range is 20000 meters. Can be filtered on bedrooms and max guest capacity.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "the year",
                        "default": "2024"
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "latitude",
                        "default": "28.0852473"
                    },
                    {
                        "name": "lng",
                        "type": "NUMBER",
                        "description": "longitude",
                        "default": "-16.7349705"
                    },
                    {
                        "name": "range",
                        "type": "NUMBER",
                        "description": "range in meters from latitude and longitude point",
                        "default": "500"
                    },
                    {
                        "name": "month",
                        "type": "STRING",
                        "description": "the month",
                        "default": "1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "bedrooms",
                        "type": "NUMBER",
                        "description": "number of bedrooms",
                        "default": "1"
                    },
                    {
                        "name": "maxGuestCapacity",
                        "type": "NUMBER",
                        "description": "Max guest the listing can accomodate",
                        "default": "2"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Amenities",
                "api_description": "Retrieves amenities ids And descriptions. Returns 50 results",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "index to start from",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Markets",
                "api_description": "Retrieve Market names to be used in Listing by market endpoint. Returns 50 results",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "index to start from",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Connect test",
                "api_description": "No parameters needed. Useful to test connectivity and authentication",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a travel enthusiast and I want to know the availability and stay length rules for a specific Airbnb listing in Rome. Can you retrieve this information for me? The listing ID is 619966061834034729 and the month is January 2024.",
        "relevant APIs": [
            [
                "Airbnb listings",
                "Listing Availability"
            ],
            [
                "Airbnb listings",
                "Listing status"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 53959
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "News Network",
                "api_name": "Get News",
                "api_description": "Return list of news by selected region and category.\nVisit our [demo site](https://core-api.net/news/news.html)",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "ae: United Arab Emirates\nar: Argentina\nat: Austria\nau: Australia\nbe: Belgium\nbg: Bulgaria\nbr: Brazil\nca: Canada\nch: Switzerland\ncn: China \nco: Colombia\ncu: Cuba\ncz:\tCzech Republic\nde: Germany\neg: Egypt\nfr: France\ngb: United Kingdom\ngr: Greece\nhk: Hong Kong\nhu: Hungray\nid: Indonesia\nie: Ireland\nil: Israel\nin: India\nit: Italy\njp: Japan\nkr: South Korea\nlt: Lithuania\nlv: Latvia\nma: Morocco\nmx: Mexico\nmy: Malaysia\nng: Nigeria\nnl: Netherlands\nno: Norway\nnz: New Zealand\nph: Philippines\npl: Poland\npt: Portugal\nro: Romania\nrs: Serbia\nru: Russia\nsa: Saudi Arabia\nse: Sweden\nsg: Singapore\nsi: Slovenia\nsk: Slovakia\nth: Thailand\ntr: Turkey\ntw: Taiwan\nua: Ukraine\nus: United States\nve: Venuzuela\nza: South Africa",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "": {}
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "News Network",
                "api_name": "Search News",
                "api_description": "Search news by given keyword.\nVisit our [demo site](https://core-api.net/news/news.html)",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Joe Biden"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "\nar: arabic\nde: german\nen: english\nes: Spanish\nfr: French\nhe: hebrew\nit: italian\nnl: dutch\nno: norwegian\npt: portuguese\nru: russian\nse: swedish\nzh: chinese",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "keyword": "str",
                    "articles": [
                        {
                            "source": {
                                "id": "NoneType",
                                "name": "str"
                            },
                            "author": "str",
                            "title": "str",
                            "description": "str",
                            "url": "str",
                            "urlToImage": "str",
                            "publishedAt": "str",
                            "content": "str",
                            "_list_length": 100
                        }
                    ]
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "News Network",
                "api_name": "Available Region List",
                "api_description": "Return list of available regions.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ae": "str",
                    "ar": "str",
                    "at": "str",
                    "au": "str",
                    "be": "str",
                    "bg": "str",
                    "br": "str",
                    "ca": "str",
                    "ch": "str",
                    "cn": "str",
                    "co": "str",
                    "cu": "str",
                    "cz": "str",
                    "de": "str",
                    "eg": "str",
                    "fr": "str",
                    "gb": "str",
                    "gr": "str",
                    "hk": "str",
                    "hu": "str",
                    "id": "str",
                    "ie": "str",
                    "il": "str",
                    "in": "str",
                    "it": "str",
                    "jp": "str",
                    "kr": "str",
                    "lt": "str",
                    "lv": "str",
                    "ma": "str",
                    "mx": "str",
                    "my": "str",
                    "ng": "str",
                    "nl": "str",
                    "no": "str",
                    "nz": "str",
                    "ph": "str",
                    "pl": "str",
                    "pt": "str",
                    "ro": "str",
                    "rs": "str",
                    "ru": "str",
                    "sa": "str",
                    "se": "str",
                    "sg": "str",
                    "si": "str",
                    "sk": "str",
                    "th": "str",
                    "tr": "str",
                    "tw": "str",
                    "ua": "str",
                    "us": "str",
                    "ve": "str",
                    "za": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a news reporter covering sports events. Can you search for news articles about sports using the keyword 'sports' in English? Additionally, provide me with the latest news articles in Spanish and Italian.",
        "relevant APIs": [
            [
                "News Network",
                "Search News"
            ],
            [
                "News Network",
                "Get News"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 13499
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "User By Rest ID",
                "api_description": "User By Rest ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "Tweet Retweeters",
                "api_description": "Tweet Retweeters",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Tweet ID",
                        "default": "1485953263040188416"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "20"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "Tweet Favoriters",
                "api_description": "Tweet Favoriters",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Tweet ID",
                        "default": "1485953263040188416"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "20"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "User Media",
                "api_description": "User Media",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "20"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "User By Screen Name",
                "api_description": "User By Screen Name",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "Username",
                        "default": "elonmusk"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "User Followers",
                "api_description": "User Followers",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "20"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "User Likes",
                "api_description": "User Likes",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "20"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "User Tweets & Replies",
                "api_description": "User Tweets & Replies",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "40"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "v2 / User Tweets & Replies",
                "api_description": "v2 / User Tweets & Replies",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of results",
                        "default": "40"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter_v4",
                "api_name": "Tweet Detail & Conversation",
                "api_description": "Tweet Detail & Conversation",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Tweet ID",
                        "default": "1485953263040188416"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for other results",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Help me find the followers of a user with the Twitter ID 44196397. I would like to know the usernames and follower counts of each follower. Please include a cursor for other results if available.",
        "relevant APIs": [
            [
                "Twitter_v4",
                "User Followers"
            ],
            [
                "Twitter_v4",
                "User By Rest ID"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 64662
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Live world futbol news",
                "api_name": "Get Individual News Source",
                "api_description": "Get News about football news from a specific news resource.",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "eurosport"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Live world futbol news",
                "api_name": "Get All World Footbol news live",
                "api_description": "This end point will return back all news about footbol.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a football blogger and need fresh content for my website. Can you fetch the latest football news articles from Eurosport and provide the titles, descriptions, and publication dates? Additionally, I want to include live world football news on my blog. Please include the headlines, sources, and timestamps for each news article.",
        "relevant APIs": [
            [
                "Live world futbol news",
                "Get Individual News Source"
            ],
            [
                "Live world futbol news",
                "Get All World Footbol news live"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 38551
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Search person by name",
                "api_description": "Search for a person by parameters will return a list of persons that match your query",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "Elon Musk"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "countryId": "int",
                    "occupation": "NoneType",
                    "nationality": "NoneType",
                    "birthYear": "NoneType",
                    "birthMonth": "NoneType",
                    "birthDate": "NoneType",
                    "address": "str",
                    "countryOfResidence": "NoneType",
                    "honorific": "NoneType",
                    "number": "NoneType",
                    "isForeign": "NoneType",
                    "documentType": "NoneType",
                    "documentIssuedOn": "NoneType",
                    "documentIssuedBy": "NoneType",
                    "documentNumber": "NoneType",
                    "hideAddress": "NoneType",
                    "email": "NoneType",
                    "phone": "NoneType",
                    "countryCode": "str",
                    "companies": [
                        {
                            "name": "str",
                            "shortName": "NoneType",
                            "brandName": "NoneType",
                            "countryCode": "str",
                            "percentage": "NoneType",
                            "amount": "NoneType",
                            "appointedOn": "NoneType",
                            "resignedOn": "NoneType",
                            "role": {
                                "id": "int",
                                "name": "str",
                                "providerId": "NoneType",
                                "countryId": "int",
                                "translation": {
                                    "en": "str",
                                    "ro": "str",
                                    "ru": "str"
                                },
                                "isInactive": "NoneType",
                                "priority": "NoneType"
                            },
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Get company [Full data]",
                "api_description": "The Get company details endpoint will return all full company data, including company contacts, financial reports and other data",
                "required_parameters": [
                    {
                        "name": "internationalNumber",
                        "type": "STRING",
                        "description": "",
                        "default": "0458.780.306"
                    },
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "",
                        "default": "be"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"id\": \"int\", \"name\": \"str\", \"internationalNumber\": \"str\", \"localNumber\": \"str\", \"countryId\": \"int\", \"dateCreated\": \"str\", \"dateDisolved\": \"NoneType\", \"accountingAuthorityId\": \"NoneType\", \"createdAt\": \"str\", \"updatedAt\": \"str\", \"alternateNames\": \"empty list\", \"shortName\": \"str\", \"brandName\": \"str\", \"canSellShares\": \"NoneType\", \"address\": \"str\", \"hasPublicDebt\": \"NoneType\", \"paysVat\": \"bool\", \"vatNumber\": \"NoneType\", \"vatDate\": \"str\", \"vatCancelDate\": \"NoneType\", \"paysExcise\": \"NoneType\", \"exciseNumber\": \"NoneType\", \"exciseDate\": \"NoneType\", \"exciseCancelDate\": \"NoneType\", \"additionalData\": {}, \"europeanNumber\": \"NoneType\", \"typeId\": \"int\", \"statusText\": \"NoneType\", \"publicDebtAmount\": \"NoneType\", \"subscribedShareCapital\": \"NoneType\", \"paidShareCapital\": \"str\", \"terms\": \"NoneType\", \"annualAssembly\": \"str\", \"endDateFinancialYear\": \"str\", \"vatRemovalBasis\": \"NoneType\", \"vatRestorationBasis\": \"NoneType\", \"currentEmployeesNumber\": \"NoneType\", \"sharesValue\": \"NoneType\", \"sharesIssued\": \"None"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Search company by Name",
                "api_description": "Search for a company by parameters will return a list of companies that match your query",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Company name or number or other identifiers",
                        "default": "Tesla"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "ISO2 country code",
                        "default": "be"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "shortName": "NoneType",
                    "brandName": "str",
                    "internationalNumber": "str",
                    "countryCode": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Get company [Basic data]",
                "api_description": "The Get company details endpoint will return all basic company data on B2BHint.",
                "required_parameters": [
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "",
                        "default": "be"
                    },
                    {
                        "name": "internationalNumber",
                        "type": "STRING",
                        "description": "",
                        "default": "0458.780.306"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"id\": \"int\", \"name\": \"str\", \"internationalNumber\": \"str\", \"localNumber\": \"str\", \"countryId\": \"int\", \"dateCreated\": \"str\", \"dateDisolved\": \"NoneType\", \"accountingAuthorityId\": \"NoneType\", \"createdAt\": \"str\", \"updatedAt\": \"str\", \"alternateNames\": \"empty list\", \"shortName\": \"str\", \"brandName\": \"str\", \"canSellShares\": \"NoneType\", \"address\": \"str\", \"hasPublicDebt\": \"NoneType\", \"paysVat\": \"bool\", \"vatNumber\": \"NoneType\", \"vatDate\": \"str\", \"vatCancelDate\": \"NoneType\", \"paysExcise\": \"NoneType\", \"exciseNumber\": \"NoneType\", \"exciseDate\": \"NoneType\", \"exciseCancelDate\": \"NoneType\", \"additionalData\": {}, \"europeanNumber\": \"NoneType\", \"typeId\": \"int\", \"statusText\": \"NoneType\", \"publicDebtAmount\": \"NoneType\", \"subscribedShareCapital\": \"NoneType\", \"paidShareCapital\": \"str\", \"terms\": \"NoneType\", \"annualAssembly\": \"str\", \"endDateFinancialYear\": \"str\", \"vatRemovalBasis\": \"NoneType\", \"vatRestorationBasis\": \"NoneType\", \"currentEmployeesNumber\": \"NoneType\", \"sharesValue\": \"NoneType\", \"sharesIssued\": \"None"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "B2BHint",
                "api_name": "Search company by Email",
                "api_description": "Search for a company by email will return a list of companies that match the selected email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "rsing@tesla.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "shortName": "NoneType",
                    "brandName": "NoneType",
                    "internationalNumber": "str",
                    "countryCode": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family is considering relocating to a different country and we are interested in finding job opportunities. Can you assist us in finding companies in the B2BHint database that are hiring? We are specifically looking for companies in the technology sector located in Canada. Please provide us with a list of matching companies and their basic company data using the Search company by Name API. Additionally, we would like to retrieve the full company data for a selected company using the Get company [Full data] API.",
        "relevant APIs": [
            [
                "B2BHint",
                "Search company by Name"
            ],
            [
                "B2BHint",
                "Get company [Full data]"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 13722
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": " Forward & Reverse Geocoding by googleMap api",
                "api_name": "reverse",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "",
                        "default": -87.6244212
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "",
                        "default": 41.8755616
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "code": "int",
                    "data": {
                        "address": "str",
                        "province": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": " Forward & Reverse Geocoding by googleMap api",
                "api_name": "forward",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "Chicago"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "code": "int",
                    "data": [
                        {
                            "boundingbox": [
                                "list of str with length 4"
                            ],
                            "lat": "str",
                            "lon": "str",
                            "display_name": "str",
                            "place_rank": "int",
                            "category": "str",
                            "type": "str",
                            "importance": "float",
                            "icon": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am working on a project that requires analyzing the population density of major cities around the world. Can you provide me with the latitude and longitude coordinates for the top 10 most populous cities using the forward geocoding API? Additionally, I would like to know the address and province for each city using the reverse geocoding API.",
        "relevant APIs": [
            [
                " Forward & Reverse Geocoding by googleMap api",
                "forward"
            ],
            [
                " Forward & Reverse Geocoding by googleMap api",
                "reverse"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 56049
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Autocomplete places",
                "api_description": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                        "default": "0"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                        "default": "US,CA"
                    },
                    {
                        "name": "adminDivision1",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                        "default": ""
                    },
                    {
                        "name": "accuracyRadiusKm",
                        "type": "NUMBER",
                        "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "adminDivision2",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                        "default": ""
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to find places which name starts with this prefix.",
                        "default": "Sea"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                        "default": "CITY"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Search places",
                "api_description": "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filters places by \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                        "default": "CITY"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                        "default": "0"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                        "default": "US,CA"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                        "default": "10"
                    },
                    {
                        "name": "adminDivision1",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                        "default": ""
                    },
                    {
                        "name": "adminDivision2",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                        "default": ""
                    },
                    {
                        "name": "accuracyRadiusKm",
                        "type": "NUMBER",
                        "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to find places with a similar name.",
                        "default": "New York"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by IP",
                "api_description": "Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "IP Address (v4 and v6 are supported).",
                        "default": "200.194.51.97"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by my IP",
                "api_description": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by ID",
                "api_description": "Returns a single Place identified by an ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the Place.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by Geoname ID",
                "api_description": "Returns a single Place identified by a Geoname ID.",
                "required_parameters": [
                    {
                        "name": "geonameId",
                        "type": "NUMBER",
                        "description": "Unique identificator given by Geonames",
                        "default": "5391959"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a solo trip and I want to visit cities with a vibrant nightlife. Can you recommend cities with a lively nightlife scene? It would be great if you could provide the localized names of these cities.",
        "relevant APIs": [
            [
                "Spott",
                "Search places"
            ],
            [
                "Spott",
                "Autocomplete places"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 73151
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Face Animer",
                "api_name": "Get Result",
                "api_description": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data.",
                "required_parameters": [
                    {
                        "name": "taskId",
                        "type": "STRING",
                        "description": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data. ",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "data": "NoneType",
                    "msg": "str",
                    "time": "int",
                    "requestId": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Face Animer",
                "api_name": "Create Job ID",
                "api_description": "Create Job ID",
                "required_parameters": [
                    {
                        "name": "templateId",
                        "type": "STRING",
                        "description": "templateId could be from 0 to 21 (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)",
                        "default": ""
                    },
                    {
                        "name": "imageUrl",
                        "type": "STRING",
                        "description": "Enter valid image url",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "data": "NoneType",
                    "msg": "str",
                    "time": "int",
                    "requestId": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Imagine I'm creating a virtual reality experience and I need to make the avatars' faces more expressive. What APIs would you recommend for creating a job ID with a template ID and an image URL, and then retrieving the result using the task ID?",
        "relevant APIs": [
            [
                "Face Animer",
                "Create Job ID"
            ],
            [
                "Face Animer",
                "Get Result"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 25152
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "US Hospitals",
                "api_name": "getHospitalsById",
                "api_description": "###Find US Hospitals by CMS Certification Number\nSimply add your search string as a parameter to the \"ccn\" query.\n\n**Note**: The API only returns the first 30 results.",
                "required_parameters": [
                    {
                        "name": "ccn",
                        "type": "NUMBER",
                        "description": "",
                        "default": "670068"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Provider CCN": "int",
                    "Hospital Name": "str",
                    "Alias": "str",
                    "Url": "str",
                    "Phone": "str",
                    "Service": "str",
                    "Type": "str",
                    "Approval Codes": "str",
                    "Street Address": "str",
                    "City": "str",
                    "State Code": "str",
                    "Zip Code": "str",
                    "County": "str",
                    "Medicare CBSA Number": "int",
                    "Rural Versus Urban": "str",
                    "Control": "str",
                    "Number of Beds": "int",
                    "Parent Unit": "NoneType",
                    "Affiliated Units": "NoneType",
                    "System": "NoneType"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "US Hospitals",
                "api_name": "getHospitalsByName",
                "api_description": "###Find US Hospitals by name.\nSimply add your search string to the \"name\" parameter in the url.\nTip:  The API also works if your search for *name='pr'* instead of *name='presbyterian'.* \n\n**Note**: The API only returns the first 30 results.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "presbyterian"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family and I are planning a road trip across the United States, and we want to be prepared in case of any medical emergencies. Can you provide us with a list of hospitals along our route? It would be helpful if we could search for hospitals by name and certification number. Thank you!",
        "relevant APIs": [
            [
                "US Hospitals",
                "getHospitalsById"
            ],
            [
                "US Hospitals",
                "getHospitalsByName"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 62126
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Auther Check",
                "api_name": "Get person by id",
                "api_description": "To check if the person_id already exists in the system, just specify the path with person_id. If the person_id exists in response you will get the same person_id and information when a person was created and updated.",
                "required_parameters": [
                    {
                        "name": "person_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm developing a mobile app for a self-checkout system and I need to integrate facial authentication. Can you guide me on how to use the Auther Check API to check if a person_id already exists in the system? I want to ensure that the person_id matches the information when the person was created and updated.",
        "relevant APIs": [
            [
                "Auther Check",
                "Get person by id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 87714
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "DomainStatus",
                "api_description": "Returns domain status if is webmail or disposable.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "errors": {
                        "status": "bool",
                        "code": "int",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "Enrichment",
                "api_description": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person\u2019s name, location and social handles from an email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "b.mohamed@tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "NoneType",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "NoneType",
                        "gender": "str",
                        "phone_number": "NoneType",
                        "position": "str",
                        "twitter": "NoneType",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "DomainSearch",
                "api_description": "You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user /account/sessions endpoint. Use width, height and quality arguments to change the output settings.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name from which you want to find the email addresses. For example, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"stripe.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",
                        "default": "stripe.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "department",
                        "type": "STRING",
                        "description": "Get only email addresses for people working in the selected department(s).",
                        "default": "pr"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Specifies the number of email addresses to skip. The default is 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"organization\": {\"location\": {\"country\": \"str\", \"city\": \"str\", \"state\": \"str\", \"street_address\": \"str\"}, \"social_links\": {\"twitter_url\": \"str\", \"facebook_url\": \"str\", \"linkedin_url\": \"str\"}, \"disposable\": \"bool\", \"webmail\": \"bool\", \"website_url\": \"str\", \"phone_number\": \"str\", \"industries\": \"str\", \"postal_code\": \"str\", \"employee_count\": \"int\", \"founded\": \"str\", \"company_size\": \"str\", \"last_updated\": \"str\", \"revenue\": \"str\", \"accept_all\": \"bool\", \"description\": \"str\", \"pattern\": \"str\", \"domain_score\": \"int\", \"organization\": \"str\", \"whois\": {\"registrar_name\": \"str\", \"created_date\": \"str\", \"referral_url\": \"str\"}}, \"emails\": [{\"email\": \"str\", \"first_name\": \"str\", \"last_name\": \"str\", \"full_name\": \"str\", \"gender\": \"str\", \"phone_number\": \"NoneType\", \"type\": \"str\", \"country\": \"str\", \"position\": \"str\", \"department\": \"str\", \"seniority\": \"str\", \"twitter\": \"NoneType\", \"linkedin\": \"str\", \"accept_all\": \"bool\", \"pattern\": \"str\", \"score\": \"int\", \"verification\": {\"date\": \"NoneType\", \"status\": "
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "LinkedinFinder",
                "api_description": "This API endpoint generates or retrieves the most likely email address from a Linkedin URL.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the Linkedin. For example, \"https://www.linkedin.com/in/alex-maccaw-ab592978\".",
                        "default": "https://www.linkedin.com/in/alex-maccaw-ab592978"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "bool",
                        "position": "str",
                        "twitter": "str",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "NoneType",
                            "status": "NoneType"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 2
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailVerifier",
                "api_description": "verify the deliverability of an email address.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "The email address you want to verify.",
                        "default": "b.mohamed@tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "email": {
                            "mx_records": "bool",
                            "smtp_server": "bool",
                            "smtp_check": "bool",
                            "accept_all": "bool",
                            "block": "bool",
                            "email": "str",
                            "gibberish": "bool",
                            "disposable": "bool",
                            "webmail": "bool",
                            "regex": "bool",
                            "whois": {
                                "registrar_name": "str",
                                "created_date": "str",
                                "referral_url": "str"
                            },
                            "status": "str",
                            "result": "str",
                            "score": "int"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailFinder",
                "api_description": "generates or retrieves the most likely email address from a domain name, a first name and a last name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name from which you want to find the email addresses. For example, \"stripe.com\"",
                        "default": "stripe.com"
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "The person's first name. It doesn't need to be in lowercase.",
                        "default": "Moskoz"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "The person's last name. It doesn't need to be in lowercase.",
                        "default": "Dustin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "bool",
                        "position": "str",
                        "twitter": "NoneType",
                        "linkedin": "str",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": "empty list"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "AuthorFinder",
                "api_description": "This API endpoint generates or retrieves the most likely email address from a blog post url.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the article. For example, \"https://clearbit.com/blog/company-name-to-domain-api\".",
                        "default": "https://clearbit.com/blog/company-name-to-domain-api"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "NoneType",
                        "position": "str",
                        "twitter": "str",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ],
                        "info": {
                            "title": "str",
                            "description": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailCount",
                "api_description": "Domain name from which you want to find the email addresses.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The email address you want to find sources.",
                        "default": "tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "total": "int",
                        "personal_emails": "int",
                        "generic_emails": "int",
                        "department": {
                            "engineering": "int",
                            "finance": "int",
                            "hr": "int",
                            "it": "int",
                            "marketing": "int",
                            "operations": "int",
                            "management": "int",
                            "sales": "int",
                            "legal": "int",
                            "support": "int",
                            "communication": "int",
                            "executive": "int"
                        },
                        "seniority": {
                            "junior": "int",
                            "senior": "int",
                            "executive": "int"
                        }
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to verify if the domain 'example.com' is a webmail or disposable. Also, retrieve the person and company data based on the email 'john.doe@example.com'.",
        "relevant APIs": [
            [
                "Tomba",
                "DomainStatus"
            ],
            [
                "Tomba",
                "Enrichment"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 50984
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "fomoAPI",
                "api_name": "Get Campaign From URL",
                "api_description": "Get lead from Specific website  Campaign",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "Lead"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "gogofodo.com"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "list_complete": "bool",
                    "keys": "empty list"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "fomoAPI",
                "api_name": "Get Campaign  Lead From ID",
                "api_description": "Get ALL Lead From Your Campaign Social Proof",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "Lead"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "list_complete": "bool",
                    "keys": "empty list"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I run an e-commerce website and I want to track the leads generated from a specific campaign on my website. Can you provide me with the list of leads and their metadata for the campaign with the ID 'abc123'? Additionally, it would be helpful to know the country, region, and city for each lead.",
        "relevant APIs": [
            [
                "fomoAPI",
                "Get Campaign From URL"
            ],
            [
                "fomoAPI",
                "Get Campaign  Lead From ID"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 72773
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Autocomplete places",
                "api_description": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                        "default": "0"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                        "default": "US,CA"
                    },
                    {
                        "name": "adminDivision1",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                        "default": ""
                    },
                    {
                        "name": "accuracyRadiusKm",
                        "type": "NUMBER",
                        "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "adminDivision2",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                        "default": ""
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to find places which name starts with this prefix.",
                        "default": "Sea"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                        "default": "CITY"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Search places",
                "api_description": "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filters places by \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                        "default": "CITY"
                    },
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                        "default": "0"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                        "default": "US,CA"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                        "default": "10"
                    },
                    {
                        "name": "adminDivision1",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                        "default": ""
                    },
                    {
                        "name": "adminDivision2",
                        "type": "STRING",
                        "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                        "default": ""
                    },
                    {
                        "name": "accuracyRadiusKm",
                        "type": "NUMBER",
                        "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                        "default": ""
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to find places with a similar name.",
                        "default": "New York"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by IP",
                "api_description": "Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "IP Address (v4 and v6 are supported).",
                        "default": "200.194.51.97"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by my IP",
                "api_description": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by ID",
                "api_description": "Returns a single Place identified by an ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the Place.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Spott",
                "api_name": "Get place by Geoname ID",
                "api_description": "Returns a single Place identified by a Geoname ID.",
                "required_parameters": [
                    {
                        "name": "geonameId",
                        "type": "NUMBER",
                        "description": "Unique identificator given by Geonames",
                        "default": "5391959"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a solo trip and I want to visit some peaceful cities. Can you recommend some calm and serene cities around the world? I would like to know the names of these cities, their population, and the country they are located in. It would be great if you can also provide some images of these cities.",
        "relevant APIs": [
            [
                "Spott",
                "Search places"
            ],
            [
                "Spott",
                "Get place by ID"
            ],
            [
                "Spott",
                "Autocomplete places"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 5671
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "ping",
                "api_description": "Check that server is still alive",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "datetime": "str",
                    "version": "str",
                    "uptime": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "tickerData",
                "api_description": "Returns a list of ticker records",
                "required_parameters": [
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "Ticker period",
                        "default": "1h"
                    },
                    {
                        "name": "startDate",
                        "type": "STRING",
                        "description": "Start date",
                        "default": "2010-04-12T14:30"
                    },
                    {
                        "name": "tickerName",
                        "type": "STRING",
                        "description": "Ticker name",
                        "default": "gold"
                    },
                    {
                        "name": "endDate",
                        "type": "STRING",
                        "description": "End date",
                        "default": "2010-04-20T12:30"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "records": [
                        {
                            "closeDateTime": "str",
                            "open": "float",
                            "close": "float",
                            "high": "float",
                            "low": "float",
                            "volume": "int",
                            "_list_length": 142
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "tickersList",
                "api_description": "Returns a list of available tickers",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a stock market analyst and I need to analyze the trends for gold. Can you fetch the ticker data for gold from April 12, 2010, 14:30 to April 20, 2010, 12:30? Please include the open, close, high, low prices, and volume for each record. Also, it would be great if you could provide the server time, version, and uptime to ensure the server is running smoothly.",
        "relevant APIs": [
            [
                "stocks_archive",
                "tickerData"
            ],
            [
                "stocks_archive",
                "ping"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 19696
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Real Estate Records",
                "api_name": "transactions",
                "api_description": "Show transactions given a zipcode. The API returns 50 records each time in descending order by date and supports pagination. This API requires a subscription cost.\n\nThe returned data shows the summary of information. To get further detail (such as the unit of a building that posts the most recent transaction, use summary API.\n\nSample data of the API when query zipcode 10019 is:\n \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"310\",\n        \"STREET\": \"W 56th St\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL COOP UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-07-21T00:00:00.000Z\",\n      \"lastSalesAmount\": 514000,\n      \"maxSalesAmount\": 1359000,\n      \"TotalRecords\": 74\n    },",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "",
                        "default": "10019"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "err": "NoneType",
                    "count": "int",
                    "data": [
                        {
                            "_id": {
                                "STREET_NUMBER": "str",
                                "STREET": "str",
                                "PROPERTY_TYPE": "str",
                                "ZIPCODE": "str",
                                "STATE": "str"
                            },
                            "lastSalesDate": "str",
                            "lastSalesAmount": "int",
                            "maxSalesAmount": "int",
                            "TotalRecords": "int",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Real Estate Records",
                "api_name": "detail",
                "api_description": "Return all detailed historical transactions of a given address. To call this API, it requires to call summary API first using address information. Then use the Id value returned from the summary API and call this API with the same Id. This API requires a subscription cost.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "6144a05f3afc5ca06e88a2ab"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "err": "NoneType",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Real Estate Records",
                "api_name": "summary",
                "api_description": "Get a summary of property records by units given an address (if it's a multi-unit building). Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. This API requires a subscription cost. \n\nThis API provides details a level further than the \"address\" endpoint. For instance,  for 220 Central Park S, New York, NY 10019 it returns\n  \"data\": [\n    {\n      \"_id\": {\n        \"id\": \"6144a17b3afc5ca06ea0dd95\",\n        \"Loc\": {\n          \"coordinates\": [\n            -73.9802,\n            40.76719\n          ],\n          \"type\": \"Point\"\n        },\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"UNIT\": \"67\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 59500000,\n      \"SQFT\": 0,\n      \"TotalRecords\": 1\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "",
                        "default": "220"
                    },
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "",
                        "default": "Central Park S"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "",
                        "default": "10019"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "err": "NoneType",
                    "count": "int",
                    "data": [
                        {
                            "_id": {
                                "id": "str",
                                "Loc": {
                                    "coordinates": [
                                        "list of float with length 2"
                                    ],
                                    "type": "str"
                                },
                                "STREET_NUMBER": "str",
                                "STREET": "str",
                                "UNIT": "str",
                                "PROPERTY_TYPE": "str",
                                "ZIPCODE": "str",
                                "STATE": "str"
                            },
                            "lastSalesDate": "str",
                            "lastSalesAmount": "int",
                            "maxSalesAmount": "int",
                            "SQFT": "int",
                            "TotalRecords": "int",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Real Estate Records",
                "api_name": "address",
                "api_description": "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
                "required_parameters": [
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "",
                        "default": "Central Park S"
                    },
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "",
                        "default": "220"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "",
                        "default": "10019"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "err": "NoneType",
                    "data": [
                        {
                            "_id": {
                                "STREET_NUMBER": "str",
                                "STREET": "str",
                                "PROPERTY_TYPE": "str",
                                "ZIPCODE": "str",
                                "STATE": "str"
                            },
                            "Location": {
                                "coordinates": [
                                    "list of float with length 2"
                                ],
                                "type": "str"
                            },
                            "lastSalesDate": "str",
                            "lastSalesAmount": "int",
                            "maxSalesAmount": "int",
                            "TotalRecords": "int",
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "As a real estate developer, I'm interested in analyzing the market trends for a specific area. Can you provide me with a summary of property records and transactions for an address on Central Park S in zipcode 10019? Additionally, I would like to see the detailed historical transactions for that address.",
        "relevant APIs": [
            [
                "Real Estate Records",
                "summary"
            ],
            [
                "Real Estate Records",
                "transactions"
            ],
            [
                "Real Estate Records",
                "detail"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 58705
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/index-trend",
                "api_description": "Get index trend earnings history information for a particular stock",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/cashflow-statement",
                "api_description": "Get stock cash flow statements.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/profile",
                "api_description": "Get stock profile information such as company name, descriptions, website, etc...",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/calendar-events",
                "api_description": "Get stock calendar events.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/balance-sheet",
                "api_description": "Get stock balance sheet data.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/recommendation-trend",
                "api_description": "Get stock recommendations and trends.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/net-share-purchase-activity",
                "api_description": "Get net share purchase activity information for a particular stock",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/institution-ownership",
                "api_description": "Get stock institution ownership.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/sec-filings",
                "api_description": "Get stock SEC filings.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/earnings",
                "api_description": "Get earnings information for a particular stock",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to analyze the financial performance of Apple Inc. Can you provide me with the stock profile, balance sheet data, cash flow statements, and recommendation trends for AAPL?",
        "relevant APIs": [
            [
                "Yahoo Finance_v2",
                "stock/profile"
            ],
            [
                "Yahoo Finance_v2",
                "stock/balance-sheet"
            ],
            [
                "Yahoo Finance_v2",
                "stock/cashflow-statement"
            ],
            [
                "Yahoo Finance_v2",
                "stock/recommendation-trend"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 45418
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/index-trend",
                "api_description": "Get index trend earnings history information for a particular stock",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/cashflow-statement",
                "api_description": "Get stock cash flow statements.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/profile",
                "api_description": "Get stock profile information such as company name, descriptions, website, etc...",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/calendar-events",
                "api_description": "Get stock calendar events.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/balance-sheet",
                "api_description": "Get stock balance sheet data.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/recommendation-trend",
                "api_description": "Get stock recommendations and trends.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/net-share-purchase-activity",
                "api_description": "Get net share purchase activity information for a particular stock",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/institution-ownership",
                "api_description": "Get stock institution ownership.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/sec-filings",
                "api_description": "Get stock SEC filings.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Yahoo Finance_v2",
                "api_name": "stock/earnings",
                "api_description": "Get earnings information for a particular stock",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "A single symbol",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to know the calendar events, cash flow statements, and recommendation trends for Apple Inc. Can you assist me with this financial information?",
        "relevant APIs": [
            [
                "Yahoo Finance_v2",
                "stock/calendar-events"
            ],
            [
                "Yahoo Finance_v2",
                "stock/cashflow-statement"
            ],
            [
                "Yahoo Finance_v2",
                "stock/recommendation-trend"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 3215
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Pk to Username",
                "api_description": "Find username from PK (userid)",
                "required_parameters": [
                    {
                        "name": "pk",
                        "type": "STRING",
                        "description": "",
                        "default": "177402262"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Validate Username",
                "api_description": "Instagram Username validation",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "lelepons"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Music Search",
                "api_description": "Search music/sound/audio names and get artists cover and sounds url",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search Sounds/Audio name with artists/movie name\n\nE.g \nJustin Bieber Love me\n\n",
                        "default": "Titanic My Heart Will Go On"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Search Locations",
                "api_description": "Location name search from keyword",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "toronto"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Search Hashtags",
                "api_description": "Search tags name by keyword",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "fitness"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram_v2",
                "api_name": "Profile",
                "api_description": "Instagram Profile",
                "required_parameters": [
                    {
                        "name": "ig",
                        "type": "STRING",
                        "description": "",
                        "default": "lelepons"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a trip to Toronto next month with my family. Can you help me find some popular locations to visit? I would also like to search for hashtags related to travel and photography to get inspiration for my Instagram posts.",
        "relevant APIs": [
            [
                "Instagram_v2",
                "Search Locations"
            ],
            [
                "Instagram_v2",
                "Search Hashtags"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 48480
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get Trump articles from specific newspaper",
                "api_description": "This endpoint returns all articles for Trump from a specific newspaper",
                "required_parameters": [
                    {
                        "name": "newspaper",
                        "type": "string",
                        "description": "",
                        "default": "boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Response": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get Biden Articles from specific newspaper",
                "api_description": "this endpoint returns all articles for Biden from a specified newspaper",
                "required_parameters": [
                    {
                        "name": "newspaper",
                        "type": "string",
                        "description": "",
                        "default": "boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Response": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get All Trump Articles",
                "api_description": "This endpoint returns all newspaper artices for Trump",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "News_Media",
                "tool_name": "PAC API",
                "api_name": "Get all Biden Articles",
                "api_description": "This end point will return all articles from each major newspaper for Biden",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I work for a political news website and I need to gather articles related to both Biden and Trump. Can you provide me with all articles for Trump from the Boston Globe, New York Times, CNN, Washington Post, Los Angeles Times, and Chicago Tribune? Additionally, I would like to obtain all articles for Biden from the same newspapers.",
        "relevant APIs": [
            [
                "PAC API",
                "Get Trump articles from specific newspaper"
            ],
            [
                "PAC API",
                "Get Biden Articles from specific newspaper"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 22077
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "product_search",
                "api_description": "Returns the list of products based on keyword.",
                "required_parameters": [
                    {
                        "name": "store_id",
                        "type": "STRING",
                        "description": "",
                        "default": "1122"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "womens shoes"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "count",
                        "type": "STRING",
                        "description": "maximum 25",
                        "default": "25"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "product_details",
                "api_description": "Returns detailed product information.\nIncluding:\n```\nproduct variants (with different dimension like size, color and etc.\nratings and reviews\nitem images/videos\nprice\npromotion\nchild products\n```",
                "required_parameters": [
                    {
                        "name": "store_id",
                        "type": "STRING",
                        "description": "The id of the store which product details data is being retrieved from. (optional)\nValue comes from nearby store API.",
                        "default": "3330"
                    },
                    {
                        "name": "tcin",
                        "type": "STRING",
                        "description": "Target product id.\nValue comes from product search API.",
                        "default": "16251811"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "User's longitude information. (optional)",
                        "default": "-122.200"
                    },
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "User's latitude information. (optional)",
                        "default": "37.820"
                    },
                    {
                        "name": "zip",
                        "type": "STRING",
                        "description": "User's zipcode. (optional)",
                        "default": "94611"
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code of user's location. (optional)",
                        "default": "CA"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"product\": {\"tcin\": \"str\", \"item\": {\"enrichment\": {\"images\": {\"primary_image\": \"str\", \"alternate_image_urls\": [\"list of str with length 7\"], \"content_labels\": [{\"image_url\": \"str\", \"_list_length\": 9}], \"alternate_images\": [\"list of str with length 7\"], \"primary_image_url\": \"str\", \"base_url\": \"str\", \"swatch_image\": \"str\", \"swatch_image_url\": \"str\"}, \"return_policies\": [{\"user_type\": \"str\", \"day_count\": \"int\", \"_list_length\": 2}], \"buy_url\": \"str\", \"size_chart_fragment_url\": \"str\", \"videos\": [{\"video_title\": \"str\", \"video_poster_image\": \"str\", \"video_captions\": [{\"caption_url\": \"str\", \"language\": \"str\", \"_list_length\": 1}], \"video_files\": [{\"video_url\": \"str\", \"video_height_pixels\": \"str\", \"mime_type\": \"str\", \"_list_length\": 1}], \"video_length_seconds\": \"str\", \"_list_length\": 1}]}, \"is_limited_time_offer\": \"bool\", \"relationship_type_code\": \"str\", \"primary_brand\": {\"linking_id\": \"str\", \"name\": \"str\", \"canonical_url\": \"str\"}, \"handling\": {\"import_designation_description\": \"str\"},"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "nearby_stores",
                "api_description": "Returns the list of stores near to specified ZIP code.",
                "required_parameters": [
                    {
                        "name": "place",
                        "type": "STRING",
                        "description": "",
                        "default": "10010"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "within",
                        "type": "STRING",
                        "description": "Radius of searching distance in miles",
                        "default": "100"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "nearby_stores": {
                            "stores": [
                                {
                                    "store_id": "str",
                                    "mailing_address": {
                                        "country_code": "str",
                                        "address_line1": "str",
                                        "city": "str",
                                        "state": "str",
                                        "region": "str",
                                        "postal_code": "str"
                                    },
                                    "location_name": "str",
                                    "main_voice_phone_number": "str",
                                    "distance": "float",
                                    "rolling_operating_hours": {
                                        "main_hours": {
                                            "days": [
                                                {
                                                    "date": "str",
                                                    "hours": [
                                                        {
                                                            "end_date": "str",
                                                            "end_time": "str",
                                                            "begin_time": "str",
                                                            "_list_length": 1
                                                        }
                                                    ],
                                                    "day_name": "str",
                                                    "is_open": "bool",
                                                    "_list_length": 14
                                                }
                                            ]
                                        }
                                    },
                                    "status": "str",
                                    "_list_length": 20
                                }
                            ],
                            "count": "int"
                        }
                    }
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "product_fulfillment",
                "api_description": "Returns product fulfillment information.",
                "required_parameters": [
                    {
                        "name": "tcin",
                        "type": "STRING",
                        "description": "Target product id.\nValue comes from product search API.\n",
                        "default": "51952757"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "zip",
                        "type": "STRING",
                        "description": "The zipcode of user's search location.\n(optional)",
                        "default": "94611"
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code where is user is located at. (optional)",
                        "default": "CA"
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "User's longitude Information (optional)",
                        "default": "-122.200"
                    },
                    {
                        "name": "store_id",
                        "type": "STRING",
                        "description": "The id of the Target store from which the fulfillment information is being retrieved.\nValue comes from nearby stores api.\n(optional)",
                        "default": "3330"
                    },
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "User's longitude Information (optional)",
                        "default": "37.820"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"product\": {\"tcin\": \"str\", \"__typename\": \"str\", \"fulfillment\": {\"scheduled_delivery\": {\"availability_status\": \"str\", \"location_available_to_promise_quantity\": \"float\"}, \"is_out_of_stock_in_all_store_locations\": \"bool\", \"product_id\": \"str\", \"shipping_options\": {\"availability_status\": \"str\", \"available_to_promise_quantity\": \"float\", \"services\": [{\"max_delivery_date\": \"str\", \"shipping_method_id\": \"str\", \"min_delivery_date\": \"str\", \"shipping_method_short_description\": \"str\", \"cutoff\": \"str\", \"is_base_shipping_method\": \"bool\", \"service_level_description\": \"str\", \"is_two_day_shipping\": \"bool\", \"_list_length\": 1}], \"loyalty_availability_status\": \"str\"}, \"store_options\": [{\"location_available_to_promise_quantity\": \"float\", \"order_pickup\": {\"availability_status\": \"str\"}, \"in_store_only\": {\"availability_status\": \"str\"}, \"search_response_store_type\": \"str\", \"store\": {\"mailing_address\": {\"address_line1\": \"str\", \"city\": \"str\", \"state\": \"str\", \"postal_code\": \"str\"}, \"location_name\": \"str\"}"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target.com Shopping - API",
                "api_name": "search_autocomplete",
                "api_description": "Product autocompletion based on search keyword.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "tv"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm currently at home in zip code 94611 and looking for nearby Target stores. Can you fetch a list of stores near me and provide details like store name, address, and operating hours? Additionally, I'd like to see the product fulfillment information for a specific product with the TCIN '51952757'.",
        "relevant APIs": [
            [
                "Target.com Shopping - API",
                "nearby_stores"
            ],
            [
                "Target.com Shopping - API",
                "product_fulfillment"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 43933
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Graffiti Tags",
                "api_description": "Returns a list of all Graffiti-Tags",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Artists",
                "api_description": "Returns a list of all music Artists who contributed to JSR/JSRF",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Songs",
                "api_description": "Returns a list of all Songs from JSR/JSRF",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Levels",
                "api_description": "Returns a list of all Levels",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Locations",
                "api_description": "Returns a list of all Locations in JSR/JSRF",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Games",
                "api_description": "Returns a list of all Games",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "JSRF Character by ID",
                "api_description": "Returns a single Character by ID",
                "required_parameters": [
                    {
                        "name": "characterId",
                        "type": "string",
                        "description": "",
                        "default": "643c71888cabe0dcede868a3"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "JSRF Characters",
                "api_description": "Returns a list of all JSRF Characters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "JSR Character by ID",
                "api_description": "Returns a single Character by ID",
                "required_parameters": [
                    {
                        "name": "characterId",
                        "type": "string",
                        "description": "",
                        "default": "643c71b18cabe0dcede868ed"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Characters",
                "api_description": "Returns a list of all Characters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a game developer working on a project inspired by Jet Set Radio and I need some reference material. Can you give me a list of all the levels in the game and their corresponding locations? Additionally, it would be helpful if I could get a list of the characters featured in the game.",
        "relevant APIs": [
            [
                "Jet Set Radio API",
                "Levels"
            ],
            [
                "Jet Set Radio API",
                "Locations"
            ],
            [
                "Jet Set Radio API",
                "Characters"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 40611
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Pocket Cube Solver",
                "api_name": "getRandomSolution",
                "api_description": "Returns json data consisting of a random optimal solution of a given cube position.",
                "required_parameters": [
                    {
                        "name": "position",
                        "type": "string",
                        "description": "",
                        "default": "GBWGYOGYRYOORWROBRWYGWBB"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "position": "str",
                    "depth": "int",
                    "sol": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Pocket Cube Solver",
                "api_name": "getAllSolutions",
                "api_description": "Returns json data consisting of all the solutions of a given cube position.",
                "required_parameters": [
                    {
                        "name": "position",
                        "type": "string",
                        "description": "",
                        "default": "GBWGYOGYRYOORWROBRWYGWBB"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "position": "str",
                    "depth": "int",
                    "sols": [
                        "list of str with length 9"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a pocket cube solving competition in my company and I need some sample solutions. Can you generate a random optimal solution for the position GBWGYOGYRYOORWROBRWYGWBB? It would also be helpful if you could provide me with all the solutions available for this position.",
        "relevant APIs": [
            [
                "Pocket Cube Solver",
                "getRandomSolution"
            ],
            [
                "Pocket Cube Solver",
                "getAllSolutions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 9238
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Dividend",
                "api_description": "Contains the annual dividends (split-adjusted without special dividend)\n\nAPI_Dividend\nSyntax:\n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "1962-01-01"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "API_Dividend",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-31"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "year": "str",
                    "dividend": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Index_Isin",
                "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nisin = search shareuid with ISIN",
                "required_parameters": [
                    {
                        "name": "API_Index",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "isin",
                        "type": "STRING",
                        "description": "",
                        "default": "US4592001014"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "shareuid": "str",
                    "isin": "str",
                    "wkn": "str",
                    "currency": "str",
                    "shortname": "str",
                    "name": "str",
                    "country": "str",
                    "indizes": "str",
                    "sector": "str",
                    "lastbalanceupdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Index_Name",
                "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "ibm"
                    },
                    {
                        "name": "API_Index",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "shareuid": "str",
                    "isin": "str",
                    "wkn": "str",
                    "currency": "str",
                    "shortname": "str",
                    "name": "str",
                    "country": "str",
                    "indizes": "str",
                    "sector": "str",
                    "lastbalanceupdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Index_Wkn",
                "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nwkn = search shareuid with WKN",
                "required_parameters": [
                    {
                        "name": "wkn",
                        "type": "STRING",
                        "description": "",
                        "default": "851399"
                    },
                    {
                        "name": "API_Index",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "shareuid": "str",
                    "isin": "str",
                    "wkn": "str",
                    "currency": "str",
                    "shortname": "str",
                    "name": "str",
                    "country": "str",
                    "indizes": "str",
                    "sector": "str",
                    "lastbalanceupdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetobook",
                "api_description": "contains the price-book ratio (P / B ratio) for each past trading day",
                "required_parameters": [
                    {
                        "name": "API_Pricetobook",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-15"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2019-12-15"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "pb": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetocashflow",
                "api_description": "Contains the price-cash-flow ratio (P / C ratio) for each past trading day\n\nAPI_Pricetocashflow\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-15"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-01-06"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "API_Pricetocashflow",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetoearning",
                "api_description": "Contains the price-earnings ratio (P / E ratio) for each past trading day\n\nAPI_Pricetoearning\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-05-15"
                    },
                    {
                        "name": "API_Pricetoearning",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-04-15"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetosales",
                "api_description": "Contains the price turnover ratio (P / S ratio) for each past trading day.\n\nAPI_Pricetosales\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-06-08"
                    },
                    {
                        "name": "API_Pricetosales",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-05-15"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Roa",
                "api_description": "Contains the profitability (ROA ratio) for the financial year.\n\nAPI_Roa\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "API_Roa",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-06-08"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2018-05-15"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Roe",
                "api_description": "Contains the equity ratio (ROE ratio) for the financial year.\n\nAPI_Roe\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2018-05-08"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-06-08"
                    },
                    {
                        "name": "API_Roe",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Please fetch the shareuid for the company name IBM. Also, provide me with the price-book ratio for the share with the number 2 from 2019-12-15 to 2020-03-15.",
        "relevant APIs": [
            [
                "Finanzoo API_Fundamentals",
                "API_Index_Name"
            ],
            [
                "Finanzoo API_Fundamentals",
                "API_Pricetobook"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 19662
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "VAT validation and tax rates",
                "api_name": "VAT validation API endpoint",
                "api_description": "The Validate Endpoint takes a VAT number in the request, checks if that number is valid, and if it is valid, returns addition details about the company associated with that VAT number.",
                "required_parameters": [
                    {
                        "name": "vat_number",
                        "type": "STRING",
                        "description": "The VAT number to validate.",
                        "default": "SE556656688001"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "message": "str",
                        "code": "str",
                        "details": "NoneType"
                    }
                }
            },
            {
                "category_name": "Business",
                "tool_name": "VAT validation and tax rates",
                "api_name": "VAT rates & categories API endpoint",
                "api_description": "The /categories/ endpoint makes it easy to get the latest VAT rates, including the reduced rates for certain categories, for a specific country.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "The two letter ISO 3166-1 alpha-2 code of the country in which the transaction takes place.",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country_code": "str",
                    "rate": "str",
                    "category": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "VAT validation and tax rates",
                "api_name": "VAT price calculation API endpoint",
                "api_description": "The Calculate Endpoint makes it easy to calculate a VAT compliant price given a country and price, as well as such optional values as the type of goods.",
                "required_parameters": [
                    {
                        "name": "amount",
                        "type": "STRING",
                        "description": "The amount that you would like to get the VAT amount for or from.",
                        "default": "500"
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "The two letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code of the country in which the transaction takes place.",
                        "default": "DE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vat_category",
                        "type": "STRING",
                        "description": "Some countries give reduced VAT rates for certain categories of goods. If you pass the VAT category in the request, the API will check if there is a reduced VAT rate for that country and category. For example, below is a request to get the VAT for 500 EUR worth of books in Germany",
                        "default": "books"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "As a business owner, I need to validate a VAT number for my company. Please validate the VAT number 'SE556656688001' and provide additional details about the associated company. Also, fetch the latest VAT rates, including the reduced rates for specific categories, for Germany.",
        "relevant APIs": [
            [
                "VAT validation and tax rates",
                "VAT validation API endpoint"
            ],
            [
                "VAT validation and tax rates",
                "VAT rates & categories API endpoint"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 83931
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "DomainStatus",
                "api_description": "Returns domain status if is webmail or disposable.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "errors": {
                        "status": "bool",
                        "code": "int",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "Enrichment",
                "api_description": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person\u2019s name, location and social handles from an email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "b.mohamed@tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "NoneType",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "NoneType",
                        "gender": "str",
                        "phone_number": "NoneType",
                        "position": "str",
                        "twitter": "NoneType",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "DomainSearch",
                "api_description": "You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user /account/sessions endpoint. Use width, height and quality arguments to change the output settings.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name from which you want to find the email addresses. For example, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"stripe.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",
                        "default": "stripe.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "department",
                        "type": "STRING",
                        "description": "Get only email addresses for people working in the selected department(s).",
                        "default": "pr"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Specifies the number of email addresses to skip. The default is 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"organization\": {\"location\": {\"country\": \"str\", \"city\": \"str\", \"state\": \"str\", \"street_address\": \"str\"}, \"social_links\": {\"twitter_url\": \"str\", \"facebook_url\": \"str\", \"linkedin_url\": \"str\"}, \"disposable\": \"bool\", \"webmail\": \"bool\", \"website_url\": \"str\", \"phone_number\": \"str\", \"industries\": \"str\", \"postal_code\": \"str\", \"employee_count\": \"int\", \"founded\": \"str\", \"company_size\": \"str\", \"last_updated\": \"str\", \"revenue\": \"str\", \"accept_all\": \"bool\", \"description\": \"str\", \"pattern\": \"str\", \"domain_score\": \"int\", \"organization\": \"str\", \"whois\": {\"registrar_name\": \"str\", \"created_date\": \"str\", \"referral_url\": \"str\"}}, \"emails\": [{\"email\": \"str\", \"first_name\": \"str\", \"last_name\": \"str\", \"full_name\": \"str\", \"gender\": \"str\", \"phone_number\": \"NoneType\", \"type\": \"str\", \"country\": \"str\", \"position\": \"str\", \"department\": \"str\", \"seniority\": \"str\", \"twitter\": \"NoneType\", \"linkedin\": \"str\", \"accept_all\": \"bool\", \"pattern\": \"str\", \"score\": \"int\", \"verification\": {\"date\": \"NoneType\", \"status\": "
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "LinkedinFinder",
                "api_description": "This API endpoint generates or retrieves the most likely email address from a Linkedin URL.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the Linkedin. For example, \"https://www.linkedin.com/in/alex-maccaw-ab592978\".",
                        "default": "https://www.linkedin.com/in/alex-maccaw-ab592978"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "bool",
                        "position": "str",
                        "twitter": "str",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "NoneType",
                            "status": "NoneType"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 2
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailVerifier",
                "api_description": "verify the deliverability of an email address.",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "The email address you want to verify.",
                        "default": "b.mohamed@tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "email": {
                            "mx_records": "bool",
                            "smtp_server": "bool",
                            "smtp_check": "bool",
                            "accept_all": "bool",
                            "block": "bool",
                            "email": "str",
                            "gibberish": "bool",
                            "disposable": "bool",
                            "webmail": "bool",
                            "regex": "bool",
                            "whois": {
                                "registrar_name": "str",
                                "created_date": "str",
                                "referral_url": "str"
                            },
                            "status": "str",
                            "result": "str",
                            "score": "int"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailFinder",
                "api_description": "generates or retrieves the most likely email address from a domain name, a first name and a last name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name from which you want to find the email addresses. For example, \"stripe.com\"",
                        "default": "stripe.com"
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "The person's first name. It doesn't need to be in lowercase.",
                        "default": "Moskoz"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "The person's last name. It doesn't need to be in lowercase.",
                        "default": "Dustin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "bool",
                        "position": "str",
                        "twitter": "NoneType",
                        "linkedin": "str",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": "empty list"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "AuthorFinder",
                "api_description": "This API endpoint generates or retrieves the most likely email address from a blog post url.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the article. For example, \"https://clearbit.com/blog/company-name-to-domain-api\".",
                        "default": "https://clearbit.com/blog/company-name-to-domain-api"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "website_url": "str",
                        "accept_all": "bool",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "country": "str",
                        "gender": "str",
                        "phone_number": "NoneType",
                        "position": "str",
                        "twitter": "str",
                        "linkedin": "str",
                        "disposable": "bool",
                        "webmail": "bool",
                        "full_name": "str",
                        "company": "str",
                        "score": "int",
                        "verification": {
                            "date": "str",
                            "status": "str"
                        },
                        "sources": [
                            {
                                "uri": "str",
                                "website_url": "str",
                                "extracted_on": "str",
                                "last_seen_on": "str",
                                "still_on_page": "bool",
                                "_list_length": 20
                            }
                        ],
                        "info": {
                            "title": "str",
                            "description": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Tomba",
                "api_name": "EmailCount",
                "api_description": "Domain name from which you want to find the email addresses.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The email address you want to find sources.",
                        "default": "tomba.io"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "total": "int",
                        "personal_emails": "int",
                        "generic_emails": "int",
                        "department": {
                            "engineering": "int",
                            "finance": "int",
                            "hr": "int",
                            "it": "int",
                            "marketing": "int",
                            "operations": "int",
                            "management": "int",
                            "sales": "int",
                            "legal": "int",
                            "support": "int",
                            "communication": "int",
                            "executive": "int"
                        },
                        "seniority": {
                            "junior": "int",
                            "senior": "int",
                            "executive": "int"
                        }
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Can you find the email address for the person with the first name Moskoz and last name Dustin at stripe.com? Also, provide me with the company details and the email count for stripe.com.",
        "relevant APIs": [
            [
                "Tomba",
                "EmailFinder"
            ],
            [
                "Tomba",
                "EmailCount"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 33971
    }
]