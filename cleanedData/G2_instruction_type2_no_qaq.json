[
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "Hafez",
                "api_name": "Fal",
                "api_description": "get a random a poem(Fal) and it's meaning!",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "poem": "str",
                    "text": "str"
                }
            },
            {
                "category_name": "Other",
                "tool_name": "petFood",
                "api_name": "petfoods",
                "api_description": "petfoods",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Other",
                "tool_name": "Baby Names by API-Ninjas",
                "api_name": "/v1/babynames",
                "api_description": "API Ninjas Baby Names API endpoint. Returns 10 baby name results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "popular_only",
                        "type": "STRING",
                        "description": "Whether to only return popular (top 10%) of names. Must be either true or false. If unset, default is true.",
                        "default": ""
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Baby name gender. Must be one of the following: boy, girl, neutral",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "We're planning a company event and we want to incorporate unique baby names into the theme. Retrieve 10 baby name suggestions from the Baby Names API by API-Ninjas. It would also be helpful if you could provide some pet food recommendations for the office pets.",
        "relevant APIs": [
            [
                "Baby Names by API-Ninjas",
                "/v1/babynames"
            ],
            [
                "petFood",
                "petfoods"
            ]
        ],
        "query_id": 52115
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Email Address Validator",
                "api_name": "Validate Email Address",
                "api_description": "Determine firsthand if the email is deliverable and working",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@gmail.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "timestamp": "int",
                    "data": {
                        "valid": "bool",
                        "validators": {
                            "regex": {
                                "valid": "bool"
                            },
                            "typo": {
                                "valid": "bool"
                            },
                            "disposable": {
                                "valid": "bool"
                            },
                            "mx": {
                                "valid": "bool"
                            },
                            "smtp": {
                                "valid": "bool",
                                "reason": "str"
                            }
                        },
                        "reason": "str",
                        "email": "str"
                    }
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Email API",
                "api_name": "Get Fake Email Address",
                "api_description": "Get a fake business email address and job title",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "email": "str",
                    "job_title": "str"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Verify Email",
                "api_name": "Verify Email",
                "api_description": "Verify Email Address",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "string",
                        "description": "",
                        "default": "test@example.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "str"
                }
            }
        ],
        "query": "I want to verify the authenticity of an email address. The email is 'jane.doe@example.com'. Can you check if it is a valid and working email? Also, provide me with a fake business email address and job title.",
        "relevant APIs": [
            [
                "Verify Email",
                "Verify Email"
            ],
            [
                "Email API",
                "Get Fake Email Address"
            ]
        ],
        "query_id": 65468
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Air Quality",
                "api_name": "Current Air Quality",
                "api_description": "Retrieves current air quality conditions for any location in the world, given a lat/lon.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "Longitude",
                        "default": "-73.00597"
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "Latitude",
                        "default": "40.71427"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "city_name": "str",
                    "country_code": "str",
                    "data": [
                        {
                            "aqi": "int",
                            "co": "int",
                            "mold_level": "int",
                            "no2": "int",
                            "o3": "int",
                            "pm10": "int",
                            "pm25": "int",
                            "pollen_level_grass": "int",
                            "pollen_level_tree": "int",
                            "pollen_level_weed": "int",
                            "predominant_pollen_type": "str",
                            "so2": "int",
                            "_list_length": 1
                        }
                    ],
                    "lat": "float",
                    "lon": "float",
                    "state_code": "str",
                    "timezone": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Air Quality",
                "api_name": "Air Quality Forecast",
                "api_description": "Returns a 3 day (72 hour) air quality forecast for any point in the world given a lat/lon. ",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "35.779"
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-78.638"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Limits response forecast hours (default 72). ",
                        "default": "72"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "city_name": "str",
                    "country_code": "str",
                    "data": [
                        {
                            "aqi": "int",
                            "co": "float",
                            "datetime": "str",
                            "no2": "float",
                            "o3": "float",
                            "pm10": "float",
                            "pm25": "float",
                            "so2": "float",
                            "timestamp_local": "str",
                            "timestamp_utc": "str",
                            "ts": "int",
                            "_list_length": 72
                        }
                    ],
                    "lat": "float",
                    "lon": "float",
                    "state_code": "str",
                    "timezone": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Air Quality",
                "api_name": "Air Quality History",
                "api_description": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "35.779"
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-78.638"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "city_name": "str",
                    "country_code": "str",
                    "data": [
                        {
                            "aqi": "int",
                            "co": "float",
                            "datetime": "str",
                            "no2": "float",
                            "o3": "float",
                            "pm10": "float",
                            "pm25": "int",
                            "so2": "int",
                            "timestamp_local": "str",
                            "timestamp_utc": "str",
                            "ts": "int",
                            "_list_length": 72
                        }
                    ],
                    "lat": "float",
                    "lon": "float",
                    "state_code": "str",
                    "timezone": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Test",
                "api_name": "aaaaaa",
                "api_description": "aaa",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Qwiper Weather",
                "api_name": "M\u00e9t\u00e9o d'aujourd'hui - Niamey, Niger",
                "api_description": "Obtenez la temp\u00e9rature, les conditions du ciel, les vents, l'humidit\u00e9, etc. pour la ville de Niamey.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is organizing an outdoor team-building event at a park in Los Angeles. We need to ensure good air quality for the participants. Can you fetch the air quality history for the location and provide the current weather conditions as well? Also, suggest some fun team-building activities for the event.",
        "relevant APIs": [
            [
                "Air Quality",
                "Air Quality History"
            ],
            [
                "Qwiper Weather",
                "M\u00e9t\u00e9o d'aujourd'hui - Niamey, Niger"
            ]
        ],
        "query_id": 15844
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "Daily Knowledge",
                "api_name": "/sustainable-development-goals-en.json",
                "api_description": "The UN global goals for sustainable development.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "slug": "str",
                    "number": "int",
                    "backgroundColor": "str",
                    "image": "str",
                    "introduction": "str",
                    "manifest": "str",
                    "targets": [
                        {
                            "title": "str",
                            "body": "str",
                            "pictogram": "str",
                            "_list_length": 8
                        }
                    ],
                    "tips": [
                        "list of str with length 7"
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Daily Knowledge",
                "api_name": "/countries-en.json",
                "api_description": "Capitals, currencies, flags and more.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "capital": "str",
                    "countryCode": "str",
                    "currency": "str",
                    "languages": "str",
                    "tld": "str",
                    "flag": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Daily Knowledge",
                "api_name": "/logical-fallacies-en.json",
                "api_description": "Learn to identify flaws in reasoning.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "title": "str",
                    "slug": "str",
                    "head": "str",
                    "first": "str",
                    "description": "str",
                    "example": "str",
                    "pageTitle": "str",
                    "exampleText": "str",
                    "meta": {
                        "seo": {
                            "title": "str",
                            "description": "str"
                        },
                        "og": {
                            "og:title": "str",
                            "og:description": "str",
                            "og:image": "str",
                            "og:image:width": "int",
                            "og:image:height": "int"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "manatee jokes",
                "api_name": "get by id",
                "api_description": "gets a specific joke by id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "manatee jokes",
                "api_name": "find all",
                "api_description": "retrieves all available jokes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "setup": "str",
                    "punchline": "str",
                    "createdAt": "str",
                    "updatedAt": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "manatee jokes",
                "api_name": "random",
                "api_description": "retrieves a random manatee joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "setup": "str",
                    "punchline": "str",
                    "createdAt": "str",
                    "updatedAt": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astrologer",
                "api_name": "Now",
                "api_description": "Gets astrological data for the current moment at UTC.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"data\": {\"name\": \"str\", \"year\": \"int\", \"month\": \"int\", \"day\": \"int\", \"hour\": \"int\", \"minute\": \"int\", \"city\": \"str\", \"nation\": \"str\", \"lng\": \"float\", \"lat\": \"float\", \"tz_str\": \"str\", \"zodiac_type\": \"str\", \"local_time\": \"float\", \"utc_time\": \"float\", \"julian_day\": \"float\", \"sun\": {\"name\": \"str\", \"quality\": \"str\", \"element\": \"str\", \"sign\": \"str\", \"sign_num\": \"int\", \"position\": \"float\", \"abs_pos\": \"float\", \"emoji\": \"str\", \"point_type\": \"str\", \"house\": \"str\", \"retrograde\": \"bool\"}, \"moon\": {\"name\": \"str\", \"quality\": \"str\", \"element\": \"str\", \"sign\": \"str\", \"sign_num\": \"int\", \"position\": \"float\", \"abs_pos\": \"float\", \"emoji\": \"str\", \"point_type\": \"str\", \"house\": \"str\", \"retrograde\": \"bool\"}, \"mercury\": {\"name\": \"str\", \"quality\": \"str\", \"element\": \"str\", \"sign\": \"str\", \"sign_num\": \"int\", \"position\": \"float\", \"abs_pos\": \"float\", \"emoji\": \"str\", \"point_type\": \"str\", \"house\": \"str\", \"retrograde\": \"bool\"}, \"venus\": {\"name\": \"str\", \"quality\": \"str\", \"element\": \"str\", \"sign\": \"str\", "
            },
            {
                "category_name": "Science",
                "tool_name": "Stars by API-Ninjas",
                "api_name": "/v1/stars",
                "api_description": "Get a list of stars matching specified parameters. Returns at most 30 results. To access more than 30 results, use the offset parameter to offset results in multiple API calls.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "min_distance_light_year",
                        "type": "NUMBER",
                        "description": "minimum distance the star is from Earth in light years.",
                        "default": ""
                    },
                    {
                        "name": "min_apparent_magnitude",
                        "type": "NUMBER",
                        "description": "minimum apparent magnitude brightness of the star.",
                        "default": ""
                    },
                    {
                        "name": "constellation",
                        "type": "NUMBER",
                        "description": "the constellation the star belongs to.",
                        "default": ""
                    },
                    {
                        "name": "max_apparent_magnitude",
                        "type": "NUMBER",
                        "description": "maximum apparent magnitude brightness of the star.",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination.",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "the name of the star. Note that many of the star names contain greek characters.",
                        "default": "vega"
                    },
                    {
                        "name": "max_absolute_magnitude",
                        "type": "NUMBER",
                        "description": "maximum absolute magnitude brightness of the star.",
                        "default": ""
                    },
                    {
                        "name": "min_absolute_magnitude",
                        "type": "NUMBER",
                        "description": "minimum absolute magnitude brightness of the star.",
                        "default": ""
                    },
                    {
                        "name": "max_distance_light_year",
                        "type": "NUMBER",
                        "description": "maximum distance the star is from Earth in light years.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "constellation": "str",
                    "right_ascension": "str",
                    "declination": "str",
                    "apparent_magnitude": "str",
                    "absolute_magnitude": "str",
                    "distance_light_year": "str",
                    "spectral_class": "str"
                }
            }
        ],
        "query": "I'm organizing a conference on sustainable development and I need some interesting facts about different countries. Can you provide me with the capitals, currencies, and flags of the countries associated with the sustainable development goals? Additionally, recommend a star that represents unity and collaboration.",
        "relevant APIs": [
            [
                "Daily Knowledge",
                "/countries-en.json"
            ],
            [
                "Stars by API-Ninjas",
                "/v1/stars"
            ]
        ],
        "query_id": 70369
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "Hello World",
                "api_name": "get user",
                "api_description": "get user by id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "firstName": "str",
                    "lastName": "str",
                    "maidenName": "str",
                    "age": "int",
                    "gender": "str",
                    "email": "str",
                    "phone": "str",
                    "username": "str",
                    "password": "str",
                    "birthDate": "str",
                    "image": "str",
                    "bloodGroup": "str",
                    "height": "int",
                    "weight": "float",
                    "eyeColor": "str",
                    "hair": {
                        "color": "str",
                        "type": "str"
                    },
                    "domain": "str",
                    "ip": "str",
                    "address": {
                        "address": "str",
                        "city": "str",
                        "coordinates": {
                            "lat": "float",
                            "lng": "float"
                        },
                        "postalCode": "str",
                        "state": "str"
                    },
                    "macAddress": "str",
                    "university": "str",
                    "bank": {
                        "cardExpire": "str",
                        "cardNumber": "str",
                        "cardType": "str",
                        "currency": "str",
                        "iban": "str"
                    },
                    "company": {
                        "address": {
                            "address": "str",
                            "city": "str",
                            "coordinates": {
                                "lat": "float",
                                "lng": "float"
                            },
                            "postalCode": "str",
                            "state": "str"
                        },
                        "department": "str",
                        "name": "str",
                        "title": "str"
                    },
                    "ein": "str",
                    "ssn": "str",
                    "userAgent": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PublicAPITestingInbox",
                "api_name": "getUserByName",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PublicAPITestingInbox",
                "api_name": "logoutUser",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PublicAPITestingInbox",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            }
        ],
        "query": "I just moved to a new city and I'm looking for a reliable moving company. Can you help me find user reviews for different moving companies in my area? Also, fetch the user details for the top-rated moving company named 'Swift Movers'. Additionally, provide me with the contact information for the nearest storage facility based on my current address. Finally, log out of my account to ensure privacy.",
        "relevant APIs": [
            [
                "PublicAPITestingInbox",
                "getUserByName"
            ],
            [
                "Hello World",
                "get user"
            ],
            [
                "PublicAPITestingInbox",
                "getUserByName"
            ],
            [
                "Hello World",
                "get user"
            ],
            [
                "PublicAPITestingInbox",
                "logoutUser"
            ]
        ],
        "query_id": 15541
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Tweesky",
                "api_name": "/status",
                "api_description": "Endpoint to verify API is working and available<br/>",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TwttrAPI",
                "api_name": "Get Tweet Conversation",
                "api_description": "Get a tweet conversation",
                "required_parameters": [
                    {
                        "name": "tweet_id",
                        "type": "STRING",
                        "description": "",
                        "default": "1652849795336159233"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"data\": {\"timeline_response\": {\"instructions\": [{\"__typename\": \"str\", \"entries\": [{\"content\": {\"__typename\": \"str\", \"content\": {\"__typename\": \"str\", \"hasModeratedReplies\": \"bool\", \"tweetDisplayType\": \"str\", \"tweetResult\": {\"result\": {\"__typename\": \"str\", \"conversation_muted\": \"bool\", \"core\": {\"user_result\": {\"result\": {\"__typename\": \"str\", \"affiliates_highlighted_label\": {\"label\": {\"badge\": {\"url\": \"str\"}, \"description\": \"str\", \"url\": {\"url\": \"str\", \"urlType\": \"str\"}, \"userLabelDisplayType\": \"str\", \"userLabelType\": \"str\"}}, \"business_account\": {}, \"exclusive_tweet_following\": \"bool\", \"has_nft_avatar\": \"bool\", \"is_blue_verified\": \"bool\", \"legacy\": {\"advertiser_account_service_levels\": [\"list of str with length 1\"], \"advertiser_account_type\": \"str\", \"analytics_type\": \"str\", \"created_at\": \"str\", \"description\": \"str\", \"entities\": {\"description\": {\"hashtags\": \"empty list\", \"symbols\": \"empty list\", \"urls\": \"empty list\", \"user_mentions\": \"empty list\"}}, \"fast_followers_count\": \"int\", \"favour"
            },
            {
                "category_name": "Social",
                "tool_name": "TwttrAPI",
                "api_name": "Get DM Conversation",
                "api_description": "Get single conversation messages",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "max_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TwttrAPI",
                "api_name": "Get Tweet",
                "api_description": "Get a tweet",
                "required_parameters": [
                    {
                        "name": "tweet_id",
                        "type": "STRING",
                        "description": "",
                        "default": "1652849795336159233"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"data\": {\"tweet_result\": {\"result\": {\"__typename\": \"str\", \"conversation_muted\": \"bool\", \"core\": {\"user_result\": {\"result\": {\"__typename\": \"str\", \"affiliates_highlighted_label\": {\"label\": {\"badge\": {\"url\": \"str\"}, \"description\": \"str\", \"url\": {\"url\": \"str\", \"urlType\": \"str\"}, \"userLabelDisplayType\": \"str\", \"userLabelType\": \"str\"}}, \"business_account\": {}, \"exclusive_tweet_following\": \"bool\", \"has_nft_avatar\": \"bool\", \"is_blue_verified\": \"bool\", \"legacy\": {\"advertiser_account_service_levels\": [\"list of str with length 1\"], \"advertiser_account_type\": \"str\", \"analytics_type\": \"str\", \"created_at\": \"str\", \"description\": \"str\", \"entities\": {\"description\": {\"hashtags\": \"empty list\", \"symbols\": \"empty list\", \"urls\": \"empty list\", \"user_mentions\": \"empty list\"}}, \"fast_followers_count\": \"int\", \"favourites_count\": \"int\", \"followers_count\": \"int\", \"friends_count\": \"int\", \"geo_enabled\": \"bool\", \"has_custom_timelines\": \"bool\", \"has_extended_profile\": \"bool\", \"id_str\": \"str\", \"is_translator\": \"bool\""
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram Cheapest",
                "api_name": "user_medias",
                "api_description": "get user_medias by user_id",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "",
                        "default": "13460080"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "next_max_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"items\": [{\"taken_at\": \"int\", \"pk\": \"str\", \"id\": \"str\", \"device_timestamp\": \"int\", \"media_type\": \"int\", \"code\": \"str\", \"client_cache_key\": \"str\", \"filter_type\": \"int\", \"caption\": {\"pk\": \"str\", \"user_id\": \"str\", \"text\": \"str\", \"type\": \"int\", \"created_at\": \"int\", \"created_at_utc\": \"int\", \"content_type\": \"str\", \"status\": \"str\", \"bit_flags\": \"int\", \"did_report_as_spam\": \"bool\", \"share_enabled\": \"bool\", \"user\": {\"has_anonymous_profile_picture\": \"bool\", \"fan_club_info\": {\"fan_club_id\": \"NoneType\", \"fan_club_name\": \"NoneType\", \"is_fan_club_referral_eligible\": \"NoneType\", \"fan_consideration_page_revamp_eligiblity\": \"NoneType\", \"is_fan_club_gifting_eligible\": \"NoneType\", \"subscriber_count\": \"NoneType\", \"connected_member_count\": \"NoneType\", \"autosave_to_exclusive_highlight\": \"NoneType\"}, \"fbid_v2\": \"str\", \"transparency_product_enabled\": \"bool\", \"is_unpublished\": \"bool\", \"pk\": \"str\", \"pk_id\": \"str\", \"username\": \"str\", \"full_name\": \"str\", \"is_private\": \"bool\", \"is_verified\": \"bool\", \"profile_pic_"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram Cheapest",
                "api_name": "userinfo",
                "api_description": "get userinfo by username",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "nike"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"data\": {\"user\": {\"biography\": \"str\", \"bio_links\": [{\"title\": \"str\", \"lynx_url\": \"str\", \"url\": \"str\", \"link_type\": \"str\", \"_list_length\": 1}], \"biography_with_entities\": {\"raw_text\": \"str\", \"entities\": [{\"user\": \"NoneType\", \"hashtag\": {\"name\": \"str\"}, \"_list_length\": 2}]}, \"blocked_by_viewer\": \"bool\", \"restricted_by_viewer\": \"NoneType\", \"country_block\": \"bool\", \"eimu_id\": \"str\", \"external_url\": \"str\", \"external_url_linkshimmed\": \"str\", \"edge_followed_by\": {\"count\": \"int\"}, \"fbid\": \"str\", \"followed_by_viewer\": \"bool\", \"edge_follow\": {\"count\": \"int\"}, \"follows_viewer\": \"bool\", \"full_name\": \"str\", \"group_metadata\": \"NoneType\", \"has_ar_effects\": \"bool\", \"has_clips\": \"bool\", \"has_guides\": \"bool\", \"has_channel\": \"bool\", \"has_blocked_viewer\": \"bool\", \"highlight_reel_count\": \"int\", \"has_requested_viewer\": \"bool\", \"hide_like_and_view_counts\": \"bool\", \"id\": \"str\", \"is_business_account\": \"bool\", \"is_professional_account\": \"bool\", \"is_supervision_enabled\": \"bool\", \"is_guardian_of_viewer\": \"bool\","
            },
            {
                "category_name": "Social",
                "tool_name": "Reddit",
                "api_name": "Top Posts By Username",
                "api_description": "Top Posts By Username",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "GoldenChrysus"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "you can just select one item from below:\n`hour`\n`day`\n`week`\n`month`\n`year`\n`all`",
                        "default": "all"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"str\", \"posts\": [{\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"NoneType\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": \"NoneType\", \"postCategories\": \"NoneType\", \"suggestedSort\": \"NoneType\", \"belongsTo\": {\"id\": \"str\", \"type\": \"str\"}, \"flair\": \"empty list\", \"hidden\": \"bool\", \"saved\": \"bool\", \"isGildable\": \"bool\", \"isMediaOnly\": \"bool\", \"isSponsored\": \"bool\", \"isNSFW\": \"bool\", \"isMeta\": \"bool\", \"isSpoiler\": \"bool\", \"isBlank\": \"bool\", \"sendReplies\": \"bool\", \"voteState\": \"int\", \"permalink\": \"str\", \"events\": \"empty list\", \"eventsOnRender\": \"empty list\", \""
            },
            {
                "category_name": "Social",
                "tool_name": "Reddit",
                "api_name": "Top Popular Posts",
                "api_description": "Top Popular Posts",
                "required_parameters": [
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "you can just select one item from below:\n`hour`\n`day`\n`week`\n`month`\n`year`\n`all`",
                        "default": "year"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"str\", \"posts\": [{\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"int\", \"height\": \"int\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"NoneType\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": {\"gid1\": \"int\", \"gid2\": \"int\", \"gid3\": \"int\"}, \"allAwardings\": [{\"awardType\": \"str\", \"awardSubType\": \"str\", \"coinPrice\": \"int\", \"coinReward\": \"int\", \"daysOfDripExtension\": \"NoneType\", \"daysOfPremium\": \"NoneType\", \"description\": \"str\", \"giverCoinReward\": \"NoneType\", \"iconUrl\": \"str\", \"iconWidth\": \"int\", \"iconHeight\": \"int\", \"staticIconUrl\": \"str\", \"staticIconWidth\": \"int\", \"staticIconHeight\": \"int\", \"id\": \"str\", \"isEnabled\": \"bool\", \"isNew\": \""
            },
            {
                "category_name": "Social",
                "tool_name": "Reddit",
                "api_name": "Rising Popular Posts",
                "api_description": "Rising Popular Posts",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"str\", \"posts\": [{\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"int\", \"height\": \"int\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"NoneType\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": \"NoneType\", \"postCategories\": \"NoneType\", \"suggestedSort\": \"NoneType\", \"belongsTo\": {\"id\": \"str\", \"type\": \"str\"}, \"flair\": [{\"text\": \"str\", \"type\": \"str\", \"textColor\": \"str\", \"backgroundColor\": \"str\", \"templateId\": \"str\", \"_list_length\": 1}], \"hidden\": \"bool\", \"saved\": \"bool\", \"isGildable\": \"bool\", \"isMediaOnly\": \"bool\", \"isSponsored\": \"bool\", \"isNSFW\": \"bool\", \"isMeta\": \"bool\", \"isSpoiler\": \"bool\", \"isBlank\": \"bool\", \"sendReplies\": \"bool\", \""
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "Music Data by ID",
                "api_description": "Get** Music Data **by **ID**",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "User Feed by ID",
                "api_description": "Get **User Feed** by** ID**",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "string",
                        "description": "",
                        "default": "6614519312189947909"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TikTok_Solutions",
                "api_name": "User by Keyword",
                "api_description": "Get** Search of Users **by **Keyword**",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "Food"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_cursor",
                        "type": "NUMBER",
                        "description": "",
                        "default": "30"
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"data\": {\"cursor\": \"int\", \"has_more\": \"int\", \"input_keyword\": \"str\", \"qc\": \"str\", \"type\": \"int\", \"user_list\": [{\"challenges\": \"NoneType\", \"effects\": \"NoneType\", \"items\": \"NoneType\", \"mix_list\": \"NoneType\", \"musics\": \"NoneType\", \"position\": \"NoneType\", \"uniqid_position\": \"NoneType\", \"user_info\": {\"avatar_168x168\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"], \"width\": \"int\", \"height\": \"int\"}, \"avatar_300x300\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"], \"width\": \"int\", \"height\": \"int\"}, \"avatar_larger\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"], \"width\": \"int\", \"height\": \"int\"}, \"avatar_medium\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"], \"width\": \"int\", \"height\": \"int\"}, \"avatar_thumb\": {\"uri\": \"str\", \"url_list\": [\"list of str with length 2\"], \"width\": \"int\", \"height\": \"int\"}, \"avatar_uri\": \"str\", \"aweme_count\": \"int\", \"custom_verify\": \"str\", \"download_prompt_ts\": \"int\", \"follower_count\": \"int\", \"following_count\":"
            }
        ],
        "query": "I need to gather information about the latest news articles related to a specific topic. Can you fetch the DM conversation using the Get DM Conversation API? Additionally, provide me with the top posts by a specific user from the Reddit API to get a comprehensive view of the topic. Thank you for your assistance.",
        "relevant APIs": [
            [
                "TwttrAPI",
                "Get DM Conversation"
            ],
            [
                "Reddit",
                "Top Posts By Username"
            ]
        ],
        "query_id": 50058
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "TokApi - mobile version",
                "api_name": "/v1/search/music",
                "api_description": "Search music by text query",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "Query text",
                        "default": "nike"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "If in a response you get parameter hasMore equal to 1 then you also have cursor value for a next set",
                        "default": 0
                    },
                    {
                        "name": "filter_by",
                        "type": "STRING",
                        "description": "Filter by type, can be empty or one of: `0` - All, `1` - Title, `2` - Creators",
                        "default": ""
                    },
                    {
                        "name": "sort_type",
                        "type": "STRING",
                        "description": "Sort type, can be empty or one of: `0` - Relevance, `1` - Most used, `2` - Most recent, `3` - Shortest, `4` - Longest",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TokApi - mobile version",
                "api_name": "/v1/post",
                "api_description": "Video by web URL, can be vm.tiktok.com or tiktok.com",
                "required_parameters": [
                    {
                        "name": "video_url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://vm.tiktok.com/ZMekDdYeX/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "TokApi - mobile version",
                "api_name": "/v1/post/user/{user_id}/liked_posts",
                "api_description": "User liked video feed",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "user's ID can be uid or sec_uid",
                        "default": "6546356850533602319"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "If in a response you get parameter hasMore equal to 1 then you also have max_cursor value for a next set",
                        "default": 0
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "ZodiacAPI",
                "api_name": "Get signs list",
                "api_description": "Get signs list",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "ZodiacAPI",
                "api_name": "Get sign prediction for today  by name",
                "api_description": "Get sign prediction for today  by name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "description": "",
                        "default": "Aries"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram Pro",
                "api_name": "Following by PK",
                "api_description": "Instagram Following List by PK, Up to 1000 records",
                "required_parameters": [
                    {
                        "name": "pk",
                        "type": "STRING",
                        "description": "",
                        "default": "232192182"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "corsEnabled",
                        "type": "STRING",
                        "description": "",
                        "default": "false"
                    },
                    {
                        "name": "nextMaxId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "pk": "int",
                            "username": "str",
                            "full_name": "str",
                            "is_verified": "bool",
                            "is_private": "bool",
                            "profile_pic_url": "str",
                            "_list_length": 24
                        }
                    ],
                    "cursor": {
                        "moreAvailable": "bool",
                        "nextMaxId": "int"
                    }
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram Pro",
                "api_name": "Followers by username",
                "api_description": "Followers list by username, Up to 1000 records",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "therock"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "nextMaxId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "corsEnabled",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "pk": "int",
                            "username": "str",
                            "full_name": "str",
                            "is_verified": "bool",
                            "is_private": "bool",
                            "profile_pic_url": "str",
                            "_list_length": 24
                        }
                    ],
                    "cursor": {
                        "moreAvailable": "bool",
                        "nextMaxId": "str"
                    }
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram Pro",
                "api_name": "Advance Profile",
                "api_description": "Profile data with email/phone if available",
                "required_parameters": [
                    {
                        "name": "ig",
                        "type": "STRING",
                        "description": "",
                        "default": "therock"
                    },
                    {
                        "name": "response_type",
                        "type": "STRING",
                        "description": "",
                        "default": "info"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "corsEnabled",
                        "type": "STRING",
                        "description": "",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": "{\"has_fan_club_subscriptions\": \"bool\", \"has_exclusive_feed_content\": \"bool\", \"open_external_url_with_in_app_browser\": \"bool\", \"is_memorialized\": \"bool\", \"highlight_reshare_disabled\": \"bool\", \"is_new_to_instagram\": \"bool\", \"auto_expand_chaining\": \"bool\", \"show_account_transparency_details\": \"bool\", \"is_bestie\": \"bool\", \"remove_message_entrypoint\": \"bool\", \"request_contact_enabled\": \"bool\", \"show_post_insights_entry_point\": \"bool\", \"is_potential_business\": \"bool\", \"include_direct_blacklist_status\": \"bool\", \"upcoming_events\": \"empty list\", \"fan_club_info\": {\"fan_club_name\": \"NoneType\", \"fan_club_id\": \"NoneType\"}, \"pronouns\": \"empty list\", \"account_badges\": \"empty list\", \"transparency_product_enabled\": \"bool\", \"active_standalone_fundraisers\": {\"fundraisers\": \"empty list\", \"total_count\": \"int\"}, \"standalone_fundraiser_info\": {\"end_time\": \"NoneType\", \"can_viewer_share_to_feed\": \"bool\", \"beneficiary_type\": \"NoneType\", \"user_role\": \"str\", \"owner_username\": \"NoneType\", \"thumbnail_display_url\": "
            }
        ],
        "query": "My friends and I are planning a road trip and need some energetic music suggestions. Can you search for music related to road trips and adventure? Also, fetch some funny videos from TikTok to keep us entertained during the journey. Additionally, provide me with some predictions for today based on my zodiac sign, Aries.",
        "relevant APIs": [
            [
                "TokApi - mobile version",
                "/v1/search/music"
            ],
            [
                "TokApi - mobile version",
                "/v1/post"
            ],
            [
                "ZodiacAPI",
                "Get sign prediction for today  by name"
            ]
        ],
        "query_id": 78838
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "AI News_v2",
                "api_name": "Get all AI News",
                "api_description": "This endpoint will return back all news about artificial intelligence around the world",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "AI News_v2",
                "api_name": "Get Individual Source News",
                "api_description": "Gets News about Artificial Intelligence from a specific news resource.",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "gizmodo"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Flixster",
                "api_name": "movies/get-opening",
                "api_description": "Get opening movies",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "countryId",
                        "type": "STRING",
                        "description": "One of the following : afg|alb|dza|asm|and|ago|aia|ata|atg|arg|arm|abw|aus|aut|aze|bhs|bhr|bgd|brb|blr|bel|blz|ben|bmu|btn|bol|bes|bih|bwa|bvt|bra|iot|brn|bgr|bfa|bdi|cpv|khm|cmr|can|cym|caf|tcd|chl|chn|cxr|cck|col|com|cod|cog|cok|cri|hrv|cub|cuw|cyp|cze|civ|dnk|dji|dma|dom|ecu|egy|slv|gnq|eri|est|swz|eth|flk|fro|fji|fin|fra|guf|pyf|atf|gab|gmb|geo|deu|gha|gib|grc|grl|grd|glp|gum|gtm|ggy|gin|gnb|guy|hti|hmd|vat|hnd|hkg|hun|isl|ind|idn|irn|irq|irl|imn|isr|ita|jam|jpn|jey|jor|kaz|ken|kir|prk|kor|kwt|kgz|lao|lva|lbn|lso|lbr|lby|lie|ltu|lux|mac|mdg|mwi|mys|mdv|mli|mlt|mhl|mtq|mrt|mus|myt|mex|fsm|mda|mco|mng|mne|msr|mar|moz|mmr|nam|nru|npl|nld|ncl|nzl|nic|ner|nga|niu|nfk|mnp|nor|omn|pak|plw|pse|pan|png|pry|per|phl|pcn|pol|prt|pri|qat|mkd|rou|rus|rwa|reu|blm|shn|kna|lca|maf|spm|vct|wsm|smr|stp|sau|sen|srb|syc|sle|sgp|sxm|svk|svn|slb|som|zaf|sgs|ssd|esp|lka|sdn|sur|sjm|swe|che|syr|twn|tjk|tza|tha|tls|tgo|tkl|ton|tto|tun|tur|tkm|tca|tuv|uga|ukr|are|gbr|umi|usa|ury|uzb|vut|ven|vnm|vgb|vir|wlf|esh|yem|zmb|zwe|ala",
                        "default": "usa"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "opening": [
                            {
                                "emsId": "str",
                                "emsVersionId": "str",
                                "name": "str",
                                "sortEms": "NoneType",
                                "posterImage": {
                                    "url": "str",
                                    "type": "NoneType",
                                    "width": "NoneType",
                                    "height": "NoneType"
                                },
                                "tomatoRating": "NoneType",
                                "userRating": {
                                    "dtlLikedScore": "int",
                                    "dtlWtsScore": "NoneType",
                                    "dtlWtsCount": "int",
                                    "dtlScoreCount": "int",
                                    "iconImage": {
                                        "url": "str"
                                    }
                                },
                                "_list_length": 81
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Flixster",
                "api_name": "movies/get-popularity",
                "api_description": "Get popular movies",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "zipCode",
                        "type": "STRING",
                        "description": "The postal code",
                        "default": "90002"
                    },
                    {
                        "name": "radius",
                        "type": "NUMBER",
                        "description": "The radius",
                        "default": "50"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "The GEO longitude",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "The GEO latitude",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "popularity": [
                            {
                                "emsId": "str",
                                "emsVersionId": "str",
                                "name": "str",
                                "sortEms": "int",
                                "sortPopularity": "int",
                                "posterImage": {
                                    "url": "str",
                                    "type": "NoneType",
                                    "width": "NoneType",
                                    "height": "NoneType"
                                },
                                "tomatoRating": {
                                    "tomatometer": "int",
                                    "iconImage": {
                                        "url": "str"
                                    }
                                },
                                "userRating": {
                                    "dtlLikedScore": "int",
                                    "dtlWtsScore": "NoneType",
                                    "iconImage": {
                                        "url": "str"
                                    }
                                },
                                "_list_length": 68
                            }
                        ],
                        "opening": [
                            {
                                "emsId": "str",
                                "emsVersionId": "str",
                                "name": "str",
                                "sortEms": "NoneType",
                                "posterImage": {
                                    "url": "str",
                                    "type": "NoneType",
                                    "width": "NoneType",
                                    "height": "NoneType"
                                },
                                "tomatoRating": "NoneType",
                                "userRating": {
                                    "dtlLikedScore": "int",
                                    "dtlWtsScore": "NoneType",
                                    "dtlWtsCount": "int",
                                    "dtlScoreCount": "int",
                                    "iconImage": {
                                        "url": "str"
                                    }
                                },
                                "_list_length": 81
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Flixster",
                "api_name": "search",
                "api_description": "Search for movies, actors, theaters by term and phrase",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "spiderman"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "The GEO longitude",
                        "default": ""
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "The GEO latitude",
                        "default": ""
                    },
                    {
                        "name": "radius",
                        "type": "NUMBER",
                        "description": "The radius",
                        "default": "50"
                    },
                    {
                        "name": "zipCode",
                        "type": "STRING",
                        "description": "The postal code",
                        "default": "90002"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "search": {
                            "movies": [
                                {
                                    "emsId": "str",
                                    "emsVersionId": "str",
                                    "name": "str",
                                    "posterImage": "NoneType",
                                    "tomatoRating": "NoneType",
                                    "userRating": {
                                        "dtlLikedScore": "NoneType",
                                        "dtlWtsScore": "NoneType",
                                        "iconImage": {
                                            "url": "str"
                                        }
                                    },
                                    "_list_length": 4
                                }
                            ],
                            "people": "empty list",
                            "theaters": "empty list"
                        }
                    }
                }
            }
        ],
        "query": "I'm a movie enthusiast and I want to explore the world of independent films. Can you search for independent movies playing in theaters near me? It would be great if you could provide me with the user ratings and tomato ratings for these movies. Additionally, fetch some individual source news about artificial intelligence to keep me updated on the latest advancements.",
        "relevant APIs": [
            [
                "Flixster",
                "movies/get-popularity"
            ],
            [
                "Flixster",
                "search"
            ],
            [
                "AI News_v2",
                "Get Individual Source News"
            ]
        ],
        "query_id": 74318
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "teste",
                "api_name": "getPetById",
                "api_description": "Returns a single pet",
                "required_parameters": [
                    {
                        "name": "petId",
                        "type": "NUMBER",
                        "description": "ID of pet to return",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "teste",
                "api_name": "getUserByName",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "teste",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy Picture of The day",
                "api_name": "Picture Of The Day",
                "api_description": "This Endpoint returns an astronomy image of the univers with caption and explanation from professionals.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Materials Platform for Data Science",
                "api_name": "MPDS",
                "api_description": "Retrieve materials data, see www.mpds.io",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "JSON-serialized URL-encoded Object with the retrieval criteria, e.g. {\"elements\":\"Ag-K\"}",
                        "default": "%7B%22elements%22%3A%22Ag-K%22%7D"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "crossref",
                "api_name": "RecordCount",
                "api_description": "How many records do we have?",
                "required_parameters": [
                    {
                        "name": "rows",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "message-type": "str",
                    "message-version": "str",
                    "message": {
                        "facets": {},
                        "total-results": "int",
                        "items": "empty list",
                        "items-per-page": "int",
                        "query": {
                            "start-index": "int",
                            "search-terms": "NoneType"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "crossref",
                "api_name": "Search",
                "api_description": "Let\u2019s look at some of the results",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "blood"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"message-type\": \"str\", \"message-version\": \"str\", \"message\": {\"facets\": {}, \"total-results\": \"int\", \"items\": [{\"indexed\": {\"date-parts\": [\"list of list with length 1\"], \"date-time\": \"str\", \"timestamp\": \"int\"}, \"reference-count\": \"int\", \"publisher\": \"str\", \"content-domain\": {\"domain\": \"empty list\", \"crossmark-restriction\": \"bool\"}, \"published-print\": {\"date-parts\": [\"list of list with length 1\"]}, \"abstract\": \"str\", \"DOI\": \"str\", \"type\": \"str\", \"created\": {\"date-parts\": [\"list of list with length 1\"], \"date-time\": \"str\", \"timestamp\": \"int\"}, \"page\": \"str\", \"source\": \"str\", \"is-referenced-by-count\": \"int\", \"title\": [\"list of str with length 1\"], \"prefix\": \"str\", \"author\": [{\"given\": \"str\", \"family\": \"str\", \"sequence\": \"str\", \"affiliation\": \"empty list\", \"_list_length\": 1}], \"member\": \"str\", \"published-online\": {\"date-parts\": [\"list of list with length 1\"]}, \"container-title\": [\"list of str with length 1\"], \"original-title\": [\"list of str with length 1\"], \"deposited\": {\"d"
            },
            {
                "category_name": "Science",
                "tool_name": "crossref",
                "api_name": "DOI",
                "api_description": "Information of a article with specified doi.",
                "required_parameters": [
                    {
                        "name": "doi",
                        "type": "string",
                        "description": "",
                        "default": "10.1111/fima.12262"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Search",
                "api_description": "Search endpoint can be used to get information for stars and deep space objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "order_by",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "dec",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "match_type",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "ra",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "exact",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "statusCode": "int",
                    "errors": [
                        {
                            "stack": "str",
                            "property": "str",
                            "path": {},
                            "message": "str",
                            "argument": [
                                "list of str with length 2"
                            ],
                            "schema": {
                                "oneOf": [
                                    {
                                        "properties": {
                                            "term": {
                                                "minLength": "int",
                                                "type": "str"
                                            },
                                            "match_type": {
                                                "enum": [
                                                    "list of str with length 2"
                                                ],
                                                "type": "str"
                                            },
                                            "order_by": {
                                                "enum": [
                                                    "list of str with length 1"
                                                ],
                                                "type": "str"
                                            }
                                        },
                                        "required": [
                                            "list of str with length 1"
                                        ],
                                        "type": "str",
                                        "_list_length": 2
                                    }
                                ],
                                "allOf": [
                                    {
                                        "properties": {
                                            "offset": {
                                                "maximum": "int",
                                                "minimum": "int",
                                                "type": "str"
                                            },
                                            "limit": {
                                                "maximum": "int",
                                                "minimum": "int",
                                                "type": "str"
                                            }
                                        },
                                        "type": "str",
                                        "_list_length": 1
                                    }
                                ]
                            },
                            "instance": {
                                "dec": "str",
                                "match_type": "str",
                                "order_by": "str",
                                "offset": "str",
                                "limit": "str",
                                "exact": "str",
                                "ra": "str"
                            },
                            "name": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Get all bodies positions",
                "api_description": "Returns a iterable list of bodies and their properties in tabular format.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "33.775867"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "-84.39733"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-20"
                    },
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-21"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "elevation",
                        "type": "NUMBER",
                        "description": "",
                        "default": "166"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "",
                        "default": "12:00:00"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "observer": {
                            "location": {
                                "longitude": "float",
                                "elevation": "int",
                                "latitude": "float"
                            }
                        },
                        "dates": {
                            "from": "str",
                            "to": "str"
                        },
                        "table": {
                            "rows": [
                                {
                                    "cells": [
                                        {
                                            "date": "str",
                                            "distance": {
                                                "fromEarth": {
                                                    "km": "str",
                                                    "au": "str"
                                                }
                                            },
                                            "position": {
                                                "horizontal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "constellation": {
                                                    "short": "str",
                                                    "name": "str",
                                                    "id": "str"
                                                },
                                                "equatorial": {
                                                    "rightAscension": {
                                                        "hours": "str",
                                                        "string": "str"
                                                    },
                                                    "declination": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "horizonal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                }
                                            },
                                            "name": "str",
                                            "extraInfo": {
                                                "elongation": "int",
                                                "magnitude": "float"
                                            },
                                            "id": "str",
                                            "_list_length": 2
                                        }
                                    ],
                                    "entry": {
                                        "name": "str",
                                        "id": "str"
                                    },
                                    "_list_length": 11
                                }
                            ],
                            "header": [
                                "list of str with length 2"
                            ]
                        }
                    },
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Get positions for body",
                "api_description": "Returns properties of the given body for the given date range in tabular format.\n\nSupported bodies are \"sun\" ,\"moon\", \"mercury\", \"venus\", \"earth\", \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\", \"pluto\"",
                "required_parameters": [
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-21"
                    },
                    {
                        "name": "body",
                        "type": "string",
                        "description": "",
                        "default": "venus"
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "33.775867"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-20"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "-84.39733"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "",
                        "default": "12:00:00"
                    },
                    {
                        "name": "elevation",
                        "type": "NUMBER",
                        "description": "",
                        "default": "166"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "observer": {
                            "location": {
                                "longitude": "float",
                                "elevation": "int",
                                "latitude": "float"
                            }
                        },
                        "dates": {
                            "from": "str",
                            "to": "str"
                        },
                        "table": {
                            "rows": [
                                {
                                    "cells": [
                                        {
                                            "date": "str",
                                            "distance": {
                                                "fromEarth": {
                                                    "km": "str",
                                                    "au": "str"
                                                }
                                            },
                                            "position": {
                                                "horizontal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "constellation": {
                                                    "short": "str",
                                                    "name": "str",
                                                    "id": "str"
                                                },
                                                "equatorial": {
                                                    "rightAscension": {
                                                        "hours": "str",
                                                        "string": "str"
                                                    },
                                                    "declination": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "horizonal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                }
                                            },
                                            "name": "str",
                                            "extraInfo": {
                                                "elongation": "float",
                                                "magnitude": "float"
                                            },
                                            "id": "str",
                                            "_list_length": 2
                                        }
                                    ],
                                    "entry": {
                                        "name": "str",
                                        "id": "str"
                                    },
                                    "_list_length": 1
                                }
                            ],
                            "header": [
                                "list of str with length 2"
                            ]
                        }
                    },
                    "message": "str"
                }
            }
        ],
        "query": "I'm writing a book and need some inspiration for the setting. Can you fetch the picture of the day from the Astronomy Picture of The day API to visualize different landscapes? Additionally, provide me with some interesting facts about the universe to incorporate into my story.",
        "relevant APIs": [
            [
                "Astronomy Picture of The day",
                "Picture Of The Day"
            ],
            [
                "Astronomy",
                "Search"
            ]
        ],
        "query_id": 12507
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Fast Hcaptcha Solver",
                "api_name": "Get Response",
                "api_description": "Get response using the Id received from the create Hcaptcha Request",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Everypixel Image Recognition",
                "api_name": "/quality",
                "api_description": "This method allows you to get the quality score for your photo. This service doesn't measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "content",
                        "type": "STRING",
                        "description": "You can also send an actual image files for scoring.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "Image URL to perform scoring on.",
                        "default": "http://image.everypixel.com/2014.12/67439828186edc79b9be81a4dedea8b03c09a12825b_b.jpg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quality": {
                        "score": "float"
                    },
                    "status": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Everypixel Image Recognition",
                "api_name": "/keywords",
                "api_description": "By sending an image to this method you can get a list of suggested keywords. You may specify a number of returned words or a threshold of its minimum score. Just provide num_keywords or threshold parameter to this method.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "content",
                        "type": "STRING",
                        "description": "You can also send an actual image files for auto-tagging.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "Image URL to perform auto-tagging on.",
                        "default": "http://image.everypixel.com/2014.12/67439828186edc79b9be81a4dedea8b03c09a12825b_b.jpg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "keywords": [
                        {
                            "keyword": "str",
                            "score": "float",
                            "_list_length": 14
                        }
                    ],
                    "status": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Everypixel Image Recognition",
                "api_name": "/quality_ugc",
                "api_description": "The main difference between Stock photo scoring and this model is in the training dataset. User-Generated Photo Scoring is a model trained on a 347 000 of user photos from Instagram. Estimation parameters for this model were prepared by a group of 10 professional photographers. Scoring methods are based on five classes: very bad (0-20), bad (20-40), normal (40-60), good (60-80) and excellent (80-100).  This model is designed to evaluate user photos taken both by a professional camera and by a camera of a smartphone. It doesn't estimate the plot and do not measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "content",
                        "type": "STRING",
                        "description": "You can also send an actual image files for scoring.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "Image URL to perform scoring on.",
                        "default": "http://image.everypixel.com/2014.12/67439828186edc79b9be81a4dedea8b03c09a12825b_b.jpg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quality": {
                        "score": "float",
                        "class": "int"
                    },
                    "status": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "General Classification",
                "api_name": "Get version",
                "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "General Classification",
                "api_name": "Get list of algorithms",
                "api_description": "Service provides alternative algorithms that may be used for image classification.\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I want to surprise my partner with a romantic dinner at home. Can you recommend some delicious recipes for a three-course meal? Also, provide me with a list of ingredients required for each recipe and suggest some romantic background music playlists.",
        "relevant APIs": [
            [
                "Everypixel Image Recognition",
                "/keywords"
            ],
            [
                "Everypixel Image Recognition",
                "/quality"
            ],
            [
                "General Classification",
                "Get list of algorithms"
            ]
        ],
        "query_id": 21802
    },
    {
        "api_list": [
            {
                "category_name": "Cybersecurity",
                "tool_name": "WebLasso",
                "api_name": "Get Scan Status",
                "api_description": "Check the status of a scan (ongoing/completed) using a scan ID.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "scan_id",
                        "type": "STRING",
                        "description": "",
                        "default": "e04d3e18-bda7-420b-b240-894fd3d4992d"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Cybersecurity",
                "tool_name": "WebLasso",
                "api_name": "Get Scan Results",
                "api_description": "Obtain the scan results from a given scan ID.",
                "required_parameters": [
                    {
                        "name": "scan_id",
                        "type": "STRING",
                        "description": "",
                        "default": "b12394ad-c804-4b5a-bc20-14f7c8cafdb6"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Cybersecurity",
                "tool_name": "WebLasso",
                "api_name": "Get Scan ID",
                "api_description": "Run a scan against a target URL and receive a scan ID to obtain scan results or check scan status at a later time.\n\nProvide an optional callback URL to receive scan results automatically once the scan is completed (ensure that the callback URL accepts POST requests)",
                "required_parameters": [
                    {
                        "name": "target",
                        "type": "STRING",
                        "description": "",
                        "default": "tesla.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback_url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://my-callback-url.com"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Cybersecurity",
                "tool_name": "Token Scanner Multichain | Honeypot Checker Multichain",
                "api_name": "Get Chain Id",
                "api_description": "Returns chainId from chain name.",
                "required_parameters": [
                    {
                        "name": "chain",
                        "type": "STRING",
                        "description": "Available chains:\n**ethereum, bsc, okc, heco, polygon, arbitrum, optimism, avalanche, fantom, kcc, gnosis, tron, linea, harmony, zkysnc, ethw, fon, cronos**",
                        "default": "bsc"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int"
                }
            }
        ],
        "query": "Please check if my scan with scan ID 'e04d3e18-bda7-420b-b240-894fd3d4992d' on WebLasso is completed. If it's completed, get me the scan results using the scan ID 'b12394ad-c804-4b5a-bc20-14f7c8cafdb6'. Also, provide me with the chain ID for the Cronos blockchain using the Token Scanner Multichain | Honeypot Checker Multichain tool.",
        "relevant APIs": [
            [
                "WebLasso",
                "Get Scan Status"
            ],
            [
                "WebLasso",
                "Get Scan Results"
            ],
            [
                "Token Scanner Multichain | Honeypot Checker Multichain",
                "Get Chain Id"
            ]
        ],
        "query_id": 47748
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "HeyWatch Video Encoding",
                "api_name": "GenerateVideoThumbnailSync",
                "api_description": "Generate the thumbnail of the video (Sync)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "23067224"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "Offset in Second",
                        "default": "2"
                    },
                    {
                        "name": "width",
                        "type": "NUMBER",
                        "description": "Image Width",
                        "default": "320"
                    },
                    {
                        "name": "height",
                        "type": "NUMBER",
                        "description": "Image Height",
                        "default": "180"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "HeyWatch Video Encoding",
                "api_name": "GetAccount",
                "api_description": "Get account information",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "HeyWatch Video Encoding",
                "api_name": "GetAllFormats",
                "api_description": "Retrieve all the formats",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Lotto America",
                "api_name": "Random QuickPick for Play",
                "api_description": "Get a randomized Quick Pick for Lotto America. This is a random set of playable Powerball numbers",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Lotto America",
                "api_name": "Get All Lotto America Drawings",
                "api_description": "Get all winning drawings from Lotto America.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Lotto America",
                "api_name": "Latest Drawing",
                "api_description": "Get the latest, and last winning Lotto America winning number set.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Programming Memes Reddit",
                "api_name": "Get All Memes",
                "api_description": "Gets all memes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Guinness-World-Records-Api",
                "api_name": "Get Records",
                "api_description": "Get Guinness World Records for a given term",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "string",
                        "description": "",
                        "default": "push ups"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "pageNum",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "maxResults",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Guinness-World-Records-Api",
                "api_name": "Get Record Details",
                "api_description": "Get the record details for a given href which will be returned from the \"Get Records\" request\n\n\nReturns details like who/what/where/when and an array of strings indicating the different paragraphs as displayed in guinnessworldrecords.com",
                "required_parameters": [
                    {
                        "name": "href",
                        "type": "STRING",
                        "description": "",
                        "default": "/world-records/82145-most-consecutive-vertical-push-ups"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "60K Radio Stations",
                "api_name": "Get Genres",
                "api_description": "Get genre list",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "jap"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "60K Radio Stations",
                "api_name": "Get Cities",
                "api_description": "Get city list",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Jakarta"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "60K Radio Stations",
                "api_name": "Get Countries",
                "api_description": "Get country list",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Aus"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I want to organize a company event and include some entertaining records. Can you fetch the Guinness World Records related to 'push ups' and provide the details of the record with the most consecutive vertical push-ups? Also, recommend a random Quick Pick for Lotto America to add some fun to our event.",
        "relevant APIs": [
            [
                "Guinness-World-Records-Api",
                "Get Records"
            ],
            [
                "Guinness-World-Records-Api",
                "Get Record Details"
            ],
            [
                "Lotto America",
                "Random QuickPick for Play"
            ]
        ],
        "query_id": 81337
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "tapzulecountry",
                "api_name": "country",
                "api_description": "country fetch",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "News space",
                "api_name": "Get Space News",
                "api_description": "Get Space News",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "url": "str",
                    "source": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "GetBooksInfo",
                "api_name": "Search",
                "api_description": "Search Book by its name",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": "empty list"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Reading Home APIs",
                "api_name": "GetBooksbyTitleSearch",
                "api_description": "Get Paginated List of Books on Title Searched",
                "required_parameters": [
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "Power of"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Reading Home APIs",
                "api_name": "Getbooksbycategory",
                "api_description": "This will get a paginated list of books in a specific category",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Reading Home APIs",
                "api_name": "GetBooksbyAuthorSearch",
                "api_description": "Get List of Books of a Searched Author Name",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "Leo Elsinger"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm a book blogger and I want to write a post about books by a specific author. Can you help me search for books by the author's name and also provide me with interesting space news to engage my readers?",
        "relevant APIs": [
            [
                "Reading Home APIs",
                "GetBooksbyAuthorSearch"
            ],
            [
                "News space",
                "Get Space News"
            ]
        ],
        "query_id": 11820
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Random Word API",
                "api_name": "Get Word by Start",
                "api_description": "Returns a random word that starts with the specified string.\nFor example, \"fru\" will only return words that start with \"fru\", such as \"fruit\"",
                "required_parameters": [
                    {
                        "name": "start",
                        "type": "string",
                        "description": "",
                        "default": "fru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Random Word API",
                "api_name": "Get Word by Length",
                "api_description": "Returns a random word that has the specified length. For example, 7 will return any word that is 7 letters long, such as \"swallow\".",
                "required_parameters": [
                    {
                        "name": "length",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Random Word API",
                "api_name": "Get Word by Length and Start",
                "api_description": "Returns a random word of specified length and that starts with specified string.\nFor example, 7 and \"fru\" will return any word that is 7 letters long and starts with \"fru\", such as \"fruiter\".",
                "required_parameters": [
                    {
                        "name": "length",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7"
                    },
                    {
                        "name": "start",
                        "type": "string",
                        "description": "",
                        "default": "fru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "US ZIP Code to Income",
                "api_name": "ZIP code",
                "api_description": "ZIP code",
                "required_parameters": [
                    {
                        "name": "zip",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "x2y2",
                "api_name": "x2y2 GET",
                "api_description": "x2y2 API endpoint (https://api.x2y2.io)\nMake over 1000 requests / minute\n\nSimply copy the path into the x2y2_path header.\n\n![](https://i.ibb.co/WKYfTDy/x2y2-path-get-header.png)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Animals by API-Ninjas",
                "api_name": "/v1/animals",
                "api_description": "API Ninjas Animals API endpoint. Returns up to 10 results matching the input name parameter.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "common name of animal to search. This parameter supports partial matches (e.g. fox will match gray fox and red fox)",
                        "default": "cheetah"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "taxonomy": {
                        "kingdom": "str",
                        "phylum": "str",
                        "class": "str",
                        "order": "str",
                        "family": "str",
                        "genus": "str",
                        "scientific_name": "str"
                    },
                    "locations": [
                        "list of str with length 3"
                    ],
                    "characteristics": {
                        "prey": "str",
                        "name_of_young": "str",
                        "group_behavior": "str",
                        "estimated_population_size": "str",
                        "biggest_threat": "str",
                        "most_distinctive_feature": "str",
                        "gestation_period": "str",
                        "habitat": "str",
                        "diet": "str",
                        "average_litter_size": "str",
                        "lifestyle": "str",
                        "common_name": "str",
                        "number_of_species": "str",
                        "location": "str",
                        "slogan": "str",
                        "group": "str",
                        "color": "str",
                        "skin_type": "str",
                        "top_speed": "str",
                        "lifespan": "str",
                        "weight": "str",
                        "height": "str",
                        "age_of_sexual_maturity": "str",
                        "age_of_weaning": "str"
                    }
                }
            }
        ],
        "query": "Help me find a 7-letter word that starts with 'fru' to use as a unique password for my online account. Additionally, fetch the income data for the ZIP code 98765 to compare it with other areas.",
        "relevant APIs": [
            [
                "Random Word API",
                "Get Word by Length and Start"
            ],
            [
                "US ZIP Code to Income",
                "ZIP code"
            ]
        ],
        "query_id": 1643
    },
    {
        "api_list": [
            {
                "category_name": "Payments",
                "tool_name": "Image QR code generator",
                "api_name": "Red colour QR code generator",
                "api_description": "Generate the QR code for anything you want.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "grayhat.in"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Payments",
                "tool_name": "fastmoney",
                "api_name": "Authentic Money Transfer Portal",
                "api_description": "Authentic Money Transfer Portal",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm a small business owner and I'm interested in incorporating QR codes into my marketing materials. Generate red QR codes that link to my company's website and social media profiles. Additionally, I need information about a secure money transfer portal for processing online payments. Can you share details about the portal's account setup process and supported currencies?",
        "relevant APIs": [
            [
                "Image QR code generator",
                "Red colour QR code generator"
            ],
            [
                "fastmoney",
                "Authentic Money Transfer Portal"
            ]
        ],
        "query_id": 54776
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Local Search",
                "api_name": "/businesses",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "Keyword",
                        "type": "STRING",
                        "description": "A term to search against business names and categories.",
                        "default": ""
                    },
                    {
                        "name": "Name",
                        "type": "STRING",
                        "description": "The name of a business.",
                        "default": ""
                    },
                    {
                        "name": "City",
                        "type": "STRING",
                        "description": "The name of the city to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "State",
                        "type": "STRING",
                        "description": "The two-letter abbreviation of the state in USA to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "PostalCode",
                        "type": "STRING",
                        "description": "The US postal code of a location.  ( 5 or 9 digit)",
                        "default": ""
                    },
                    {
                        "name": "Sort",
                        "type": "STRING",
                        "description": "",
                        "default": "value_distance"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category that defines (or relates to) the commercial offering of a business.",
                        "default": "Category"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCities",
                "api_description": "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "This indicates how many results you would like to query in one time.\nDefault value is `10` if limit is not provided.\nMaximum limit is `1000`",
                        "default": "100"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "This controls the pagination of results.\nDefault is `1`",
                        "default": "1"
                    },
                    {
                        "name": "countryIsoCode",
                        "type": "STRING",
                        "description": "It is an optional parameter to narrow your search results.\nPass two letter Country code to  filter the cities for specific country in query param which can be found in our searchCountry API in field name `alpha-2` for any country you search.\nfor e.g. 'IN', 'US' etc.",
                        "default": "US"
                    },
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "new yo"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "city": "str",
                            "countryCode": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "ListAllCountries",
                "api_description": "This API returns list of all countries and can be paginated over the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:asc`, `name:desc` for country name sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 200
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 200
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCountries",
                "api_description": "API to search county based on the matching search keyword passed in url param.\nNOTE: This API is case insensitive.\ne.g. \n`/v1/locations/countries/uni`: This will return all the matching countries whose name starts from `uni` and their additional info.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "uni"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 20
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:desc`, `alpha-2:asc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "IP Geolocation_v3",
                "api_name": "Get IP Geolocation",
                "api_description": "This endpoint returns geolocation and other useful points from an IP Address. If IP address is provided as query parameter, geolocation is performed on that IP address. If IP address is left empty, geolocation data of client IP is returned.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "",
                        "default": "206.71.50.230"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Location",
                "tool_name": "World Time",
                "api_name": "Timezones",
                "api_description": "Request a list of valid timezones",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Location",
                "tool_name": "World Time",
                "api_name": "Current time by IP",
                "api_description": "Request the current time based on your public IP",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "abbreviation": "str",
                    "client_ip": "str",
                    "datetime": "str",
                    "day_of_week": "int",
                    "day_of_year": "int",
                    "dst": "bool",
                    "dst_from": "NoneType",
                    "dst_offset": "int",
                    "dst_until": "NoneType",
                    "raw_offset": "int",
                    "timezone": "str",
                    "unixtime": "int",
                    "utc_datetime": "str",
                    "utc_offset": "str",
                    "week_number": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Time",
                "api_name": "Timezone for Location",
                "api_description": "Request the current time for a timezone (in plain text or JSON)",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Location, example:\"London\" or \"London.txt\"",
                        "default": "London"
                    },
                    {
                        "name": "area",
                        "type": "STRING",
                        "description": "Area, example:\"Europe\"",
                        "default": "Europe"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "abbreviation": "str",
                    "client_ip": "str",
                    "datetime": "str",
                    "day_of_week": "int",
                    "day_of_year": "int",
                    "dst": "bool",
                    "dst_from": "str",
                    "dst_offset": "int",
                    "dst_until": "str",
                    "raw_offset": "int",
                    "timezone": "str",
                    "unixtime": "int",
                    "utc_datetime": "str",
                    "utc_offset": "str",
                    "week_number": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "GEOIP_v2",
                "api_name": "Visitor Lookup",
                "api_description": "Returns the IP address of the client with additional data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm planning a hiking trip and I need to find hiking trails in different national parks. Can you help me search for parks and trails in different cities? It would be great if you could provide me with their contact details, address, and trail difficulty level. Additionally, I'd like to know the IP geolocation details for each city.",
        "relevant APIs": [
            [
                "Local Search",
                "/businesses"
            ],
            [
                "IP Geolocation_v3",
                "Get IP Geolocation"
            ]
        ],
        "query_id": 19186
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Ski Resort Forecast",
                "api_name": "Current Snow Conditions",
                "api_description": "Returns the current snow conditions for a given resort name",
                "required_parameters": [
                    {
                        "name": "resort",
                        "type": "string",
                        "description": "",
                        "default": "Jackson Hole"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
                        "default": "i"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "topSnowDepth": "str",
                    "botSnowDepth": "str",
                    "freshSnowfall": "NoneType",
                    "lastSnowfallDate": "NoneType",
                    "basicInfo": {
                        "region": "str",
                        "name": "str",
                        "url": "str",
                        "topLiftElevation": "str",
                        "midLiftElevation": "str",
                        "botLiftElevation": "str",
                        "lat": "str",
                        "lon": "str"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Ski Resort Forecast",
                "api_name": "5 Day Forecast",
                "api_description": "Returns the 5 day forecast for a given resort name",
                "required_parameters": [
                    {
                        "name": "resort",
                        "type": "string",
                        "description": "",
                        "default": "Jackson Hole"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
                        "default": "i"
                    },
                    {
                        "name": "el",
                        "type": "STRING",
                        "description": "Specify a part of the mountain. Accepted values are 'top', 'mid and 'bot'. Using this parameter improves response time.",
                        "default": "top"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Ski Resort Forecast",
                "api_name": "Hourly Forecast",
                "api_description": "Returns the hourly forecast for a given resort name",
                "required_parameters": [
                    {
                        "name": "resort",
                        "type": "string",
                        "description": "",
                        "default": "Jackson Hole"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "el",
                        "type": "STRING",
                        "description": "Specify a part of the mountain. Accepted values are 'top', 'mid', and 'bot'. Using this parameter improves response time.",
                        "default": "top"
                    },
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
                        "default": "i"
                    },
                    {
                        "name": "c",
                        "type": "BOOLEAN",
                        "description": "Limit result to current day only",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "summary": "str",
                            "windSpeed": "str",
                            "windDirection": "str",
                            "rain": "str",
                            "maxTemp": "str",
                            "minTemp": "NoneType",
                            "windChill": "str",
                            "humidity": "str",
                            "freezeLevel": "str",
                            "_list_length": 14
                        }
                    ],
                    "basicInfo": {
                        "region": "str",
                        "name": "str",
                        "url": "str",
                        "topLiftElevation": "str",
                        "midLiftElevation": "str",
                        "botLiftElevation": "str",
                        "lat": "str",
                        "lon": "str"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "OikoWeather",
                "api_name": "Weather Data",
                "api_description": "Hourly historical and forecast weather parameters in time-series format, from 1950 to 16 days ahead for any location.",
                "required_parameters": [
                    {
                        "name": "start",
                        "type": "STRING",
                        "description": "",
                        "default": "'2010-01-01'"
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "",
                        "default": "23.3"
                    },
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "",
                        "default": "temperature"
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "",
                        "default": "114.2"
                    },
                    {
                        "name": "end",
                        "type": "STRING",
                        "description": "",
                        "default": "'2019-12-31'"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "freq",
                        "type": "STRING",
                        "description": "",
                        "default": "D"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "OpenWeather",
                "api_name": "getCurrentWeather",
                "api_description": "Test",
                "required_parameters": [
                    {
                        "name": "appid",
                        "type": "STRING",
                        "description": "",
                        "default": "da0f9c8d90bde7e619c3ec47766a42f4"
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "City name",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
                        "default": ""
                    },
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
                        "default": "standard"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cod": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "OpenWeather",
                "api_name": "getForecastWeather",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "City name",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cnt",
                        "type": "NUMBER",
                        "description": "A number of timestamps, which will be returned in the API response.",
                        "default": ""
                    },
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
                        "default": "standard"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cod": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Current",
                "api_description": "Current weather estimate for location.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language (ISO 639-1 codes). Options: de, en, es, fr, it, pl, ru, fi, sv, nl, ko, pt, th, tr, zh, zh_TW (Chinese in Taiwan), zh_CN (Chinese in China). (default en)",
                        "default": "en"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "current": {
                        "time": "str",
                        "symbol": "str",
                        "symbolPhrase": "str",
                        "temperature": "int",
                        "feelsLikeTemp": "int",
                        "relHumidity": "int",
                        "dewPoint": "int",
                        "windSpeed": "int",
                        "windDir": "int",
                        "windDirString": "str",
                        "windGust": "int",
                        "precipProb": "int",
                        "precipRate": "int",
                        "cloudiness": "int",
                        "thunderProb": "int",
                        "uvIndex": "int",
                        "pressure": "float",
                        "visibility": "int"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Daily",
                "api_description": "Daily forecast.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "date": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "maxTemp": "int",
                            "minTemp": "int",
                            "maxFeelsLikeTemp": "int",
                            "minFeelsLikeTemp": "int",
                            "maxRelHumidity": "int",
                            "minRelHumidity": "int",
                            "maxDewPoint": "int",
                            "minDewPoint": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "maxWindSpeed": "int",
                            "windDir": "int",
                            "maxWindGust": "int",
                            "precipProb": "int",
                            "cloudiness": "int",
                            "sunrise": "str",
                            "sunset": "str",
                            "sunriseEpoch": "int",
                            "sunsetEpoch": "int",
                            "moonrise": "str",
                            "moonset": "str",
                            "moonPhase": "int",
                            "uvIndex": "int",
                            "minVisibility": "int",
                            "pressure": "float",
                            "confidence": "str",
                            "solarRadiationSum": "int",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Location search",
                "api_description": "Search for locations by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "string",
                        "description": "",
                        "default": "mumbai"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "in"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "locations": [
                        {
                            "id": "int",
                            "name": "str",
                            "country": "str",
                            "timezone": "str",
                            "language": "str",
                            "adminArea": "str",
                            "adminArea2": "NoneType",
                            "adminArea3": "NoneType",
                            "lon": "float",
                            "lat": "float",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Cloud Cast",
                "api_name": "Get the forecast",
                "api_description": "Get the forecast for the current city",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Cloud Cast",
                "api_name": "Get wind speed",
                "api_description": "Get the current wind speed",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Cloud Cast",
                "api_name": "Get humidty",
                "api_description": "Get the humidity for the current city",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a ski race event at Jackson Hole and need to ensure favorable weather conditions. Can you provide me with the current weather conditions, the daily forecast for the next 7 days, and the wind speed for the event day? Additionally, I would like to know the humidity levels for the race day.",
        "relevant APIs": [
            [
                "Ski Resort Forecast",
                "Current Snow Conditions"
            ],
            [
                "Foreca Weather",
                "Current"
            ],
            [
                "Foreca Weather",
                "Daily"
            ],
            [
                "Cloud Cast",
                "Get the forecast"
            ],
            [
                "Cloud Cast",
                "Get wind speed"
            ],
            [
                "Cloud Cast",
                "Get humidty"
            ]
        ],
        "query_id": 73984
    },
    {
        "api_list": [
            {
                "category_name": "Energy",
                "tool_name": "ecoweather",
                "api_name": "Schneetage",
                "api_description": "Beantwortet die Frage, wie viel Schnee und an wie viel Tagen innerhalb eines Zeitraums vorhanden gewesen ist. Wird verwendet zum Beispiel bei der Einsatzplanung im Winterdienst und Hausmeisterservice sowie im Tourismus.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "",
                        "default": "2021-01-01"
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "",
                        "default": "8.79"
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "",
                        "default": "49.34"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "",
                        "default": "2021-09-21"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "input": {
                        "geo": {
                            "lat": "str",
                            "lon": "str"
                        },
                        "timeframe": {
                            "from": "str",
                            "to": "str"
                        }
                    },
                    "aggregations": {
                        "snowdays": "int",
                        "snow": "float"
                    },
                    "result": [
                        {
                            "timestamp": "int",
                            "date": "str",
                            "snow": "float",
                            "_list_length": 264
                        }
                    ]
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "ecoweather",
                "api_name": "Heizgradtage",
                "api_description": "Beantwortet die Frage, wie viele Heizgradtage innerhalb eines Zeitraums vorhanden gewesen sind. Wird verwendet zum Beispiel bei der unterj\u00e4hrigen Abgrenzung von Heizkosten bei der Nebenkostenabrechnung.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "",
                        "default": "2021-01-01"
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "",
                        "default": "8.79"
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "",
                        "default": "49.34"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "",
                        "default": "2021-09-21"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "input": {
                        "geo": {
                            "lat": "str",
                            "lon": "str"
                        },
                        "timeframe": {
                            "from": "str",
                            "to": "str"
                        }
                    },
                    "aggregations": {
                        "hdd12": "float",
                        "hdd15": "float"
                    },
                    "result": [
                        {
                            "timestamp": "int",
                            "date": "str",
                            "hdd12": "float",
                            "hdd15": "float",
                            "_list_length": 264
                        }
                    ]
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "ecoweather",
                "api_name": "Niederschlag",
                "api_description": "Beantwortet die Frage, wie viel Niederschlag innerhalb eines Zeitraums vorhanden gewesen ist. Wird verwendet zum Beispiel bei der Dimensionierung von Regenwassernutzung (Zisterne) oder bei der Planung von G\u00e4rten .",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "",
                        "default": "2021-01-01"
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "",
                        "default": "8.79"
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "",
                        "default": "49.34"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "",
                        "default": "2021-09-21"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "proclima",
                "api_name": "dolar",
                "api_description": "dolar",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Europe Fuel Prices",
                "api_name": "Get specific country",
                "api_description": "Get fuel prices for a specific country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "Germany"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "diesel_price": "float",
                    "gasoline_price": "float"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Europe Fuel Prices",
                "api_name": "All Countries",
                "api_description": "Get all of Europe countries Fuel prices",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "diesel_price": "float",
                    "gasoline_price": "float"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Electricity Carbon Footprint Germany",
                "api_name": "CO2 Emission",
                "api_description": "The CO2 Emission endpoint will provide carbon emissions in grams per Kilo-Watt-Hour.  To latest and historical footprint information for electricity in Germany.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Allows retrieving historical values (back to yr 2017) .\n\nAccepted formats:\n\n- YYYY-MM-DD\n- MM/DD/YYYY\n- Unix Timestamp (ms)",
                        "default": "2022-08-20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "co2perKwh": "int",
                    "trend": {
                        "avg30": "int",
                        "avg365": "int"
                    }
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "CO2 Offset",
                "api_name": "Retrieve Compensation",
                "api_description": "Response contains full compensation details (if exists, and owner is account).",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "0xF0F2e446EeD32236EA0c78a6E4a91Ed712654799"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "err": "str"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "CO2 Offset",
                "api_name": "List existing Compensations",
                "api_description": "Returns a list of all existing co2offset certificates linked to account.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            }
        ],
        "query": "My family and I are planning a summer vacation in Europe and we want to choose a destination with good weather. Can you provide me with the historical data for the number of heating degree days and cooling degree days in Germany, France, Italy, and Spain for the past year? Additionally, I would like to know the fuel prices for Germany.",
        "relevant APIs": [
            [
                "ecoweather",
                "Heizgradtage"
            ],
            [
                "Europe Fuel Prices",
                "Get specific country"
            ]
        ],
        "query_id": 55655
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Web Detection",
                "api_name": "GET Web Detection",
                "api_description": "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=\u201cimage_url\u201d)",
                "required_parameters": [
                    {
                        "name": "image",
                        "type": "STRING",
                        "description": "",
                        "default": "https://avatars.mds.yandex.net/get-mpic/5215925/img_id4862938180215999126.jpeg/orig"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "entities": [
                        {
                            "score": "float",
                            "text": "str",
                            "_list_length": 10
                        }
                    ],
                    "fullMatches": [
                        {
                            "url": "str",
                            "score": "int",
                            "_list_length": 10
                        }
                    ],
                    "partialMatches": "empty list",
                    "visualMatches": [
                        {
                            "url": "str",
                            "score": "int",
                            "_list_length": 10
                        }
                    ],
                    "pages": [
                        {
                            "fullMatches": [
                                {
                                    "url": "str",
                                    "score": "int",
                                    "_list_length": 1
                                }
                            ],
                            "partialMatches": "empty list",
                            "url": "str",
                            "score": "int",
                            "title": "str",
                            "_list_length": 10
                        }
                    ],
                    "success": "bool",
                    "dimensions": {
                        "height": "int",
                        "width": "int",
                        "type": "str"
                    }
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Document Image Validation",
                "api_name": "GET Call",
                "api_description": "Used to fetch api result using the request id received in responses.",
                "required_parameters": [
                    {
                        "name": "request_id",
                        "type": "STRING",
                        "description": "",
                        "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Microsoft Computer Vision",
                "api_name": "List Models",
                "api_description": "This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "models": [
                        {
                            "name": "str",
                            "categories": [
                                "list of str with length 4"
                            ],
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Background Remover",
                "api_name": "getAccount",
                "api_description": "Returns a description of your user account information.\nUseful to get the remaining credits on your account\n",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "state": "str",
                    "statusCode": "int",
                    "code": "str",
                    "title": "str",
                    "message": "NoneType"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Background Remover",
                "api_name": "getImage",
                "api_description": "Retuns the result of an image that was previously handled by autoremove route for the given image Id.\naccepts two parameters:\n  - imageId: The Id of the image to get.\n  - recompute: bollean, if set to true, asks the server to remove the backgorund again for the specified ID (costs credits).\n",
                "required_parameters": [
                    {
                        "name": "imageId",
                        "type": "STRING",
                        "description": "ID of the image to get",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "recompute",
                        "type": "BOOLEAN",
                        "description": "ask the server to remove the background again (cost credits)",
                        "default": true
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a fitness enthusiast and I'm looking for new workout routines to challenge myself. Can you recommend some high-intensity interval training (HIIT) exercises and provide me with images or videos demonstrating the correct form for each exercise? Additionally, suggest some post-workout recovery meals.",
        "relevant APIs": [
            [
                "Background Remover",
                "getImage"
            ],
            [
                "Web Detection",
                "GET Web Detection"
            ],
            [
                "Web Detection",
                "GET Web Detection"
            ]
        ],
        "query_id": 21828
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Background Remover",
                "api_name": "getImage",
                "api_description": "Retuns the result of an image that was previously handled by autoremove route for the given image Id.\naccepts two parameters:\n  - imageId: The Id of the image to get.\n  - recompute: bollean, if set to true, asks the server to remove the backgorund again for the specified ID (costs credits).\n",
                "required_parameters": [
                    {
                        "name": "imageId",
                        "type": "STRING",
                        "description": "ID of the image to get",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "recompute",
                        "type": "BOOLEAN",
                        "description": "ask the server to remove the background again (cost credits)",
                        "default": true
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Background Remover",
                "api_name": "getAccount",
                "api_description": "Returns a description of your user account information.\nUseful to get the remaining credits on your account\n",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "state": "str",
                    "statusCode": "int",
                    "code": "str",
                    "title": "str",
                    "message": "NoneType"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Fashion",
                "api_name": "Get version",
                "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Image Text Recognition",
                "api_name": "Supported Languages",
                "api_description": "3 letters language codes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"afr\": \"str\", \"amh\": \"str\", \"ara\": \"str\", \"asm\": \"str\", \"aze\": \"str\", \"bel\": \"str\", \"ben\": \"str\", \"bod\": \"str\", \"bos\": \"str\", \"bul\": \"str\", \"cat\": \"str\", \"ceb\": \"str\", \"ces\": \"str\", \"chi_sim\": \"str\", \"chi_tra\": \"str\", \"chr\": \"str\", \"cym\": \"str\", \"dan\": \"str\", \"deu\": \"str\", \"dzo\": \"str\", \"ell\": \"str\", \"eng\": \"str\", \"enm\": \"str\", \"epo\": \"str\", \"est\": \"str\", \"eus\": \"str\", \"fas\": \"str\", \"fin\": \"str\", \"fra\": \"str\", \"frm\": \"str\", \"gle\": \"str\", \"glg\": \"str\", \"grc\": \"str\", \"guj\": \"str\", \"hat\": \"str\", \"heb\": \"str\", \"hin\": \"str\", \"hrv\": \"str\", \"hun\": \"str\", \"iku\": \"str\", \"ind\": \"str\", \"isl\": \"str\", \"ita\": \"str\", \"jav\": \"str\", \"jpn\": \"str\", \"kan\": \"str\", \"kat\": \"str\", \"kaz\": \"str\", \"khm\": \"str\", \"kir\": \"str\", \"kor\": \"str\", \"lao\": \"str\", \"lat\": \"str\", \"lav\": \"str\", \"lit\": \"str\", \"mal\": \"str\", \"mar\": \"str\", \"mkd\": \"str\", \"mlt\": \"str\", \"msa\": \"str\", \"mya\": \"str\", \"nep\": \"str\", \"nld\": \"str\", \"nor\": \"str\", \"ori\": \"str\", \"osd\": \"str\", \"pan\": \"str\", \"pol\": \"str\", \"por\": \"str\", \"pus\": \"str\", \"ron\": \"str"
            }
        ],
        "query": "I want to know the version of the Fashion API. Fetch the supported languages for image text recognition. Additionally, remove the background from an image with the ID 'ghi123' and provide the result. Furthermore, fetch the remaining credits on my Background Remover account.",
        "relevant APIs": [
            [
                "Fashion",
                "Get version"
            ],
            [
                "Image Text Recognition",
                "Supported Languages"
            ],
            [
                "Background Remover",
                "getImage"
            ],
            [
                "Background Remover",
                "getAccount"
            ]
        ],
        "query_id": 21584
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "planetaryoverview",
                "api_description": "get the Planetary Overview of the day",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "planet": "str",
                    "sign": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "hoscoscope",
                "api_description": "retrieve the horoscope for a specific sign and date",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sign",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "US Hospitals",
                "api_name": "getHospitalsByName",
                "api_description": "###Find US Hospitals by name.\nSimply add your search string to the \"name\" parameter in the url.\nTip:  The API also works if your search for *name='pr'* instead of *name='presbyterian'.* \n\n**Note**: The API only returns the first 30 results.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "presbyterian"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "US Hospitals",
                "api_name": "getHospitalsById",
                "api_description": "###Find US Hospitals by CMS Certification Number\nSimply add your search string as a parameter to the \"ccn\" query.\n\n**Note**: The API only returns the first 30 results.",
                "required_parameters": [
                    {
                        "name": "ccn",
                        "type": "NUMBER",
                        "description": "",
                        "default": "670068"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Provider CCN": "int",
                    "Hospital Name": "str",
                    "Alias": "str",
                    "Url": "str",
                    "Phone": "str",
                    "Service": "str",
                    "Type": "str",
                    "Approval Codes": "str",
                    "Street Address": "str",
                    "City": "str",
                    "State Code": "str",
                    "Zip Code": "str",
                    "County": "str",
                    "Medicare CBSA Number": "int",
                    "Rural Versus Urban": "str",
                    "Control": "str",
                    "Number of Beds": "int",
                    "Parent Unit": "NoneType",
                    "Affiliated Units": "NoneType",
                    "System": "NoneType"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Exercises by API-Ninjas",
                "api_name": "/v1/exercises",
                "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "muscle",
                        "type": "STRING",
                        "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
                        "default": "biceps"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
                        "default": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "STRING",
                        "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "type": "str",
                    "muscle": "str",
                    "equipment": "str",
                    "difficulty": "str",
                    "instructions": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "cities/v2/get-information",
                "api_description": "Get information in specific city by its id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The value of id field (type is city) that returned in \u2026/v2/auto-complete endpoint",
                        "default": "hW7vArorRd8cT9h6v"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "x-units-temperature",
                        "type": "STRING",
                        "description": "One of the following : fahrenheit|celsius",
                        "default": "celsius"
                    },
                    {
                        "name": "x-aqi-index",
                        "type": "STRING",
                        "description": "One of the following : us|cn",
                        "default": "us"
                    },
                    {
                        "name": "x-user-timezone",
                        "type": "STRING",
                        "description": "",
                        "default": "Asia/Singapore"
                    },
                    {
                        "name": "x-user-lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en-US"
                    },
                    {
                        "name": "x-units-pressure",
                        "type": "STRING",
                        "description": "One of the following : hg|mbar",
                        "default": "mbar"
                    },
                    {
                        "name": "x-units-distance",
                        "type": "STRING",
                        "description": "One of the following : miles|kilometer",
                        "default": "kilometer"
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"data\": {\"id\": \"str\", \"city\": \"str\", \"state\": \"str\", \"country\": \"str\", \"location\": {\"lat\": \"float\", \"lon\": \"float\"}, \"timezone\": \"str\", \"websiteLink\": \"str\", \"report\": {\"link\": \"str\", \"actionText\": \"str\", \"message\": \"str\"}, \"type\": \"str\", \"name\": \"str\", \"followers\": {\"total\": \"str\", \"pictures\": [\"list of str with length 3\"], \"label\": \"str\"}, \"contributors\": {\"pictures\": [\"list of str with length 2\"], \"redirection\": {\"actionType\": \"str\", \"appCategory\": \"str\", \"item\": \"str\"}, \"label\": \"str\"}, \"sources\": [{\"id\": \"str\", \"name\": \"str\", \"totalStations\": \"int\", \"type\": \"str\", \"picture\": \"str\", \"url\": \"str\", \"_list_length\": 4}], \"currentMeasurement\": {\"ts\": \"str\", \"aqius\": \"int\", \"mainus\": \"str\", \"aqicn\": \"int\", \"maincn\": \"str\", \"pollutants\": [{\"conc\": \"float\", \"aqius\": \"int\", \"aqicn\": \"int\", \"pollutant\": \"str\", \"isEstimated\": \"int\", \"_list_length\": 1}]}, \"sensorDefinitions\": [{\"pollutant\": \"str\", \"unit\": \"str\", \"name\": \"str\", \"_list_length\": 16}], \"currentWeather\": {\"ts\": \"s"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "stations/get-measurements (Deprecated)",
                "api_description": "Get measurements at specific station by its id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The value of id field (type is station) that received from .../auto-complete API",
                        "default": "Jmy9oL75KSZnsqi6L"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en_US"
                    },
                    {
                        "name": "aqiIndex",
                        "type": "STRING",
                        "description": "AQI index (us | cn)",
                        "default": "us"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "",
                        "default": "Asia/Singapore"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "id": "str",
                        "measurements": [
                            {
                                "ts": "str",
                                "aqius": "int",
                                "mainus": "str",
                                "aqicn": "int",
                                "maincn": "str",
                                "p1": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "s2": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "p2": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "hour_late": "int",
                                    "ts": "str"
                                },
                                "_list_length": 48
                            }
                        ],
                        "measurements_daily": [
                            {
                                "ts": "str",
                                "p2": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "p1": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "o3": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "s2": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "co": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "aqius": "int",
                                "mainus": "str",
                                "aqicn": "int",
                                "maincn": "str",
                                "_list_length": 31
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "auto-complete (Deprecated)",
                "api_description": "Find countries, cities, places by name",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Name of countries, cities, districts, places, etc...",
                        "default": "singapore"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "stations": [
                            {
                                "id": "str",
                                "name": "str",
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "i18n": {},
                                "location": {
                                    "type": "str",
                                    "coordinates": [
                                        "list of float with length 2"
                                    ]
                                },
                                "type": "str",
                                "current_measurement": {
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "ts": "str"
                                },
                                "_list_length": 10
                            }
                        ],
                        "cities": [
                            {
                                "id": "str",
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "i18n": {},
                                "estimated": "int",
                                "location": {
                                    "type": "str",
                                    "coordinates": [
                                        "list of float with length 2"
                                    ]
                                },
                                "type": "str",
                                "current_measurement": {
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "ts": "str"
                                },
                                "_list_length": 1
                            }
                        ],
                        "news": [
                            {
                                "author": "str",
                                "date": "str",
                                "status": "str",
                                "thumbnail": "str",
                                "title": "str",
                                "type": "str",
                                "url": "str",
                                "_list_length": 7
                            }
                        ],
                        "contributors": [
                            {
                                "id": "str",
                                "name": "str",
                                "type": "str",
                                "subType": "str",
                                "picture": "str",
                                "visibility": "bool",
                                "isVerified": "bool",
                                "_list_length": 1
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Ind Nutrient API",
                "api_name": "View Food Items by Core",
                "api_description": "This request allows clients to retrieve detailed information about a food item by filtering by query param `core`.\n\nClients can include multiple cores in a single request. For example, by sending a request to https://indnutrientsapi.tech/food?core=chicken,dal,paneer, the API will return food items associated with the specified cores: chicken, dal, and paneer.\n\nAPI request sent to [https://indnutrientsapi.tech/food?core=chicken](https://indnutrientsapi.tech/food?core=chicken)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "item": [
                        {
                            "_id": "str",
                            "food_name": "str",
                            "quantity": "str",
                            "calories": "int",
                            "uri": "str",
                            "type": "str",
                            "type_uri": "str",
                            "core": "str",
                            "core_uri": "str",
                            "food_nutrition": [
                                {
                                    "nutrient_name": "str",
                                    "value": "int",
                                    "unit": "str",
                                    "_list_length": 3
                                }
                            ],
                            "request": [
                                {
                                    "type": "str",
                                    "message": "str",
                                    "url": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 53
                        }
                    ]
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Ind Nutrient API",
                "api_name": "View Food Item By Name",
                "api_description": "This request allows clients to retrieve detailed information about a food item by specifying by its `name`.\n\nWhen making the request, ensure the food item's name is written with hyphens (\"-\") separating the words. For instance, \"Paneer Butter Masala\" should be written as \"paneer-butter-masala\" in the request.\n\nAPI request sent to [https://indnutrientsapi.tech/food/name/paneer-butter-masala](https://indnutrientsapi.tech/food/name/paneer-butter-masala)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "item": [
                        {
                            "_id": "str",
                            "food_name": "str",
                            "quantity": "str",
                            "calories": "int",
                            "uri": "str",
                            "type": "str",
                            "type_uri": "str",
                            "core": "str",
                            "core_uri": "str",
                            "food_nutrition": [
                                {
                                    "nutrient_name": "str",
                                    "value": "float",
                                    "unit": "str",
                                    "_list_length": 3
                                }
                            ],
                            "request": [
                                {
                                    "type": "str",
                                    "message": "str",
                                    "url": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Ind Nutrient API",
                "api_name": "View All Types With Their Food Items",
                "api_description": "This request allows clients to retrieve a list of all available types along with the food items associated with each type.\n\nAPI request sent to [https://indnutrientsapi.tech/food/type](https://indnutrientsapi.tech/food/type)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "types": [
                        {
                            "type": "str",
                            "related_food_length": "int",
                            "related_food": [
                                {
                                    "_id": "str",
                                    "food_name": "str",
                                    "quantity": "str",
                                    "calories": "int",
                                    "uri": "str",
                                    "type": "str",
                                    "type_uri": "str",
                                    "food_nutrition": [
                                        {
                                            "nutrient_name": "str",
                                            "value": "float",
                                            "unit": "str",
                                            "_list_length": 3
                                        }
                                    ],
                                    "_list_length": 266
                                }
                            ],
                            "_list_length": 2
                        }
                    ]
                }
            }
        ],
        "query": "I'm planning a family reunion and we want to have it at a hospital. Can you help me find hospitals in our city that have a large number of beds? Additionally, we would like to know the current air quality in the area.",
        "relevant APIs": [
            [
                "US Hospitals",
                "getHospitalsByName"
            ],
            [
                "AirVisual",
                "cities/v2/get-information"
            ]
        ],
        "query_id": 68092
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Get IP Info_v2",
                "api_name": "ip-city",
                "api_description": "Get the detail of Longitude and Latitude on the basis of IP-Address",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP-Address of the Country",
                        "default": "74.125.45.100"
                    },
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "API Key Generated by Infodb.com",
                        "default": "93b77a0add7dace51661cf559ef97326f3297ec27d6e5a9b903670e0246b8293"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "ListAllCountries",
                "api_description": "This API returns list of all countries and can be paginated over the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:asc`, `name:desc` for country name sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 200
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 200
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCountries",
                "api_description": "API to search county based on the matching search keyword passed in url param.\nNOTE: This API is case insensitive.\ne.g. \n`/v1/locations/countries/uni`: This will return all the matching countries whose name starts from `uni` and their additional info.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "uni"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 20
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:desc`, `alpha-2:asc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCities",
                "api_description": "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "This indicates how many results you would like to query in one time.\nDefault value is `10` if limit is not provided.\nMaximum limit is `1000`",
                        "default": "100"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "This controls the pagination of results.\nDefault is `1`",
                        "default": "1"
                    },
                    {
                        "name": "countryIsoCode",
                        "type": "STRING",
                        "description": "It is an optional parameter to narrow your search results.\nPass two letter Country code to  filter the cities for specific country in query param which can be found in our searchCountry API in field name `alpha-2` for any country you search.\nfor e.g. 'IN', 'US' etc.",
                        "default": "US"
                    },
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "new yo"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "city": "str",
                            "countryCode": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Pharmacies de garde NC",
                "api_name": "All",
                "api_description": "Renvoie les pharmacies de garde de Nouvelle-Cal\u00e9donie",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "nom": "str",
                    "type": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Pharmacies de garde NC",
                "api_name": "Health",
                "api_description": "Renvoie le statut de l'application : up ou down",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "checks": "empty list"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Pincode Distance Measurement ",
                "api_name": "Fetch Distance between two pincodes",
                "api_description": "Enter two valid pincodes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "",
                        "default": "415612"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "",
                        "default": "415639"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "errorCode": "int",
                    "message": "str",
                    "error": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Local Search",
                "api_name": "/businesses",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "Keyword",
                        "type": "STRING",
                        "description": "A term to search against business names and categories.",
                        "default": ""
                    },
                    {
                        "name": "Name",
                        "type": "STRING",
                        "description": "The name of a business.",
                        "default": ""
                    },
                    {
                        "name": "City",
                        "type": "STRING",
                        "description": "The name of the city to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "State",
                        "type": "STRING",
                        "description": "The two-letter abbreviation of the state in USA to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "PostalCode",
                        "type": "STRING",
                        "description": "The US postal code of a location.  ( 5 or 9 digit)",
                        "default": ""
                    },
                    {
                        "name": "Sort",
                        "type": "STRING",
                        "description": "",
                        "default": "value_distance"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category that defines (or relates to) the commercial offering of a business.",
                        "default": "Category"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "My family and I are relocating to a new city and we need to find a suitable neighborhood. Can you recommend some cities in the United States with affordable housing options? Also, provide information about the healthcare facilities and pharmacies in those cities.",
        "relevant APIs": [
            [
                "World Cities and Countries",
                "ListAllCountries"
            ],
            [
                "World Cities and Countries",
                "SearchCities"
            ],
            [
                "World Cities and Countries",
                "SearchCountries"
            ],
            [
                "Local Search",
                "/businesses"
            ],
            [
                "Pharmacies de garde NC",
                "All"
            ],
            [
                "Pharmacies de garde NC",
                "Health"
            ]
        ],
        "query_id": 19188
    },
    {
        "api_list": [
            {
                "category_name": "Energy",
                "tool_name": "Europe Fuel Prices",
                "api_name": "All Countries",
                "api_description": "Get all of Europe countries Fuel prices",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "diesel_price": "float",
                    "gasoline_price": "float"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Europe Fuel Prices",
                "api_name": "Get specific country",
                "api_description": "Get fuel prices for a specific country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "Germany"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "diesel_price": "float",
                    "gasoline_price": "float"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "entnahme",
                "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Erzeugungsanlagen sein d\u00fcrfen, die  f\u00fcr einen Verbraucher (Entnahme) an gegebener Postleitzahl ist.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/entnahme?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Erzeugungsanlage sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn die Netzentnahme (Verbrauch) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "Postleitzahl des Verbrauchers (Entnahmestelle)",
                        "default": "09669"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "erzeugung",
                "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Verbraucher sein d\u00fcrfen, die  von einer Erzeugungsanlage von angegebener Postleitzahl ihren Strom beziehen sollen.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/erzeugung?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Verbraucher sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn dessen Netzeinspeisung (Erzeuger) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "Postleitzahl der Erzeugungsanlage, f\u00fcr die eine Liste der Postleitzahlen von Verbrauchergebiete einers regionalen \u00d6kostrombezugs erstellt werden soll.",
                        "default": "01609"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "Strommix",
                "api_description": "Resultierender Strommix nach Anwendung der regionalen \u00d6kostromerzeugung im Gebiet einer Postleitzahl.",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "",
                        "default": "69168"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm a journalist working on an article about sustainable energy consumption. Can you fetch the fuel prices for Germany and the Strommix information for Berlin? Additionally, provide me with the list of postcodes where renewable energy can be generated in Berlin.",
        "relevant APIs": [
            [
                "Europe Fuel Prices",
                "Get specific country"
            ],
            [
                "Regionalkonzept Strom Herkunft",
                "Strommix"
            ],
            [
                "Regionalkonzept Strom Herkunft",
                "entnahme"
            ]
        ],
        "query_id": 84084
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Exercises by API-Ninjas",
                "api_name": "/v1/exercises",
                "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "muscle",
                        "type": "STRING",
                        "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
                        "default": "biceps"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
                        "default": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "STRING",
                        "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "type": "str",
                    "muscle": "str",
                    "equipment": "str",
                    "difficulty": "str",
                    "instructions": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Suggestic",
                "api_name": "Create User",
                "api_description": "Each Suggestic partner/client has the ability to create their own set of users.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Suggestic",
                "api_name": "Remove a Meal Plan",
                "api_description": "Use the **removeMealPlan** mutation to remove the current and following days in the profile's meal plan. Therefore, it is not possible to delete meal plans which dates have already passed.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "auth",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "errors": [
                        {
                            "message": "str",
                            "extensions": {
                                "code": "str"
                            },
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Calories Burned by API-Ninjas",
                "api_name": "/v1/caloriesburned",
                "api_description": "API Ninjas Calories Burned API endpoint.",
                "required_parameters": [
                    {
                        "name": "activity",
                        "type": "STRING",
                        "description": "name of the given activity. This value can be partial (e.g. ski will match water skiing and downhill skiing)",
                        "default": "skiing"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "weight of the user performing the activity in pounds. Must be between 50 and 500. Default value is 160.",
                        "default": ""
                    },
                    {
                        "name": "duration",
                        "type": "STRING",
                        "description": "how long the activity was performed in minutes. Must be 1 or greater. Default value is 60 (1 hour).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "calories_per_hour": "int",
                    "duration_minutes": "int",
                    "total_calories": "int"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get all fastingCenters",
                "api_description": "Get all",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "Name": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get ID",
                "api_description": "Get ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "My company is organizing a wellness program and we want to create individual user profiles. Please assist us in setting up user accounts using the Suggestic API. Also, we would like to explore exercises that target the biceps and provide instructions on how to perform them.",
        "relevant APIs": [
            [
                "Suggestic",
                "Create User"
            ],
            [
                "Exercises by API-Ninjas",
                "/v1/exercises"
            ]
        ],
        "query_id": 67969
    },
    {
        "api_list": [
            {
                "category_name": "Monitoring",
                "tool_name": "Certficate",
                "api_name": "getCertDetails",
                "api_description": "Get the certificate details of a domain.",
                "required_parameters": [
                    {
                        "name": "domainname",
                        "type": "string",
                        "description": "",
                        "default": "google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Screenshot Maker",
                "api_name": "Take screenshot",
                "api_description": "collect all parameteres, load the webpage and take screenshot at the end.\nThis API save on a S3 bucket and return the url.",
                "required_parameters": [
                    {
                        "name": "targetUrl",
                        "type": "STRING",
                        "description": "Website url",
                        "default": "https://www.google.it"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "proxyState",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "proxyCountry",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "clickDelay",
                        "type": "NUMBER",
                        "description": "",
                        "default": "500"
                    },
                    {
                        "name": "fullpage",
                        "type": "ENUM",
                        "description": "take screenshot of the entire website page, from header to footer",
                        "default": ""
                    },
                    {
                        "name": "removables",
                        "type": "STRING",
                        "description": "remove divs/html by selector",
                        "default": ""
                    },
                    {
                        "name": "clickCount",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "hasTouch",
                        "type": "ENUM",
                        "description": "Specify if the viewport supports touch events.",
                        "default": ""
                    },
                    {
                        "name": "clickSelector",
                        "type": "STRING",
                        "description": "This method fetches an element with selector, scrolls it into view if needed, and then uses Page.mouse to click in the center of the element. If there's no element matching selector, the method throws an error.",
                        "default": ""
                    },
                    {
                        "name": "isFullyLoaded",
                        "type": "ENUM",
                        "description": "consider navigation to be finished when there are no more than 0 network connections for at least 500 ms. \nThan take screenshot",
                        "default": ""
                    },
                    {
                        "name": "clickButton",
                        "type": "ENUM",
                        "description": "Mouse button to be used, left click or right click etc",
                        "default": ""
                    },
                    {
                        "name": "pageHeight",
                        "type": "NUMBER",
                        "description": "Set browser page height",
                        "default": "1024"
                    },
                    {
                        "name": "isMobile",
                        "type": "ENUM",
                        "description": "Whether the meta viewport tag is taken into account.",
                        "default": ""
                    },
                    {
                        "name": "pageWidth",
                        "type": "NUMBER",
                        "description": "Set browser page width",
                        "default": "1024"
                    },
                    {
                        "name": "isLandScape",
                        "type": "ENUM",
                        "description": "Specifies if the viewport is in landscape mode.",
                        "default": ""
                    },
                    {
                        "name": "deviceScaleFactor",
                        "type": "NUMBER",
                        "description": "Specify device scale factor.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "imageUrl": "str",
                    "imageName": "str",
                    "performance": {
                        "browser": "float",
                        "upload": "float"
                    },
                    "payload": {
                        "proxy": {
                            "country": "str",
                            "state": "str"
                        },
                        "fullpage": "bool",
                        "isFullyLoaded": "bool",
                        "removables": "NoneType",
                        "click": {
                            "selector": "str",
                            "options": {
                                "delay": "int",
                                "button": "str",
                                "clickCount": "int"
                            }
                        },
                        "viewport": {
                            "width": "int",
                            "height": "int",
                            "deviceScaleFactor": "int",
                            "isMobile": "bool",
                            "hasTouch": "bool",
                            "isLandScape": "bool"
                        }
                    },
                    "times": {
                        "openPage": "float",
                        "goto": "float",
                        "screenshot": "float"
                    }
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "openSquat",
                "api_name": "Get Daily Domains",
                "api_description": "Get the daily list of domains that have been registered in the past day that have a similar word to {keyword} - the keyword should not contain any domain, e.g: Google",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "Google"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "response": "str",
                    "keyword": "str",
                    "count": "int",
                    "domains": [
                        "list of str with length 28"
                    ]
                }
            }
        ],
        "query": "I'm planning a surprise birthday party for my friend and I want to create a website for the event. Can you help me take a screenshot of the website using the Screenshot Maker API? Save the screenshot on a S3 bucket and provide me with the URL. Also, I would like to gather information about the certificate details of the website using the Certficate API.",
        "relevant APIs": [
            [
                "Screenshot Maker",
                "Take screenshot"
            ],
            [
                "Certficate",
                "getCertDetails"
            ]
        ],
        "query_id": 12634
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Instant Cameroon News",
                "api_name": "Home page",
                "api_description": "Home and Welcome page that introduces the API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Instant Cameroon News",
                "api_name": "Retrieve data",
                "api_description": "Endpoint, which you use to retrieve the data you need. This endpoint can accept some parameters like page, search key and data range",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rank",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Spaceflight News",
                "api_name": "Blogs",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "url": "str",
                    "imageUrl": "str",
                    "newsSite": "str",
                    "summary": "str",
                    "publishedAt": "str",
                    "updatedAt": "str",
                    "launches": "empty list",
                    "events": "empty list"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Spaceflight News",
                "api_name": "Count",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Spaceflight News",
                "api_name": "Detail2",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "error": "str",
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a company event and I want to showcase the latest space news. Can you provide me with the top news articles and blog posts from spaceflight news? Also, I need to gather information about the current events in Cameroon. Thanks!",
        "relevant APIs": [
            [
                "Spaceflight News",
                "Blogs"
            ],
            [
                "Instant Cameroon News",
                "Retrieve data"
            ]
        ],
        "query_id": 46175
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "Beeg",
                "api_name": "ss",
                "api_description": "ss",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "LimouCloud",
                "api_name": "Get Reservations",
                "api_description": "get all driver related reservations",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2021-11-20"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2021-11-14"
                    },
                    {
                        "name": "page_size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Please provide Values from the below list as per your need. \n 'QUOTED '=> Quoted by the client but not confirmed\n'CONFIRMED' => Confirmed by Driver (assigned to the driver)\n 'SCHEDULED' => Scheduled for later\n'COMPLETED'  => Completed trip\n'CANCELLED' => Canceled by either party\n 'REQUESTED' => Requested to driver (new rides)",
                        "default": "CONFIRMED"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "LimouCloud",
                "api_name": "Get Reservation by ID",
                "api_description": "Get Reservation by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "LimouCloud",
                "api_name": "Logout",
                "api_description": "Logout from account",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "fomoAPI",
                "api_name": "Get Campaign From URL",
                "api_description": "Get lead from Specific website  Campaign",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "Lead"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "gogofodo.com"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "list_complete": "bool",
                    "keys": "empty list"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "fomoAPI",
                "api_name": "Get Campaign  Lead From ID",
                "api_description": "Get ALL Lead From Your Campaign Social Proof",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "Lead"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "list_complete": "bool",
                    "keys": "empty list"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "testapi_v2",
                "api_name": "bananas",
                "api_description": "hey",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "testapi_v2",
                "api_name": "mobilitu/public",
                "api_description": "mobilitu",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "BoldSign",
                "api_name": "BrandList",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "BoldSign",
                "api_name": "GetTeam",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "teamId",
                        "type": "STRING",
                        "description": "Team Id.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "BoldSign",
                "api_name": "GetProperties",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "templateId",
                        "type": "STRING",
                        "description": "Template Id.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to organize a surprise birthday party for my best friend next week. Can you help me find a list of available party venues in her city? Additionally, I need to create personalized invitations for the guests. Can you suggest a tool that can assist me in designing and sending digital invitations?",
        "relevant APIs": [
            [
                "LimouCloud",
                "Get Reservations"
            ],
            [
                "BoldSign",
                "GetProperties"
            ]
        ],
        "query_id": 47532
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "Google Keyword Scraper",
                "api_name": "KeywordSearch",
                "api_description": "you can get all popular keywords  in any country and with any language",
                "required_parameters": [
                    {
                        "name": "glanguage",
                        "type": "STRING",
                        "description": "you will use alpha code for any language you need: \n\nAfrikaans => \\\"af\\\"\nAlbanian => \\\"sq\\\"\nAmharic => \\\"sm\\\"\nArabic => \\\"ar\\\"\nAzerbaijani => \\\"az\\\"\nBasque => \\\"eu\\\"\nBelarusian => \\\"be\\\"\nBengali => \\\"bn\\\"\nBihari => \\\"bh\\\"\nBosnian => \\\"bs\\\"\nBulgarian => \\\"bg\\\"\nCatalan => \\\"ca\\\"\nChinese (Simplified) => \\\"zh-CN\\\"\nChinese (Traditional) => \\\"zh-TW\\\"\nCroatian => \\\"hr\\\"\nCzech => \\\"cs\\\"\nDanish => \\\"da\\\"\nDutch => \\\"nl\\\"\nEnglish => \\\"en\\\"\nEsperanto => \\\"eo\\\"\nEstonian => \\\"et\\\"\nFaroese => \\\"fo\\\"\nFinnish => \\\"fi\\\"\nFrench => \\\"fr\\\"\nFrisian => \\\"fy\\\"\nGalician => \\\"gl\\\"\nGeorgian => \\\"ka\\\"\nGerman => \\\"de\\\"\nGreek => \\\"el\\\"\nGujarati => \\\"gu\\\"\nHebrew => \\\"iw\\\"\nHindi => \\\"hi\\\"\nHungarian => \\\"hu\\\"\nIcelandic => \\\"is\\\"\nIndonesian => \\\"id\\\"\nInterlingua => \\\"ia\\\"\nIrish => \\\"ga\\\"\nItalian => \\\"it\\\"\nJapanese => \\\"ja\\\"\nJavanese => \\\"jw\\\"\nKannada => \\\"kn\\\"\nKorean => \\\"ko\\\"\nLatin => \\\"la\\\"\nLatvian => \\\"lv\\\"\nLithuanian => \\\"lt\\\"\nMacedonian => \\\"mk\\\"\nMalay => \\\"ms\\\"\nMalayam => \\\"ml\\\"\nMaltese => \\\"mt\\\"\nMarathi => \\\"mr\\\"\nNepali => \\\"ne\\\"\nNorwegian => \\\"no\\\"\nNorwegian (Nynorsk) => \\\"nn\\\"\nOccitan => \\\"oc\\\"\nPersian => \\\"fa\\\"\nPolish => \\\"pl\\\"\nPortuguese (Brazil) => \\\"pt-BR\\\"\nPortuguese (Portugal) => \\\"pt-PT\\\"\nPunjabi => \\\"pa\\\"\nRomanian => \\\"ro\\\"\nRussian => \\\"ru\\\"\nScots Gaelic => \\\"gd\\\"\nSerbian => \\\"sr\\\"\nSinhalese => \\\"si\\\"\nSlovak => \\\"sk\\\"\nSlovenian => \\\"sl\\\"\nSpanish => \\\"es\\\"\nSudanese => \\\"su\\\"\nSwahili => \\\"sw\\\"\nSwedish => \\\"sv\\\"\nTagalog => \\\"tl\\\"\nTamil => \\\"ta\\\"\nTelugu => \\\"te\\\"\nThai => \\\"th\\\"\nTigrinya => \\\"ti\\\"\nTurkish => \\\"tr\\\"\nUkrainian => \\\"uk\\\"\nUrdu => \\\"ur\\\"\nUzbek => \\\"uz\\\"\nVietnamese => \\\"vi\\\"\nWelsh => \\\"cy\\\"\nXhosa => \\\"xh\\\"\nZulu => \\\"zu\\\"",
                        "default": "en"
                    },
                    {
                        "name": "gcountry",
                        "type": "STRING",
                        "description": "you will use only the alpha code of any country \n\nAfghanistan =>  \\\"af\\\"\nAlbania =>  \\\"al\\\"\nAlgeria =>  \\\"dz\\\"\nAmerican Samoa =>  \\\"as\\\"\nAndorra =>  \\\"ad\\\"\nAngola =>  \\\"ao\\\"\nAnguilla =>  \\\"ai\\\"\nAntarctica =>  \\\"aq\\\"\nAntigua and Barbuda =>  \\\"ag\\\"\nArgentina =>  \\\"ar\\\"\nArmenia =>  \\\"am\\\"\nAruba =>  \\\"aw\\\"\nAustralia =>  \\\"au\\\"\nAustria =>  \\\"at\\\"\nAzerbaijan =>  \\\"az\\\"\nBahamas =>  \\\"bs\\\"\nBahrain =>  \\\"bh\\\"\nBangladesh =>  \\\"bd\\\"\nBarbados =>  \\\"bb\\\"\nBelarus =>  \\\"by\\\"\nBelgium =>  \\\"be\\\"\nBelize =>  \\\"bz\\\"\nBenin =>  \\\"bj\\\"\nBermuda =>  \\\"bm\\\"\nBhutan =>  \\\"bt\\\"\nBolivia, Plurinational State of =>  \\\"bo\\\"\nBolivia =>  \\\"bo\\\"\nBosnia and Herzegovina =>  \\\"ba\\\"\nBotswana =>  \\\"bw\\\"\nBouvet Island =>  \\\"bv\\\"\nBrazil =>  \\\"br\\\"\nBritish Indian Ocean Territory =>  \\\"io\\\"\nBrunei Darussalam =>  \\\"bn\\\"\nBrunei =>  \\\"bn\\\"\nBulgaria =>  \\\"bg\\\"\nBurkina Faso =>  \\\"bf\\\"\nBurundi =>  \\\"bi\\\"\nCambodia =>  \\\"kh\\\"\nCameroon =>  \\\"cm\\\"\nCanada =>  \\\"ca\\\"\nCape Verde =>  \\\"cv\\\"\nCayman Islands =>  \\\"ky\\\"\nCentral African Republic =>  \\\"cf\\\"\nChad =>  \\\"td\\\"\nChile =>  \\\"cl\\\"\nChina =>  \\\"cn\\\"\nChristmas Island =>  \\\"cx\\\"\nCocos (Keeling) Islands =>  \\\"cc\\\"\nColombia =>  \\\"co\\\"\nComoros =>  \\\"km\\\"\nCongo =>  \\\"cg\\\"\nCongo, the Democratic Republic of the =>  \\\"cd\\\"\nCook Islands =>  \\\"ck\\\"\nCosta Rica =>  \\\"cr\\\"\nC\u00f4te d'Ivoire =>  \\\"ci\\\"\nIvory Coast =>  \\\"ci\\\"\nCroatia =>  \\\"hr\\\"\nCuba =>  \\\"cu\\\"\nCyprus =>  \\\"cy\\\"\nCzech Republic =>  \\\"cz\\\"\nDenmark =>  \\\"dk\\\"\nDjibouti =>  \\\"dj\\\"\nDominica =>  \\\"dm\\\"\nDominican Republic =>  \\\"do\\\"\nEcuador =>  \\\"ec\\\"\nEgypt =>  \\\"eg\\\"\nEl Salvador =>  \\\"sv\\\"\nEquatorial Guinea =>  \\\"gq\\\"\nEritrea =>  \\\"er\\\"\nEstonia =>  \\\"ee\\\"\nEthiopia =>  \\\"et\\\"\nFalkland Islands (Malvinas) =>  \\\"fk\\\"\nFaroe Islands =>  \\\"fo\\\"\nFiji =>  \\\"fj\\\"\nFinland =>  \\\"fi\\\"\nFrance =>  \\\"fr\\\"\nFrench Guiana =>  \\\"gf\\\"\nFrench Polynesia =>  \\\"pf\\\"\nFrench Southern Territories =>  \\\"tf\\\"\nGabon =>  \\\"ga\\\"\nGambia =>  \\\"gm\\\"\nGeorgia =>  \\\"ge\\\"\nGermany =>  \\\"de\\\"\nGhana =>  \\\"gh\\\"\nGibraltar =>  \\\"gi\\\"\nGreece =>  \\\"gr\\\"\nGreenland =>  \\\"gl\\\"\nGrenada =>  \\\"gd\\\"\nGuadeloupe =>  \\\"gp\\\"\nGuam =>  \\\"gu\\\"\nGuatemala =>  \\\"gt\\\"\nGuernsey =>  \\\"gg\\\"\nGuinea =>  \\\"gn\\\"\nGuinea-Bissau =>  \\\"gw\\\"\nGuyana =>  \\\"gy\\\"\nHaiti =>  \\\"ht\\\"\nHeard Island and McDonald Islands =>  \\\"hm\\\"\nHoly See (Vatican City State) =>  \\\"va\\\"\nHonduras =>  \\\"hn\\\"\nHong Kong =>  \\\"hk\\\"\nHungary =>  \\\"hu\\\"\nIceland =>  \\\"is\\\"\nIndia =>  \\\"in\\\"\nIndonesia =>  \\\"id\\\"\nIran, Islamic Republic of =>  \\\"ir\\\"\nIraq =>  \\\"iq\\\"\nIreland =>  \\\"ie\\\"\nIsle of Man =>  \\\"im\\\"\nIsrael =>  \\\"il\\\"\nItaly =>  \\\"it\\\"\nJamaica =>  \\\"jm\\\"\nJapan =>  \\\"jp\\\"\nJersey =>  \\\"je\\\"\nJordan =>  \\\"jo\\\"\nKazakhstan =>  \\\"kz\\\"\nKenya =>  \\\"ke\\\"\nKiribati =>  \\\"ki\\\"\nKorea, Democratic People's Republic of =>  \\\"kp\\\"\nKorea, Republic of =>  \\\"kr\\\"\nSouth Korea =>  \\\"kr\\\"\nKuwait =>  \\\"kw\\\"\nKyrgyzstan =>  \\\"kg\\\"\nLao People's Democratic Republic =>  \\\"la\\\"\nLatvia =>  \\\"lv\\\"\nLebanon =>  \\\"lb\\\"\nLesotho =>  \\\"ls\\\"\nLiberia =>  \\\"lr\\\"\nLibyan Arab Jamahiriya =>  \\\"ly\\\"\nLibya =>  \\\"ly\\\"\nLiechtenstein =>  \\\"li\\\"\nLithuania =>  \\\"lt\\\"\nLuxembourg =>  \\\"lu\\\"\nMacao =>  \\\"mo\\\"\nMacedonia, the former Yugoslav Republic of =>  \\\"mk\\\"\nMadagascar =>  \\\"mg\\\"\nMalawi =>  \\\"mw\\\"\nMalaysia =>  \\\"my\\\"\nMaldives =>  \\\"mv\\\"\nMali =>  \\\"ml\\\"\nMalta =>  \\\"mt\\\"\nMarshall Islands =>  \\\"mh\\\"\nMartinique =>  \\\"mq\\\"\nMauritania =>  \\\"mr\\\"\nMauritius =>  \\\"mu\\\"\nMayotte =>  \\\"yt\\\"\nMexico =>  \\\"mx\\\"\nMicronesia, Federated States of =>  \\\"fm\\\"\nMoldova, Republic of =>  \\\"md\\\"\nMonaco =>  \\\"mc\\\"\nMongolia =>  \\\"mn\\\"\nMontenegro =>  \\\"me\\\"\nMontserrat =>  \\\"ms\\\"\nMorocco =>  \\\"ma\\\"\nMozambique =>  \\\"mz\\\"\nMyanmar =>  \\\"mm\\\"\nBurma =>  \\\"mm\\\"\nNamibia =>  \\\"na\\\"\nNauru =>  \\\"nr\\\"\nNepal =>  \\\"np\\\"\nNetherlands =>  \\\"nl\\\"\nNetherlands Antilles =>  \\\"an\\\"\nNew Caledonia =>  \\\"nc\\\"\nNew Zealand =>  \\\"nz\\\"\nNicaragua =>  \\\"ni\\\"\nNiger =>  \\\"ne\\\"\nNigeria =>  \\\"ng\\\"\nNiue =>  \\\"nu\\\"\nNorfolk Island =>  \\\"nf\\\"\nNorthern Mariana Islands =>  \\\"mp\\\"\nNorway =>  \\\"no\\\"\nOman =>  \\\"om\\\"\nPakistan =>  \\\"pk\\\"\nPalau =>  \\\"pw\\\"\nPalestinian Territory, Occupied =>  \\\"ps\\\"\nPanama =>  \\\"pa\\\"\nPapua New Guinea =>  \\\"pg\\\"\nParaguay =>  \\\"py\\\"\nPeru =>  \\\"pe\\\"\nPhilippines =>  \\\"ph\\\"\nPitcairn =>  \\\"pn\\\"\nPoland =>  \\\"pl\\\"\nPortugal =>  \\\"pt\\\"\nPuerto Rico =>  \\\"pr\\\"\nQatar =>  \\\"qa\\\"\nR\u00e9union =>  \\\"re\\\"\nRomania =>  \\\"ro\\\"\nRussian Federation =>  \\\"ru\\\"\nRussia =>  \\\"ru\\\"\nRwanda =>  \\\"rw\\\"\nSaint Helena, Ascension and Tristan da Cunha =>  \\\"sh\\\"\nSaint Kitts and Nevis =>  \\\"kn\\\"\nSaint Lucia =>  \\\"lc\\\"\nSaint Pierre and Miquelon =>  \\\"pm\\\"\nSaint Vincent and the Grenadines =>  \\\"vc\\\"\nSaint Vincent & the Grenadines =>  \\\"vc\\\"\nSt. Vincent and the Grenadines =>  \\\"vc\\\"\nSamoa =>  \\\"ws\\\"\nSan Marino =>  \\\"sm\\\"\nSao Tome and Principe =>  \\\"st\\\"\nSaudi Arabia =>  \\\"sa\\\"\nSenegal =>  \\\"sn\\\"\nSerbia =>  \\\"rs\\\"\nSeychelles =>  \\\"sc\\\"\nSierra Leone =>  \\\"sl\\\"\nSingapore =>  \\\"sg\\\"\nSlovakia =>  \\\"sk\\\"\nSlovenia =>  \\\"si\\\"\nSolomon Islands =>  \\\"sb\\\"\nSomalia =>  \\\"so\\\"\nSouth Africa =>  \\\"za\\\"\nSouth Georgia and the South Sandwich Islands =>  \\\"gs\\\"\nSouth Sudan =>  \\\"ss\\\"\nSpain =>  \\\"es\\\"\nSri Lanka =>  \\\"lk\\\"\nSudan =>  \\\"sd\\\"\nSuriname =>  \\\"sr\\\"\nSvalbard and Jan Mayen =>  \\\"sj\\\"\nSwaziland =>  \\\"sz\\\"\nSweden =>  \\\"se\\\"\nSwitzerland =>  \\\"ch\\\"\nSyrian Arab Republic =>  \\\"sy\\\"\nTaiwan, Province of China =>  \\\"tw\\\"\nTaiwan =>  \\\"tw\\\"\nTajikistan =>  \\\"tj\\\"\nTanzania, United Republic of =>  \\\"tz\\\"\nThailand =>  \\\"th\\\"\nTimor-Leste =>  \\\"tl\\\"\nTogo =>  \\\"tg\\\"\nTokelau =>  \\\"tk\\\"\nTonga =>  \\\"to\\\"\nTrinidad and Tobago =>  \\\"tt\\\"\nTunisia =>  \\\"tn\\\"\nTurkey =>  \\\"tr\\\"\nTurkmenistan =>  \\\"tm\\\"\nTurks and Caicos Islands =>  \\\"tc\\\"\nTuvalu =>  \\\"tv\\\"\nUganda =>  \\\"ug\\\"\nUkraine =>  \\\"ua\\\"\nUnited Arab Emirates =>  \\\"ae\\\"\nUnited Kingdom =>  \\\"gb\\\"\nUnited States =>  \\\"us\\\"\nUnited States Minor Outlying Islands =>  \\\"um\\\"\nUruguay =>  \\\"uy\\\"\nUzbekistan =>  \\\"uz\\\"\nVanuatu =>  \\\"vu\\\"\nVenezuela, Bolivarian Republic of =>  \\\"ve\\\"\nVenezuela =>  \\\"ve\\\"\nViet Nam =>  \\\"vn\\\"\nVietnam =>  \\\"vn\\\"\nVirgin Islands, British =>  \\\"vg\\\"\nVirgin Islands, U.S. =>  \\\"vi\\\"\nWallis and Futuna =>  \\\"wf\\\"\nWestern Sahara =>  \\\"eh\\\"\nYemen =>  \\\"ye\\\"\nZambia =>  \\\"zm\\\"\nZimbabwe =>  \\\"zw\\\"\n",
                        "default": "ua"
                    },
                    {
                        "name": "gkeyword",
                        "type": "STRING",
                        "description": "",
                        "default": "ukraine war"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "searchWord": "str",
                    "country": "str",
                    "language": "str",
                    "keywords": [
                        {
                            "keyword": "str",
                            "score": "float",
                            "isTop10": "bool",
                            "_list_length": 291
                        }
                    ]
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Bing Search APIs",
                "api_name": "Web Search API",
                "api_description": "Search data and suggested keywords from Bing search engine.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "",
                        "default": "30"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "how-to-use-excel-for-free"
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "request": {
                        "keyword": "str",
                        "page": "int",
                        "size": "int"
                    },
                    "data": {
                        "items": [
                            {
                                "title": "str",
                                "link": "str",
                                "description": "str",
                                "_list_length": 5
                            }
                        ],
                        "keyword_related": [
                            "list of str with length 8"
                        ],
                        "question": "empty list"
                    },
                    "in_seconds": "float"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Bing Search APIs",
                "api_name": "Images Search",
                "api_description": "Search images from the search engine for the most relevant keywords and images related to keywords and images.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "wallpapers"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "",
                        "default": "30"
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Bing Search APIs",
                "api_name": "Emails Search",
                "api_description": "Search emails from search engines for related keywords.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "sun"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "request": {
                        "keyword": "str"
                    },
                    "data": [
                        "list of str with length 9"
                    ],
                    "in_seconds": "float"
                }
            }
        ],
        "query": "I want to surprise my parents with a special anniversary gift. Can you suggest keywords related to unique anniversary gifts? Additionally, it would be helpful to search for images of personalized gift ideas. Finally, could you find some emails related to gift shops or online stores?",
        "relevant APIs": [
            [
                "Google Keyword Scraper",
                "KeywordSearch"
            ],
            [
                "Bing Search APIs",
                "Web Search API"
            ],
            [
                "Bing Search APIs",
                "Images Search"
            ],
            [
                "Bing Search APIs",
                "Emails Search"
            ]
        ],
        "query_id": 50656
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "route-precedence-test-1",
                "api_name": "/prices/today",
                "api_description": "/prices/today",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "route-precedence-test-1",
                "api_name": "/prices/{date}",
                "api_description": "/prices/{date}",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "string",
                        "description": "",
                        "default": "my_date"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "ThisshouldbeFREE",
                "api_name": "logoutUser",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "ThisshouldbeFREE",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "ThisshouldbeFREE",
                "api_name": "getInventory",
                "api_description": "Returns a map of status codes to quantities",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Sale": "int",
                    "totvs": "int",
                    "sold": "int",
                    "string": "int",
                    "pending": "int",
                    "cat": "int",
                    "dgdfgdf": "int",
                    "available": "int",
                    "not available": "int",
                    "Available": "int",
                    "peric": "int",
                    "disponible": "int"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "March4",
                "api_name": "albums",
                "api_description": "njnj",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "userId": "int",
                    "id": "int",
                    "title": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "SEO Automations",
                "api_name": "Extract Sitemap XML as JSON",
                "api_description": "Are you looking for an API that can quickly and easily download and parse sitemap.xml files into JSON format? Look no further! Our API allows you to make a simple GET request, passing in the URL of a sitemap.xml file as a parameter. The API will handle the rest, downloading the file, parsing it into a JSON object, and returning the result in the response. And if you need a little extra information to help organize and navigate the URLs in the sitemap, we've got you covered there too. By adding a query parameter to the GET request, you can also include category and breadcrumb information for each URL in the parsed sitemap. Give it a try and see how much easier working with sitemaps can be!",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.sitemaps.org/sitemap.xml"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "meta",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    },
                    {
                        "name": "breadcrumbs",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    },
                    {
                        "name": "categories",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "urls": [
                            {
                                "url": "str",
                                "scheme": "str",
                                "lastModified": "str",
                                "category-1": "str",
                                "categoriesCount": "int",
                                "breadcrumb-1": "str",
                                "breadCrumbsCount": "int",
                                "pagePath": "str",
                                "_list_length": 84
                            }
                        ],
                        "numOfMaxCategories": "int",
                        "numOfMaxBreadCrumbs": "int"
                    },
                    "success": "bool"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "SEO Automations",
                "api_name": "Extract top Keywords, Phrases by density + all headers",
                "api_description": "Analyze any webpage's keyword density for SEO or research. Get the specified number of keywords or phrases you wish, sorted by density and occurrences in a JSON format. The algorithm has been optimized for pages with large amounts of text, as well as advanced cloud infrastracure ensuring accurate and speedy results for your SEO needs. This API uses Puppeteer to scrape even the most advanced SPA ( Single Page Applications ).",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://en.wikipedia.org/wiki/Example.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "numPhrases",
                        "type": "NUMBER",
                        "description": "Number of phrases to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                        "default": "20"
                    },
                    {
                        "name": "phraseLength",
                        "type": "NUMBER",
                        "description": "Number of words in each phrase to return ( results are sorted by density ). \nBetween 1 and 10.\nDefault is 10.",
                        "default": "5"
                    },
                    {
                        "name": "n",
                        "type": "NUMBER",
                        "description": "Number of Keywords to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "keywords": [
                        {
                            "keyword": "str",
                            "frequency": "float",
                            "_list_length": 20
                        }
                    ],
                    "phrases": [
                        "list of list with length 20"
                    ]
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PrivatePublicAPI",
                "api_name": "getPetById",
                "api_description": "Returns a single pet",
                "required_parameters": [
                    {
                        "name": "petId",
                        "type": "NUMBER",
                        "description": "ID of pet to return",
                        "default": 0
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PrivatePublicAPI",
                "api_name": "getUserByName",
                "api_description": "Get user by user name",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "username": "str",
                    "firstName": "str",
                    "lastName": "str",
                    "email": "str",
                    "password": "str",
                    "phone": "str",
                    "userStatus": "int"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PrivatePublicAPI",
                "api_name": "logoutUser",
                "api_description": "Logs out current logged in user session",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            }
        ],
        "query": "I am organizing a charity event for my local community. Can you suggest some potential sponsors for the event? Also, provide me with the details of a specific order related to the event.",
        "relevant APIs": [
            [
                "route-precedence-test-1",
                "/prices/today"
            ],
            [
                "ThisshouldbeFREE",
                "getOrderById"
            ]
        ],
        "query_id": 73574
    },
    {
        "api_list": [
            {
                "category_name": "Energy",
                "tool_name": "CO2 Offset",
                "api_name": "List existing Compensations",
                "api_description": "Returns a list of all existing co2offset certificates linked to account.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "CO2 Offset",
                "api_name": "Retrieve Compensation",
                "api_description": "Response contains full compensation details (if exists, and owner is account).",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "0xF0F2e446EeD32236EA0c78a6E4a91Ed712654799"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "err": "str"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Electricity Carbon Footprint Germany",
                "api_name": "CO2 Emission",
                "api_description": "The CO2 Emission endpoint will provide carbon emissions in grams per Kilo-Watt-Hour.  To latest and historical footprint information for electricity in Germany.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Allows retrieving historical values (back to yr 2017) .\n\nAccepted formats:\n\n- YYYY-MM-DD\n- MM/DD/YYYY\n- Unix Timestamp (ms)",
                        "default": "2022-08-20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "co2perKwh": "int",
                    "trend": {
                        "avg30": "int",
                        "avg365": "int"
                    }
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Europe Fuel Prices",
                "api_name": "All Countries",
                "api_description": "Get all of Europe countries Fuel prices",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "diesel_price": "float",
                    "gasoline_price": "float"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Europe Fuel Prices",
                "api_name": "Get specific country",
                "api_description": "Get fuel prices for a specific country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "Germany"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "diesel_price": "float",
                    "gasoline_price": "float"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Marktdaten Deutschland",
                "api_name": "marketdata",
                "api_description": "Abruf einer regionalen Prognose des Strompreises.",
                "required_parameters": [
                    {
                        "name": "zip",
                        "type": "STRING",
                        "description": "Postleitzahl in Deutschland",
                        "default": "69256"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "object": "str",
                    "url": "str",
                    "license": "str",
                    "documentation": "str",
                    "support": "str",
                    "data": [
                        {
                            "start_timestamp": "int",
                            "end_timestamp": "int",
                            "marketprice": "float",
                            "unit": "str",
                            "localprice": "float",
                            "localcell": "str",
                            "_list_length": 24
                        }
                    ]
                }
            }
        ],
        "query": "I'm planning a sustainable road trip across Europe with my family. Can you provide me with a list of all existing CO2 offset certificates linked to my account? Additionally, fetch the fuel prices for Germany and the latest carbon emissions in grams per kilo-watt-hour for the electricity grid in Germany to help us make eco-friendly choices during our trip.",
        "relevant APIs": [
            [
                "CO2 Offset",
                "List existing Compensations"
            ],
            [
                "Europe Fuel Prices",
                "Get specific country"
            ],
            [
                "Electricity Carbon Footprint Germany",
                "CO2 Emission"
            ]
        ],
        "query_id": 26341
    },
    {
        "api_list": [
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Amenities",
                "api_description": "Retrieves amenities ids And descriptions. Returns 50 results",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "index to start from",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Listing Availability Full",
                "api_description": "Retrieve listing availability and stay length rules for the next 12 months\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "the listing id\n",
                        "default": "619966061834034729"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Airbnb listings",
                "api_name": "Listing status Full",
                "api_description": "Retrieve the calculated status (available/not available for stay) for the next 12 months of a listing based on previous and following days stay rules.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "the listing id",
                        "default": "619966061834034729"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Flight Fare Search",
                "api_name": "Flight Search V2",
                "api_description": "A faster, more agile Endpoint that's used to search flights.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "",
                        "default": "LHR"
                    },
                    {
                        "name": "adult",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "",
                        "default": "DXB"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "",
                        "default": "USD"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "economy"
                    },
                    {
                        "name": "child",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "infant",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Flight Fare Search",
                "api_name": "Airport Departues",
                "api_description": "An endpoint to get Departues in an airport",
                "required_parameters": [
                    {
                        "name": "airportCode",
                        "type": "STRING",
                        "description": "",
                        "default": "LHR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "carrierCode",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Flight Fare Search",
                "api_name": "Airport Arrivals",
                "api_description": "An Endpoint to fetch Arrivals on a given date",
                "required_parameters": [
                    {
                        "name": "airportCode",
                        "type": "STRING",
                        "description": "",
                        "default": "LHR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "carrierCode",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Travel",
                "tool_name": "Skyscanner_v2",
                "api_name": "Get Hotel Filters",
                "api_description": "This API is used to get all the available filters for the place to visit.",
                "required_parameters": [
                    {
                        "name": "adults",
                        "type": "NUMBER",
                        "description": "Number of adult guests (with age 18 and over)",
                        "default": "1"
                    },
                    {
                        "name": "checkout",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Checkout Date\nFormat: YYYY-MM-DD",
                        "default": ""
                    },
                    {
                        "name": "entityId",
                        "type": "STRING",
                        "description": "**entityId** can be retrieved from **Search Hotel** API in **Hotels** collection.",
                        "default": ""
                    },
                    {
                        "name": "checkin",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Checkin Date\nFormat: YYYY-MM-DD",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "childrenAges",
                        "type": "ARRAY",
                        "description": "Number of children (with age between 0 and 17)\nExample:\nIf 1st child's age is 11 months and 2nd child's age is 10 years, then the parameter should be passed as [0,10]",
                        "default": ""
                    },
                    {
                        "name": "waitTime",
                        "type": "NUMBER",
                        "description": "Wait time in milliseconds. Sometimes the API needs **wait times** or more than **one** API call to get **complete data**. ",
                        "default": "2000"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Skyscanner_v2",
                "api_name": "Search Flights Multi Stops",
                "api_description": "Get and poll all flights. Searching the flights between multiple locations with prices, filter, sorting etc.",
                "required_parameters": [
                    {
                        "name": "legs",
                        "type": "OBJECT",
                        "description": "The legs must contain the **origin**, **destination** and **date** in object format and must be passed in an array.\nEXAMPLE:\n[\n  {\n    'origin': 'LOND',\n    'destination': 'NYCA',\n    'date': '2023-02-07'\n  },\n  ...\n]\n**Note:** If there are multiple stops, there should be more leg objects on the board.",
                        "default": "[{\"origin\":\"LOND\",\"destination\":\"NYCA\",\"date\":\"2023-02-07\"},{\"origin\":\"NYCA\",\"destination\":\"LAXA\",\"date\":\"2023-02-13\"},{\"origin\":\"LAXA\",\"destination\":\"LOND\",\"date\":\"2023-02-18\"}]"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "infants",
                        "type": "NUMBER",
                        "description": "Number of Infants (with age < 2 years)",
                        "default": ""
                    },
                    {
                        "name": "waitTime",
                        "type": "NUMBER",
                        "description": "Wait time in milliseconds. Sometimes the API needs **wait times** or more than **one** API call to get **complete data**. ",
                        "default": "5000"
                    },
                    {
                        "name": "filter",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "market",
                        "type": "STRING",
                        "description": "The list of available **market** can be retrieved through the **Get Config** API in the **Config** collection.",
                        "default": "en-US"
                    },
                    {
                        "name": "children",
                        "type": "NUMBER",
                        "description": "Number of Childrens (with age between 2-12 years)",
                        "default": ""
                    },
                    {
                        "name": "cabinClass",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "The list of available **countryCode** can be retrieved through the **Get Config** API in the **Config** collection.",
                        "default": "US"
                    },
                    {
                        "name": "adults",
                        "type": "NUMBER",
                        "description": "Number of Adults (with age 18 and over)\nDefault Value: 1",
                        "default": "1"
                    },
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "The list of available **currencies** can be retrieved through the **Get Config** API in the **Config** collection.",
                        "default": "USD"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Skyscanner_v2",
                "api_name": "Get Things To Do",
                "api_description": "Use this API to get Thing  to do nearby the hotel selected.",
                "required_parameters": [
                    {
                        "name": "entityId",
                        "type": "STRING",
                        "description": "**entityId** can be retrieved from **Search Hotel** API in **Hotels** collection.",
                        "default": ""
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "**lat** can be retrieved from **Hotel Details** or **Search Hotel** API in **Hotels** collection as **latitude**.",
                        "default": ""
                    },
                    {
                        "name": "lng",
                        "type": "STRING",
                        "description": "**lng** can be retrieved from **Hotel Details** or **Search Hotel** API in **Hotels** collection as **longitude**.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "market",
                        "type": "STRING",
                        "description": "The list of available **market** can be retrieved through the **Get Config** API in the **Config** collection.",
                        "default": "en-US"
                    },
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "The list of available **currencies** can be retrieved through the **Get Config** API in the **Config** collection.",
                        "default": "USD"
                    },
                    {
                        "name": "countryCode",
                        "type": "STRING",
                        "description": "The list of available **countryCode** can be retrieved through the **Get Config** API in the **Config** collection.",
                        "default": "US"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Flight Data_v2",
                "api_name": "The popular directions from a city",
                "api_description": "Brings the most popular directions from a specified city back.",
                "required_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "the airline tickets currency",
                        "default": "RUB"
                    },
                    {
                        "name": "origin",
                        "type": "STRING",
                        "description": "the point of departure. The IATA city code or the country code. The length - from 2 to 3 symbols.",
                        "default": "MOW"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Flight Data_v2",
                "api_name": "Popular airline routes",
                "api_description": "Returns routes for which an airline operates flights, sorted by popularity.",
                "required_parameters": [
                    {
                        "name": "airline_code",
                        "type": "STRING",
                        "description": "IATA code of airline",
                        "default": "SU"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "records limit per page. Default value is 100. Not less than 1000",
                        "default": "100"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Flight Data_v2",
                "api_name": "Data of countries in json format",
                "api_description": "API returns a file with a list of countrys from the database",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to surprise my friends with a weekend trip to Barcelona. Can you find me some affordable flights from London to Barcelona? Also, recommend some popular things to do in Barcelona near the hotel we'll be staying at.",
        "relevant APIs": [
            [
                "Flight Fare Search",
                "Flight Search V2"
            ],
            [
                "Skyscanner_v2",
                "Get Things To Do"
            ]
        ],
        "query_id": 68441
    },
    {
        "api_list": [
            {
                "category_name": "Text_Analysis",
                "tool_name": "National ID Vietnam OCR",
                "api_name": "GET Call",
                "api_description": "Used to fetch api result using the request id received in responses.",
                "required_parameters": [
                    {
                        "name": "request_id",
                        "type": "STRING",
                        "description": "",
                        "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Text_Analysis",
                "tool_name": "VPS Tester",
                "api_name": "Test",
                "api_description": "Test",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Text_Analysis",
                "tool_name": "Offensive User Comment Detection",
                "api_name": "Detect Offensive Message",
                "api_description": "This endpoint will detect hate speech, offensive language in a message",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "son of a ***"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "query": "str",
                    "hate_score": "str"
                }
            },
            {
                "category_name": "Text_Analysis",
                "tool_name": "Walnut Word Completion",
                "api_name": "wrt_transformer",
                "api_description": "Returns the hidden word in the sentence.",
                "required_parameters": [
                    {
                        "name": "payload",
                        "type": "STRING",
                        "description": "",
                        "default": "All [MASK] like to chase rats."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": "str"
                }
            }
        ],
        "query": "I'm curious if my recent comment 'son of a ***' contains any offensive language. Could you please use the Offensive User Comment Detection tool to check that? Also, I'm interested in finding the hidden word in the sentence 'All [MASK] like to chase rats' using the Walnut Word Completion tool.",
        "relevant APIs": [
            [
                "Offensive User Comment Detection",
                "Detect Offensive Message"
            ],
            [
                "Walnut Word Completion",
                "wrt_transformer"
            ]
        ],
        "query_id": 44321
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "Roman Gods By Pizza API",
                "api_name": "Search Roman God By Name",
                "api_description": "Search for a Roman God By name to get a description about them",
                "required_parameters": [
                    {
                        "name": "god",
                        "type": "STRING",
                        "description": "",
                        "default": "jupiter"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Description": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "Roman Gods By Pizza API",
                "api_name": "Random Roman God",
                "api_description": "Returns information about a random Roman God",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Description": "str",
                    "God": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "BusinessMate",
                "api_name": "Get list of languages",
                "api_description": "Get list of languages",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "message": "str",
                    "results": [
                        {
                            "text": "str",
                            "value": "str",
                            "_list_length": 81
                        }
                    ]
                }
            },
            {
                "category_name": "Database",
                "tool_name": "Chattydata",
                "api_name": "endpoint1",
                "api_description": "indpoint",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "Single Airplane",
                "api_description": "Get details of a single airplane by its ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "76"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "All Airplanes",
                "api_description": "Get complete data of all airplanes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "Airplanes ordered by ascending",
                "api_description": "Get all airplanes ordered by name in ascending order.",
                "required_parameters": [
                    {
                        "name": "ordering",
                        "type": "STRING",
                        "description": "",
                        "default": "plane"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            }
        ],
        "query": "I'm organizing a language learning event and I need a list of languages to include in the program. Can you provide me with a comprehensive list of languages? Additionally, I would like to know the details of a specific airplane for a presentation on aviation history.",
        "relevant APIs": [
            [
                "BusinessMate",
                "Get list of languages"
            ],
            [
                "AirplanesDB",
                "Single Airplane"
            ]
        ],
        "query_id": 10941
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "SERP API",
                "api_name": "/search",
                "api_description": "Perform Google search and get results",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "liverpool"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "cr",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "tbs",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "num",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    },
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "Locale of Google search results. E.g. en-US",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "link": "str",
                            "snippet": "str",
                            "metaHtml": "str",
                            "_list_length": 18
                        }
                    ],
                    "stats": {
                        "page": "NoneType",
                        "approximateResults": "str",
                        "seconds": "NoneType"
                    }
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Google Web Search",
                "api_name": "Search",
                "api_description": "Search",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query. You can use Google Search parameters.\n\ne.g. adele site:youtube.com\ne.g. harry potter filetype:pdf\ne.g. inurl:store\ne.g. ronaldo -cristiano",
                        "default": "World Cup"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "related_keywords",
                        "type": "STRING",
                        "description": "Shows related keywords. Default: false\n\nEntering true, increases API latency",
                        "default": "true"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Max results number. Max recommended value is 300.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "search_term": "str",
                    "knowledge_panel": {
                        "name": "str",
                        "label": "str",
                        "description": {
                            "text": "str",
                            "url": "str",
                            "site": "str"
                        },
                        "image": {
                            "url": "str",
                            "width": "int",
                            "height": "int",
                            "page_url": "str"
                        },
                        "info": [
                            {
                                "title": "str",
                                "labels": [
                                    "list of str with length 1"
                                ],
                                "_list_length": 4
                            }
                        ]
                    },
                    "results": [
                        {
                            "position": "int",
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "_list_length": 20
                        }
                    ],
                    "related_keywords": {
                        "spelling_suggestion_html": "NoneType",
                        "spelling_suggestion": "NoneType",
                        "keywords": [
                            {
                                "position": "int",
                                "knowledge": {
                                    "title": "str",
                                    "label": "str",
                                    "image": "NoneType"
                                },
                                "keyword_html": "str",
                                "keyword": "str",
                                "_list_length": 10
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Bing Autosuggest",
                "api_name": "Suggestions",
                "api_description": "This operation provides suggestions for a given query or partial query.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The user's search term.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "safeSearch",
                        "type": "STRING",
                        "description": "Filter suggestions for adult content. The following are the possible filter values. Off: Return suggestions with adult text, images, or videos. Moderate: Return suggestion with adult text but not adult images or videos. Strict: Do not return news articles with adult text, images, or videos. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive\u2014do not specify both.",
                        "default": ""
                    },
                    {
                        "name": "ResponseFormat",
                        "type": "ARRAY",
                        "description": "The media type to use for the response. The following are the possible case-insensitive values: JSON, JSONLD. The default is JSON. If you specify JSONLD, the response body includes JSON-LD objects that contain the search results.",
                        "default": ""
                    },
                    {
                        "name": "setLang",
                        "type": "STRING",
                        "description": "The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language.",
                        "default": ""
                    },
                    {
                        "name": "mkt",
                        "type": "STRING",
                        "description": "The market where the results come from. You are strongly encouraged to always specify the market, if known. Specifying the market helps Bing route the request and return an appropriate and optimal response. This parameter and the cc query parameter are mutually exclusive\u2014do not specify both.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "_type": "str",
                    "errors": [
                        {
                            "code": "str",
                            "subCode": "str",
                            "message": "str",
                            "moreDetails": "str",
                            "parameter": "str",
                            "value": "str",
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Neo Google Search",
                "api_name": "Web Search",
                "api_description": "This endpoint is used for web searches",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Search query",
                        "default": "New York "
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lr",
                        "type": "STRING",
                        "description": "Restricts the search to documents written in a particular language",
                        "default": "lang_en"
                    },
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value",
                        "default": "US"
                    },
                    {
                        "name": "num",
                        "type": "NUMBER",
                        "description": "Number of search results to return.\nValid values are integers between 1 and 20, inclusive",
                        "default": "10"
                    },
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "The index of the first result to return.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "items": [
                        {
                            "title": "str",
                            "htmlTitle": "str",
                            "link": "str",
                            "displayLink": "str",
                            "snippet": "str",
                            "htmlSnippet": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Neo Google Search",
                "api_name": "Image Search",
                "api_description": "This endpoint is used for image searches",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Search query",
                        "default": "New York "
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value",
                        "default": "US"
                    },
                    {
                        "name": "lr",
                        "type": "STRING",
                        "description": "Restricts the search to documents written in a particular language",
                        "default": "lang_en"
                    },
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "The index of the first result to return.",
                        "default": "0"
                    },
                    {
                        "name": "num",
                        "type": "NUMBER",
                        "description": "Number of search results to return.\nValid values are integers between 1 and 20, inclusive",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "items": [
                        {
                            "title": "str",
                            "thumbnailImageUrl": "str",
                            "originalImageUrl": "str",
                            "height": "int",
                            "width": "int",
                            "size": "str",
                            "contextLink": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Search",
                "tool_name": "YouTube Search Results",
                "api_name": "YouTubeSearchResults",
                "api_description": "Get all the YouTube Search Results Items and their Information! No limits and no Google API Key needed!",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The URL Encoded search Query",
                        "default": "justin+bieber"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "next",
                        "type": "STRING",
                        "description": "Leave empty if you want the results from the first page.\nUse the value from [nextpageRef] from the previous request (for example first page) to get the next page (for example 2nd page)\nMUST BE URL ENCODED",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "originalQuery": "str",
                    "correctedQuery": "str",
                    "results": "int",
                    "activeFilters": [
                        {
                            "name": "str",
                            "active": "bool",
                            "url": "NoneType",
                            "description": "str",
                            "_list_length": 1
                        }
                    ],
                    "refinements": "empty list",
                    "items": [
                        {
                            "type": "str",
                            "title": "str",
                            "id": "str",
                            "url": "str",
                            "bestThumbnail": {
                                "url": "str",
                                "width": "int",
                                "height": "int"
                            },
                            "thumbnails": [
                                {
                                    "url": "str",
                                    "width": "int",
                                    "height": "int",
                                    "_list_length": 2
                                }
                            ],
                            "isUpcoming": "bool",
                            "upcoming": "NoneType",
                            "isLive": "bool",
                            "badges": [
                                "list of str with length 1"
                            ],
                            "author": {
                                "name": "str",
                                "channelID": "str",
                                "url": "str",
                                "bestAvatar": {
                                    "url": "str",
                                    "width": "int",
                                    "height": "int"
                                },
                                "avatars": [
                                    {
                                        "url": "str",
                                        "width": "int",
                                        "height": "int",
                                        "_list_length": 1
                                    }
                                ],
                                "ownerBadges": [
                                    "list of str with length 1"
                                ],
                                "verified": "bool"
                            },
                            "description": "NoneType",
                            "views": "int",
                            "duration": "str",
                            "uploadedAt": "str",
                            "_list_length": 25
                        }
                    ],
                    "continuation": "NoneType",
                    "status": "bool"
                }
            }
        ],
        "query": "I'm organizing a charity event and I need some sponsors. Can you provide me with a list of companies that are known for their philanthropic activities? Additionally, suggest some strategies for approaching and convincing potential sponsors to support our cause.",
        "relevant APIs": [
            [
                "SERP API",
                "/search"
            ],
            [
                "Bing Autosuggest",
                "Suggestions"
            ]
        ],
        "query_id": 79617
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "LexAI API",
                "api_name": "get_classes",
                "api_description": "Get available detection classes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Islam & AI API",
                "api_name": "Get an Answer to your Question",
                "api_description": "Get answer to an Islamic question from our Islam&AI bot",
                "required_parameters": [
                    {
                        "name": "question",
                        "type": "STRING",
                        "description": "",
                        "default": "What is Islam?"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "int",
                    "response": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Islam & AI API",
                "api_name": "Have a Chat with our Bot",
                "api_description": "Have a conversation with our Islam&AI Bot in which it remembers your previous conversation! (upto 30 texts)",
                "required_parameters": [
                    {
                        "name": "question",
                        "type": "STRING",
                        "description": "",
                        "default": "What is Islam?"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "chatHistory",
                        "type": "STRING",
                        "description": "",
                        "default": "What is Dua to recite when you see a miraculous thing like Islam & AI? | There is no specific dua (supplication) mentioned in the Quran or Hadith that is to be recited when witnessing a miracle. However, Muslims are encouraged to constantly remember Allah and express their gratitude to Him for the blessings and miracles they witness in their lives. In general, it is recommended to say 'Subhan Allah' (Glory be to Allah) when witnessing something amazing or miraculous"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "int",
                    "response": "str"
                }
            }
        ],
        "query": "I'm a food enthusiast and I'm looking for some unique recipes to try at home. Can you suggest some interesting dishes from different cuisines? Additionally, I would like to know the ingredients and cooking instructions for each recipe. Also, recommend some online cooking classes or tutorials that can help me improve my culinary skills.",
        "relevant APIs": [
            [
                "LexAI API",
                "get_classes"
            ],
            [
                "Islam & AI API",
                "Get an Answer to your Question"
            ],
            [
                "Islam & AI API",
                "Have a Chat with our Bot"
            ]
        ],
        "query_id": 86371
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Quizy API",
                "api_name": "/generateQuiz",
                "api_description": "This endpoint will return you the 5 questions, options, correct answer and explaination for the quiz topic you provide.",
                "required_parameters": [
                    {
                        "name": "topic",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "body": [
                        {
                            "question": "str",
                            "options": [
                                "list of str with length 4"
                            ],
                            "correct_answer": "str",
                            "explanation": "str",
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Artificial intelligence News API",
                "api_name": "Get Recent News From a Single News Source",
                "api_description": "This will return all the artificial intelligence news from a single news source.",
                "required_parameters": [
                    {
                        "name": "paperId",
                        "type": "string",
                        "description": "",
                        "default": "forbes"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "url": "str",
                    "source": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Artificial intelligence News API",
                "api_name": "Get News From All News Sources Related to Artificial Intelligence",
                "api_description": "This end point will return back all the artificial intelligence news from all over the world.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "link": "str",
                    "source": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "LemurBot",
                "api_name": "Get A Bot Category Group",
                "api_description": "Get a specific bot category group by it's id and view it's details",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The id of BotCategoryGroup",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "LemurBot",
                "api_name": "Get A Conversation Turn",
                "api_description": "Get a specific conversation turn by it's id and view it's details",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The id of ConversationTurn",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "LemurBot",
                "api_name": "List All Conversation Turns",
                "api_description": "Each conversation has conversation turns.\nEach turn represents an input from the client and the output from the bot.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "the number of records to return",
                        "default": 20
                    },
                    {
                        "name": "conversation",
                        "type": "STRING",
                        "description": "The slug of the conversation - conversation are linked to conversation turns",
                        "default": ""
                    },
                    {
                        "name": "conversation_id",
                        "type": "NUMBER",
                        "description": "The id of the conversation - conversation are linked to conversation turns",
                        "default": ""
                    },
                    {
                        "name": "dir",
                        "type": "STRING",
                        "description": "the direction of the ordering",
                        "default": "asc"
                    },
                    {
                        "name": "input",
                        "type": "STRING",
                        "description": "What was said to the bot by the client - this is a partial search",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "the page number of results to start from",
                        "default": 1
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "What was said by the bot in response to the client input - this is a partial search",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The id of the conversation turn",
                        "default": ""
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "the search field you wish to order by - the available field names are the sames ones you can search by",
                        "default": "id"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "test",
                "api_name": "qwetre",
                "api_description": "qweytr",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "LexAI API",
                "api_name": "get_classes",
                "api_description": "Get available detection classes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to improve my cooking skills and learn new recipes. Can you provide me with a quiz on different culinary techniques? Additionally, recommend some popular cooking blogs for inspiration.",
        "relevant APIs": [
            [
                "Quizy API",
                "/generateQuiz"
            ],
            [
                "Artificial intelligence News API",
                "Get News From All News Sources Related to Artificial Intelligence"
            ],
            [
                "LemurBot",
                "List All Conversation Turns"
            ]
        ],
        "query_id": 28714
    }
]