[
    {
        "api_list": [
            {
                "category_name": "Financial",
                "tool_name": "Crypto Symbols by API-Ninjas",
                "api_name": "/v1/cryptosymbols",
                "api_description": "API Ninjas Crypto Symbols API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "list of str with length 522"
                    ],
                    "timestamp": "int"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "Number2Words",
                "api_name": "Get",
                "api_description": "Get equivalent words of this number",
                "required_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "",
                        "default": "EN"
                    },
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "98765432.10"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "",
                        "default": "USA"
                    },
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "",
                        "default": "cent"
                    },
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "",
                        "default": "dollar"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "",
                        "default": "text"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Financial",
                "tool_name": "FreeFloatUs",
                "api_name": "trades/pending",
                "api_description": "Get pending trades for your freefloat strategies.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "FreeFloatUs",
                "api_name": "portfolio",
                "api_description": "Download your freefloat portfolio.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "TND Exchange Rate",
                "api_name": "api",
                "api_description": "GET the average exchange rate of TND against USD & EUR",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "USD": "float",
                    "EUR": "float",
                    "GBP": "float",
                    "CHF": "float",
                    "BTC": "float"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is organizing a financial conference and we need to download the portfolio for the event. Can you assist us in downloading the portfolio from FreeFloatUs? Additionally, I'm interested in knowing the equivalent words for the number 98765432.10 in English.",
        "relevant APIs": [
            [
                "FreeFloatUs",
                "portfolio"
            ],
            [
                "Number2Words",
                "Get"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 34056
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Get IP Info_v2",
                "api_name": "ip-city",
                "api_description": "Get the detail of Longitude and Latitude on the basis of IP-Address",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP-Address of the Country",
                        "default": "74.125.45.100"
                    },
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "API Key Generated by Infodb.com",
                        "default": "93b77a0add7dace51661cf559ef97326f3297ec27d6e5a9b903670e0246b8293"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "ListAllCountries",
                "api_description": "This API returns list of all countries and can be paginated over the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:asc`, `name:desc` for country name sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 200
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 200
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCountries",
                "api_description": "API to search county based on the matching search keyword passed in url param.\nNOTE: This API is case insensitive.\ne.g. \n`/v1/locations/countries/uni`: This will return all the matching countries whose name starts from `uni` and their additional info.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "uni"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 20
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:desc`, `alpha-2:asc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCities",
                "api_description": "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "This indicates how many results you would like to query in one time.\nDefault value is `10` if limit is not provided.\nMaximum limit is `1000`",
                        "default": "100"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "This controls the pagination of results.\nDefault is `1`",
                        "default": "1"
                    },
                    {
                        "name": "countryIsoCode",
                        "type": "STRING",
                        "description": "It is an optional parameter to narrow your search results.\nPass two letter Country code to  filter the cities for specific country in query param which can be found in our searchCountry API in field name `alpha-2` for any country you search.\nfor e.g. 'IN', 'US' etc.",
                        "default": "US"
                    },
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "new yo"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "city": "str",
                            "countryCode": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Pharmacies de garde NC",
                "api_name": "All",
                "api_description": "Renvoie les pharmacies de garde de Nouvelle-Cal\u00e9donie",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "nom": "str",
                    "type": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Pharmacies de garde NC",
                "api_name": "Health",
                "api_description": "Renvoie le statut de l'application : up ou down",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "checks": "empty list"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Pincode Distance Measurement ",
                "api_name": "Fetch Distance between two pincodes",
                "api_description": "Enter two valid pincodes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "",
                        "default": "415612"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "",
                        "default": "415639"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "errorCode": "int",
                    "message": "str",
                    "error": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Local Search",
                "api_name": "/businesses",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "Keyword",
                        "type": "STRING",
                        "description": "A term to search against business names and categories.",
                        "default": ""
                    },
                    {
                        "name": "Name",
                        "type": "STRING",
                        "description": "The name of a business.",
                        "default": ""
                    },
                    {
                        "name": "City",
                        "type": "STRING",
                        "description": "The name of the city to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "State",
                        "type": "STRING",
                        "description": "The two-letter abbreviation of the state in USA to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "PostalCode",
                        "type": "STRING",
                        "description": "The US postal code of a location.  ( 5 or 9 digit)",
                        "default": ""
                    },
                    {
                        "name": "Sort",
                        "type": "STRING",
                        "description": "",
                        "default": "value_distance"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category that defines (or relates to) the commercial offering of a business.",
                        "default": "Category"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family and I are relocating to a new city and we need to find a suitable neighborhood. Can you recommend some cities in the United States with affordable housing options? Also, provide information about the healthcare facilities and pharmacies in those cities.",
        "relevant APIs": [
            [
                "World Cities and Countries",
                "ListAllCountries"
            ],
            [
                "World Cities and Countries",
                "SearchCities"
            ],
            [
                "World Cities and Countries",
                "SearchCountries"
            ],
            [
                "Local Search",
                "/businesses"
            ],
            [
                "Pharmacies de garde NC",
                "All"
            ],
            [
                "Pharmacies de garde NC",
                "Health"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 19188
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Energy Price News",
                "api_name": "List of Sources",
                "api_description": "See which regions we have news sources from.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Energy Price News",
                "api_name": "All articles",
                "api_description": "Get all available articles from multiple sources",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Energy Price News",
                "api_name": "List of Regions",
                "api_description": "See which regions we have news sources from.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Greek News in English",
                "api_name": "Get All Sources",
                "api_description": "Get All Sources' names and ids",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Greek News in English",
                "api_name": "Get All News",
                "api_description": "This endpoint will return back all greek news from all the sources.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "link": "str",
                    "description": "str",
                    "image": "str",
                    "site": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Greek News in English",
                "api_name": "Get Articles From A Single Source",
                "api_description": "Get Greek News from a specific news source.",
                "required_parameters": [
                    {
                        "name": "siteId",
                        "type": "string",
                        "description": "",
                        "default": "ktg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "link": "str",
                    "description": "str",
                    "image": "str",
                    "site": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Live world futbol news",
                "api_name": "Get All World Footbol news live",
                "api_description": "This end point will return back all news about footbol.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Live world futbol news",
                "api_name": "Get Individual News Source",
                "api_description": "Get News about football news from a specific news resource.",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "eurosport"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a football enthusiast and I want to stay updated on the latest news. Fetch me all the available football news. Additionally, I'm interested in news related to Greece. Can you get me the latest Greek news articles from multiple sources?",
        "relevant APIs": [
            [
                "Energy Price News",
                "All articles"
            ],
            [
                "Greek News in English",
                "Get All News"
            ],
            [
                "Greek News in English",
                "Get All Sources"
            ],
            [
                "Live world futbol news",
                "Get Individual News Source"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 75279
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "Beeg",
                "api_name": "ss",
                "api_description": "ss",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "LimouCloud",
                "api_name": "Get Reservations",
                "api_description": "get all driver related reservations",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2021-11-20"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2021-11-14"
                    },
                    {
                        "name": "page_size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Please provide Values from the below list as per your need. \n 'QUOTED '=> Quoted by the client but not confirmed\n'CONFIRMED' => Confirmed by Driver (assigned to the driver)\n 'SCHEDULED' => Scheduled for later\n'COMPLETED'  => Completed trip\n'CANCELLED' => Canceled by either party\n 'REQUESTED' => Requested to driver (new rides)",
                        "default": "CONFIRMED"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "LimouCloud",
                "api_name": "Get Reservation by ID",
                "api_description": "Get Reservation by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "LimouCloud",
                "api_name": "Logout",
                "api_description": "Logout from account",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "fomoAPI",
                "api_name": "Get Campaign From URL",
                "api_description": "Get lead from Specific website  Campaign",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "Lead"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "gogofodo.com"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "list_complete": "bool",
                    "keys": "empty list"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "fomoAPI",
                "api_name": "Get Campaign  Lead From ID",
                "api_description": "Get ALL Lead From Your Campaign Social Proof",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "Lead"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "list_complete": "bool",
                    "keys": "empty list"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "testapi_v2",
                "api_name": "bananas",
                "api_description": "hey",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "testapi_v2",
                "api_name": "mobilitu/public",
                "api_description": "mobilitu",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "BoldSign",
                "api_name": "BrandList",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "BoldSign",
                "api_name": "GetTeam",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "teamId",
                        "type": "STRING",
                        "description": "Team Id.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "BoldSign",
                "api_name": "GetProperties",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "templateId",
                        "type": "STRING",
                        "description": "Template Id.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to organize a surprise birthday party for my best friend next week. Can you help me find a list of available party venues in her city? Additionally, I need to create personalized invitations for the guests. Can you suggest a tool that can assist me in designing and sending digital invitations?",
        "relevant APIs": [
            [
                "LimouCloud",
                "Get Reservations"
            ],
            [
                "BoldSign",
                "GetProperties"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 47532
    },
    {
        "api_list": [
            {
                "category_name": "Communication",
                "tool_name": "Scout",
                "api_name": "Advanced Phone Number Lookup",
                "api_description": "**Advanced Phone Number Information**\n\n*retrieves valuable technical data about a phone number*\n\n- validity\n\n- approximate location\n\n- timezone\n\n- carrier\n\n- line type\n\n- ported status\n\n- carrier\n\n- robocall/spam score\n\n- much more",
                "required_parameters": [
                    {
                        "name": "dialcode",
                        "type": "STRING",
                        "description": "",
                        "default": "+16502530000"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "dialcode_e164": "str",
                    "timezone": "str",
                    "timezone_short": "str",
                    "timezone_utc_offset": "str",
                    "region": "str",
                    "sub_region": "str",
                    "administrative_area_level_3": "NoneType",
                    "administrative_area_level_2": "str",
                    "administrative_area_level_1": "str",
                    "administrative_area_level_1_short": "str",
                    "locality": "str",
                    "sublocality_level_1": "NoneType",
                    "point_of_interest": "NoneType",
                    "neighborhood": "NoneType",
                    "clli": "str",
                    "country": "str",
                    "country_short": "str",
                    "postal_code": "str",
                    "operating_company_name": "str",
                    "operating_company_type": "str",
                    "lata": "str",
                    "ocn": "str",
                    "line_type": "str",
                    "location_routing_number": "str",
                    "ported": "bool",
                    "risk_rating": "str",
                    "risk_level": "int",
                    "ported_date": "NoneType",
                    "dialcode_invalid": "bool",
                    "dialcode_impossible": "bool",
                    "notes": "str",
                    "switch_assignment_date": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "Scout",
                "api_name": "Basic Phone Number Validation",
                "api_description": "**Basic Phone Number Validation**\n\n- determine if a phone number is in a valid format \n\n- determine if a phone number is impossible for a particular region\n\n- properly format the number for various scenarios like international or local dialing\n\n- attempts to determine line type\n\n- determines country and country code",
                "required_parameters": [
                    {
                        "name": "dialcode",
                        "type": "STRING",
                        "description": "",
                        "default": "+12125551234"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "",
                        "default": "US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "original": "str",
                    "sanitized": "str",
                    "e164": "str",
                    "national": "str",
                    "full_national": "str",
                    "full_international": "str",
                    "country": "str",
                    "country_name": "str",
                    "country_code_prefix": "str",
                    "area_code": "str",
                    "valid_countries": [
                        "list of str with length 1"
                    ],
                    "invalid": "bool",
                    "impossible": "bool",
                    "type": "str",
                    "possible_types": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "Melrose Labs Voice API",
                "api_name": "List allocated numbers",
                "api_description": "Get list of allocated numbers",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "Melrose Labs Voice API",
                "api_name": "Retrieve text",
                "api_description": "Retrieve text from previously converted speech-to-text.",
                "required_parameters": [
                    {
                        "name": "transactionid",
                        "type": "STRING",
                        "description": "ID of speech-to-text transaction",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "Melrose Labs Voice API",
                "api_name": "Retrieve audio file",
                "api_description": "Retrieve audio file from previously converted text-to-speech. File is in MP3 format.",
                "required_parameters": [
                    {
                        "name": "transactionid",
                        "type": "STRING",
                        "description": "Transaction ID for previously submitted text-to-speech conversion.",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "test apideno",
                "api_name": "article index",
                "api_description": "article index",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "str",
                    "info": "str",
                    "data": {
                        "items": [
                            {
                                "id": "int",
                                "name": "str",
                                "image_url": "str",
                                "youtube_url": "NoneType",
                                "content": "str",
                                "slug": "str",
                                "category_id": "int",
                                "user_id": "int",
                                "order_in_landing_page": "int",
                                "column_medium": "NoneType",
                                "show_banner": "NoneType",
                                "created_at": "str",
                                "publish_date": "str",
                                "category": {
                                    "id": "int",
                                    "name": "str",
                                    "slug": "str",
                                    "user_id": "int",
                                    "order_in_header": "int",
                                    "order_in_footer": "int",
                                    "is_active": "int",
                                    "created_at": "str",
                                    "updated_at": "str"
                                },
                                "created_by": {
                                    "name": "str",
                                    "username": "str",
                                    "email": "str",
                                    "profile_image": "str"
                                },
                                "_list_length": 1
                            }
                        ],
                        "pagination": {
                            "total_found": "int",
                            "limit": "int",
                            "current_page": "int",
                            "total_page": "int"
                        }
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a road trip with my friends and we need to rent a car. Can you help me find car rental companies in Los Angeles that offer affordable rates? Additionally, provide me with information about the types of cars available and their rental prices. Oh, and could you also suggest some scenic routes and must-visit destinations along the way?",
        "relevant APIs": [
            [
                "Scout",
                "Advanced Phone Number Lookup"
            ],
            [
                "Melrose Labs Voice API",
                "List allocated numbers"
            ],
            [
                "test apideno",
                "article index"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 58500
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "Numerology-API",
                "api_name": "health",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Numerology-API",
                "api_name": "info",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "application": {
                        "name": "str",
                        "description": "str",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Numerology-API",
                "api_name": "descriptions",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusValue": "int",
                    "statusReasonPhrase": "str",
                    "dateTime": "str",
                    "description": "str",
                    "detail": [
                        {
                            "category": "str",
                            "description": "str",
                            "language": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Atmosphere nitrous oxide levels",
                "api_name": "Nitrous endpoint",
                "api_description": "The response will be an object with no CORS resources enabled.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nitrous",
                        "type": "OBJECT",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "nitrous": [
                        {
                            "date": "str",
                            "average": "str",
                            "trend": "str",
                            "averageUnc": "str",
                            "trendUnc": "str",
                            "_list_length": 267
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "dna2protein",
                "api_name": "DNA2AminoAcid",
                "api_description": "Transform a DNA sequence into a sequence of Amino Acids",
                "required_parameters": [
                    {
                        "name": "dna",
                        "type": "STRING",
                        "description": "The DNA sequence used for the transformation to Amino Acids",
                        "default": "TACAAAGGCTAACGTCCTAGAGCTATT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "aminoAcids": [
                        {
                            "order": "int",
                            "letter": "str",
                            "abbreviation": "str",
                            "name": "str",
                            "type": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "dna2protein",
                "api_name": "mRNA2DNA",
                "api_description": "This endpoint transforms an mRNA sequence to its DNA sequence equivalent.",
                "required_parameters": [
                    {
                        "name": "mRNA",
                        "type": "STRING",
                        "description": "The mRNA sequence as a string of letters.",
                        "default": "UACGUACG"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "mRNA": "str",
                    "dna": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "dna2protein",
                "api_name": "DNA2mRNA",
                "api_description": "This end-point converts a DNA sequence into an mRNA sequence.",
                "required_parameters": [
                    {
                        "name": "dna",
                        "type": "STRING",
                        "description": "The DNA sequence to transform into an mRNA sequence.",
                        "default": "TACAAAGGCTAACGTCCTAGAGCTATT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "mRNA": "str",
                    "dna": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "CarbonSutra",
                "api_name": "Airports by Keyword",
                "api_description": "Returns the lists of airport names and IATA code which matches the keyword.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "int",
                    "data": {
                        "keyword": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "CarbonSutra",
                "api_name": "Vehicles Makes",
                "api_description": "List of Vehicle Makes. A list of every make and model used by this API is at https://www.carbonsutra.com/data-vehicle-make-model.html",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "make": "str",
                            "number_of_models": "int",
                            "_list_length": 141
                        }
                    ],
                    "success": "bool",
                    "status": "int"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "CarbonSutra",
                "api_name": "Vehicles Models",
                "api_description": "List of Vehicle Models for a Make. A list of every make and model used by this API is at https://www.carbonsutra.com/data-vehicle-make-model.html",
                "required_parameters": [
                    {
                        "name": "vehicle_make",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Beekeeping Research",
                "api_name": "Basic endpoint",
                "api_description": "See full docs on https://research.docs.beekeeping.io",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am interested in learning more about DNA sequences and their corresponding amino acids. Can you provide me with the amino acid sequence for the DNA sequence 'ATCGCTAGTACG'? Additionally, I would like to know the mRNA sequence equivalent of the DNA sequence 'ATCGCTAGTACG'. Finally, could you give me some information about the tool 'dna2protein'?",
        "relevant APIs": [
            [
                "dna2protein",
                "DNA2AminoAcid"
            ],
            [
                "dna2protein",
                "mRNA2DNA"
            ],
            [
                "dna2protein",
                "DNA2mRNA"
            ],
            [
                "Numerology-API",
                "info"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12509
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/trending/overall",
                "api_description": "Treding Youtube (including non-music) videos worldwide",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "status": "str",
                    "video": "str",
                    "link": "str",
                    "highlights": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/topartist_feat/{year}",
                "api_description": "Youtube top artist including features in music videos by year",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "string",
                        "description": "",
                        "default": "2022"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "artist": "str",
                    "views": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/24h/{type}",
                "api_description": "Youtube most viewed music video by content language type: (English, Spanish, Asian or Other)",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "description": "",
                        "default": "english"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "status": "str",
                    "video": "str",
                    "link": "str",
                    "views": "str",
                    "likes": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "baixar musicas mp3 completas",
                "api_name": "teste",
                "api_description": "teste",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Artist singles",
                "api_description": "Get artist singles",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Artist ID",
                        "default": "2w9zwq3AktTeYYMuhMjju8"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "artist": {
                            "discography": {
                                "singles": {
                                    "totalCount": "int",
                                    "items": [
                                        {
                                            "releases": {
                                                "items": [
                                                    {
                                                        "id": "str",
                                                        "uri": "str",
                                                        "name": "str",
                                                        "type": "str",
                                                        "date": {
                                                            "year": "int",
                                                            "isoString": "str"
                                                        },
                                                        "coverArt": {
                                                            "sources": [
                                                                {
                                                                    "url": "str",
                                                                    "width": "int",
                                                                    "height": "int",
                                                                    "_list_length": 3
                                                                }
                                                            ]
                                                        },
                                                        "playability": {
                                                            "playable": "bool",
                                                            "reason": "str"
                                                        },
                                                        "sharingInfo": {
                                                            "shareId": "str",
                                                            "shareUrl": "str"
                                                        },
                                                        "tracks": {
                                                            "totalCount": "int"
                                                        },
                                                        "_list_length": 1
                                                    }
                                                ]
                                            },
                                            "_list_length": 20
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "extensions": "empty list"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "User followers",
                "api_description": "Get user followers",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "User ID",
                        "default": "nocopyrightsounds"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "profiles": [
                        {
                            "uri": "str",
                            "name": "str",
                            "followers_count": "int",
                            "color": "int",
                            "_list_length": 1000
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Web",
                "api_name": "Search",
                "api_description": "Search",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Search query",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "`multi` or one of these:\n\n- albums\n- artists\n- episodes\n- genres\n- playlists\n- podcasts\n- tracks\n- users",
                        "default": "multi"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "numberOfTopResults",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "albums": {
                        "totalCount": "int",
                        "items": "empty list"
                    },
                    "artists": {
                        "totalCount": "int",
                        "items": "empty list"
                    },
                    "episodes": {
                        "totalCount": "int",
                        "items": "empty list"
                    },
                    "genres": {
                        "totalCount": "int",
                        "items": "empty list"
                    },
                    "playlists": {
                        "totalCount": "int",
                        "items": "empty list"
                    },
                    "podcasts": {
                        "totalCount": "int",
                        "items": "empty list"
                    },
                    "topResults": {
                        "items": "empty list",
                        "featured": "empty list"
                    },
                    "tracks": {
                        "totalCount": "int",
                        "items": "empty list"
                    },
                    "users": {
                        "totalCount": "int",
                        "items": "empty list"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a music event and I need to find the top artists featured in music videos in 2022 on YouTube. Additionally, provide me with the Spotify singles of these artists and the number of followers for each one.",
        "relevant APIs": [
            [
                "MusicData API",
                "/youtube/topartist_feat/{year}"
            ],
            [
                "Spotify Web",
                "Artist singles"
            ],
            [
                "Spotify Web",
                "User followers"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 56266
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Validect - Email Verification",
                "api_name": "/v1/verify",
                "api_description": "#### Verify email address\n*We do bill only valid or invalid verification statuses.*\nPass the email as a GET parameter. Response properties description:\n```json\n{\n\"status\": \"valid\", // verification status of the email\n\"reason\": \"accepted_email\", // the reason of the status\n\"email\": \"example@gmail.com\",  // normalized email address\n\"user\": \"example\",  // The part before at-sign\n\"domain\": \"gmail.com\", // The part after at-sign\n\"public\": true, // Is address belongs to a publicly accessible email provider\n\"disposable\": false,  // Is address belongs to a disposable email service\n\"role\": false // Is address role based (e.g. abuse, admin, no-reply etc.)\n}\n```\nPossible verification statuses:\n-  `valid` - email address has been accepted by the mail server (safe to send)\n- `invalid` - email address is invalid, various reasons possible, see below (do not send)\n- `accept_all` - mail server accepts any email address (not recommended to send)\n- `unknown` - unable to verify email address (not recommended to send)\n\nPossible status reasons:\n- `accepted_email` - email address has been accepted by the mail server\n- `rejected_email` - email address has been rejected by the mail server\n- `invalid_syntax` - syntax of the email address is invalid according to RFC\n- `invalid_domain` - domain name of the email address does not exist\n- `no_mx_record` - mx record for the domain does not exist\n- `invalid_mx_record` - mx record of the domain is invalid\n- `dns_error` - error occurred while performing dns resolving of the domain\n- `smtp_error` - error occurred while performing smtp validation",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "Email address to validate",
                        "default": "example@gmail.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "reason": "str",
                    "email": "str",
                    "user": "str",
                    "domain": "str",
                    "public": "bool",
                    "disposable": "bool",
                    "role": "bool"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Temp Mail",
                "api_name": "Read Inbox",
                "api_description": "Read inbox an email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "string",
                        "description": "",
                        "default": "p1amvpvxfh@bestparadize.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str",
                    "request_id": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm working on a project for my company and I need to ensure the email addresses of all the employees are valid. Could you please validate the email addresses of all the employees in the company database? Additionally, fetch the latest inbox messages for the email address 'p1amvpvxfh@bestparadize.com'.",
        "relevant APIs": [
            [
                "Validect - Email Verification",
                "/v1/verify"
            ],
            [
                "Temp Mail",
                "Read Inbox"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 65459
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Instant Cameroon News",
                "api_name": "Home page",
                "api_description": "Home and Welcome page that introduces the API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Instant Cameroon News",
                "api_name": "Retrieve data",
                "api_description": "Endpoint, which you use to retrieve the data you need. This endpoint can accept some parameters like page, search key and data range",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rank",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Spaceflight News",
                "api_name": "Blogs",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "url": "str",
                    "imageUrl": "str",
                    "newsSite": "str",
                    "summary": "str",
                    "publishedAt": "str",
                    "updatedAt": "str",
                    "launches": "empty list",
                    "events": "empty list"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Spaceflight News",
                "api_name": "Count",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Spaceflight News",
                "api_name": "Detail2",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "error": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a company event and I want to showcase the latest space news. Can you provide me with the top news articles and blog posts from spaceflight news? Also, I need to gather information about the current events in Cameroon. Thanks!",
        "relevant APIs": [
            [
                "Spaceflight News",
                "Blogs"
            ],
            [
                "Instant Cameroon News",
                "Retrieve data"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 46175
    },
    {
        "api_list": [
            {
                "category_name": "Financial",
                "tool_name": "Mutual fund Nav",
                "api_name": "fundID",
                "api_description": "current Nav",
                "required_parameters": [
                    {
                        "name": "ID",
                        "type": "STRING",
                        "description": "FundID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Financial",
                "tool_name": "Crypto Symbols by API-Ninjas",
                "api_name": "/v1/cryptosymbols",
                "api_description": "API Ninjas Crypto Symbols API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "list of str with length 522"
                    ],
                    "timestamp": "int"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm starting a new business and I need to manage my finances effectively. Can you assist me in retrieving the current NAV for mutual funds with IDs 'STU321' and 'VWX654'? Additionally, I want to explore the world of cryptocurrencies. Please provide the latest crypto symbols and their corresponding timestamp.",
        "relevant APIs": [
            [
                "Mutual fund Nav",
                "fundID"
            ],
            [
                "Crypto Symbols by API-Ninjas",
                "/v1/cryptosymbols"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 4746
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get ID",
                "api_description": "Get ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get all fastingCenters",
                "api_description": "Get all",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "Name": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Exercises by API-Ninjas",
                "api_name": "/v1/exercises",
                "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "muscle",
                        "type": "STRING",
                        "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
                        "default": "biceps"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
                        "default": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "STRING",
                        "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "type": "str",
                    "muscle": "str",
                    "equipment": "str",
                    "difficulty": "str",
                    "instructions": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Health Calculator API",
                "api_name": "BodyFat - Imperial",
                "api_description": "This endpoint calculates the body fat percentage based on the provided gender, age, height, and weight parameters in imperial units.",
                "required_parameters": [
                    {
                        "name": "age",
                        "type": "NUMBER",
                        "description": "The age of the person in **years**. Required.",
                        "default": "26"
                    },
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "The weight of the person in **pounds**. Required.",
                        "default": "180"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "The gender of the person. Must be either '**male**' or '**female**'. Required.",
                        "default": "male"
                    },
                    {
                        "name": "height",
                        "type": "NUMBER",
                        "description": "The height of the person in **inches**. Required.",
                        "default": "77"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "age": "float",
                    "bmi": "str",
                    "bodyfat": "str",
                    "bodyfat_status": "str",
                    "gender": "str",
                    "height": "str",
                    "weight": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Health Calculator API",
                "api_name": "Daily Water Intake",
                "api_description": "The Daily Water Intake Recommendation endpoint calculates the daily recommended water intake based on factors such as weight, activity level, and climate. It provides flexibility by allowing you to specify the unit of measurement for the water intake, either in liters or ounces.",
                "required_parameters": [
                    {
                        "name": "climate",
                        "type": "STRING",
                        "description": "The climate in which the individual is located.\n\nThe climate parameter accepts the following values:\n**normal** - Average climate\n**hot** - Hot climate\n**cold** - Cold climate",
                        "default": "normal"
                    },
                    {
                        "name": "activity_level",
                        "type": "STRING",
                        "description": "The activity level of the individual. \n\nThe activity_level parameter accepts the following values:\n**sedentary** - Little to no exercise\n**lightly_active** - Light exercise/sports 1-3 days/week\n**moderately_active** - Moderate exercise/sports 3-5 days/week\n**very_active** - Hard exercise/sports 6-7 days/week\n**extra_active** - Very hard exercise/sports and physical job or 2x training",
                        "default": "sedentary"
                    },
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "The weight of the individual in **kilograms (kg)**.",
                        "default": "60"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "The unit of measurement for the water intake. \n(Default) **ounces**\n Specify **liters** to get the result in liters instead.",
                        "default": "liters"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Health Calculator API",
                "api_name": "Macronutrient Distribution",
                "api_description": "This endpoint calculates the optimal distribution of macronutrients (carbohydrates, proteins, and fats) based on factors such as activity level, body composition goals, and dietary preferences.",
                "required_parameters": [
                    {
                        "name": "activity_level",
                        "type": "STRING",
                        "description": "The activity_level parameter accepts the following values:\n\n**sedentary** - Little to no exercise.\n**moderately_active** - Moderate exercise/sports 3-5 days/week.\n**very_active** - Hard exercise/sports 6-7 days/week.",
                        "default": "sedentary"
                    },
                    {
                        "name": "body_composition_goal",
                        "type": "STRING",
                        "description": "The body_composition_goal parameter accepts the following values:\n\n**weight_loss** - Goal of losing weight.\n**maintenance** - Goal of maintaining current weight.\n**muscle_gain** - Goal of gaining muscle.\n",
                        "default": "maintenance"
                    },
                    {
                        "name": "dietary_preferences",
                        "type": "STRING",
                        "description": "The dietary_preferences parameter allows users to specify their dietary preferences. It can be any string value representing the individual's dietary choices or restrictions, such as \\\"**vegetarian**,\\\" \\\"**vegan**,\\\" \\\"**pescatarian**,\\\" or \\\"**gluten-free**.\\\"",
                        "default": "vegan"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "BMI Calculator_v2",
                "api_name": "BMI",
                "api_description": "Calculate BMI using weight and height.",
                "required_parameters": [
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "",
                        "default": "86"
                    },
                    {
                        "name": "height",
                        "type": "NUMBER",
                        "description": "",
                        "default": "184"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "system",
                        "type": "STRING",
                        "description": "",
                        "default": "metric"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to improve my flexibility and I'm interested in trying some stretching exercises. Can you recommend up to 10 stretching exercises that target the hamstrings? Also, calculate the optimal distribution of macronutrients for me based on my activity level, body composition goals, and dietary preferences.",
        "relevant APIs": [
            [
                "Exercises by API-Ninjas",
                "/v1/exercises"
            ],
            [
                "Health Calculator API",
                "Macronutrient Distribution"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 67887
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "Hello World",
                "api_name": "get user",
                "api_description": "get user by id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "firstName": "str",
                    "lastName": "str",
                    "maidenName": "str",
                    "age": "int",
                    "gender": "str",
                    "email": "str",
                    "phone": "str",
                    "username": "str",
                    "password": "str",
                    "birthDate": "str",
                    "image": "str",
                    "bloodGroup": "str",
                    "height": "int",
                    "weight": "float",
                    "eyeColor": "str",
                    "hair": {
                        "color": "str",
                        "type": "str"
                    },
                    "domain": "str",
                    "ip": "str",
                    "address": {
                        "address": "str",
                        "city": "str",
                        "coordinates": {
                            "lat": "float",
                            "lng": "float"
                        },
                        "postalCode": "str",
                        "state": "str"
                    },
                    "macAddress": "str",
                    "university": "str",
                    "bank": {
                        "cardExpire": "str",
                        "cardNumber": "str",
                        "cardType": "str",
                        "currency": "str",
                        "iban": "str"
                    },
                    "company": {
                        "address": {
                            "address": "str",
                            "city": "str",
                            "coordinates": {
                                "lat": "float",
                                "lng": "float"
                            },
                            "postalCode": "str",
                            "state": "str"
                        },
                        "department": "str",
                        "name": "str",
                        "title": "str"
                    },
                    "ein": "str",
                    "ssn": "str",
                    "userAgent": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PublicAPITestingInbox",
                "api_name": "getUserByName",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PublicAPITestingInbox",
                "api_name": "logoutUser",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PublicAPITestingInbox",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I just moved to a new city and I'm looking for a reliable moving company. Can you help me find user reviews for different moving companies in my area? Also, fetch the user details for the top-rated moving company named 'Swift Movers'. Additionally, provide me with the contact information for the nearest storage facility based on my current address. Finally, log out of my account to ensure privacy.",
        "relevant APIs": [
            [
                "PublicAPITestingInbox",
                "getUserByName"
            ],
            [
                "Hello World",
                "get user"
            ],
            [
                "PublicAPITestingInbox",
                "getUserByName"
            ],
            [
                "Hello World",
                "get user"
            ],
            [
                "PublicAPITestingInbox",
                "logoutUser"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 15541
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Yandex Video API",
                "api_name": "Get server time",
                "api_description": "Gets server time.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Yandex Video API",
                "api_name": "Get video from yandex search results",
                "api_description": "Use advanced filtering to get specific video from yandex! Remember to set from which domain you want data. Default is yandex.com but  yandex.ru, .by, .kz, .uz are also available. Set page number in order to get more results. 0 is the first page, 1 is second and so on.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "0 - first page\n1 - second page\n...",
                        "default": "0"
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "bitcoin"
                    },
                    {
                        "name": "domain",
                        "type": "ENUM",
                        "description": "get search results from:\n- yandex.com\n- yandex.ru\n- yandex.by\n- yandex.kz\n- yandex.uz",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "videoDuration",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "e.g. Paris, France",
                        "default": ""
                    },
                    {
                        "name": "videoRecent",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "videoHd",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "Domain": [
                            "list of str with length 1"
                        ],
                        "Region": [
                            "list of str with length 1"
                        ],
                        "VideoHd": [
                            "list of str with length 1"
                        ],
                        "VideoRecent": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Whois Lookup_v3",
                "api_name": "DNS Lookup",
                "api_description": "This endpoint pulls DNS data from a domain\n\nParameters:\n> domain - The domain to search\n> rtype - The type of record to pull. Records availables: A, PTR, MX, CNAME, TXT,NS.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to search",
                        "default": "google.com"
                    },
                    {
                        "name": "rtype",
                        "type": "STRING",
                        "description": "The rtype. i.e: A, MX, TXT, CNAME,NS, PTR",
                        "default": "NS"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Whois Lookup_v3",
                "api_name": "Check Similarity",
                "api_description": "This endpoint Helps to check if two domains are similar.\n\nParemeters:\n> domain1 \n>domain2",
                "required_parameters": [
                    {
                        "name": "domain1",
                        "type": "STRING",
                        "description": "first domain to compare with.",
                        "default": "google.com"
                    },
                    {
                        "name": "domain2",
                        "type": "STRING",
                        "description": "second domain to compare with.",
                        "default": "shopify.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Whois Lookup_v3",
                "api_name": "NS Lookup",
                "api_description": "This endpoint returns IP from a domain. (NameServer)\n\nParameters\n-> search - The domain to search",
                "required_parameters": [
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search for region",
                "api_description": "Get location suggestions by keyword",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": "str",
                    "_score": "float",
                    "area_type": "str",
                    "centroid": {
                        "lat": "float",
                        "lon": "float"
                    },
                    "city": "str",
                    "counties": [
                        {
                            "fips": "str",
                            "name": "str",
                            "state_code": "str",
                            "_list_length": 1
                        }
                    ],
                    "country": "str",
                    "county_needed_for_uniq": "bool",
                    "geo_id": "str",
                    "slug_id": "str",
                    "state_code": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search agents",
                "api_description": "Search agents by city/zip",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "price",
                        "type": "STRING",
                        "description": "Price range\nexample for range between 50k to 2m : \n50000_2000000",
                        "default": ""
                    },
                    {
                        "name": "agentname",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "[afrikaans\nalbanian\narabic\narmenian\nasl\nbengali\nbosnian\nbulgarian\nchinese\ncroatian\nczech\nDanish\ndutch\nEstonian\nfarsi\nfilipino\nfinnish\nfrench\ngaelic\ngeorgian\ngerman\ngreek\nhawaiian\nhebrew\nhindi\nhungarian\nindonesian\nitalian\njapanese\nkorean\nlao\nlatvian\nlithuanian\nmalay\nmandarin\nnepali\nnorwegian\npolish\nportuguese\npunjabi\nromanian\nrussian\nserbian\nsindhi\nsinghalese\nslovenian\nspanish\nswahili\nswedish\ntagalog\ntaiwanese\nthai\nturkish\nukrainian\nurdu\nvietnamese\nyugoslavian]",
                        "default": ""
                    },
                    {
                        "name": "photo",
                        "type": "BOOLEAN",
                        "description": "If the agent has a photo or not \n1 if yes\n0 if no",
                        "default": "1"
                    },
                    {
                        "name": "rating",
                        "type": "NUMBER",
                        "description": "Rating (between 1 and 5)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"agents\": [{\"address\": {\"city\": \"str\", \"country\": \"str\", \"line\": \"str\", \"line2\": \"str\", \"postal_code\": \"str\", \"state\": \"str\", \"state_code\": \"str\"}, \"advertiser_id\": \"int\", \"agent_rating\": \"int\", \"agent_team_details\": {\"is_team_member\": \"bool\"}, \"agent_type\": [\"list of str with length 2\"], \"areas_of_business\": \"empty list\", \"background_photo\": {\"href\": \"str\"}, \"broker\": {\"accent_color\": \"str\", \"designations\": \"empty list\", \"fulfillment_id\": \"int\", \"name\": \"str\", \"photo\": {\"href\": \"str\"}, \"video\": \"str\"}, \"data_flags\": \"NoneType\", \"description\": \"str\", \"designations\": \"empty list\", \"feed_licenses\": [{\"country\": \"str\", \"license_number\": \"str\", \"state_code\": \"str\", \"_list_length\": 1}], \"first_month\": \"int\", \"first_name\": \"str\", \"first_year\": \"int\", \"for_sale_price\": {\"count\": \"int\", \"last_listing_date\": \"str\", \"max\": \"int\", \"min\": \"int\"}, \"full_name\": \"str\", \"has_photo\": \"bool\", \"href\": \"str\", \"id\": \"str\", \"is_realtor\": \"bool\", \"lang\": {\"srp_content\": {\"Recommendations\": \"str\", \"active_ag"
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search properties for rent",
                "api_description": "Search properties for rent by location",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "move_in_date-max",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sqft-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Property type comma-separated or empty for all types:\nsingle_family\napartment\ntownhomes\ncondo_townhome_rowhome_coop\nduplex_triplex\ncondos\ncondo_townhome_rowhome_coop\ncondo_townhome\n",
                        "default": ""
                    },
                    {
                        "name": "sqft-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_price-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beds-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort properties by :\nRecently_Added\nHighest_Price \nLowest_Price",
                        "default": ""
                    },
                    {
                        "name": "threeDTours",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "baths-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_price-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beds-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "baths-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "noFees",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "dogs",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "move_in_date-min",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "cats",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Youtube Trending",
                "api_name": "trending",
                "api_description": "Gather Trending Videos from Youtube",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "enum for video type:\n- default\n- music\n- gaming\n- movies",
                        "default": "gaming"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code to retrieve trending videos for the provided country.\nE.g, US, DE, JP etc.",
                        "default": "US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "description": "str",
                    "publishedDate": "str",
                    "publishedText": "str",
                    "videoId": "str",
                    "videoUrl": "str",
                    "channelName": "str",
                    "channelId": "str",
                    "channelUrl": "str",
                    "thumbnails": [
                        {
                            "quality": "str",
                            "url": "str",
                            "width": "int",
                            "height": "int",
                            "_list_length": 9
                        }
                    ],
                    "views": "int",
                    "viewsText": "str",
                    "duration": "int",
                    "durationText": "str",
                    "verified": "bool",
                    "creatorOnRise": "bool",
                    "isShort": "bool"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I would like to watch trending movie videos on YouTube. Furthermore, check the similarity between the domains 'apple.com' and 'microsoft.com' using the Check Similarity API.",
        "relevant APIs": [
            [
                "Youtube Trending",
                "trending"
            ],
            [
                "Whois Lookup_v3",
                "Check Similarity"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 30501
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Screening and Matching Resumes",
                "api_name": "/sourcingResume",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Artificial intelligence News API",
                "api_name": "Get News From All News Sources Related to Artificial Intelligence",
                "api_description": "This end point will return back all the artificial intelligence news from all over the world.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "link": "str",
                    "source": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Artificial intelligence News API",
                "api_name": "Get Recent News From a Single News Source",
                "api_description": "This will return all the artificial intelligence news from a single news source.",
                "required_parameters": [
                    {
                        "name": "paperId",
                        "type": "string",
                        "description": "",
                        "default": "forbes"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "url": "str",
                    "source": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Text Sentiment API",
                "api_name": "List Endpoints (Can be used as an endpoint health-check)",
                "api_description": "This endpoint lists the possible endpoints to connect to.\n\nAlias: /api/sentiment",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "AION",
                "api_name": "List my Bots",
                "api_description": "Once you have created your bot, you can manage the configurations by using the \u201caccess_token\u201d received during authentication. Here you can view a list of all the bots you have created on the platform.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Text Mood Changer AI",
                "api_name": "Mood List",
                "api_description": "list of moods available",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        "list of str with length 12"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a trip to New York City next month and I want to stay updated on the latest news about artificial intelligence. Can you provide me with the recent news from Forbes? Additionally, I would like to know the sentiment analysis of the articles using the Text Sentiment API.",
        "relevant APIs": [
            [
                "Artificial intelligence News API",
                "Get Recent News From a Single News Source"
            ],
            [
                "Text Sentiment API",
                "List Endpoints (Can be used as an endpoint health-check)"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 28662
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "Python Libraries tst",
                "api_name": "View User List",
                "api_description": "Gets a user\u2019s list of favorite libraries.",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "userId": "int",
                    "username": "str",
                    "language": "str",
                    "favorites": [
                        "list of str with length 3"
                    ]
                }
            },
            {
                "category_name": "Database",
                "tool_name": "Pan Card Verification at Lowest price",
                "api_name": "Verify PAN Card",
                "api_description": "Instant PAN Card Verification using government database check.\n\nThis PAN Card Verification API instantly verifies details of a PAN Card by confirming them from the Government database.\n\nThis makes your onboarding process faster, safer and smarter. With our PAN verification, you can be confident that the individuals or merchants you onboard hold a valid PAN card and have provided you with the right identity proof.",
                "required_parameters": [
                    {
                        "name": "panNumber",
                        "type": "string",
                        "description": "",
                        "default": "FNLPM8635N"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "errorCode": "int",
                    "message": "str",
                    "error": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "List Movies v3",
                "api_name": "List Movies",
                "api_description": "Used to list and search through out all the available movies. Can sort, filter, search and order the results",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "Used to filter by a given genre (See http://www.imdb.com/genre/ for full list)",
                        "default": "all"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Orders the results by either Ascending or Descending order.",
                        "default": "desc"
                    },
                    {
                        "name": "with_rt_ratings",
                        "type": "BOOLEAN",
                        "description": "Returns the list with the Rotten Tomatoes rating included.",
                        "default": "false"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorts the results by choosen value.",
                        "default": "date_added"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "used to see the next page of movies, eg limit=15 and page=2 will show you movies 15-30.",
                        "default": "1"
                    },
                    {
                        "name": "query_term",
                        "type": "STRING",
                        "description": "Used for movie search, matching on: Movie Title/IMDB Code, Actor Name/IMDb, Director Name/IMDb Code.",
                        "default": "0"
                    },
                    {
                        "name": "quality",
                        "type": "STRING",
                        "description": "Used to filter by a given quality.",
                        "default": "all"
                    },
                    {
                        "name": "minimum_rating",
                        "type": "NUMBER",
                        "description": "used to filter movie by a given minimum IMDB rating.",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "The limit of results per page that has been set.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "List Movies v3",
                "api_name": "Movie Suggestions",
                "api_description": "Returns 4 related movies as suggestions for the user",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "movie_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "status_message": "str",
                    "data": {
                        "movie_count": "int",
                        "movies": [
                            {
                                "id": "int",
                                "url": "str",
                                "imdb_code": "str",
                                "title": "str",
                                "title_english": "str",
                                "title_long": "str",
                                "slug": "str",
                                "year": "int",
                                "rating": "float",
                                "runtime": "int",
                                "genres": [
                                    "list of str with length 5"
                                ],
                                "summary": "str",
                                "description_full": "str",
                                "synopsis": "str",
                                "yt_trailer_code": "str",
                                "language": "str",
                                "mpa_rating": "str",
                                "background_image": "str",
                                "background_image_original": "str",
                                "small_cover_image": "str",
                                "medium_cover_image": "str",
                                "state": "str",
                                "torrents": [
                                    {
                                        "url": "str",
                                        "hash": "str",
                                        "quality": "str",
                                        "seeds": "int",
                                        "peers": "int",
                                        "size": "str",
                                        "size_bytes": "int",
                                        "date_uploaded": "str",
                                        "date_uploaded_unix": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "date_uploaded": "str",
                                "date_uploaded_unix": "int",
                                "_list_length": 4
                            }
                        ]
                    },
                    "@meta": {
                        "server_time": "int",
                        "server_timezone": "str",
                        "api_version": "int",
                        "execution_time": "str"
                    }
                }
            },
            {
                "category_name": "Database",
                "tool_name": "List Movies v3",
                "api_name": "Movie Parental Guides",
                "api_description": "Returns all the parental guide ratings for the specified movie",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "status_message": "str",
                    "@meta": {
                        "server_time": "int",
                        "server_timezone": "str",
                        "api_version": "int",
                        "execution_time": "str"
                    }
                }
            },
            {
                "category_name": "Database",
                "tool_name": "Nurse Verification",
                "api_name": "GET Call",
                "api_description": "Used to fetch api result using the request id received in responses.",
                "required_parameters": [
                    {
                        "name": "request_id",
                        "type": "STRING",
                        "description": "",
                        "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm hosting a movie-themed party and I want to display movie suggestions. Can you suggest four related movies for the party? Also, fetch the list of favorite libraries for user 1 from the Python Libraries tst API.",
        "relevant APIs": [
            [
                "List Movies v3",
                "Movie Suggestions"
            ],
            [
                "Python Libraries tst",
                "View User List"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 11448
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "AI Content Detector_v2",
                "api_name": "chat gpt detector",
                "api_description": "detector",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "",
                        "default": "Christmas is one of the most widely celebrated holidays in the world. It is a time of joy, love, and giving, and is traditionally celebrated on December 25th every year. The holiday has its roots in Christianity, where it commemorates the birth of Jesus Christ, but it is now celebrated by people of all religions and cultures.  Christmas is a time when families and friends come together to celebrate and enjoy each other's company. It is a time to share meals, exchange gifts, and participate in various traditions and activities. One of the most beloved traditions of Christmas is decorating a Christmas tree. This tradition originated in Germany and has since spread around the world. Families often decorate their trees with lights, ornaments, and tinsel.  Another beloved tradition is the exchange of gifts. Many people spend weeks or even months searching for the perfect gift for their loved ones. Giving and receiving gifts is a way to show love and appreciation for one another, and it is a way to bring joy to those around us.  Christmas is also a time for giving back to those in need. Many people donate their time, money, or resources to charities and organizations that help those who are less fortunate. This spirit of giving is one of the most important aspects of Christmas and helps to spread love and kindness to those who need it most.  In addition to these traditions, there are many other customs associated with Christmas. These include caroling, baking Christmas cookies, and watching Christmas movies. Each of these traditions brings a unique sense of joy and excitement to the holiday season.  In conclusion, Christmas is a time of joy, love, and giving. It is a time to come together with friends and family and celebrate the holiday season. While the holiday has its roots in Christianity, it is now celebrated by people of all cultures and religions around the world. Christmas traditions bring people together and create memories that will last a lifetime."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Screening and Matching Resumes",
                "api_name": "/sourcingResume",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Face liveness check",
                "api_name": "GET Call",
                "api_description": "Used to fetch api result using the request id received in responses.",
                "required_parameters": [
                    {
                        "name": "request_id",
                        "type": "STRING",
                        "description": "",
                        "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "ToxDetectAI - AI Powered Toxic Comment Detector ",
                "api_name": "\ud83d\udd25 ToxDetectAI API",
                "api_description": "\ud83d\ude00 Our AI-powered endpoint can analyze text in over 140 languages",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "",
                        "default": "Our AI-powered endpoint can analyze text in over 140 languages, try it now :)"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Midjourney best experience",
                "api_name": "get job by task id",
                "api_description": "you can get the generate job  and  action job status by the task_id, and the task_id will expired at 24 hours after",
                "required_parameters": [
                    {
                        "name": "task_id",
                        "type": "STRING",
                        "description": "",
                        "default": "6aa04ebe-3590-4d51-a499-7c2daf51cca2"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Midjourney best experience",
                "api_name": "ping",
                "api_description": "not for use",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Please analyze the given text 'This is a great product.' I want to know the toxicity score of this text. Additionally, fetch the details of the job with the task ID '68bbb910-da9b-4d8a-9a1d-4bd878b19846' from Midjourney best experience.",
        "relevant APIs": [
            [
                "ToxDetectAI - AI Powered Toxic Comment Detector ",
                "\ud83d\udd25 ToxDetectAI API"
            ],
            [
                "Midjourney best experience",
                "get job by task id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 86291
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Appointment System API",
                "api_name": "Appointment Time List",
                "api_description": "EndPoint gets Appointment Time List by Day. EndPoint gets date parameter and returns List of Appointment Times of that date. In the list there is available field, This field indicates whether there is an appointment at the specified time.\nParameter Descriptions : \ndate --> The day that hours will be return\nclinicName --> Name of the clinic\n\nReturn Value: \nThe EndPoint returns json object in format below.\n[\n{\"id\":1\n\"hLabel\":\"07:00\"\n\"available\":\"true\"\n\"hour\":7\n\"minute\":0\n\"interval\":15\n},\n......\n]\n\nId --> is the key value of the record.\nhLabel --> is the string format of the time\navailable --> if is true that means the time is suitable for new record. If it is false that means there is another appointment in this time interval. \nhour --> Hour of the appointment time.\nminute --> Minute of the appointment time.\ninterval  --> this field points out to the interval whether 15 minutes or 30 minutes",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "",
                        "default": "2022.09.05"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "clinicName",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoClinic"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "hLabel": "str",
                    "available": "str",
                    "hour": "int",
                    "minute": "int",
                    "interval": "int"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Appointment System API",
                "api_name": "Get Appointments",
                "api_description": "EndPoints returns all appointments in the date. \n\nParameter Description :\ndate : the date the appointments is requested\nclinicName : Name of the clinic\n\nReturn Value : \nIt returns json object. Json contains all the appointments in requested date.\n\nJson Format :\n\nhLabel:\"07:00\"\nid:5\naDay:\"2022-09-09T00:00:00\"\naHour:58\naName:\"Efe Kemal TASAR\"\naTel:\"+905376853054\"\naType:\"Appoint\"",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "",
                        "default": "2022.09.09"
                    },
                    {
                        "name": "clinicName",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoUser"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Appointment System API",
                "api_name": "Login",
                "api_description": "This Endpoint is use for login to the system and getting the Api Key for the clinic. It needs username and password as query parameters. \nParameter Descriptions:\nusername --> parameter for username in the system. It is the same with username while creating the account.\npassword --> password for the username. It is same with the password while creating the acoount.\n\nReturn Value\nThis Endpoint returns string value.\nIf you get a sting with 6+ long this means that you have successfully passed username and password check and you are getting the Accesskey fort he system.\nIf you get \u201cW1\u201d it means a warning that your username doesn\u2019t exists\nIf you get \u201cW2\u201d it means a warning that your password is not correct.\nIt you get \u201cE1\u201d it means a programmatic internal error. If you get E1 in the next calls you can get help from us.",
                "required_parameters": [
                    {
                        "name": "password",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoPass"
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoUser"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "ExerciseDB",
                "api_name": "List of all exercises",
                "api_description": "Fetch all exercises (non-paginated)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bodyPart": "str",
                    "equipment": "str",
                    "gifUrl": "str",
                    "id": "str",
                    "name": "str",
                    "target": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "ExerciseDB",
                "api_name": "List by equipment",
                "api_description": "Fetch exercises by type of equipment",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "`equipment` property of exercise object",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "ExerciseDB",
                "api_name": "List of equipment",
                "api_description": "Fetch a list of available equipment",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "planetaryoverview",
                "api_description": "get the Planetary Overview of the day",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "planet": "str",
                    "sign": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "hoscoscope",
                "api_description": "retrieve the horoscope for a specific sign and date",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sign",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a fitness retreat and need a variety of exercises for the participants. Can you provide me with a list of exercises that target the back, chest, and shoulders? Additionally, fetch the horoscope for a specific sign and date to create personalized workout plans.",
        "relevant APIs": [
            [
                "ExerciseDB",
                "List of all exercises"
            ],
            [
                "ExerciseDB",
                "List by equipment"
            ],
            [
                "Horostory",
                "hoscoscope"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 9959
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Email Address Validator",
                "api_name": "Validate Email Address",
                "api_description": "Determine firsthand if the email is deliverable and working",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@gmail.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "timestamp": "int",
                    "data": {
                        "valid": "bool",
                        "validators": {
                            "regex": {
                                "valid": "bool"
                            },
                            "typo": {
                                "valid": "bool"
                            },
                            "disposable": {
                                "valid": "bool"
                            },
                            "mx": {
                                "valid": "bool"
                            },
                            "smtp": {
                                "valid": "bool",
                                "reason": "str"
                            }
                        },
                        "reason": "str",
                        "email": "str"
                    }
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Email API",
                "api_name": "Get Fake Email Address",
                "api_description": "Get a fake business email address and job title",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "email": "str",
                    "job_title": "str"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Verify Email",
                "api_name": "Verify Email",
                "api_description": "Verify Email Address",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "string",
                        "description": "",
                        "default": "test@example.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to verify the authenticity of an email address. The email is 'jane.doe@example.com'. Can you check if it is a valid and working email? Also, provide me with a fake business email address and job title.",
        "relevant APIs": [
            [
                "Verify Email",
                "Verify Email"
            ],
            [
                "Email API",
                "Get Fake Email Address"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 65468
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "\u200b/youtube/weekly/{year}/{nthweek}",
                "api_description": "Most viewed youtube music videos on ...nth week of  ....year  (E.g 21st week of 2019: /youtube/weekly/2019/21)",
                "required_parameters": [
                    {
                        "name": "nthweek",
                        "type": "string",
                        "description": "",
                        "default": "21"
                    },
                    {
                        "name": "year",
                        "type": "string",
                        "description": "",
                        "default": "2019"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "status": "str",
                    "video": "str",
                    "link": "str",
                    "weeks": "str",
                    "peak": "str",
                    "views": "str",
                    "views_delta": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/topartist/{year}",
                "api_description": "Youtube top artist of all time / or at a specific year.\nLeave {year} blank for all time data, or specify a year.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "year",
                        "type": "string",
                        "description": "",
                        "default": "2019"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "artist": "str",
                    "views": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/video/{videoID}",
                "api_description": "Specific Youtube music video statistics",
                "required_parameters": [
                    {
                        "name": "videoID",
                        "type": "string",
                        "description": "",
                        "default": "kJQP7kiw5Fk"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "track": "str",
                    "link": "str",
                    "general": {
                        "Published": "str",
                        "Total views": "str",
                        "Expected to hit 8,500,000,000 on": "str",
                        "Most views in a day": "str",
                        "Likes": "str"
                    },
                    "other_data": [
                        "list of str with length 20"
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Miza",
                "api_name": "IP address check",
                "api_description": "Retrieves the host (server) and remote (your) IP addresses. A fast and responsive endpoint that is also handy for checking whether the service is online.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Music",
                "tool_name": "Miza",
                "api_name": "Playlist extraction",
                "api_description": "Produces information on all songs in a playlist (YouTube, Spotify, SoundCloud, etc), with much faster response time than most other available tools. Currently O(1) for YouTube, O(log n) for Spotify, and O(log n) for SoundCloud. See [this article](http://i.mizabot.xyz/f/Bc9AUlCRkA) for the algorithm behind the YouTube playlists specifically.",
                "required_parameters": [
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.youtube.com/playlist?list=PLXFwTY00FRUUZzL_Vjhy-bE8WIao3eyOi"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Music",
                "tool_name": "Miza",
                "api_name": "Retrieve file",
                "api_description": "Retrieves a file hosted by the server. This link is usually obtained by replacing the /p/ path in the /merge and /edit endpoint responses with /f/ or /d/. The request fails if the file requested does not exist or has been deleted.",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "string",
                        "description": "",
                        "default": "ABCDEF"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Music",
                "tool_name": "SoundCloud Charts API",
                "api_name": "Trending and Top Charts",
                "api_description": "Get trending (New & Hot) and top charts from SoundCloud",
                "required_parameters": [
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "all-music, ambient, classical, hiphoprap, alternativerock, country, danceedm, dancehall, deephouse, disco, drumbass, dubstep, electronic, folksingersongwriter, hiphoprap, house, indie, jazzblues, latin, metal, piano, pop, reggae, reggaeton, rock, soundtrack, techno, trance, trap, triphop, world .\nAll in this format: soundcloud:genres:disco",
                        "default": "soundcloud:genres:rbsoul"
                    },
                    {
                        "name": "kind",
                        "type": "STRING",
                        "description": "'trending' or 'top'",
                        "default": "trending"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "50"
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "ISO2 Country codes like US, DE, GB. Use in this format:\nsoundcloud:regions:DE",
                        "default": "soundcloud:regions:US"
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": {\"collection\": [{\"score\": \"float\", \"track\": {\"artwork_url\": \"str\", \"caption\": \"NoneType\", \"comment_count\": \"int\", \"commentable\": \"bool\", \"created_at\": \"str\", \"description\": \"str\", \"display_date\": \"str\", \"download_count\": \"int\", \"downloadable\": \"bool\", \"duration\": \"int\", \"embeddable_by\": \"str\", \"full_duration\": \"int\", \"genre\": \"str\", \"has_downloads_left\": \"bool\", \"id\": \"int\", \"kind\": \"str\", \"label_name\": \"NoneType\", \"last_modified\": \"str\", \"license\": \"str\", \"likes_count\": \"int\", \"media\": {\"transcodings\": [{\"duration\": \"int\", \"format\": {\"mime_type\": \"str\", \"protocol\": \"str\"}, \"preset\": \"str\", \"quality\": \"str\", \"snipped\": \"bool\", \"url\": \"str\", \"_list_length\": 3}]}, \"monetization_model\": \"str\", \"permalink\": \"str\", \"permalink_url\": \"str\", \"playback_count\": \"int\", \"policy\": \"str\", \"public\": \"bool\", \"publisher_metadata\": {\"artist\": \"str\", \"contains_music\": \"bool\", \"explicit\": \"bool\", \"id\": \"int\", \"isrc\": \"str\", \"urn\": \"str\"}, \"purchase_title\": \"NoneType\", \"purchase_url\": \"NoneType\", "
            },
            {
                "category_name": "Music",
                "tool_name": "MusicAPI",
                "api_name": "/public/search/introspection",
                "api_description": "Allows you to fetch all different enums needed for sending API requests",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sources": [
                        "list of str with length 20"
                    ],
                    "authSources": [
                        "list of str with length 7"
                    ],
                    "types": [
                        "list of str with length 2"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a family trip and I want to create a memorable vacation video. Can you retrieve a file hosted by the server with the path 'ABCDEF'? Moreover, I need information on the most viewed YouTube music videos during the 21st week of 2019. This will help me choose the perfect background music for my video.",
        "relevant APIs": [
            [
                "Miza",
                "Retrieve file"
            ],
            [
                "MusicData API",
                "\u200b/youtube/weekly/{year}/{nthweek}"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 84677
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Background Remover",
                "api_name": "getImage",
                "api_description": "Retuns the result of an image that was previously handled by autoremove route for the given image Id.\naccepts two parameters:\n  - imageId: The Id of the image to get.\n  - recompute: bollean, if set to true, asks the server to remove the backgorund again for the specified ID (costs credits).\n",
                "required_parameters": [
                    {
                        "name": "imageId",
                        "type": "STRING",
                        "description": "ID of the image to get",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "recompute",
                        "type": "BOOLEAN",
                        "description": "ask the server to remove the background again (cost credits)",
                        "default": true
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Background Remover",
                "api_name": "getAccount",
                "api_description": "Returns a description of your user account information.\nUseful to get the remaining credits on your account\n",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "state": "str",
                    "statusCode": "int",
                    "code": "str",
                    "title": "str",
                    "message": "NoneType"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Fashion",
                "api_name": "Get version",
                "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Image Text Recognition",
                "api_name": "Supported Languages",
                "api_description": "3 letters language codes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"afr\": \"str\", \"amh\": \"str\", \"ara\": \"str\", \"asm\": \"str\", \"aze\": \"str\", \"bel\": \"str\", \"ben\": \"str\", \"bod\": \"str\", \"bos\": \"str\", \"bul\": \"str\", \"cat\": \"str\", \"ceb\": \"str\", \"ces\": \"str\", \"chi_sim\": \"str\", \"chi_tra\": \"str\", \"chr\": \"str\", \"cym\": \"str\", \"dan\": \"str\", \"deu\": \"str\", \"dzo\": \"str\", \"ell\": \"str\", \"eng\": \"str\", \"enm\": \"str\", \"epo\": \"str\", \"est\": \"str\", \"eus\": \"str\", \"fas\": \"str\", \"fin\": \"str\", \"fra\": \"str\", \"frm\": \"str\", \"gle\": \"str\", \"glg\": \"str\", \"grc\": \"str\", \"guj\": \"str\", \"hat\": \"str\", \"heb\": \"str\", \"hin\": \"str\", \"hrv\": \"str\", \"hun\": \"str\", \"iku\": \"str\", \"ind\": \"str\", \"isl\": \"str\", \"ita\": \"str\", \"jav\": \"str\", \"jpn\": \"str\", \"kan\": \"str\", \"kat\": \"str\", \"kaz\": \"str\", \"khm\": \"str\", \"kir\": \"str\", \"kor\": \"str\", \"lao\": \"str\", \"lat\": \"str\", \"lav\": \"str\", \"lit\": \"str\", \"mal\": \"str\", \"mar\": \"str\", \"mkd\": \"str\", \"mlt\": \"str\", \"msa\": \"str\", \"mya\": \"str\", \"nep\": \"str\", \"nld\": \"str\", \"nor\": \"str\", \"ori\": \"str\", \"osd\": \"str\", \"pan\": \"str\", \"pol\": \"str\", \"por\": \"str\", \"pus\": \"str\", \"ron\": \"str"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to know the version of the Fashion API. Fetch the supported languages for image text recognition. Additionally, remove the background from an image with the ID 'ghi123' and provide the result. Furthermore, fetch the remaining credits on my Background Remover account.",
        "relevant APIs": [
            [
                "Fashion",
                "Get version"
            ],
            [
                "Image Text Recognition",
                "Supported Languages"
            ],
            [
                "Background Remover",
                "getImage"
            ],
            [
                "Background Remover",
                "getAccount"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 21584
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Get all jokes",
                "api_description": "Get all the jokes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Search jokes",
                "api_description": "Search jokes using the keywords of joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Query joke using ID",
                "api_description": "Search anime joke using joke ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "4"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "4D Results",
                "api_name": "Get 4D Company List",
                "api_description": "Return available company code and name.\nCode can use as parameter to query the Get 4D Results method.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "4D Results",
                "api_name": "Get Past Results (1 year)",
                "api_description": "Return all company 4D Results within a specific date range.\n(Up to 1 year data and only available for ULTRA PLAN subscriber)",
                "required_parameters": [
                    {
                        "name": "start",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-01-01"
                    },
                    {
                        "name": "end",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-31"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "4D Results",
                "api_name": "Get Draw Dates (2023)",
                "api_description": "List of draw dates in 2023.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Joke1",
                "api_name": "/random_joke",
                "api_description": "Returns a random joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family and I are planning a game night and we need some jokes to make it more enjoyable. Search the Anime Jokes API for jokes containing the keyword 'fun'. Additionally, fetch a random joke from the Joke1 API to keep the laughter going.",
        "relevant APIs": [
            [
                "Anime Jokes",
                "Search jokes"
            ],
            [
                "Joke1",
                "/random_joke"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54246
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Text to Speech PRO",
                "api_name": "Get List of Audios",
                "api_description": "Get List of Audios",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Text to Speech PRO",
                "api_name": "Get List of Voices",
                "api_description": "Get List of Voices",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "ARImageSynthesizer",
                "api_name": "My Images",
                "api_description": "Get all generated images' information in a JSON response. Images can be accessed at `/get` endpoint with the given hash.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "image": [
                        {
                            "engine": "str",
                            "guidanceScale": "float",
                            "hash": "str",
                            "height": "int",
                            "img2img_image": "NoneType",
                            "img2img_strength": "NoneType",
                            "inferenceSteps": "int",
                            "negativePrompt": "str",
                            "prompt": "str",
                            "ready": "bool",
                            "requestTime": "int",
                            "style": "str",
                            "uniqueID": "str",
                            "userName": "str",
                            "width": "int",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "ARImageSynthesizer",
                "api_name": "My Images by ID",
                "api_description": "Similar to `/my_images` endpoint, returns generated images' information in a JSON response filtered by given `id`.",
                "required_parameters": [
                    {
                        "name": "uniqueID",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "image": [
                        {
                            "engine": "str",
                            "guidanceScale": "float",
                            "hash": "str",
                            "height": "int",
                            "img2img_image": "NoneType",
                            "img2img_strength": "NoneType",
                            "inferenceSteps": "int",
                            "negativePrompt": "str",
                            "prompt": "str",
                            "ready": "bool",
                            "requestTime": "int",
                            "style": "str",
                            "uniqueID": "str",
                            "userName": "str",
                            "width": "int",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "ARImageSynthesizer",
                "api_name": "Get Image",
                "api_description": "Retrieve generated image with given `hash`.",
                "required_parameters": [
                    {
                        "name": "hash",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "returnType",
                        "type": "STRING",
                        "description": "",
                        "default": "image"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Face Studio",
                "api_name": "/generate",
                "api_description": "Generate a face given optional parameters: **gender**, **age**, and **ethnicity**. Ethnicity is an approximation of the corresponding ethnic/racial phenotype for a given option.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ethnicity",
                        "type": "STRING",
                        "description": "For ethnicity, the following options are available: *european*, *african*, *west_asian*, *south_asian*, *east_asian*, *southeast_asian*, and *latin_american*. If not specified, the ethnic phenotype of the face will be random.",
                        "default": "european"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "For gender, the following options are available: *male* and *female*. If not specified, the gender of the face can be either male or female.",
                        "default": "female"
                    },
                    {
                        "name": "age",
                        "type": "STRING",
                        "description": "For age, the following options are available: *10s*, *20s*, *30s*, *40s*, *50s*, and *60s*. For more fine-grained control, it is also possible to input a specific *numeric* value for age. If age is not specified, then the age of the face will be random.",
                        "default": "20s"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm writing a blog post on the latest trends in technology and I need some unique images to accompany the content. Can you suggest some images generated by the ARImageSynthesizer API? Also, I would like to include a custom-generated face image to represent the future of technology using the Face Studio API.",
        "relevant APIs": [
            [
                "ARImageSynthesizer",
                "My Images"
            ],
            [
                "Face Studio",
                "/generate"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 58028
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Ebay de Product Details Page Scraper",
                "api_name": "Detail Page",
                "api_description": "Get all Data from https://www.ebay.de/itm/ITEM_ID\n\n**Payload:** ITEM_ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "265488616472"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Price Comparison",
                "api_name": "details",
                "api_description": "get details on the product",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "An identifier can be any of the following:\n\n- UPC\n- EAN\n- ISBN\n- GTIN\n- Amazon ASIN",
                        "default": "611247373064"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "US"
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "",
                        "default": "-122.49493"
                    },
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "",
                        "default": "37.777805"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ID": "int",
                    "ASIN": "str",
                    "Title": "str",
                    "BasePrice": "float",
                    "FormattedBasePrice": "str",
                    "BestPrice": "float",
                    "FormattedBestPrice": "str",
                    "ProductCategories": [
                        {
                            "Source": "str",
                            "Name": "str",
                            "FullName": "str",
                            "_list_length": 1
                        }
                    ],
                    "Media": {
                        "XImage": "str",
                        "OriginalWidth": "int",
                        "OriginalHeight": "int",
                        "AverageColor": "str",
                        "DominantColor": "str",
                        "ImageAlternatives": [
                            "list of str with length 14"
                        ]
                    },
                    "Attributes": [
                        {
                            "Type": "str",
                            "Key": "str",
                            "Value": "str",
                            "_list_length": 4
                        }
                    ],
                    "Offers": [
                        {
                            "ID": "NoneType",
                            "Merchant": "str",
                            "ProductID": "int",
                            "Quality": "str",
                            "Venue": "str",
                            "Price": "float",
                            "FormattedPrice": "str",
                            "Link": "str",
                            "Links": {
                                "AffiliateLink": "str",
                                "CashbackLink": "NoneType",
                                "ParentLink": "NoneType",
                                "ParentAffiliateLink": "NoneType",
                                "ParentCashbackLink": "NoneType"
                            },
                            "InStockStatus": "str",
                            "BasePrice": "int",
                            "FormattedBasePrice": "str",
                            "_list_length": 1
                        }
                    ],
                    "Raw": "NoneType"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Price Comparison",
                "api_name": "offers",
                "api_description": "list offers for the product",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "An identifier can be any of the following:\n\n- UPC\n- EAN\n- ISBN\n- GTIN\n- Amazon ASIN",
                        "default": "611247373064"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "",
                        "default": "37.777805"
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "",
                        "default": "-122.49493"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target",
                "api_name": "products/v2/list-recommended",
                "api_description": "List more products to consider",
                "required_parameters": [
                    {
                        "name": "store_id",
                        "type": "NUMBER",
                        "description": "The value of location_id returned in .../stores/list endpoint",
                        "default": "911"
                    },
                    {
                        "name": "tcins",
                        "type": "NUMBER",
                        "description": "The value of tcin field returned in .../products/list endpoint",
                        "default": "54191097"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "errors": [
                        {
                            "message": "str",
                            "_list_length": 1
                        }
                    ],
                    "data": {}
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target",
                "api_name": "stores/list",
                "api_description": "List available nearby store by zipcode, GEO location, or city name. One at a time, do NOT use them together at once.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "Zip code or postal code of area to look for stores, such as : 10009",
                        "default": "10009"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of city to look for stores, such as : california",
                        "default": ""
                    },
                    {
                        "name": "latlng",
                        "type": "STRING",
                        "description": "GEO location to look for around stores, such as : 36.839828,-119.727711",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"place\": \"str\", \"type\": \"str\", \"limit\": \"int\", \"within\": \"int\", \"unit\": \"str\", \"locale\": \"str\", \"count\": \"int\", \"locations\": [{\"location_id\": \"int\", \"type_code\": \"str\", \"type_description\": \"str\", \"status\": \"str\", \"distance\": \"float\", \"distance_unit\": \"str\", \"location_names\": [{\"name_type\": \"str\", \"name\": \"str\", \"_list_length\": 1}], \"address\": {\"address_line1\": \"str\", \"city\": \"str\", \"county\": \"str\", \"region\": \"str\", \"state\": \"str\", \"postal_code\": \"str\"}, \"capabilities\": [{\"capability_code\": \"str\", \"capability_name\": \"str\", \"_list_length\": 4}], \"physical_specifications\": {\"total_building_area\": \"int\"}, \"contact_information\": {\"building_area\": \"str\", \"telephone_type\": \"str\", \"telephone_number\": \"str\"}, \"geographic_specifications\": {\"latitude\": \"float\", \"longitude\": \"float\", \"time_zone_code\": \"str\", \"iso_time_zone\": \"str\"}, \"rolling_operating_hours\": {\"regular_event_hours\": {\"days\": [{\"sequence_number\": \"int\", \"date\": \"str\", \"day_name\": \"str\", \"is_open\": \"bool\", \"hours\": [{\"begin_time\": \""
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target",
                "api_name": "products/v2/get-details (Deprecated)",
                "api_description": "Get detail information of product",
                "required_parameters": [
                    {
                        "name": "store_id",
                        "type": "NUMBER",
                        "description": "The value of location_id returned in .../stores/list endpoint",
                        "default": "911"
                    },
                    {
                        "name": "tcin",
                        "type": "NUMBER",
                        "description": "The value of tcin field returned in .../products/list endpoint",
                        "default": "54191097"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "BestBuy Product Data API",
                "api_name": "BestBuyProductData",
                "api_description": "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "iphone"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to plan a trip to New York City with my friends. Can you provide me with the details of a specific product with ID 611247373064 in the Price Comparison tool? Additionally, find nearby stores in New York City using the Target tool.",
        "relevant APIs": [
            [
                "Price Comparison",
                "details"
            ],
            [
                "Target",
                "stores/list"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 35139
    },
    {
        "api_list": [
            {
                "category_name": "Medical",
                "tool_name": "Drug Info and Price History",
                "api_name": "genericname",
                "api_description": "Given a brand name, returns a generic name",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drug",
                        "type": "STRING",
                        "description": "",
                        "default": "advil"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generic_name": "str"
                }
            },
            {
                "category_name": "Medical",
                "tool_name": "Drug Info and Price History",
                "api_name": "Drug Info",
                "api_description": "Returns information about the given drug",
                "required_parameters": [
                    {
                        "name": "drug",
                        "type": "STRING",
                        "description": "",
                        "default": "advil"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"product_ndc\": \"str\", \"generic_name\": \"str\", \"labeler_name\": \"str\", \"brand_name\": \"str\", \"active_ingredients\": [{\"name\": \"str\", \"strength\": \"str\", \"_list_length\": 2}], \"finished\": \"bool\", \"packaging\": [{\"package_ndc\": \"str\", \"description\": \"str\", \"marketing_start_date\": \"str\", \"sample\": \"bool\", \"_list_length\": 21}], \"listing_expiration_date\": \"str\", \"openfda\": {\"manufacturer_name\": [\"list of str with length 1\"], \"rxcui\": [\"list of str with length 1\"], \"spl_set_id\": [\"list of str with length 1\"], \"is_original_packager\": [\"list of bool with length 1\"], \"nui\": [\"list of str with length 3\"], \"pharm_class_moa\": [\"list of str with length 1\"], \"pharm_class_cs\": [\"list of str with length 1\"], \"pharm_class_epc\": [\"list of str with length 1\"], \"unii\": [\"list of str with length 2\"]}, \"marketing_category\": \"str\", \"dosage_form\": \"str\", \"spl_id\": \"str\", \"product_type\": \"str\", \"route\": [\"list of str with length 1\"], \"marketing_start_date\": \"str\", \"product_id\": \"str\", \"application_number\": \"str\", \"br"
            },
            {
                "category_name": "Medical",
                "tool_name": "Drug Info and Price History",
                "api_name": "Price History",
                "api_description": "Returns an array of price histories when given a valid drug ID.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Medical",
                "tool_name": "Hapihub",
                "api_name": "Get Fixtures",
                "api_description": "Fetch a list of fixtures",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Medical",
                "tool_name": "Hapihub",
                "api_name": "Healthcheck",
                "api_description": "Service healtcheck endpoint",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "mode": "str",
                    "version": "str",
                    "build": {
                        "version": "str",
                        "builddate": "str",
                        "gitcommit": "str"
                    },
                    "hostname": "str"
                }
            },
            {
                "category_name": "Medical",
                "tool_name": "Hapihub",
                "api_name": "Version metadata",
                "api_description": "Retrieve the server's version metadata",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "mode": "str",
                    "version": "str",
                    "build": {
                        "version": "str",
                        "builddate": "str",
                        "gitcommit": "str"
                    },
                    "hostname": "str"
                }
            },
            {
                "category_name": "Medical",
                "tool_name": "23andMe",
                "api_name": "drug_responses",
                "api_description": "Our analysis of how each profile responds to these drugs (starred reports). status is reduced, typical, or increased for a person, not_applicable if the drug is not applicable to them (e.g., the oral contraceptives report is for women only), or null if they're not analyzed at any of the markers.",
                "required_parameters": [
                    {
                        "name": "profile_id",
                        "type": "STRING",
                        "description": "profile_id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Medical",
                "tool_name": "23andMe",
                "api_name": "carriers",
                "api_description": "Our analysis of whether or not each profile is a carrier for these diseases (starred reports). The person has 0, 1, or 2 mutations, or null if they're not analyzed at any of the markers. Normally, with one mutation, the person is considered a \"carrier\" and can pass the mutation to children; with two, the person is likely to be affected by the disease.",
                "required_parameters": [
                    {
                        "name": "profile_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Medical",
                "tool_name": "23andMe",
                "api_name": "genomes",
                "api_description": "Returns the entire profile's genome as a packed string of base pairs \"AACTGA...\". This ~2MB request returns over a million SNP locations, so you must specify profile_id. If the profile has not yet unlocked certain SNPs, they'll be replaced with __. To know which SNP corresponds to which index in the string, see this key.  When our genotyping chip is upgraded, the packed string and corresponding key will grow, but the changes will be backwards-compatible additions.",
                "required_parameters": [
                    {
                        "name": "profile_id",
                        "type": "STRING",
                        "description": "profile_id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Medical",
                "tool_name": "ZomiDictionary",
                "api_name": "ZomiDictionary",
                "api_description": "Zomi Dictionary",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am searching for the generic name of a drug. Can you help me with that? Also, I would like to access the Zomi Dictionary for some language translations.",
        "relevant APIs": [
            [
                "Drug Info and Price History",
                "genericname"
            ],
            [
                "ZomiDictionary",
                "ZomiDictionary"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 84585
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Flirty words",
                "api_name": "Generate flirty line",
                "api_description": "Generates a random flirty line",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram Downloader_v2",
                "api_name": "Get Media",
                "api_description": "Post, Photo, Video, Igtv, Reel, Profile Picture",
                "required_parameters": [
                    {
                        "name": "url_username",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.instagram.com/p/CqDpQo4piyE/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a singles mixer and I need some flirty lines to break the ice. Can you generate a few random flirty lines for me? Also, I'd like to download some interesting videos from Instagram to play during the event. Please fetch the media from these Instagram posts.",
        "relevant APIs": [
            [
                "Flirty words",
                "Generate flirty line"
            ],
            [
                "Instagram Downloader_v2",
                "Get Media"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 50406
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Amazon India Scraper_v3",
                "api_name": "Gets Products",
                "api_description": "Get The Product Details Using A Identifier(id)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "B098XK9BPC"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Amazon India Scraper_v3",
                "api_name": "Product Reviews",
                "api_description": "Get The Product's Reviews",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "B098XK9BPC"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Amazon Scrapper_v4",
                "api_name": "GET search results",
                "api_description": "GET search results",
                "required_parameters": [
                    {
                        "name": "searchQuery",
                        "type": "string",
                        "description": "",
                        "default": "sdfsdf"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Amazon Scrapper_v4",
                "api_name": "GET a product reviews",
                "api_description": "GET a product reviews",
                "required_parameters": [
                    {
                        "name": "productId",
                        "type": "string",
                        "description": "",
                        "default": "sdfsdfsdf"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Amazon Scrapper_v4",
                "api_name": "GET a product details",
                "api_description": "GET a product details.\nYou can get the product id from the URL when you search for a particular product. It is the next value after '/dp/'.\nEg: B08N5WG761 is the value we want from the url - \nhttps://www.amazon.in/Apple-MacBook-Chip-13-inch-256GB/dp/B08N5WG761/",
                "required_parameters": [
                    {
                        "name": "productId",
                        "type": "string",
                        "description": "",
                        "default": "B08N5WG761"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "\u00c7i\u00e7eksepeti Data",
                "api_name": "Get Comments from product id",
                "api_description": "Retrieve comments based on a product id.",
                "required_parameters": [
                    {
                        "name": "product_id",
                        "type": "STRING",
                        "description": "",
                        "default": "41892066"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "comments": [
                        "list of str with length 40"
                    ],
                    "stars": [
                        "list of int with length 40"
                    ]
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Amazon Data_v3",
                "api_name": "Get comments with product id",
                "api_description": "Retrieve comments based on a product id.",
                "required_parameters": [
                    {
                        "name": "product_id",
                        "type": "STRING",
                        "description": "",
                        "default": "B094NVF2V1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is planning to launch a new product and we need to gather customer feedback. Can you provide us with the comments and star ratings for the product with the ID 41892066? Additionally, we would like to get the comments for a different product with the ID B094NVF2V1.",
        "relevant APIs": [
            [
                "\u00c7i\u00e7eksepeti Data",
                "Get Comments from product id"
            ],
            [
                "Amazon Data_v3",
                "Get comments with product id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 34980
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Fast Hcaptcha Solver",
                "api_name": "Get Response",
                "api_description": "Get response using the Id received from the create Hcaptcha Request",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Everypixel Image Recognition",
                "api_name": "/quality",
                "api_description": "This method allows you to get the quality score for your photo. This service doesn't measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "content",
                        "type": "STRING",
                        "description": "You can also send an actual image files for scoring.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "Image URL to perform scoring on.",
                        "default": "http://image.everypixel.com/2014.12/67439828186edc79b9be81a4dedea8b03c09a12825b_b.jpg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quality": {
                        "score": "float"
                    },
                    "status": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Everypixel Image Recognition",
                "api_name": "/keywords",
                "api_description": "By sending an image to this method you can get a list of suggested keywords. You may specify a number of returned words or a threshold of its minimum score. Just provide num_keywords or threshold parameter to this method.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "content",
                        "type": "STRING",
                        "description": "You can also send an actual image files for auto-tagging.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "Image URL to perform auto-tagging on.",
                        "default": "http://image.everypixel.com/2014.12/67439828186edc79b9be81a4dedea8b03c09a12825b_b.jpg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "keywords": [
                        {
                            "keyword": "str",
                            "score": "float",
                            "_list_length": 14
                        }
                    ],
                    "status": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Everypixel Image Recognition",
                "api_name": "/quality_ugc",
                "api_description": "The main difference between Stock photo scoring and this model is in the training dataset. User-Generated Photo Scoring is a model trained on a 347 000 of user photos from Instagram. Estimation parameters for this model were prepared by a group of 10 professional photographers. Scoring methods are based on five classes: very bad (0-20), bad (20-40), normal (40-60), good (60-80) and excellent (80-100).  This model is designed to evaluate user photos taken both by a professional camera and by a camera of a smartphone. It doesn't estimate the plot and do not measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "content",
                        "type": "STRING",
                        "description": "You can also send an actual image files for scoring.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "Image URL to perform scoring on.",
                        "default": "http://image.everypixel.com/2014.12/67439828186edc79b9be81a4dedea8b03c09a12825b_b.jpg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quality": {
                        "score": "float",
                        "class": "int"
                    },
                    "status": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "General Classification",
                "api_name": "Get version",
                "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "General Classification",
                "api_name": "Get list of algorithms",
                "api_description": "Service provides alternative algorithms that may be used for image classification.\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to surprise my partner with a romantic dinner at home. Can you recommend some delicious recipes for a three-course meal? Also, provide me with a list of ingredients required for each recipe and suggest some romantic background music playlists.",
        "relevant APIs": [
            [
                "Everypixel Image Recognition",
                "/keywords"
            ],
            [
                "Everypixel Image Recognition",
                "/quality"
            ],
            [
                "General Classification",
                "Get list of algorithms"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 21802
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "GetBooksInfo",
                "api_name": "Search",
                "api_description": "Search Book by its name",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": "empty list"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "nail",
                "api_name": "nail",
                "api_description": "regOjooo",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Helioviewer v1",
                "api_name": "downloadMovie",
                "api_description": "Download a custom movie in one of three file formats.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Unique movie identifier (provided by the response to a `queueMovie` request).",
                        "default": "VXvX5"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Movie Format (`mp4`, `webm`, or `flv`).",
                        "default": "mp4"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hq",
                        "type": "BOOLEAN",
                        "description": "Optionally download a higher-quality movie file (valid for .mp4 movies only, ignored otherwise).",
                        "default": "checked"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Helioviewer v1",
                "api_name": "getJP2Header",
                "api_description": "Get the XML header embedded in a JPEG2000 image. Includes the FITS header as well as a section of Helioviewer-specific metadata.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "Unique JP2 image identifier.",
                        "default": "7654321"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Wrap the response object in a function call of your choosing.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "errno": "int"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Helioviewer v1",
                "api_name": "shortenURL",
                "api_description": "Shorten a Helioviewer.org URL with the bit.ly URL shortening web service.",
                "required_parameters": [
                    {
                        "name": "queryString",
                        "type": "STRING",
                        "description": "URL-encoded query string.",
                        "default": "date%3D2014-02-25T15%3A18%3A07.000Z%26imageScale%3D2.4204409%26centerX%3D-410.06307838566283%26centerY%3D-244.6662219973343%26imageLayers%3D%255BSDO%2CAIA%2CAIA%2C304%2C1%2C100%255D%26eventLayers%3D%26eventLabels%3Dtrue"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Wrap the response object in a function call of your choosing.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Random Ukrainian Word",
                "api_name": "getRandomWords",
                "api_description": "Get random Ukrainian words.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "length",
                        "type": "NUMBER",
                        "description": "Setting word exact length",
                        "default": ""
                    },
                    {
                        "name": "maxLength",
                        "type": "NUMBER",
                        "description": "Setting word maximum length",
                        "default": "6"
                    },
                    {
                        "name": "excludes",
                        "type": "STRING",
                        "description": "Setting the letters which word should not include",
                        "default": "\u043a\u043b\u0438"
                    },
                    {
                        "name": "minLength",
                        "type": "NUMBER",
                        "description": "Setting word minimum length",
                        "default": "2"
                    },
                    {
                        "name": "startsWith",
                        "type": "STRING",
                        "description": "Setting the letters with which the word should begin",
                        "default": "\u0432\u043e"
                    },
                    {
                        "name": "endsWith",
                        "type": "STRING",
                        "description": "Setting the letters with which the word should end",
                        "default": "\u044f"
                    },
                    {
                        "name": "amount",
                        "type": "NUMBER",
                        "description": "Setting amount of requested words",
                        "default": "1"
                    },
                    {
                        "name": "includes",
                        "type": "STRING",
                        "description": "Setting the letters which word should include",
                        "default": "\u043e\u043b"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "word": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Random Words",
                "api_name": "Get multiple random words",
                "api_description": "Get multiple random words (i.e. min 2 and max 20) from a list of 5500+ words\n\nImportant Notes:\n1. *count* must be a valid number between 2 and 20 (both 2 and 20 included)\n2. *wordLength* must not be used with minLength and/or maxLength",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "The word count must be between 2 and 20",
                        "default": "5"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "endsWith",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "wordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "includes",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beginsWith",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "excludes",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Education",
                "tool_name": "Random Words",
                "api_name": "Get a random word",
                "api_description": "Returns a random words from a list of more than 5500+ words\n\nImportant Note: \n1. *wordLength* must not be used with minLength and/or maxLength",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "wordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "excludes",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beginsWith",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "endsWith",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "includes",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maxLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a charity event to raise awareness for animal rights. Can you recommend a book that highlights the importance of compassion towards animals? Additionally, provide me with a random word that symbolizes unity and empathy.",
        "relevant APIs": [
            [
                "GetBooksInfo",
                "Search"
            ],
            [
                "Random Words",
                "Get a random word"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 69637
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Memeados",
                "api_name": "drakelikehate",
                "api_description": "Generate Drake Likes and Hates meme",
                "required_parameters": [
                    {
                        "name": "text2",
                        "type": "STRING",
                        "description": "",
                        "default": "This text is liked."
                    },
                    {
                        "name": "text1",
                        "type": "STRING",
                        "description": "",
                        "default": "This text is hated"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Memeados",
                "api_name": "Google Fake Autocomplete",
                "api_description": "Generate Fake google autocomplete",
                "required_parameters": [
                    {
                        "name": "text1",
                        "type": "STRING",
                        "description": "",
                        "default": "Search"
                    },
                    {
                        "name": "text3",
                        "type": "STRING",
                        "description": "",
                        "default": "search autocomplete 2"
                    },
                    {
                        "name": "text2",
                        "type": "STRING",
                        "description": "",
                        "default": "search autocomplete 1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Memeados",
                "api_name": "Sponge bob",
                "api_description": "Generate Sponge Bob meme",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "",
                        "default": "Example test"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Bruno Jokes",
                "api_name": "Get a Joke",
                "api_description": "Retrieves a joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a family gathering and we need some fun activities. Can you suggest some random words that can inspire our party games? Additionally, I'm interested in reading news articles about successful family gatherings for inspiration. Thank you for your assistance.",
        "relevant APIs": [
            [
                "Memeados",
                "Google Fake Autocomplete"
            ],
            [
                "Bruno Jokes",
                "Get a Joke"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 81506
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Translate it",
                "api_name": "options",
                "api_description": "With this endpoint you can get the supported languages and the possible translations between them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Translation",
                "tool_name": "Long Translator",
                "api_name": "languages",
                "api_description": "This endpoint is used to get a list of available language codes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "languages": [
                            {
                                "code": "str",
                                "name": "str",
                                "_list_length": 111
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "As a language enthusiast, I'm always eager to learn new languages. Can you help me explore the possible translations between Russian, Japanese, and Arabic? Additionally, I would like to obtain a list of available language codes for future reference.",
        "relevant APIs": [
            [
                "Translate it",
                "options"
            ],
            [
                "Long Translator",
                "languages"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12974
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "HeyWatch Video Encoding",
                "api_name": "GenerateVideoThumbnailSync",
                "api_description": "Generate the thumbnail of the video (Sync)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "23067224"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "Offset in Second",
                        "default": "2"
                    },
                    {
                        "name": "width",
                        "type": "NUMBER",
                        "description": "Image Width",
                        "default": "320"
                    },
                    {
                        "name": "height",
                        "type": "NUMBER",
                        "description": "Image Height",
                        "default": "180"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "HeyWatch Video Encoding",
                "api_name": "GetAccount",
                "api_description": "Get account information",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "HeyWatch Video Encoding",
                "api_name": "GetAllFormats",
                "api_description": "Retrieve all the formats",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Lotto America",
                "api_name": "Random QuickPick for Play",
                "api_description": "Get a randomized Quick Pick for Lotto America. This is a random set of playable Powerball numbers",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Lotto America",
                "api_name": "Get All Lotto America Drawings",
                "api_description": "Get all winning drawings from Lotto America.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Lotto America",
                "api_name": "Latest Drawing",
                "api_description": "Get the latest, and last winning Lotto America winning number set.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Programming Memes Reddit",
                "api_name": "Get All Memes",
                "api_description": "Gets all memes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Guinness-World-Records-Api",
                "api_name": "Get Records",
                "api_description": "Get Guinness World Records for a given term",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "string",
                        "description": "",
                        "default": "push ups"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "pageNum",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "maxResults",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Guinness-World-Records-Api",
                "api_name": "Get Record Details",
                "api_description": "Get the record details for a given href which will be returned from the \"Get Records\" request\n\n\nReturns details like who/what/where/when and an array of strings indicating the different paragraphs as displayed in guinnessworldrecords.com",
                "required_parameters": [
                    {
                        "name": "href",
                        "type": "STRING",
                        "description": "",
                        "default": "/world-records/82145-most-consecutive-vertical-push-ups"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "60K Radio Stations",
                "api_name": "Get Genres",
                "api_description": "Get genre list",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "jap"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "60K Radio Stations",
                "api_name": "Get Cities",
                "api_description": "Get city list",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Jakarta"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "60K Radio Stations",
                "api_name": "Get Countries",
                "api_description": "Get country list",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "Aus"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to organize a company event and include some entertaining records. Can you fetch the Guinness World Records related to 'push ups' and provide the details of the record with the most consecutive vertical push-ups? Also, recommend a random Quick Pick for Lotto America to add some fun to our event.",
        "relevant APIs": [
            [
                "Guinness-World-Records-Api",
                "Get Records"
            ],
            [
                "Guinness-World-Records-Api",
                "Get Record Details"
            ],
            [
                "Lotto America",
                "Random QuickPick for Play"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 81337
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Quizy API",
                "api_name": "/generateQuiz",
                "api_description": "This endpoint will return you the 5 questions, options, correct answer and explaination for the quiz topic you provide.",
                "required_parameters": [
                    {
                        "name": "topic",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "body": [
                        {
                            "question": "str",
                            "options": [
                                "list of str with length 4"
                            ],
                            "correct_answer": "str",
                            "explanation": "str",
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Artificial intelligence News API",
                "api_name": "Get Recent News From a Single News Source",
                "api_description": "This will return all the artificial intelligence news from a single news source.",
                "required_parameters": [
                    {
                        "name": "paperId",
                        "type": "string",
                        "description": "",
                        "default": "forbes"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "url": "str",
                    "source": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Artificial intelligence News API",
                "api_name": "Get News From All News Sources Related to Artificial Intelligence",
                "api_description": "This end point will return back all the artificial intelligence news from all over the world.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "link": "str",
                    "source": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "LemurBot",
                "api_name": "Get A Bot Category Group",
                "api_description": "Get a specific bot category group by it's id and view it's details",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The id of BotCategoryGroup",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "LemurBot",
                "api_name": "Get A Conversation Turn",
                "api_description": "Get a specific conversation turn by it's id and view it's details",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The id of ConversationTurn",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "LemurBot",
                "api_name": "List All Conversation Turns",
                "api_description": "Each conversation has conversation turns.\nEach turn represents an input from the client and the output from the bot.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "the number of records to return",
                        "default": 20
                    },
                    {
                        "name": "conversation",
                        "type": "STRING",
                        "description": "The slug of the conversation - conversation are linked to conversation turns",
                        "default": ""
                    },
                    {
                        "name": "conversation_id",
                        "type": "NUMBER",
                        "description": "The id of the conversation - conversation are linked to conversation turns",
                        "default": ""
                    },
                    {
                        "name": "dir",
                        "type": "STRING",
                        "description": "the direction of the ordering",
                        "default": "asc"
                    },
                    {
                        "name": "input",
                        "type": "STRING",
                        "description": "What was said to the bot by the client - this is a partial search",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "the page number of results to start from",
                        "default": 1
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "What was said by the bot in response to the client input - this is a partial search",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The id of the conversation turn",
                        "default": ""
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "the search field you wish to order by - the available field names are the sames ones you can search by",
                        "default": "id"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "test",
                "api_name": "qwetre",
                "api_description": "qweytr",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "LexAI API",
                "api_name": "get_classes",
                "api_description": "Get available detection classes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to improve my cooking skills and learn new recipes. Can you provide me with a quiz on different culinary techniques? Additionally, recommend some popular cooking blogs for inspiration.",
        "relevant APIs": [
            [
                "Quizy API",
                "/generateQuiz"
            ],
            [
                "Artificial intelligence News API",
                "Get News From All News Sources Related to Artificial Intelligence"
            ],
            [
                "LemurBot",
                "List All Conversation Turns"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 28714
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "ROAC",
                "api_name": "/api/Auditores/roac/{roac}Sociedad",
                "api_description": "asd",
                "required_parameters": [
                    {
                        "name": "roac",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "documento": "str",
                    "codigoROAC": "str",
                    "idTipoDocumento": "str",
                    "nombre": "str",
                    "apellidos": "str",
                    "razonSocial": "NoneType",
                    "fechaAlta": "str",
                    "fechaBaja": "NoneType"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Stamping",
                "api_name": "GET evidence",
                "api_description": "GET by hash sha256 or TrxId from Blockchain of Bitcoin and Ethereum",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "cloudlayer.io",
                "api_name": "Convert URL to Image",
                "api_description": "Make a GET request to convert url to image, accepts simple options as query strings in URL (use POST endpoint for advanced options).",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://google.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timeout",
                        "type": "NUMBER",
                        "description": "milliseconds (default 30000)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str",
                    "error": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Vizor Ads",
                "api_name": "Show",
                "api_description": "Get details of your existing embed records using it's unique slug",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "string",
                        "description": "",
                        "default": "7dW8zGbP"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Vizor Ads",
                "api_name": "API Status",
                "api_description": "Check API server is running or not",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "env": "str"
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Global Email V4",
                "api_name": "Global Email V4",
                "api_description": "Define Input Fields",
                "required_parameters": [
                    {
                        "name": "opt",
                        "type": "STRING",
                        "description": "Express/Premium",
                        "default": "VerifyMailbox:Express|VerifyMailbox:ExpressPremium"
                    },
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "Input Email",
                        "default": "support@melissa.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Format of Response",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Version": "str",
                    "TransmissionReference": "str",
                    "TransmissionResults": "str",
                    "TotalRecords": "str",
                    "Records": [
                        {
                            "RecordID": "str",
                            "DeliverabilityConfidenceScore": "str",
                            "Results": "str",
                            "EmailAddress": "str",
                            "MailboxName": "str",
                            "DomainName": "str",
                            "DomainAuthenticationStatus": "str",
                            "TopLevelDomain": "str",
                            "TopLevelDomainName": "str",
                            "DateChecked": "str",
                            "EmailAgeEstimated": "str",
                            "DomainAgeEstimated": "str",
                            "DomainExpirationDate": "str",
                            "DomainCreatedDate": "str",
                            "DomainUpdatedDate": "str",
                            "DomainEmail": "str",
                            "DomainOrganization": "str",
                            "DomainAddress1": "str",
                            "DomainLocality": "str",
                            "DomainAdministrativeArea": "str",
                            "DomainPostalCode": "str",
                            "DomainCountry": "str",
                            "DomainAvailability": "str",
                            "DomainCountryCode": "str",
                            "DomainPrivateProxy": "str",
                            "PrivacyFlag": "str",
                            "MXServer": "str",
                            "DomainTypeIndicator": "str",
                            "BreachCount": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm hosting a photography contest and I need to verify the email addresses of the participants. Verify the email address 'participant1@example.com' and provide me with the verification results. Additionally, I want to retrieve the details of a specific embed record and display it on the contest website. Fetch the details for the embed record with the slug '7dW8zGbP'.",
        "relevant APIs": [
            [
                "Global Email V4",
                "Global Email V4"
            ],
            [
                "Vizor Ads",
                "Show"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 17864
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "planetaryoverview",
                "api_description": "get the Planetary Overview of the day",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "planet": "str",
                    "sign": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "hoscoscope",
                "api_description": "retrieve the horoscope for a specific sign and date",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sign",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "US Hospitals",
                "api_name": "getHospitalsByName",
                "api_description": "###Find US Hospitals by name.\nSimply add your search string to the \"name\" parameter in the url.\nTip:  The API also works if your search for *name='pr'* instead of *name='presbyterian'.* \n\n**Note**: The API only returns the first 30 results.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "presbyterian"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "US Hospitals",
                "api_name": "getHospitalsById",
                "api_description": "###Find US Hospitals by CMS Certification Number\nSimply add your search string as a parameter to the \"ccn\" query.\n\n**Note**: The API only returns the first 30 results.",
                "required_parameters": [
                    {
                        "name": "ccn",
                        "type": "NUMBER",
                        "description": "",
                        "default": "670068"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Provider CCN": "int",
                    "Hospital Name": "str",
                    "Alias": "str",
                    "Url": "str",
                    "Phone": "str",
                    "Service": "str",
                    "Type": "str",
                    "Approval Codes": "str",
                    "Street Address": "str",
                    "City": "str",
                    "State Code": "str",
                    "Zip Code": "str",
                    "County": "str",
                    "Medicare CBSA Number": "int",
                    "Rural Versus Urban": "str",
                    "Control": "str",
                    "Number of Beds": "int",
                    "Parent Unit": "NoneType",
                    "Affiliated Units": "NoneType",
                    "System": "NoneType"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Exercises by API-Ninjas",
                "api_name": "/v1/exercises",
                "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "muscle",
                        "type": "STRING",
                        "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
                        "default": "biceps"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
                        "default": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "STRING",
                        "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "type": "str",
                    "muscle": "str",
                    "equipment": "str",
                    "difficulty": "str",
                    "instructions": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "cities/v2/get-information",
                "api_description": "Get information in specific city by its id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The value of id field (type is city) that returned in \u2026/v2/auto-complete endpoint",
                        "default": "hW7vArorRd8cT9h6v"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "x-units-temperature",
                        "type": "STRING",
                        "description": "One of the following : fahrenheit|celsius",
                        "default": "celsius"
                    },
                    {
                        "name": "x-aqi-index",
                        "type": "STRING",
                        "description": "One of the following : us|cn",
                        "default": "us"
                    },
                    {
                        "name": "x-user-timezone",
                        "type": "STRING",
                        "description": "",
                        "default": "Asia/Singapore"
                    },
                    {
                        "name": "x-user-lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en-US"
                    },
                    {
                        "name": "x-units-pressure",
                        "type": "STRING",
                        "description": "One of the following : hg|mbar",
                        "default": "mbar"
                    },
                    {
                        "name": "x-units-distance",
                        "type": "STRING",
                        "description": "One of the following : miles|kilometer",
                        "default": "kilometer"
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"data\": {\"id\": \"str\", \"city\": \"str\", \"state\": \"str\", \"country\": \"str\", \"location\": {\"lat\": \"float\", \"lon\": \"float\"}, \"timezone\": \"str\", \"websiteLink\": \"str\", \"report\": {\"link\": \"str\", \"actionText\": \"str\", \"message\": \"str\"}, \"type\": \"str\", \"name\": \"str\", \"followers\": {\"total\": \"str\", \"pictures\": [\"list of str with length 3\"], \"label\": \"str\"}, \"contributors\": {\"pictures\": [\"list of str with length 2\"], \"redirection\": {\"actionType\": \"str\", \"appCategory\": \"str\", \"item\": \"str\"}, \"label\": \"str\"}, \"sources\": [{\"id\": \"str\", \"name\": \"str\", \"totalStations\": \"int\", \"type\": \"str\", \"picture\": \"str\", \"url\": \"str\", \"_list_length\": 4}], \"currentMeasurement\": {\"ts\": \"str\", \"aqius\": \"int\", \"mainus\": \"str\", \"aqicn\": \"int\", \"maincn\": \"str\", \"pollutants\": [{\"conc\": \"float\", \"aqius\": \"int\", \"aqicn\": \"int\", \"pollutant\": \"str\", \"isEstimated\": \"int\", \"_list_length\": 1}]}, \"sensorDefinitions\": [{\"pollutant\": \"str\", \"unit\": \"str\", \"name\": \"str\", \"_list_length\": 16}], \"currentWeather\": {\"ts\": \"s"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "stations/get-measurements (Deprecated)",
                "api_description": "Get measurements at specific station by its id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The value of id field (type is station) that received from .../auto-complete API",
                        "default": "Jmy9oL75KSZnsqi6L"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en_US"
                    },
                    {
                        "name": "aqiIndex",
                        "type": "STRING",
                        "description": "AQI index (us | cn)",
                        "default": "us"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "",
                        "default": "Asia/Singapore"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "id": "str",
                        "measurements": [
                            {
                                "ts": "str",
                                "aqius": "int",
                                "mainus": "str",
                                "aqicn": "int",
                                "maincn": "str",
                                "p1": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "s2": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "p2": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "hour_late": "int",
                                    "ts": "str"
                                },
                                "_list_length": 48
                            }
                        ],
                        "measurements_daily": [
                            {
                                "ts": "str",
                                "p2": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "p1": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "o3": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "s2": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "co": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "aqius": "int",
                                "mainus": "str",
                                "aqicn": "int",
                                "maincn": "str",
                                "_list_length": 31
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "auto-complete (Deprecated)",
                "api_description": "Find countries, cities, places by name",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Name of countries, cities, districts, places, etc...",
                        "default": "singapore"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "stations": [
                            {
                                "id": "str",
                                "name": "str",
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "i18n": {},
                                "location": {
                                    "type": "str",
                                    "coordinates": [
                                        "list of float with length 2"
                                    ]
                                },
                                "type": "str",
                                "current_measurement": {
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "ts": "str"
                                },
                                "_list_length": 10
                            }
                        ],
                        "cities": [
                            {
                                "id": "str",
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "i18n": {},
                                "estimated": "int",
                                "location": {
                                    "type": "str",
                                    "coordinates": [
                                        "list of float with length 2"
                                    ]
                                },
                                "type": "str",
                                "current_measurement": {
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "ts": "str"
                                },
                                "_list_length": 1
                            }
                        ],
                        "news": [
                            {
                                "author": "str",
                                "date": "str",
                                "status": "str",
                                "thumbnail": "str",
                                "title": "str",
                                "type": "str",
                                "url": "str",
                                "_list_length": 7
                            }
                        ],
                        "contributors": [
                            {
                                "id": "str",
                                "name": "str",
                                "type": "str",
                                "subType": "str",
                                "picture": "str",
                                "visibility": "bool",
                                "isVerified": "bool",
                                "_list_length": 1
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Ind Nutrient API",
                "api_name": "View Food Items by Core",
                "api_description": "This request allows clients to retrieve detailed information about a food item by filtering by query param `core`.\n\nClients can include multiple cores in a single request. For example, by sending a request to https://indnutrientsapi.tech/food?core=chicken,dal,paneer, the API will return food items associated with the specified cores: chicken, dal, and paneer.\n\nAPI request sent to [https://indnutrientsapi.tech/food?core=chicken](https://indnutrientsapi.tech/food?core=chicken)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "item": [
                        {
                            "_id": "str",
                            "food_name": "str",
                            "quantity": "str",
                            "calories": "int",
                            "uri": "str",
                            "type": "str",
                            "type_uri": "str",
                            "core": "str",
                            "core_uri": "str",
                            "food_nutrition": [
                                {
                                    "nutrient_name": "str",
                                    "value": "int",
                                    "unit": "str",
                                    "_list_length": 3
                                }
                            ],
                            "request": [
                                {
                                    "type": "str",
                                    "message": "str",
                                    "url": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 53
                        }
                    ]
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Ind Nutrient API",
                "api_name": "View Food Item By Name",
                "api_description": "This request allows clients to retrieve detailed information about a food item by specifying by its `name`.\n\nWhen making the request, ensure the food item's name is written with hyphens (\"-\") separating the words. For instance, \"Paneer Butter Masala\" should be written as \"paneer-butter-masala\" in the request.\n\nAPI request sent to [https://indnutrientsapi.tech/food/name/paneer-butter-masala](https://indnutrientsapi.tech/food/name/paneer-butter-masala)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "item": [
                        {
                            "_id": "str",
                            "food_name": "str",
                            "quantity": "str",
                            "calories": "int",
                            "uri": "str",
                            "type": "str",
                            "type_uri": "str",
                            "core": "str",
                            "core_uri": "str",
                            "food_nutrition": [
                                {
                                    "nutrient_name": "str",
                                    "value": "float",
                                    "unit": "str",
                                    "_list_length": 3
                                }
                            ],
                            "request": [
                                {
                                    "type": "str",
                                    "message": "str",
                                    "url": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Ind Nutrient API",
                "api_name": "View All Types With Their Food Items",
                "api_description": "This request allows clients to retrieve a list of all available types along with the food items associated with each type.\n\nAPI request sent to [https://indnutrientsapi.tech/food/type](https://indnutrientsapi.tech/food/type)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "types": [
                        {
                            "type": "str",
                            "related_food_length": "int",
                            "related_food": [
                                {
                                    "_id": "str",
                                    "food_name": "str",
                                    "quantity": "str",
                                    "calories": "int",
                                    "uri": "str",
                                    "type": "str",
                                    "type_uri": "str",
                                    "food_nutrition": [
                                        {
                                            "nutrient_name": "str",
                                            "value": "float",
                                            "unit": "str",
                                            "_list_length": 3
                                        }
                                    ],
                                    "_list_length": 266
                                }
                            ],
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a family reunion and we want to have it at a hospital. Can you help me find hospitals in our city that have a large number of beds? Additionally, we would like to know the current air quality in the area.",
        "relevant APIs": [
            [
                "US Hospitals",
                "getHospitalsByName"
            ],
            [
                "AirVisual",
                "cities/v2/get-information"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 68092
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Document Image Validation",
                "api_name": "GET Call",
                "api_description": "Used to fetch api result using the request id received in responses.",
                "required_parameters": [
                    {
                        "name": "request_id",
                        "type": "STRING",
                        "description": "",
                        "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Label Detection",
                "api_name": "GET Label Detection",
                "api_description": "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=\u201cimage_url\u201d)",
                "required_parameters": [
                    {
                        "name": "image",
                        "type": "STRING",
                        "description": "",
                        "default": "https://m.media-amazon.com/images/I/71k6XnjuwkL._AC_SL1500_.jpg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "labels": [
                        {
                            "text": "str",
                            "score": "float",
                            "locale": "str",
                            "_list_length": 10
                        }
                    ],
                    "success": "bool",
                    "dimensions": {
                        "height": "int",
                        "width": "int",
                        "type": "str"
                    }
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Brand Recognition",
                "api_name": "Get version",
                "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is launching a new product and we need to ensure its brand recognition. Please fetch the version of the brand recognition service. Additionally, perform label detection on the product image to identify the brand and provide the label along with its score.",
        "relevant APIs": [
            [
                "Brand Recognition",
                "Get version"
            ],
            [
                "Label Detection",
                "GET Label Detection"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 79968
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "BMI_v2",
                "api_name": "Gives the BMI when you input height in feet and inches & input weight in kilograms",
                "api_description": "The API generates the BMI in kg/m2. You need to enter the weight in kilograms and height in feet and inches",
                "required_parameters": [
                    {
                        "name": "weightinkg",
                        "type": "NUMBER",
                        "description": "",
                        "default": "70.5"
                    },
                    {
                        "name": "heightfeet",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    },
                    {
                        "name": "heightinches",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "BMI_v2",
                "api_name": "Gives the BMI when you Input values in Metric units",
                "api_description": "Gives the BMI in kg/m2 when we input height in centimeters and weight in kilograms",
                "required_parameters": [
                    {
                        "name": "heightincm",
                        "type": "NUMBER",
                        "description": "",
                        "default": "180"
                    },
                    {
                        "name": "weightinkg",
                        "type": "NUMBER",
                        "description": "",
                        "default": "70.5"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "BMI_v2",
                "api_name": "Gives the weight catergory based on the BMI",
                "api_description": "The API catergorizes the person based on the BMI. The catergories would be Underweight, Normal weight, Overweight, Obesity Class I, Obesity Class II and Obesity Class III. These definitions differ in Asians hence you may be able to enter the ethnicity of the person (Asian or not asian)",
                "required_parameters": [
                    {
                        "name": "bmienter",
                        "type": "NUMBER",
                        "description": "",
                        "default": "25.7"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "asian",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "hoscoscope",
                "api_description": "retrieve the horoscope for a specific sign and date",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sign",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "planetaryoverview",
                "api_description": "get the Planetary Overview of the day",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "planet": "str",
                    "sign": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Pregnancy Calculator API",
                "api_name": "Fertility Window - GET",
                "api_description": "This endpoint accepts a GET request to calculate the fertility window.",
                "required_parameters": [
                    {
                        "name": "cycle_length",
                        "type": "STRING",
                        "description": "The length of the menstrual cycle in days.",
                        "default": "28"
                    },
                    {
                        "name": "menstrual_date",
                        "type": "STRING",
                        "description": "The date of the first day of the last menstrual period in the format '**YYYY-MM-DD**'.",
                        "default": "2023-06-01"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Pregnancy Calculator API",
                "api_name": "Conception Date",
                "api_description": "This endpoint calculates the estimated due date based on the user's conception date.",
                "required_parameters": [
                    {
                        "name": "conception_date",
                        "type": "STRING",
                        "description": "The date of conception in the format '**YYYY-MM-DD**'",
                        "default": "2023-05-01"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Pregnancy Calculator API",
                "api_name": "Pregnancy Weight Recommendation - GET",
                "api_description": "This endpoint that accepts a GET request to calculate the recommended weight during pregnancy based on the user's pre-pregnancy weight, height, and current gestational age.",
                "required_parameters": [
                    {
                        "name": "pre_pregnancy_weight",
                        "type": "NUMBER",
                        "description": "The user's pre-pregnancy weight in kilograms (**kg**).",
                        "default": "60"
                    },
                    {
                        "name": "gestational_age",
                        "type": "NUMBER",
                        "description": "The current gestational age in **weeks**.\n",
                        "default": "20"
                    },
                    {
                        "name": "height",
                        "type": "NUMBER",
                        "description": "The user's height in meters (**m**).",
                        "default": "1.65"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "stations/v2/get-information",
                "api_description": "Get information at specific station by its id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The value of id field (type is station) that returned in \u2026/v2/auto-complete endpoint",
                        "default": "Jmy9oL75KSZnsqi6L"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "x-user-timezone",
                        "type": "STRING",
                        "description": "",
                        "default": "Asia/Singapore"
                    },
                    {
                        "name": "x-units-distance",
                        "type": "STRING",
                        "description": "One of the following : miles|kilometer",
                        "default": "kilometer"
                    },
                    {
                        "name": "x-units-pressure",
                        "type": "STRING",
                        "description": "One of the following : hg|mbar",
                        "default": "mbar"
                    },
                    {
                        "name": "x-user-lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en-US"
                    },
                    {
                        "name": "x-units-temperature",
                        "type": "STRING",
                        "description": "One of the following : fahrenheit|celsius",
                        "default": "celsius"
                    },
                    {
                        "name": "x-aqi-index",
                        "type": "STRING",
                        "description": "One of the following : us|cn",
                        "default": "us"
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"data\": {\"id\": \"str\", \"name\": \"str\", \"city\": \"str\", \"state\": \"str\", \"country\": \"str\", \"location\": {\"lat\": \"float\", \"lon\": \"float\"}, \"timezone\": \"str\", \"websiteLink\": \"str\", \"report\": {\"link\": \"str\", \"actionText\": \"str\", \"message\": \"str\"}, \"type\": \"str\", \"followers\": {\"total\": \"str\", \"pictures\": [\"list of str with length 3\"], \"label\": \"str\"}, \"contributors\": {\"pictures\": [\"list of str with length 1\"], \"redirection\": {\"actionType\": \"str\", \"appCategory\": \"str\", \"item\": \"str\"}, \"label\": \"str\"}, \"sources\": [{\"id\": \"str\", \"name\": \"str\", \"totalStations\": \"int\", \"type\": \"str\", \"picture\": \"str\", \"url\": \"str\", \"_list_length\": 2}], \"gallery\": {\"pictures\": \"empty list\", \"contributor\": {\"name\": \"str\", \"profileID\": \"str\", \"profilePicture\": \"str\"}}, \"currentMeasurement\": {\"ts\": \"str\", \"aqius\": \"int\", \"mainus\": \"str\", \"aqicn\": \"int\", \"maincn\": \"str\", \"pollutants\": [{\"conc\": \"int\", \"aqius\": \"int\", \"aqicn\": \"int\", \"pollutant\": \"str\", \"isEstimated\": \"int\", \"ts\": \"str\", \"_list_length\": 3"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "auto-complete (Deprecated)",
                "api_description": "Find countries, cities, places by name",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Name of countries, cities, districts, places, etc...",
                        "default": "singapore"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "stations": [
                            {
                                "id": "str",
                                "name": "str",
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "i18n": {},
                                "location": {
                                    "type": "str",
                                    "coordinates": [
                                        "list of float with length 2"
                                    ]
                                },
                                "type": "str",
                                "current_measurement": {
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "ts": "str"
                                },
                                "_list_length": 10
                            }
                        ],
                        "cities": [
                            {
                                "id": "str",
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "i18n": {},
                                "estimated": "int",
                                "location": {
                                    "type": "str",
                                    "coordinates": [
                                        "list of float with length 2"
                                    ]
                                },
                                "type": "str",
                                "current_measurement": {
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "ts": "str"
                                },
                                "_list_length": 1
                            }
                        ],
                        "news": [
                            {
                                "author": "str",
                                "date": "str",
                                "status": "str",
                                "thumbnail": "str",
                                "title": "str",
                                "type": "str",
                                "url": "str",
                                "_list_length": 7
                            }
                        ],
                        "contributors": [
                            {
                                "id": "str",
                                "name": "str",
                                "type": "str",
                                "subType": "str",
                                "picture": "str",
                                "visibility": "bool",
                                "isVerified": "bool",
                                "_list_length": 1
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "cities/get-measurements (Deprecated)",
                "api_description": "Get measurements in specific city by its id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The value of id field (type is city) that received from .../auto-complete API",
                        "default": "hW7vArorRd8cT9h6v"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "",
                        "default": "Asia/Singapore"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en_US"
                    },
                    {
                        "name": "aqiIndex",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "id": "str",
                        "measurements": [
                            {
                                "ts": "str",
                                "p2": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "aqius": "int",
                                "mainus": "str",
                                "aqicn": "int",
                                "maincn": "str",
                                "_list_length": 48
                            }
                        ],
                        "measurements_daily": [
                            {
                                "ts": "str",
                                "p2": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "aqius": "int",
                                "mainus": "str",
                                "aqicn": "int",
                                "maincn": "str",
                                "p1": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "o3": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "s2": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "co": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "_list_length": 30
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Exercises by API-Ninjas",
                "api_name": "/v1/exercises",
                "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "muscle",
                        "type": "STRING",
                        "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
                        "default": "biceps"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
                        "default": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "STRING",
                        "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "type": "str",
                    "muscle": "str",
                    "equipment": "str",
                    "difficulty": "str",
                    "instructions": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am starting a new fitness routine and I want to incorporate exercises that target specific muscle groups. Can you provide me with a list of exercises that target the quadriceps and hamstrings? Additionally, I would like to know the BMI based on my height and weight in metric units.",
        "relevant APIs": [
            [
                "Exercises by API-Ninjas",
                "/v1/exercises"
            ],
            [
                "BMI_v2",
                "Gives the BMI when you Input values in Metric units"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 9834
    }
]