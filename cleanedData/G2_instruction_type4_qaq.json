[
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Instagram Looter",
                "api_name": "Get User Info by user_id",
                "api_description": "Get **Instagram** user info by **user_id**",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "18527"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"status\": \"bool\", \"biography\": \"str\", \"bio_links\": [{\"title\": \"str\", \"lynx_url\": \"str\", \"url\": \"str\", \"link_type\": \"str\", \"_list_length\": 1}], \"biography_with_entities\": {\"raw_text\": \"str\", \"entities\": \"empty list\"}, \"blocked_by_viewer\": \"bool\", \"restricted_by_viewer\": \"NoneType\", \"country_block\": \"bool\", \"eimu_id\": \"str\", \"external_url\": \"str\", \"external_url_linkshimmed\": \"str\", \"edge_followed_by\": {\"count\": \"int\"}, \"fbid\": \"str\", \"followed_by_viewer\": \"bool\", \"edge_follow\": {\"count\": \"int\"}, \"follows_viewer\": \"bool\", \"full_name\": \"str\", \"group_metadata\": \"NoneType\", \"has_ar_effects\": \"bool\", \"has_clips\": \"bool\", \"has_guides\": \"bool\", \"has_channel\": \"bool\", \"has_blocked_viewer\": \"bool\", \"highlight_reel_count\": \"int\", \"has_requested_viewer\": \"bool\", \"hide_like_and_view_counts\": \"bool\", \"id\": \"str\", \"is_business_account\": \"bool\", \"is_professional_account\": \"bool\", \"is_supervision_enabled\": \"bool\", \"is_guardian_of_viewer\": \"bool\", \"is_supervised_by_viewer\": \"bool\", \"is_supervised_user\":"
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram Looter",
                "api_name": "Get User Related Profiles by user_id",
                "api_description": "Get **Instagram** user related profiles by **user_id**",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "18527"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "viewer": "NoneType",
                        "user": {
                            "edge_related_profiles": {
                                "edges": [
                                    {
                                        "node": {
                                            "id": "str",
                                            "full_name": "str",
                                            "is_private": "bool",
                                            "is_verified": "bool",
                                            "profile_pic_url": "str",
                                            "username": "str"
                                        },
                                        "_list_length": 80
                                    }
                                ]
                            }
                        }
                    },
                    "status": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram Looter",
                "api_name": "Get Media download link",
                "api_description": "Get **Instagram** media download link by **/p/** - **/tv/** - **/reel/**",
                "required_parameters": [
                    {
                        "name": "link",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.instagram.com/p/CqIbCzYMi5C/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "full_name": "str",
                        "username": "str",
                        "medias": [
                            {
                                "type": "str",
                                "link": "str",
                                "_list_length": 8
                            }
                        ],
                        "comment_count": "int",
                        "like_count": "int",
                        "taken_at_timestamp": "int",
                        "caption": "str"
                    },
                    "status": "bool"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Olato Quotes",
                "api_name": "Motivation Quote",
                "api_description": "It shows random quotes",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "",
                        "default": "random quotes"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quote": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Olato Quotes",
                "api_name": "Success Quote",
                "api_description": "It shows random quotes",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "",
                        "default": "random quotes"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quote": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Olato Quotes",
                "api_name": "Love Quote",
                "api_description": "It shows random quotes",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "",
                        "default": "random quotes"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quote": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to surprise my best friend with a personalized gift. Can you suggest some motivational quotes that I can engrave on the gift? Additionally, I need to gather some information about their favorite Instagram influencers. Please provide me with the Instagram user info of those influencers, including their biographies and follower counts. Also, suggest some related profiles that I can follow for more gift ideas.",
        "relevant APIs": [
            [
                "Olato Quotes",
                "Motivation Quote"
            ],
            [
                "Instagram Looter",
                "Get User Info by user_id"
            ],
            [
                "Instagram Looter",
                "Get User Related Profiles by user_id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 79019
    },
    {
        "api_list": [
            {
                "category_name": "Financial",
                "tool_name": "ClearDil",
                "api_name": "Fetchindividualcustomer",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "customer_a_id",
                        "type": "STRING",
                        "description": "",
                        "default": "customer_a_id"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "ClearDil",
                "api_name": "Fetchallmatches",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "screening_a_id",
                        "type": "STRING",
                        "description": "",
                        "default": "screening_a_id"
                    },
                    {
                        "name": "customer_a_id",
                        "type": "STRING",
                        "description": "",
                        "default": "customer_a_id"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "ClearDil",
                "api_name": "Searchscreeningsdone",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "",
                        "default": "DONE"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "Indian Bank Account Verification",
                "api_name": "GET Call",
                "api_description": "Used to fetch api result using the request id received in responses.",
                "required_parameters": [
                    {
                        "name": "request_id",
                        "type": "STRING",
                        "description": "",
                        "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "QuantaEx Market Data",
                "api_name": "24 Hours Tickers",
                "api_description": "24 hours trading data",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "quantaex.com",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is conducting a thorough background check on potential employees. Can you search for screenings that have been completed and fetch the individual customer details for each screening? Additionally, provide me with the 24-hour tickers for the QuantaEx market data to stay updated on the latest trading trends.",
        "relevant APIs": [
            [
                "ClearDil",
                "Searchscreeningsdone"
            ],
            [
                "ClearDil",
                "Fetchindividualcustomer"
            ],
            [
                "QuantaEx Market Data",
                "24 Hours Tickers"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 33950
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "Beekeeping Research",
                "api_name": "Basic endpoint",
                "api_description": "See full docs on https://research.docs.beekeeping.io",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "Daily Knowledge",
                "api_name": "/untools-en.json",
                "api_description": "Thinking tools to help you solve problems, make decisions and understand systems.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "title": "str",
                    "description": "str",
                    "category": "str",
                    "content": "str",
                    "iconUrl": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Daily Knowledge",
                "api_name": "/chemical-elements-en.json",
                "api_description": "Periodic table of elements.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "atomicMass": "float",
                    "atomicNumber": "int",
                    "ionizationEnergy": "float",
                    "boilingPoint": {
                        "C": "int"
                    },
                    "group": "str",
                    "electronsPerShell": [
                        "list of int with length 2"
                    ],
                    "elementGroup": "str",
                    "meltingPoint": {
                        "C": "float"
                    },
                    "name": "str",
                    "period": "int",
                    "phase": "str",
                    "symbol": "str",
                    "discoveryDate": "int",
                    "context": "str",
                    "nameLatin": "str",
                    "nameDE": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Daily Knowledge",
                "api_name": "/sustainable-development-goals-en.json",
                "api_description": "The UN global goals for sustainable development.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "slug": "str",
                    "number": "int",
                    "backgroundColor": "str",
                    "image": "str",
                    "introduction": "str",
                    "manifest": "str",
                    "targets": [
                        {
                            "title": "str",
                            "body": "str",
                            "pictogram": "str",
                            "_list_length": 8
                        }
                    ],
                    "tips": [
                        "list of str with length 7"
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Irene",
                "api_name": "Irene",
                "api_description": "irene0",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "Materials Platform for Data Science",
                "api_name": "MPDS",
                "api_description": "Retrieve materials data, see www.mpds.io",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "JSON-serialized URL-encoded Object with the retrieval criteria, e.g. {\"elements\":\"Ag-K\"}",
                        "default": "%7B%22elements%22%3A%22Ag-K%22%7D"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Get positions for body",
                "api_description": "Returns properties of the given body for the given date range in tabular format.\n\nSupported bodies are \"sun\" ,\"moon\", \"mercury\", \"venus\", \"earth\", \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\", \"pluto\"",
                "required_parameters": [
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-21"
                    },
                    {
                        "name": "body",
                        "type": "string",
                        "description": "",
                        "default": "venus"
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "33.775867"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-20"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "-84.39733"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "",
                        "default": "12:00:00"
                    },
                    {
                        "name": "elevation",
                        "type": "NUMBER",
                        "description": "",
                        "default": "166"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "observer": {
                            "location": {
                                "longitude": "float",
                                "elevation": "int",
                                "latitude": "float"
                            }
                        },
                        "dates": {
                            "from": "str",
                            "to": "str"
                        },
                        "table": {
                            "rows": [
                                {
                                    "cells": [
                                        {
                                            "date": "str",
                                            "distance": {
                                                "fromEarth": {
                                                    "km": "str",
                                                    "au": "str"
                                                }
                                            },
                                            "position": {
                                                "horizontal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "constellation": {
                                                    "short": "str",
                                                    "name": "str",
                                                    "id": "str"
                                                },
                                                "equatorial": {
                                                    "rightAscension": {
                                                        "hours": "str",
                                                        "string": "str"
                                                    },
                                                    "declination": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "horizonal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                }
                                            },
                                            "name": "str",
                                            "extraInfo": {
                                                "elongation": "float",
                                                "magnitude": "float"
                                            },
                                            "id": "str",
                                            "_list_length": 2
                                        }
                                    ],
                                    "entry": {
                                        "name": "str",
                                        "id": "str"
                                    },
                                    "_list_length": 1
                                }
                            ],
                            "header": [
                                "list of str with length 2"
                            ]
                        }
                    },
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Search",
                "api_description": "Search endpoint can be used to get information for stars and deep space objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "order_by",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "dec",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "match_type",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "ra",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "exact",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "statusCode": "int",
                    "errors": [
                        {
                            "stack": "str",
                            "property": "str",
                            "path": {},
                            "message": "str",
                            "argument": [
                                "list of str with length 2"
                            ],
                            "schema": {
                                "oneOf": [
                                    {
                                        "properties": {
                                            "term": {
                                                "minLength": "int",
                                                "type": "str"
                                            },
                                            "match_type": {
                                                "enum": [
                                                    "list of str with length 2"
                                                ],
                                                "type": "str"
                                            },
                                            "order_by": {
                                                "enum": [
                                                    "list of str with length 1"
                                                ],
                                                "type": "str"
                                            }
                                        },
                                        "required": [
                                            "list of str with length 1"
                                        ],
                                        "type": "str",
                                        "_list_length": 2
                                    }
                                ],
                                "allOf": [
                                    {
                                        "properties": {
                                            "offset": {
                                                "maximum": "int",
                                                "minimum": "int",
                                                "type": "str"
                                            },
                                            "limit": {
                                                "maximum": "int",
                                                "minimum": "int",
                                                "type": "str"
                                            }
                                        },
                                        "type": "str",
                                        "_list_length": 1
                                    }
                                ]
                            },
                            "instance": {
                                "dec": "str",
                                "match_type": "str",
                                "order_by": "str",
                                "offset": "str",
                                "limit": "str",
                                "exact": "str",
                                "ra": "str"
                            },
                            "name": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Get all bodies positions",
                "api_description": "Returns a iterable list of bodies and their properties in tabular format.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "33.775867"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "-84.39733"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-20"
                    },
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-21"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "elevation",
                        "type": "NUMBER",
                        "description": "",
                        "default": "166"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "",
                        "default": "12:00:00"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "observer": {
                            "location": {
                                "longitude": "float",
                                "elevation": "int",
                                "latitude": "float"
                            }
                        },
                        "dates": {
                            "from": "str",
                            "to": "str"
                        },
                        "table": {
                            "rows": [
                                {
                                    "cells": [
                                        {
                                            "date": "str",
                                            "distance": {
                                                "fromEarth": {
                                                    "km": "str",
                                                    "au": "str"
                                                }
                                            },
                                            "position": {
                                                "horizontal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "constellation": {
                                                    "short": "str",
                                                    "name": "str",
                                                    "id": "str"
                                                },
                                                "equatorial": {
                                                    "rightAscension": {
                                                        "hours": "str",
                                                        "string": "str"
                                                    },
                                                    "declination": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "horizonal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                }
                                            },
                                            "name": "str",
                                            "extraInfo": {
                                                "elongation": "int",
                                                "magnitude": "float"
                                            },
                                            "id": "str",
                                            "_list_length": 2
                                        }
                                    ],
                                    "entry": {
                                        "name": "str",
                                        "id": "str"
                                    },
                                    "_list_length": 11
                                }
                            ],
                            "header": [
                                "list of str with length 2"
                            ]
                        }
                    },
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are planning a hiking trip to the mountains. Can you suggest some chemical elements that are commonly found in mountainous regions? Additionally, provide us with the positions of celestial bodies during our trip.",
        "relevant APIs": [
            [
                "Daily Knowledge",
                "/chemical-elements-en.json"
            ],
            [
                "Astronomy",
                "Get positions for body"
            ],
            [
                "Astronomy",
                "Get all bodies positions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12471
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Appointment System API",
                "api_name": "Appointment Time List",
                "api_description": "EndPoint gets Appointment Time List by Day. EndPoint gets date parameter and returns List of Appointment Times of that date. In the list there is available field, This field indicates whether there is an appointment at the specified time.\nParameter Descriptions : \ndate --> The day that hours will be return\nclinicName --> Name of the clinic\n\nReturn Value: \nThe EndPoint returns json object in format below.\n[\n{\"id\":1\n\"hLabel\":\"07:00\"\n\"available\":\"true\"\n\"hour\":7\n\"minute\":0\n\"interval\":15\n},\n......\n]\n\nId --> is the key value of the record.\nhLabel --> is the string format of the time\navailable --> if is true that means the time is suitable for new record. If it is false that means there is another appointment in this time interval. \nhour --> Hour of the appointment time.\nminute --> Minute of the appointment time.\ninterval  --> this field points out to the interval whether 15 minutes or 30 minutes",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "",
                        "default": "2022.09.05"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "clinicName",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoClinic"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "hLabel": "str",
                    "available": "str",
                    "hour": "int",
                    "minute": "int",
                    "interval": "int"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Appointment System API",
                "api_name": "Get Appointments",
                "api_description": "EndPoints returns all appointments in the date. \n\nParameter Description :\ndate : the date the appointments is requested\nclinicName : Name of the clinic\n\nReturn Value : \nIt returns json object. Json contains all the appointments in requested date.\n\nJson Format :\n\nhLabel:\"07:00\"\nid:5\naDay:\"2022-09-09T00:00:00\"\naHour:58\naName:\"Efe Kemal TASAR\"\naTel:\"+905376853054\"\naType:\"Appoint\"",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "",
                        "default": "2022.09.09"
                    },
                    {
                        "name": "clinicName",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoUser"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Appointment System API",
                "api_name": "Login",
                "api_description": "This Endpoint is use for login to the system and getting the Api Key for the clinic. It needs username and password as query parameters. \nParameter Descriptions:\nusername --> parameter for username in the system. It is the same with username while creating the account.\npassword --> password for the username. It is same with the password while creating the acoount.\n\nReturn Value\nThis Endpoint returns string value.\nIf you get a sting with 6+ long this means that you have successfully passed username and password check and you are getting the Accesskey fort he system.\nIf you get \u201cW1\u201d it means a warning that your username doesn\u2019t exists\nIf you get \u201cW2\u201d it means a warning that your password is not correct.\nIt you get \u201cE1\u201d it means a programmatic internal error. If you get E1 in the next calls you can get help from us.",
                "required_parameters": [
                    {
                        "name": "password",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoPass"
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "DemoUser"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "ExerciseDB",
                "api_name": "List of all exercises",
                "api_description": "Fetch all exercises (non-paginated)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bodyPart": "str",
                    "equipment": "str",
                    "gifUrl": "str",
                    "id": "str",
                    "name": "str",
                    "target": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "ExerciseDB",
                "api_name": "List by equipment",
                "api_description": "Fetch exercises by type of equipment",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "`equipment` property of exercise object",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "ExerciseDB",
                "api_name": "List of equipment",
                "api_description": "Fetch a list of available equipment",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "planetaryoverview",
                "api_description": "get the Planetary Overview of the day",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "planet": "str",
                    "sign": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "hoscoscope",
                "api_description": "retrieve the horoscope for a specific sign and date",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sign",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a fitness retreat and need a variety of exercises for the participants. Can you provide me with a list of exercises that target the back, chest, and shoulders? Additionally, fetch the horoscope for a specific sign and date to create personalized workout plans.",
        "relevant APIs": [
            [
                "ExerciseDB",
                "List of all exercises"
            ],
            [
                "ExerciseDB",
                "List by equipment"
            ],
            [
                "Horostory",
                "hoscoscope"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 9959
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Instant Cameroon News",
                "api_name": "Home page",
                "api_description": "Home and Welcome page that introduces the API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Instant Cameroon News",
                "api_name": "Retrieve data",
                "api_description": "Endpoint, which you use to retrieve the data you need. This endpoint can accept some parameters like page, search key and data range",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rank",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Spaceflight News",
                "api_name": "Blogs",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "url": "str",
                    "imageUrl": "str",
                    "newsSite": "str",
                    "summary": "str",
                    "publishedAt": "str",
                    "updatedAt": "str",
                    "launches": "empty list",
                    "events": "empty list"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Spaceflight News",
                "api_name": "Count",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Spaceflight News",
                "api_name": "Detail2",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "error": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a company event and I want to showcase the latest space news. Can you provide me with the top news articles and blog posts from spaceflight news? Also, I need to gather information about the current events in Cameroon. Thanks!",
        "relevant APIs": [
            [
                "Spaceflight News",
                "Blogs"
            ],
            [
                "Instant Cameroon News",
                "Retrieve data"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 46175
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "ROAC",
                "api_name": "/api/Auditores/roac/{roac}Sociedad",
                "api_description": "asd",
                "required_parameters": [
                    {
                        "name": "roac",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "documento": "str",
                    "codigoROAC": "str",
                    "idTipoDocumento": "str",
                    "nombre": "str",
                    "apellidos": "str",
                    "razonSocial": "NoneType",
                    "fechaAlta": "str",
                    "fechaBaja": "NoneType"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Stamping",
                "api_name": "GET evidence",
                "api_description": "GET by hash sha256 or TrxId from Blockchain of Bitcoin and Ethereum",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "cloudlayer.io",
                "api_name": "Convert URL to Image",
                "api_description": "Make a GET request to convert url to image, accepts simple options as query strings in URL (use POST endpoint for advanced options).",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://google.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timeout",
                        "type": "NUMBER",
                        "description": "milliseconds (default 30000)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str",
                    "error": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Vizor Ads",
                "api_name": "Show",
                "api_description": "Get details of your existing embed records using it's unique slug",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "string",
                        "description": "",
                        "default": "7dW8zGbP"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Vizor Ads",
                "api_name": "API Status",
                "api_description": "Check API server is running or not",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "env": "str"
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Global Email V4",
                "api_name": "Global Email V4",
                "api_description": "Define Input Fields",
                "required_parameters": [
                    {
                        "name": "opt",
                        "type": "STRING",
                        "description": "Express/Premium",
                        "default": "VerifyMailbox:Express|VerifyMailbox:ExpressPremium"
                    },
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "Input Email",
                        "default": "support@melissa.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Format of Response",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Version": "str",
                    "TransmissionReference": "str",
                    "TransmissionResults": "str",
                    "TotalRecords": "str",
                    "Records": [
                        {
                            "RecordID": "str",
                            "DeliverabilityConfidenceScore": "str",
                            "Results": "str",
                            "EmailAddress": "str",
                            "MailboxName": "str",
                            "DomainName": "str",
                            "DomainAuthenticationStatus": "str",
                            "TopLevelDomain": "str",
                            "TopLevelDomainName": "str",
                            "DateChecked": "str",
                            "EmailAgeEstimated": "str",
                            "DomainAgeEstimated": "str",
                            "DomainExpirationDate": "str",
                            "DomainCreatedDate": "str",
                            "DomainUpdatedDate": "str",
                            "DomainEmail": "str",
                            "DomainOrganization": "str",
                            "DomainAddress1": "str",
                            "DomainLocality": "str",
                            "DomainAdministrativeArea": "str",
                            "DomainPostalCode": "str",
                            "DomainCountry": "str",
                            "DomainAvailability": "str",
                            "DomainCountryCode": "str",
                            "DomainPrivateProxy": "str",
                            "PrivacyFlag": "str",
                            "MXServer": "str",
                            "DomainTypeIndicator": "str",
                            "BreachCount": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm hosting a photography contest and I need to verify the email addresses of the participants. Verify the email address 'participant1@example.com' and provide me with the verification results. Additionally, I want to retrieve the details of a specific embed record and display it on the contest website. Fetch the details for the embed record with the slug '7dW8zGbP'.",
        "relevant APIs": [
            [
                "Global Email V4",
                "Global Email V4"
            ],
            [
                "Vizor Ads",
                "Show"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 17864
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Validect - Email Verification",
                "api_name": "/v1/verify",
                "api_description": "#### Verify email address\n*We do bill only valid or invalid verification statuses.*\nPass the email as a GET parameter. Response properties description:\n```json\n{\n\"status\": \"valid\", // verification status of the email\n\"reason\": \"accepted_email\", // the reason of the status\n\"email\": \"example@gmail.com\",  // normalized email address\n\"user\": \"example\",  // The part before at-sign\n\"domain\": \"gmail.com\", // The part after at-sign\n\"public\": true, // Is address belongs to a publicly accessible email provider\n\"disposable\": false,  // Is address belongs to a disposable email service\n\"role\": false // Is address role based (e.g. abuse, admin, no-reply etc.)\n}\n```\nPossible verification statuses:\n-  `valid` - email address has been accepted by the mail server (safe to send)\n- `invalid` - email address is invalid, various reasons possible, see below (do not send)\n- `accept_all` - mail server accepts any email address (not recommended to send)\n- `unknown` - unable to verify email address (not recommended to send)\n\nPossible status reasons:\n- `accepted_email` - email address has been accepted by the mail server\n- `rejected_email` - email address has been rejected by the mail server\n- `invalid_syntax` - syntax of the email address is invalid according to RFC\n- `invalid_domain` - domain name of the email address does not exist\n- `no_mx_record` - mx record for the domain does not exist\n- `invalid_mx_record` - mx record of the domain is invalid\n- `dns_error` - error occurred while performing dns resolving of the domain\n- `smtp_error` - error occurred while performing smtp validation",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "Email address to validate",
                        "default": "example@gmail.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "reason": "str",
                    "email": "str",
                    "user": "str",
                    "domain": "str",
                    "public": "bool",
                    "disposable": "bool",
                    "role": "bool"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Temp Mail",
                "api_name": "Read Inbox",
                "api_description": "Read inbox an email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "string",
                        "description": "",
                        "default": "p1amvpvxfh@bestparadize.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str",
                    "request_id": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm working on a project for my company and I need to ensure the email addresses of all the employees are valid. Could you please validate the email addresses of all the employees in the company database? Additionally, fetch the latest inbox messages for the email address 'p1amvpvxfh@bestparadize.com'.",
        "relevant APIs": [
            [
                "Validect - Email Verification",
                "/v1/verify"
            ],
            [
                "Temp Mail",
                "Read Inbox"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 65459
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "Proxy List",
                "api_name": "/proxy/health",
                "api_description": "ReturnS the health status of the API. Also return last time the proxies check was completed. Time is in UTC.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Proxy List",
                "api_name": "/proxy/get",
                "api_description": "Returns the list of proxies based on the given parameters. The list is updated every 1 minute. API returns only working at the time of check proxies.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Possible values: http, https, socks4, socks5",
                        "default": "http"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Use country code to filter data by country. Please check https://www.nationsonline.org/oneworld/country_code_list.htm for more information about country codes.",
                        "default": "US"
                    },
                    {
                        "name": "anonymity",
                        "type": "STRING",
                        "description": "Possible values: high, anonymous, transparent",
                        "default": "high"
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Pulsar",
                "api_name": "Get All Collections By User",
                "api_description": "Get all collections by user",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "author": "str",
                    "status": "str",
                    "defaultThumb": "str",
                    "activeUser": "str",
                    "qtdImages": "str",
                    "qtdAproved": "str",
                    "qtdDiscarded": "str",
                    "qtdPending": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Pulsar",
                "api_name": "Get All Users",
                "api_description": "Get all users in system.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "photo": "str",
                    "name": "str",
                    "role": "str",
                    "status": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Pulsar",
                "api_name": "Download Zip",
                "api_description": "Download zip of images.",
                "required_parameters": [
                    {
                        "name": "collectionId",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "urlToDownload": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "ZohoCreator",
                "api_name": "ViewRecords",
                "api_description": "Replace https://zohocreator.p.rapidapi.com/ with https://creator.zoho.com/api/ if you're using native system\n\nGet Records from a Zoho View/Report",
                "required_parameters": [
                    {
                        "name": "scope",
                        "type": "STRING",
                        "description": "",
                        "default": "creatorapi"
                    },
                    {
                        "name": "authtoken",
                        "type": "STRING",
                        "description": "",
                        "default": "longTextStringFromAccounts"
                    },
                    {
                        "name": "appLinkName",
                        "type": "string",
                        "description": "",
                        "default": "mrp"
                    },
                    {
                        "name": "zc_ownername",
                        "type": "STRING",
                        "description": "",
                        "default": "ownerName"
                    },
                    {
                        "name": "viewLinkName",
                        "type": "string",
                        "description": "",
                        "default": "Contact_Details"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "raw",
                        "type": "STRING",
                        "description": "",
                        "default": true
                    },
                    {
                        "name": "criteria",
                        "type": "STRING",
                        "description": "",
                        "default": "(Country == \"US\")"
                    },
                    {
                        "name": "startindex",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "100"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Vizor Ads",
                "api_name": "API Status",
                "api_description": "Check API server is running or not",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "env": "str"
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Vizor Ads",
                "api_name": "Show",
                "api_description": "Get details of your existing embed records using it's unique slug",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "string",
                        "description": "",
                        "default": "7dW8zGbP"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "GeoSpark",
                "api_name": "Users",
                "api_description": "Get users details",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "user_id",
                        "default": "USER_ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "bool",
                    "msg": "str",
                    "code": "int",
                    "error": {
                        "ErrorCode": "str",
                        "ErrorMessage": "str",
                        "details": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a photography exhibition and I need to download a zip file of images. Can you provide me with the URL to download the zip file? It would also be great if you could fetch the list of available proxies for secure online access to the exhibition.",
        "relevant APIs": [
            [
                "Pulsar",
                "Download Zip"
            ],
            [
                "Proxy List",
                "/proxy/get"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 76034
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "Beeg",
                "api_name": "ss",
                "api_description": "ss",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "LimouCloud",
                "api_name": "Get Reservations",
                "api_description": "get all driver related reservations",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2021-11-20"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2021-11-14"
                    },
                    {
                        "name": "page_size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Please provide Values from the below list as per your need. \n 'QUOTED '=> Quoted by the client but not confirmed\n'CONFIRMED' => Confirmed by Driver (assigned to the driver)\n 'SCHEDULED' => Scheduled for later\n'COMPLETED'  => Completed trip\n'CANCELLED' => Canceled by either party\n 'REQUESTED' => Requested to driver (new rides)",
                        "default": "CONFIRMED"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "LimouCloud",
                "api_name": "Get Reservation by ID",
                "api_description": "Get Reservation by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "LimouCloud",
                "api_name": "Logout",
                "api_description": "Logout from account",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "fomoAPI",
                "api_name": "Get Campaign From URL",
                "api_description": "Get lead from Specific website  Campaign",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "Lead"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "gogofodo.com"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "list_complete": "bool",
                    "keys": "empty list"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "fomoAPI",
                "api_name": "Get Campaign  Lead From ID",
                "api_description": "Get ALL Lead From Your Campaign Social Proof",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "Lead"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "list_complete": "bool",
                    "keys": "empty list"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "testapi_v2",
                "api_name": "bananas",
                "api_description": "hey",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "testapi_v2",
                "api_name": "mobilitu/public",
                "api_description": "mobilitu",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "BoldSign",
                "api_name": "BrandList",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "BoldSign",
                "api_name": "GetTeam",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "teamId",
                        "type": "STRING",
                        "description": "Team Id.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "BoldSign",
                "api_name": "GetProperties",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "templateId",
                        "type": "STRING",
                        "description": "Template Id.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to organize a surprise birthday party for my best friend next week. Can you help me find a list of available party venues in her city? Additionally, I need to create personalized invitations for the guests. Can you suggest a tool that can assist me in designing and sending digital invitations?",
        "relevant APIs": [
            [
                "LimouCloud",
                "Get Reservations"
            ],
            [
                "BoldSign",
                "GetProperties"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 47532
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "Airports by API-Ninjas",
                "api_name": "/v1/airports",
                "api_description": "API Ninjas Airports API endpoint. At least one of the optional parameters must be provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination.",
                        "default": ""
                    },
                    {
                        "name": "max_elevation",
                        "type": "NUMBER",
                        "description": "maximum airport elevation in feet.",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "administrative region such as state or province within a country (e.g. California)",
                        "default": ""
                    },
                    {
                        "name": "min_elevation",
                        "type": "NUMBER",
                        "description": "minimum airport elevation in feet.",
                        "default": ""
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "airport city (e.g. London)",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "airport country. Must be 2-character ISO-2 country code (e.g. GB)",
                        "default": ""
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "airport timezone (e.g. Europe/London)\n\n",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "airport name. This parameter supports partial matching (e.g. Heathrow will match London Heathrow Airport)",
                        "default": "London Heathrow"
                    },
                    {
                        "name": "icao",
                        "type": "STRING",
                        "description": "International Civil Aviation Organization (ICAO) 4-character airport code.",
                        "default": ""
                    },
                    {
                        "name": "iata",
                        "type": "STRING",
                        "description": "International Air Transport Association (IATA) 3-character airport code.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "icao": "str",
                    "iata": "str",
                    "name": "str",
                    "city": "str",
                    "region": "str",
                    "country": "str",
                    "elevation_ft": "str",
                    "latitude": "str",
                    "longitude": "str",
                    "timezone": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "FachaAPI",
                "api_name": "Temporary Email Stats",
                "api_description": "Get the number of temporary emails in the database and its last update",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "FachaAPI",
                "api_name": "Live Aircraft by REG",
                "api_description": "Get live positioning for an aircraft with a specific REG",
                "required_parameters": [
                    {
                        "name": "reg",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Transportation",
                "tool_name": "FachaAPI",
                "api_name": "Live Aircraft by Squawk",
                "api_description": "Get live positioning for all aircraft with a specific Squawk",
                "required_parameters": [
                    {
                        "name": "squawk",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a vacation to a tropical island and I need to book a flight. Find me the airports in the Caribbean region with direct flights to Miami. Also, provide me with the live positioning of any aircraft with the registration number N12345.",
        "relevant APIs": [
            [
                "Airports by API-Ninjas",
                "/v1/airports"
            ],
            [
                "FachaAPI",
                "Live Aircraft by REG"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 22032
    },
    {
        "api_list": [
            {
                "category_name": "Reward",
                "tool_name": "Rewards as a Service",
                "api_name": "2. Get Account Information",
                "api_description": "Get the information for an account created under a Customer",
                "required_parameters": [
                    {
                        "name": "customer",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "account_identifier",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Reward",
                "tool_name": "Rewards as a Service",
                "api_name": "7. Get order history",
                "api_description": "Get more information about all the orders placed on this customer and account",
                "required_parameters": [
                    {
                        "name": "customer",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "account_identifier",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Reward",
                "tool_name": "Rewards as a Service",
                "api_name": "4. Get list of rewards",
                "api_description": "Gets the list of rewards available for the platform",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Reward",
                "tool_name": "Kitten Placeholder",
                "api_name": "Kitten",
                "api_description": "Fetches random kitten image!",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Reward",
                "tool_name": "Kitten Placeholder",
                "api_name": "Cat",
                "api_description": "Fetches a random cat picture.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to surprise my friends with a kitten-themed party. Can you fetch a random kitten image using the 'Kitten Placeholder' tool? Additionally, provide me with the account information of my friends' 'Rewards as a Service' accounts to check their reward history.",
        "relevant APIs": [
            [
                "Kitten Placeholder",
                "Kitten"
            ],
            [
                "Rewards as a Service",
                "2. Get Account Information"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 50866
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get ID",
                "api_description": "Get ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get all fastingCenters",
                "api_description": "Get all",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "Name": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Exercises by API-Ninjas",
                "api_name": "/v1/exercises",
                "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "muscle",
                        "type": "STRING",
                        "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
                        "default": "biceps"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
                        "default": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "STRING",
                        "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "type": "str",
                    "muscle": "str",
                    "equipment": "str",
                    "difficulty": "str",
                    "instructions": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Health Calculator API",
                "api_name": "BodyFat - Imperial",
                "api_description": "This endpoint calculates the body fat percentage based on the provided gender, age, height, and weight parameters in imperial units.",
                "required_parameters": [
                    {
                        "name": "age",
                        "type": "NUMBER",
                        "description": "The age of the person in **years**. Required.",
                        "default": "26"
                    },
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "The weight of the person in **pounds**. Required.",
                        "default": "180"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "The gender of the person. Must be either '**male**' or '**female**'. Required.",
                        "default": "male"
                    },
                    {
                        "name": "height",
                        "type": "NUMBER",
                        "description": "The height of the person in **inches**. Required.",
                        "default": "77"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "age": "float",
                    "bmi": "str",
                    "bodyfat": "str",
                    "bodyfat_status": "str",
                    "gender": "str",
                    "height": "str",
                    "weight": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Health Calculator API",
                "api_name": "Daily Water Intake",
                "api_description": "The Daily Water Intake Recommendation endpoint calculates the daily recommended water intake based on factors such as weight, activity level, and climate. It provides flexibility by allowing you to specify the unit of measurement for the water intake, either in liters or ounces.",
                "required_parameters": [
                    {
                        "name": "climate",
                        "type": "STRING",
                        "description": "The climate in which the individual is located.\n\nThe climate parameter accepts the following values:\n**normal** - Average climate\n**hot** - Hot climate\n**cold** - Cold climate",
                        "default": "normal"
                    },
                    {
                        "name": "activity_level",
                        "type": "STRING",
                        "description": "The activity level of the individual. \n\nThe activity_level parameter accepts the following values:\n**sedentary** - Little to no exercise\n**lightly_active** - Light exercise/sports 1-3 days/week\n**moderately_active** - Moderate exercise/sports 3-5 days/week\n**very_active** - Hard exercise/sports 6-7 days/week\n**extra_active** - Very hard exercise/sports and physical job or 2x training",
                        "default": "sedentary"
                    },
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "The weight of the individual in **kilograms (kg)**.",
                        "default": "60"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "The unit of measurement for the water intake. \n(Default) **ounces**\n Specify **liters** to get the result in liters instead.",
                        "default": "liters"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Health Calculator API",
                "api_name": "Macronutrient Distribution",
                "api_description": "This endpoint calculates the optimal distribution of macronutrients (carbohydrates, proteins, and fats) based on factors such as activity level, body composition goals, and dietary preferences.",
                "required_parameters": [
                    {
                        "name": "activity_level",
                        "type": "STRING",
                        "description": "The activity_level parameter accepts the following values:\n\n**sedentary** - Little to no exercise.\n**moderately_active** - Moderate exercise/sports 3-5 days/week.\n**very_active** - Hard exercise/sports 6-7 days/week.",
                        "default": "sedentary"
                    },
                    {
                        "name": "body_composition_goal",
                        "type": "STRING",
                        "description": "The body_composition_goal parameter accepts the following values:\n\n**weight_loss** - Goal of losing weight.\n**maintenance** - Goal of maintaining current weight.\n**muscle_gain** - Goal of gaining muscle.\n",
                        "default": "maintenance"
                    },
                    {
                        "name": "dietary_preferences",
                        "type": "STRING",
                        "description": "The dietary_preferences parameter allows users to specify their dietary preferences. It can be any string value representing the individual's dietary choices or restrictions, such as \\\"**vegetarian**,\\\" \\\"**vegan**,\\\" \\\"**pescatarian**,\\\" or \\\"**gluten-free**.\\\"",
                        "default": "vegan"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "BMI Calculator_v2",
                "api_name": "BMI",
                "api_description": "Calculate BMI using weight and height.",
                "required_parameters": [
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "",
                        "default": "86"
                    },
                    {
                        "name": "height",
                        "type": "NUMBER",
                        "description": "",
                        "default": "184"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "system",
                        "type": "STRING",
                        "description": "",
                        "default": "metric"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to improve my flexibility and I'm interested in trying some stretching exercises. Can you recommend up to 10 stretching exercises that target the hamstrings? Also, calculate the optimal distribution of macronutrients for me based on my activity level, body composition goals, and dietary preferences.",
        "relevant APIs": [
            [
                "Exercises by API-Ninjas",
                "/v1/exercises"
            ],
            [
                "Health Calculator API",
                "Macronutrient Distribution"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 67887
    },
    {
        "api_list": [
            {
                "category_name": "Payments",
                "tool_name": "Image QR code generator",
                "api_name": "Red colour QR code generator",
                "api_description": "Generate the QR code for anything you want.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "grayhat.in"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Payments",
                "tool_name": "fastmoney",
                "api_name": "Authentic Money Transfer Portal",
                "api_description": "Authentic Money Transfer Portal",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a surprise birthday party for my best friend and I need to generate red QR codes for the event invitations. The QR codes should contain the party details, such as the date, time, and venue. Additionally, I'm looking for a reliable money transfer portal for collecting party contributions. Can you provide information about the portal's transaction fees and withdrawal options?",
        "relevant APIs": [
            [
                "Image QR code generator",
                "Red colour QR code generator"
            ],
            [
                "fastmoney",
                "Authentic Money Transfer Portal"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54775
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "IPL API",
                "api_name": "getMatchByWinner",
                "api_description": "get all  the matches by winner",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "winner",
                        "type": "STRING",
                        "description": "",
                        "default": "Kolkata Knight Riders"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "IPL API",
                "api_name": "getMatchesByCity",
                "api_description": "get all the matches by **city**",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "",
                        "default": "Kolkata"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "IPL API",
                "api_name": "getMatchesByTeam",
                "api_description": "get all the matches by a particular team",
                "required_parameters": [
                    {
                        "name": "team",
                        "type": "STRING",
                        "description": "",
                        "default": "Kolkata Knight Riders"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "city": "str",
                    "date": "str",
                    "player_of_match": "str",
                    "venue": "str",
                    "neutral_venue": "int",
                    "team1": "str",
                    "team2": "str",
                    "toss_winner": "str",
                    "toss_decision": "str",
                    "winner": "str",
                    "result": "str",
                    "result_margin": "float",
                    "eliminator": "str",
                    "method": "NoneType",
                    "umpire1": "str",
                    "umpire2": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Major League Soccer Standings",
                "api_name": "Major League Soccer Standings",
                "api_description": "Major League Soccer Standings",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "season",
                        "type": "STRING",
                        "description": "e.g. `2022`\ne.g. `2021`",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "Cricbuzz Cricket",
                "api_name": "teams/get-stats",
                "api_description": "Get stats by team",
                "required_parameters": [
                    {
                        "name": "statsType",
                        "type": "STRING",
                        "description": "The value of 'value' field returned in \u2026/teams/get-stats-filter endpoint",
                        "default": "mostRuns"
                    },
                    {
                        "name": "teamId",
                        "type": "NUMBER",
                        "description": "The value of teamId field returned in \u2026/teams/list endpoint",
                        "default": "2"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "opponent",
                        "type": "NUMBER",
                        "description": "The value of 'teamId' field returned right in this endpoint",
                        "default": ""
                    },
                    {
                        "name": "team",
                        "type": "NUMBER",
                        "description": "The value of 'teamId' field returned right in this endpoint",
                        "default": ""
                    },
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "Specify year to get stats. Ex : 2021",
                        "default": ""
                    },
                    {
                        "name": "matchType",
                        "type": "NUMBER",
                        "description": "The value of matchTypeId field returned right in this endpoint",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "filter": {
                        "matchtype": [
                            {
                                "matchTypeId": "str",
                                "matchTypeDesc": "str",
                                "_list_length": 3
                            }
                        ],
                        "team": [
                            {
                                "id": "str",
                                "teamShortName": "str",
                                "_list_length": 733
                            }
                        ],
                        "selectedMatchType": "str",
                        "selectedTeam": "str"
                    },
                    "headers": [
                        "list of str with length 5"
                    ],
                    "values": [
                        {
                            "values": [
                                "list of str with length 6"
                            ],
                            "_list_length": 20
                        }
                    ],
                    "appIndex": {
                        "seoTitle": "str",
                        "webURL": "str"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Cricbuzz Cricket",
                "api_name": "series/get-news",
                "api_description": "Get news by series",
                "required_parameters": [
                    {
                        "name": "seriesId",
                        "type": "NUMBER",
                        "description": "The value of id field returned in \u2026/series/list or \u2026/series/list-archives endpoints.",
                        "default": "3636"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "storyList": [
                        {
                            "story": {
                                "id": "int",
                                "hline": "str",
                                "intro": "str",
                                "pubTime": "str",
                                "source": "str",
                                "storyType": "str",
                                "imageId": "int",
                                "seoHeadline": "str",
                                "context": "str",
                                "coverImage": {
                                    "id": "str",
                                    "caption": "str",
                                    "source": "str"
                                }
                            },
                            "_list_length": 12
                        }
                    ],
                    "lastUpdatedTime": "str",
                    "appIndex": {
                        "seoTitle": "str",
                        "webURL": "str"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Cricbuzz Cricket",
                "api_name": "matches/get-scorecard",
                "api_description": "Get match scorecard",
                "required_parameters": [
                    {
                        "name": "matchId",
                        "type": "NUMBER",
                        "description": "The value of matchId field returned in \u2026/matches/list, \u2026/schedules/list, \u2026/series/get-matches, \u2026/teams/get-schedules, \u2026/teams/get-results, \u2026/venues/get-matches endpoints.",
                        "default": "40381"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"scoreCard\": [{\"matchId\": \"int\", \"inningsId\": \"int\", \"timeScore\": \"int\", \"batTeamDetails\": {\"batTeamId\": \"int\", \"batTeamName\": \"str\", \"batTeamShortName\": \"str\", \"batsmenData\": {\"bat_5\": {\"batId\": \"int\", \"batName\": \"str\", \"batShortName\": \"str\", \"isCaptain\": \"bool\", \"isKeeper\": \"bool\", \"runs\": \"int\", \"balls\": \"int\", \"dots\": \"int\", \"fours\": \"int\", \"sixes\": \"int\", \"mins\": \"int\", \"strikeRate\": \"float\", \"outDesc\": \"str\", \"bowlerId\": \"int\", \"fielderId1\": \"int\", \"fielderId2\": \"int\", \"fielderId3\": \"int\", \"ones\": \"int\", \"twos\": \"int\", \"threes\": \"int\", \"fives\": \"int\", \"boundaries\": \"int\", \"sixers\": \"int\", \"wicketCode\": \"str\", \"isOverseas\": \"bool\", \"inMatchChange\": \"str\", \"playingXIChange\": \"str\"}, \"bat_2\": {\"batId\": \"int\", \"batName\": \"str\", \"batShortName\": \"str\", \"isCaptain\": \"bool\", \"isKeeper\": \"bool\", \"runs\": \"int\", \"balls\": \"int\", \"dots\": \"int\", \"fours\": \"int\", \"sixes\": \"int\", \"mins\": \"int\", \"strikeRate\": \"float\", \"outDesc\": \"str\", \"bowlerId\": \"int\", \"fielderId1\": \"int\", \"fielderId2\": \"int\", "
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a sports journalist and I'm writing an article about the performance of the Kolkata Knight Riders in the IPL. Can you provide me with the statistics of the team for the most runs? Also, give me the current standings of Major League Soccer for the 2021 season.",
        "relevant APIs": [
            [
                "IPL API",
                "getMatchesByTeam"
            ],
            [
                "Cricbuzz Cricket",
                "teams/get-stats"
            ],
            [
                "Major League Soccer Standings",
                "Major League Soccer Standings"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 36115
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Email Address Validator",
                "api_name": "Validate Email Address",
                "api_description": "Determine firsthand if the email is deliverable and working",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@gmail.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "timestamp": "int",
                    "data": {
                        "valid": "bool",
                        "validators": {
                            "regex": {
                                "valid": "bool"
                            },
                            "typo": {
                                "valid": "bool"
                            },
                            "disposable": {
                                "valid": "bool"
                            },
                            "mx": {
                                "valid": "bool"
                            },
                            "smtp": {
                                "valid": "bool",
                                "reason": "str"
                            }
                        },
                        "reason": "str",
                        "email": "str"
                    }
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Email API",
                "api_name": "Get Fake Email Address",
                "api_description": "Get a fake business email address and job title",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "email": "str",
                    "job_title": "str"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Verify Email",
                "api_name": "Verify Email",
                "api_description": "Verify Email Address",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "string",
                        "description": "",
                        "default": "test@example.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to verify the authenticity of an email address. The email is 'jane.doe@example.com'. Can you check if it is a valid and working email? Also, provide me with a fake business email address and job title.",
        "relevant APIs": [
            [
                "Verify Email",
                "Verify Email"
            ],
            [
                "Email API",
                "Get Fake Email Address"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 65468
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "US Gas Prices",
                "api_name": "/us/mn",
                "api_description": "Returns current gas price data for Minnesota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "US Gas Prices",
                "api_name": "/us/nm",
                "api_description": "Returns current gas price data for New Mexico. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "US Gas Prices",
                "api_name": "/us/ia",
                "api_description": "Returns current gas price data for Iowa. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "Travel Hacking Tool",
                "api_name": "Get Airport Details",
                "api_description": "This endpoint returns the details such as name and location for a specified IATA airport.",
                "required_parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "description": "Specify a valid three letter IATA code.",
                        "default": "DFW"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "str",
                    "icao": "str",
                    "name": "str",
                    "latitude": "float",
                    "longitude": "float",
                    "elevation": "int",
                    "url": "str",
                    "time_zone": "str",
                    "city_code": "str",
                    "country": "str",
                    "city": "str",
                    "state": "str",
                    "county": "str",
                    "type": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Travel Hacking Tool",
                "api_name": "Get Airplane Details",
                "api_description": "This endpoint returns a list of airplanes and other means of transportation to match GDS responses.",
                "required_parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "description": "",
                        "default": "777"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "code": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Travel Hacking Tool",
                "api_name": "Get TimeZones",
                "api_description": "Get TimeZones in Olsen Format with UTC offset and Daylight Savings Time (DST).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "timezone": "str",
                    "utc": "str",
                    "dst": "str",
                    "zone_code": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "aqls-b2c-system",
                "api_name": "get_priorityrows_mrt__train_no__wagons__wagon_no__priorityrow_get",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "wagon_no",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "train_no",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "aqls-b2c-system",
                "api_name": "get_wagon_by_no_mrt_wagons__wagon_no__get",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "wagon_no",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "aqls-b2c-system",
                "api_name": "get_stands_mrt__train_no__wagons__wagon_no__standrows__standrows_no__seats_get",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "wagon_no",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "standrows_no",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "train_no",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a road trip and I'm interested in the gas prices in New Mexico. Can you provide me with the current gas price data for New Mexico? Additionally, I'm curious about the details of the airport in Dallas-Fort Worth (DFW) and the time zones in Olsen format.",
        "relevant APIs": [
            [
                "US Gas Prices",
                "/us/nm"
            ],
            [
                "Travel Hacking Tool",
                "Get Airport Details"
            ],
            [
                "Travel Hacking Tool",
                "Get TimeZones"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 51289
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Email Validator_v2",
                "api_name": "/email/validate",
                "api_description": "Validate single email in real-time.\n\n**7 levels of verification:**\n\n1. By RFC standards.\n2. By service email (no-reply@, no-spam@, ...).\n3. MX records exist.\n4. By disposable/temporary email service.\n5. By spam catchers (like abusix.com network members).\n6. Connects to email service via standard protocol (SMTP) to check account exists.\n7. Connects to email service via internal api to check account banned or blocked (supports: Gmail, Mail.Ru, iCloud, Hotmail, Yahoo, Outlook, Rambler, Yandex and more).",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "Email for validation",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Email",
                "tool_name": "Email Validator_v9",
                "api_name": "check",
                "api_description": "Core api to check your email.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Email",
                "tool_name": "EmailQualityPlus",
                "api_name": "Valida\u00e7\u00e3o de Email",
                "api_description": "Valida\u00e7\u00e3o Simples de Email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "email a ser validado",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a surprise anniversary party for my parents and want to send out digital invitations. Before sending, I want to validate the email addresses of all the guests to ensure they are correct. Additionally, I need to find a caterer for the event and check their availability. Finally, I would like a random quote about love to include in the party decorations.",
        "relevant APIs": [
            [
                "Email Validator_v2",
                "/email/validate"
            ],
            [
                "Email Validator_v9",
                "check"
            ],
            [
                "EmailQualityPlus",
                "Valida\u00e7\u00e3o de Email"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 7468
    },
    {
        "api_list": [
            {
                "category_name": "Payments",
                "tool_name": "Image QR code generator",
                "api_name": "Red colour QR code generator",
                "api_description": "Generate the QR code for anything you want.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "grayhat.in"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Payments",
                "tool_name": "fastmoney",
                "api_name": "Authentic Money Transfer Portal",
                "api_description": "Authentic Money Transfer Portal",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a small business owner and I'm interested in incorporating QR codes into my marketing materials. Generate red QR codes that link to my company's website and social media profiles. Additionally, I need information about a secure money transfer portal for processing online payments. Can you share details about the portal's account setup process and supported currencies?",
        "relevant APIs": [
            [
                "Image QR code generator",
                "Red colour QR code generator"
            ],
            [
                "fastmoney",
                "Authentic Money Transfer Portal"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54776
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Yandex Video API",
                "api_name": "Get server time",
                "api_description": "Gets server time.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Yandex Video API",
                "api_name": "Get video from yandex search results",
                "api_description": "Use advanced filtering to get specific video from yandex! Remember to set from which domain you want data. Default is yandex.com but  yandex.ru, .by, .kz, .uz are also available. Set page number in order to get more results. 0 is the first page, 1 is second and so on.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "0 - first page\n1 - second page\n...",
                        "default": "0"
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "bitcoin"
                    },
                    {
                        "name": "domain",
                        "type": "ENUM",
                        "description": "get search results from:\n- yandex.com\n- yandex.ru\n- yandex.by\n- yandex.kz\n- yandex.uz",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "videoDuration",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "e.g. Paris, France",
                        "default": ""
                    },
                    {
                        "name": "videoRecent",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "videoHd",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "Domain": [
                            "list of str with length 1"
                        ],
                        "Region": [
                            "list of str with length 1"
                        ],
                        "VideoHd": [
                            "list of str with length 1"
                        ],
                        "VideoRecent": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Whois Lookup_v3",
                "api_name": "DNS Lookup",
                "api_description": "This endpoint pulls DNS data from a domain\n\nParameters:\n> domain - The domain to search\n> rtype - The type of record to pull. Records availables: A, PTR, MX, CNAME, TXT,NS.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to search",
                        "default": "google.com"
                    },
                    {
                        "name": "rtype",
                        "type": "STRING",
                        "description": "The rtype. i.e: A, MX, TXT, CNAME,NS, PTR",
                        "default": "NS"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Whois Lookup_v3",
                "api_name": "Check Similarity",
                "api_description": "This endpoint Helps to check if two domains are similar.\n\nParemeters:\n> domain1 \n>domain2",
                "required_parameters": [
                    {
                        "name": "domain1",
                        "type": "STRING",
                        "description": "first domain to compare with.",
                        "default": "google.com"
                    },
                    {
                        "name": "domain2",
                        "type": "STRING",
                        "description": "second domain to compare with.",
                        "default": "shopify.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Whois Lookup_v3",
                "api_name": "NS Lookup",
                "api_description": "This endpoint returns IP from a domain. (NameServer)\n\nParameters\n-> search - The domain to search",
                "required_parameters": [
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search for region",
                "api_description": "Get location suggestions by keyword",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": "str",
                    "_score": "float",
                    "area_type": "str",
                    "centroid": {
                        "lat": "float",
                        "lon": "float"
                    },
                    "city": "str",
                    "counties": [
                        {
                            "fips": "str",
                            "name": "str",
                            "state_code": "str",
                            "_list_length": 1
                        }
                    ],
                    "country": "str",
                    "county_needed_for_uniq": "bool",
                    "geo_id": "str",
                    "slug_id": "str",
                    "state_code": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search agents",
                "api_description": "Search agents by city/zip",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "price",
                        "type": "STRING",
                        "description": "Price range\nexample for range between 50k to 2m : \n50000_2000000",
                        "default": ""
                    },
                    {
                        "name": "agentname",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "[afrikaans\nalbanian\narabic\narmenian\nasl\nbengali\nbosnian\nbulgarian\nchinese\ncroatian\nczech\nDanish\ndutch\nEstonian\nfarsi\nfilipino\nfinnish\nfrench\ngaelic\ngeorgian\ngerman\ngreek\nhawaiian\nhebrew\nhindi\nhungarian\nindonesian\nitalian\njapanese\nkorean\nlao\nlatvian\nlithuanian\nmalay\nmandarin\nnepali\nnorwegian\npolish\nportuguese\npunjabi\nromanian\nrussian\nserbian\nsindhi\nsinghalese\nslovenian\nspanish\nswahili\nswedish\ntagalog\ntaiwanese\nthai\nturkish\nukrainian\nurdu\nvietnamese\nyugoslavian]",
                        "default": ""
                    },
                    {
                        "name": "photo",
                        "type": "BOOLEAN",
                        "description": "If the agent has a photo or not \n1 if yes\n0 if no",
                        "default": "1"
                    },
                    {
                        "name": "rating",
                        "type": "NUMBER",
                        "description": "Rating (between 1 and 5)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"agents\": [{\"address\": {\"city\": \"str\", \"country\": \"str\", \"line\": \"str\", \"line2\": \"str\", \"postal_code\": \"str\", \"state\": \"str\", \"state_code\": \"str\"}, \"advertiser_id\": \"int\", \"agent_rating\": \"int\", \"agent_team_details\": {\"is_team_member\": \"bool\"}, \"agent_type\": [\"list of str with length 2\"], \"areas_of_business\": \"empty list\", \"background_photo\": {\"href\": \"str\"}, \"broker\": {\"accent_color\": \"str\", \"designations\": \"empty list\", \"fulfillment_id\": \"int\", \"name\": \"str\", \"photo\": {\"href\": \"str\"}, \"video\": \"str\"}, \"data_flags\": \"NoneType\", \"description\": \"str\", \"designations\": \"empty list\", \"feed_licenses\": [{\"country\": \"str\", \"license_number\": \"str\", \"state_code\": \"str\", \"_list_length\": 1}], \"first_month\": \"int\", \"first_name\": \"str\", \"first_year\": \"int\", \"for_sale_price\": {\"count\": \"int\", \"last_listing_date\": \"str\", \"max\": \"int\", \"min\": \"int\"}, \"full_name\": \"str\", \"has_photo\": \"bool\", \"href\": \"str\", \"id\": \"str\", \"is_realtor\": \"bool\", \"lang\": {\"srp_content\": {\"Recommendations\": \"str\", \"active_ag"
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search properties for rent",
                "api_description": "Search properties for rent by location",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "move_in_date-max",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sqft-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Property type comma-separated or empty for all types:\nsingle_family\napartment\ntownhomes\ncondo_townhome_rowhome_coop\nduplex_triplex\ncondos\ncondo_townhome_rowhome_coop\ncondo_townhome\n",
                        "default": ""
                    },
                    {
                        "name": "sqft-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_price-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beds-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort properties by :\nRecently_Added\nHighest_Price \nLowest_Price",
                        "default": ""
                    },
                    {
                        "name": "threeDTours",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "baths-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_price-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beds-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "baths-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "noFees",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "dogs",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "move_in_date-min",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "cats",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Youtube Trending",
                "api_name": "trending",
                "api_description": "Gather Trending Videos from Youtube",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "enum for video type:\n- default\n- music\n- gaming\n- movies",
                        "default": "gaming"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code to retrieve trending videos for the provided country.\nE.g, US, DE, JP etc.",
                        "default": "US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "description": "str",
                    "publishedDate": "str",
                    "publishedText": "str",
                    "videoId": "str",
                    "videoUrl": "str",
                    "channelName": "str",
                    "channelId": "str",
                    "channelUrl": "str",
                    "thumbnails": [
                        {
                            "quality": "str",
                            "url": "str",
                            "width": "int",
                            "height": "int",
                            "_list_length": 9
                        }
                    ],
                    "views": "int",
                    "viewsText": "str",
                    "duration": "int",
                    "durationText": "str",
                    "verified": "bool",
                    "creatorOnRise": "bool",
                    "isShort": "bool"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I would like to watch trending movie videos on YouTube. Furthermore, check the similarity between the domains 'apple.com' and 'microsoft.com' using the Check Similarity API.",
        "relevant APIs": [
            [
                "Youtube Trending",
                "trending"
            ],
            [
                "Whois Lookup_v3",
                "Check Similarity"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 30501
    },
    {
        "api_list": [
            {
                "category_name": "Financial",
                "tool_name": "Currency Converter_v2",
                "api_name": "Supported Currencies",
                "api_description": "get a list of currencies we support",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Financial",
                "tool_name": "Currency Converter_v2",
                "api_name": "Convert",
                "api_description": "Convert from one currency toanother",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "amount",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "to",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Financial",
                "tool_name": "Open DeFi",
                "api_name": "web_pair_trade_data",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "pair_id",
                        "type": "NUMBER",
                        "description": "\nPair id as received in `/pairs` or `/pair-details`\n\nAs the endpoint /pair-details is preferred, this endpoint only gives direct pair_id access for now.\n",
                        "default": 1
                    },
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "\nThe time perid for the stats.\n\nCurrently only latest stats are supported.\n",
                        "default": "hourly"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "price_open": "float",
                    "price_high": "float",
                    "price_low": "float",
                    "price_close": "float",
                    "volume": "float",
                    "buys": "int",
                    "sells": "int",
                    "liquidity_high": "float",
                    "liquidity_low": "float",
                    "liquidity_events": "int"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "Open DeFi",
                "api_name": "web_candles",
                "api_description": "\nFetch candle data for a single trading pair.\n\nYou need to resolve the symbolic trading pair name to `pair_id` primary key with `/pairs` or `/pair-details`\nto call this API endpoint.\n\nCandle response size is limited to 10,000 candles. Only the first 10,000 candles\nsince the start timestamp is returned.\n\n[Inspired by Bitfinex API](https://docs.bitfinex.com/reference#rest-public-candles).\n",
                "required_parameters": [
                    {
                        "name": "time_bucket",
                        "type": "STRING",
                        "description": "\nWhat time bucket to use for the candle size.\n",
                        "default": "1h"
                    },
                    {
                        "name": "pair_id",
                        "type": "NUMBER",
                        "description": "\nPrimary key for the trading pair\n\nFor tests and demos use id `1` which is ETH/USDC pair on Uniswap v2,\nas it is the first deployed Uniswap v2 compatible pool.\n",
                        "default": 1
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "STRING",
                        "description": "\nWhen the candle fetch period starts.\n\nUse UNIX UTC timestamp, as ISO 8601 formatted string.\n[Read more information about the time format](https://docs.python.org/3/library/datetime.html#datetime.datetime.fromisoformat).\n\nIf not specific this will be resolved to now() - time_bucket * 100, or getting the last 100 candles.\n\nThis range parameter is inclusive.\n",
                        "default": "2020-05-18 00:00"
                    },
                    {
                        "name": "end",
                        "type": "STRING",
                        "description": "\nWhen the candle fetch period ends.\n\nUse UNIX UTC timestamp, as ISO 8601 formatted string.\n\nIf not specific this will be resolved to now().\n\nThis range parameter is inclusive.\n",
                        "default": "2020-05-19 00:00"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ts": "str",
                    "o": "float",
                    "h": "float",
                    "l": "float",
                    "c": "float",
                    "v": "float",
                    "xr": "float",
                    "b": "int",
                    "s": "int",
                    "tc": "int",
                    "bv": "float",
                    "sv": "float"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "Open DeFi",
                "api_name": "web_exchanges",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "\nWhat kind of sort options is available for the output.\n\nThe default `usd_volume_30d` sorts the exchanges based on their monthly volume.\n",
                        "default": "usd_volume_30d"
                    },
                    {
                        "name": "direction",
                        "type": "STRING",
                        "description": "Sort order:\n * `asc` - Ascending, from A to Z\n * `desc` - Descending, from Z to A\n",
                        "default": "desc"
                    },
                    {
                        "name": "filter_zero_volume",
                        "type": "BOOLEAN",
                        "description": "When set, do not return exchanegs which have had no volume for last 30 days.\n\nThis will speed up the response a bit, as most exchanges are ghost exchanges.\n",
                        "default": false
                    },
                    {
                        "name": "chain_slug",
                        "type": "STRING",
                        "description": "Blockchain slug, e.g, `ethereum` for Ethereum mainnet.\n\nIf present, list exchanges only for this chain.\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Financial",
                "tool_name": "Crypto News API",
                "api_name": "Get Last Cryptocurrency News",
                "api_description": "This end point returns all the latest articles on cryptocurrency",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Financial",
                "tool_name": "Consulta de boleto",
                "api_name": "consulta",
                "api_description": "Recebe como par\u00e2metro de busca, a linha digit\u00e1vel do boleto e devolve as informa\u00e7\u00f5es do mesmo.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Financial",
                "tool_name": "Mutual fund Nav",
                "api_name": "fundID",
                "api_description": "current Nav",
                "required_parameters": [
                    {
                        "name": "ID",
                        "type": "STRING",
                        "description": "FundID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to surprise my friends with a virtual treasure hunt game. Can you fetch the exchange rates for different currencies and create clues based on their fluctuations? Additionally, find me the latest news articles on cryptocurrency to incorporate it into the game.",
        "relevant APIs": [
            [
                "Currency Converter_v2",
                "Convert"
            ],
            [
                "Currency Converter_v2",
                "Supported Currencies"
            ],
            [
                "Crypto News API",
                "Get Last Cryptocurrency News"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 62997
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Ebay de Product Details Page Scraper",
                "api_name": "Detail Page",
                "api_description": "Get all Data from https://www.ebay.de/itm/ITEM_ID\n\n**Payload:** ITEM_ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "265488616472"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Price Comparison",
                "api_name": "details",
                "api_description": "get details on the product",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "An identifier can be any of the following:\n\n- UPC\n- EAN\n- ISBN\n- GTIN\n- Amazon ASIN",
                        "default": "611247373064"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "US"
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "",
                        "default": "-122.49493"
                    },
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "",
                        "default": "37.777805"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ID": "int",
                    "ASIN": "str",
                    "Title": "str",
                    "BasePrice": "float",
                    "FormattedBasePrice": "str",
                    "BestPrice": "float",
                    "FormattedBestPrice": "str",
                    "ProductCategories": [
                        {
                            "Source": "str",
                            "Name": "str",
                            "FullName": "str",
                            "_list_length": 1
                        }
                    ],
                    "Media": {
                        "XImage": "str",
                        "OriginalWidth": "int",
                        "OriginalHeight": "int",
                        "AverageColor": "str",
                        "DominantColor": "str",
                        "ImageAlternatives": [
                            "list of str with length 14"
                        ]
                    },
                    "Attributes": [
                        {
                            "Type": "str",
                            "Key": "str",
                            "Value": "str",
                            "_list_length": 4
                        }
                    ],
                    "Offers": [
                        {
                            "ID": "NoneType",
                            "Merchant": "str",
                            "ProductID": "int",
                            "Quality": "str",
                            "Venue": "str",
                            "Price": "float",
                            "FormattedPrice": "str",
                            "Link": "str",
                            "Links": {
                                "AffiliateLink": "str",
                                "CashbackLink": "NoneType",
                                "ParentLink": "NoneType",
                                "ParentAffiliateLink": "NoneType",
                                "ParentCashbackLink": "NoneType"
                            },
                            "InStockStatus": "str",
                            "BasePrice": "int",
                            "FormattedBasePrice": "str",
                            "_list_length": 1
                        }
                    ],
                    "Raw": "NoneType"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Price Comparison",
                "api_name": "offers",
                "api_description": "list offers for the product",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "An identifier can be any of the following:\n\n- UPC\n- EAN\n- ISBN\n- GTIN\n- Amazon ASIN",
                        "default": "611247373064"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "",
                        "default": "37.777805"
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "",
                        "default": "-122.49493"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target",
                "api_name": "products/v2/list-recommended",
                "api_description": "List more products to consider",
                "required_parameters": [
                    {
                        "name": "store_id",
                        "type": "NUMBER",
                        "description": "The value of location_id returned in .../stores/list endpoint",
                        "default": "911"
                    },
                    {
                        "name": "tcins",
                        "type": "NUMBER",
                        "description": "The value of tcin field returned in .../products/list endpoint",
                        "default": "54191097"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "errors": [
                        {
                            "message": "str",
                            "_list_length": 1
                        }
                    ],
                    "data": {}
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target",
                "api_name": "stores/list",
                "api_description": "List available nearby store by zipcode, GEO location, or city name. One at a time, do NOT use them together at once.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "Zip code or postal code of area to look for stores, such as : 10009",
                        "default": "10009"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of city to look for stores, such as : california",
                        "default": ""
                    },
                    {
                        "name": "latlng",
                        "type": "STRING",
                        "description": "GEO location to look for around stores, such as : 36.839828,-119.727711",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"place\": \"str\", \"type\": \"str\", \"limit\": \"int\", \"within\": \"int\", \"unit\": \"str\", \"locale\": \"str\", \"count\": \"int\", \"locations\": [{\"location_id\": \"int\", \"type_code\": \"str\", \"type_description\": \"str\", \"status\": \"str\", \"distance\": \"float\", \"distance_unit\": \"str\", \"location_names\": [{\"name_type\": \"str\", \"name\": \"str\", \"_list_length\": 1}], \"address\": {\"address_line1\": \"str\", \"city\": \"str\", \"county\": \"str\", \"region\": \"str\", \"state\": \"str\", \"postal_code\": \"str\"}, \"capabilities\": [{\"capability_code\": \"str\", \"capability_name\": \"str\", \"_list_length\": 4}], \"physical_specifications\": {\"total_building_area\": \"int\"}, \"contact_information\": {\"building_area\": \"str\", \"telephone_type\": \"str\", \"telephone_number\": \"str\"}, \"geographic_specifications\": {\"latitude\": \"float\", \"longitude\": \"float\", \"time_zone_code\": \"str\", \"iso_time_zone\": \"str\"}, \"rolling_operating_hours\": {\"regular_event_hours\": {\"days\": [{\"sequence_number\": \"int\", \"date\": \"str\", \"day_name\": \"str\", \"is_open\": \"bool\", \"hours\": [{\"begin_time\": \""
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Target",
                "api_name": "products/v2/get-details (Deprecated)",
                "api_description": "Get detail information of product",
                "required_parameters": [
                    {
                        "name": "store_id",
                        "type": "NUMBER",
                        "description": "The value of location_id returned in .../stores/list endpoint",
                        "default": "911"
                    },
                    {
                        "name": "tcin",
                        "type": "NUMBER",
                        "description": "The value of tcin field returned in .../products/list endpoint",
                        "default": "54191097"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "BestBuy Product Data API",
                "api_name": "BestBuyProductData",
                "api_description": "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "iphone"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to plan a trip to New York City with my friends. Can you provide me with the details of a specific product with ID 611247373064 in the Price Comparison tool? Additionally, find nearby stores in New York City using the Target tool.",
        "relevant APIs": [
            [
                "Price Comparison",
                "details"
            ],
            [
                "Target",
                "stores/list"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 35139
    },
    {
        "api_list": [
            {
                "category_name": "Monitoring",
                "tool_name": "Patient",
                "api_name": "Example",
                "api_description": "ddfgsdfgdfgsdfg",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "weather_id": "str",
                    "date": "str",
                    "temperature": "str",
                    "humidity": "str",
                    "pollen": "str",
                    "air": "str",
                    "so": "str",
                    "no": "str"
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Scan Web Heades API",
                "api_name": "Scan Headers",
                "api_description": "This endpoint takes a 'GET' request with domain as a query string parameter and returns  status of Headers of Web Page",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "www.google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "NoneType",
                    "config": "NoneType",
                    "timestamp": "str",
                    "results": "NoneType",
                    "id": "NoneType",
                    "statusObject": "NoneType"
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Ambee Soil Data",
                "api_name": "Soil Data by lat lng",
                "api_description": "get nearest places readings based around the given lattitude and logitude",
                "required_parameters": [
                    {
                        "name": "lng",
                        "type": "NUMBER",
                        "description": "",
                        "default": "78.96"
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20.59"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "pollutants",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Ambee Soil Data",
                "api_name": "Soil History Data",
                "api_description": "Ambee  Soil History Data",
                "required_parameters": [
                    {
                        "name": "lng",
                        "type": "NUMBER",
                        "description": "",
                        "default": "78.96"
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20.59"
                    },
                    {
                        "name": "startDate",
                        "type": "STRING",
                        "description": "",
                        "default": "'YYYY-MM-DD hh:mm:ss'"
                    },
                    {
                        "name": "endDate",
                        "type": "STRING",
                        "description": "",
                        "default": "YYYY-MM-DD hh:mm:ss''"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm hosting a garden party and I want to ensure that the soil is healthy for my plants. Can you provide me with the latest soil data for my backyard? Please include the soil pollutants and limit the number of readings to 10. Additionally, I would like to scan the headers of the gardening website to check its status and configuration.",
        "relevant APIs": [
            [
                "Ambee Soil Data",
                "Soil Data by lat lng"
            ],
            [
                "Scan Web Heades API",
                "Scan Headers"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12742
    },
    {
        "api_list": [
            {
                "category_name": "Energy",
                "tool_name": "Europe Fuel Prices",
                "api_name": "All Countries",
                "api_description": "Get all of Europe countries Fuel prices",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "diesel_price": "float",
                    "gasoline_price": "float"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Europe Fuel Prices",
                "api_name": "Get specific country",
                "api_description": "Get fuel prices for a specific country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "Germany"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "diesel_price": "float",
                    "gasoline_price": "float"
                }
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "entnahme",
                "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Erzeugungsanlagen sein d\u00fcrfen, die  f\u00fcr einen Verbraucher (Entnahme) an gegebener Postleitzahl ist.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/entnahme?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Erzeugungsanlage sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn die Netzentnahme (Verbrauch) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "Postleitzahl des Verbrauchers (Entnahmestelle)",
                        "default": "09669"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "erzeugung",
                "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Verbraucher sein d\u00fcrfen, die  von einer Erzeugungsanlage von angegebener Postleitzahl ihren Strom beziehen sollen.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/erzeugung?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Verbraucher sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn dessen Netzeinspeisung (Erzeuger) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "Postleitzahl der Erzeugungsanlage, f\u00fcr die eine Liste der Postleitzahlen von Verbrauchergebiete einers regionalen \u00d6kostrombezugs erstellt werden soll.",
                        "default": "01609"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "Strommix",
                "api_description": "Resultierender Strommix nach Anwendung der regionalen \u00d6kostromerzeugung im Gebiet einer Postleitzahl.",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "",
                        "default": "69168"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a journalist working on an article about sustainable energy consumption. Can you fetch the fuel prices for Germany and the Strommix information for Berlin? Additionally, provide me with the list of postcodes where renewable energy can be generated in Berlin.",
        "relevant APIs": [
            [
                "Europe Fuel Prices",
                "Get specific country"
            ],
            [
                "Regionalkonzept Strom Herkunft",
                "Strommix"
            ],
            [
                "Regionalkonzept Strom Herkunft",
                "entnahme"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 84084
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "Canadian Gas Prices",
                "api_name": "Province List",
                "api_description": "Returns list of valid provinces for this API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "provinces": [
                        "list of str with length 10"
                    ]
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Canadian Gas Prices",
                "api_name": "State",
                "api_description": "Endpoint to provide average gas price of a given American State.",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "ENUM",
                        "description": "Type of fuel you want the price for. Default is unleaded.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Canadian Gas Prices",
                "api_name": "Cities",
                "api_description": "Returns the average price of gas of major cities in a specific province in Canada.",
                "required_parameters": [
                    {
                        "name": "province",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Helicopter by API-Ninjas",
                "api_name": "/v1/helicopter",
                "api_description": "API Ninjas Helicopter API endpoint. Returns a list of helicopter specs that match the given parameters.\n\nAt least one of the following parameters (excluding the limit parameter) must be set.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "max_height",
                        "type": "NUMBER",
                        "description": "Maximum height of the helicopter in feet.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many results to return. Must be between 1 and 30. Default is 1.",
                        "default": ""
                    },
                    {
                        "name": "min_height",
                        "type": "NUMBER",
                        "description": "Minimum height of the helicopter in feet.",
                        "default": ""
                    },
                    {
                        "name": "max_length",
                        "type": "NUMBER",
                        "description": "Maximum length of the helicopter in feet.",
                        "default": ""
                    },
                    {
                        "name": "min_length",
                        "type": "NUMBER",
                        "description": "Minimum length of the helicopter in feet.",
                        "default": ""
                    },
                    {
                        "name": "min_speed",
                        "type": "NUMBER",
                        "description": "Minimum max. air speed in knots.",
                        "default": ""
                    },
                    {
                        "name": "min_range",
                        "type": "NUMBER",
                        "description": "Minimum range of the helicopter in nautical miles.",
                        "default": ""
                    },
                    {
                        "name": "max_range",
                        "type": "NUMBER",
                        "description": "Maximum range of the helicopter in nautical miles.",
                        "default": ""
                    },
                    {
                        "name": "max_speed",
                        "type": "NUMBER",
                        "description": "Maximum max. air speed in knots.",
                        "default": ""
                    },
                    {
                        "name": "manufacturer",
                        "type": "STRING",
                        "description": "Company that designed and built the helicopter.",
                        "default": "Bell"
                    },
                    {
                        "name": "model",
                        "type": "STRING",
                        "description": "Helicopter model name.",
                        "default": "206"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "manufacturer": "str",
                    "model": "str",
                    "max_speed_sl_knots": "str",
                    "cruise_speed_sl_knots": "str",
                    "range_nautical_miles": "str",
                    "cruise_time_min": "str",
                    "fuel_capacity_gallons": "str",
                    "gross_external_load_lbs": "str",
                    "external_load_limit_lbs": "str",
                    "main_rotor_diameter_ft": "str",
                    "num_blades": "str",
                    "blade_material": "str",
                    "rotor_type": "str",
                    "storage_width_ft": "str",
                    "length_ft": "str",
                    "height_ft": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "ADSBx Flight Sim Traffic",
                "api_name": "LiveTraffic",
                "api_description": "Returns all aircraft within 25nm radius of specified Lat/Lon",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude (-90 to 90)",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "Longitude (-180 to 180) Hint: US is negative longitude!",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ERR": "str",
                    "V": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a company event in Montreal and need to estimate the travel expenses for my colleagues. Can you provide the average gas prices in different provinces? Additionally, I want to check the live traffic data for Montreal to plan the itinerary.",
        "relevant APIs": [
            [
                "Canadian Gas Prices",
                "Province List"
            ],
            [
                "Canadian Gas Prices",
                "Cities"
            ],
            [
                "ADSBx Flight Sim Traffic",
                "LiveTraffic"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 51435
    },
    {
        "api_list": [
            {
                "category_name": "Communication",
                "tool_name": "ISS Location",
                "api_name": "get",
                "api_description": "gets you the data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "PubNub Network",
                "api_name": "History",
                "api_description": "Get older messages.",
                "required_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "JSONP Callback",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit of messages to return",
                        "default": "2"
                    },
                    {
                        "name": "subscribe_key",
                        "type": "STRING",
                        "description": "Subscribe Key",
                        "default": "demo"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "Channel Name",
                        "default": "my_channel"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Communication",
                "tool_name": "PubNub Network",
                "api_name": "Time",
                "api_description": "Timetoken from PubNub Network",
                "required_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "JSONP Callback",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are planning a stargazing trip and we want to track the International Space Station (ISS). Can you provide us with the current location of the ISS? Also, fetch the history of messages from the 'my_channel' channel on PubNub Network to see if there are any interesting updates about space exploration.",
        "relevant APIs": [
            [
                "ISS Location",
                "get"
            ],
            [
                "PubNub Network",
                "History"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 29499
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Flirty words",
                "api_name": "Generate flirty line",
                "api_description": "Generates a random flirty line",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram Downloader_v2",
                "api_name": "Get Media",
                "api_description": "Post, Photo, Video, Igtv, Reel, Profile Picture",
                "required_parameters": [
                    {
                        "name": "url_username",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.instagram.com/p/CqDpQo4piyE/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a singles mixer and I need some flirty lines to break the ice. Can you generate a few random flirty lines for me? Also, I'd like to download some interesting videos from Instagram to play during the event. Please fetch the media from these Instagram posts.",
        "relevant APIs": [
            [
                "Flirty words",
                "Generate flirty line"
            ],
            [
                "Instagram Downloader_v2",
                "Get Media"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 50406
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "Beeg",
                "api_name": "ss",
                "api_description": "ss",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "test2",
                "api_name": "/{orgCode}/cards",
                "api_description": "Returns a list of cards for the given session. User authentication is required.",
                "required_parameters": [
                    {
                        "name": "muid",
                        "type": "STRING",
                        "description": "User ID.",
                        "default": "string"
                    },
                    {
                        "name": "msid",
                        "type": "STRING",
                        "description": "Session ID.",
                        "default": "string"
                    },
                    {
                        "name": "orgCode",
                        "type": "STRING",
                        "description": "The organization associated with the request.",
                        "default": "string"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "Language used.",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "test2",
                "api_name": "/{orgCode}/cardart/{bins}",
                "api_description": "Returns card art URLs by BINs. Different URLs can be defined for each BIN/range of BINs. User authentication is not required.",
                "required_parameters": [
                    {
                        "name": "muid",
                        "type": "STRING",
                        "description": "User ID.",
                        "default": "string"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "Language used.",
                        "default": "string"
                    },
                    {
                        "name": "orgCode",
                        "type": "STRING",
                        "description": "The organization associated with the request.",
                        "default": "string"
                    },
                    {
                        "name": "msid",
                        "type": "STRING",
                        "description": "Session ID.",
                        "default": "string"
                    },
                    {
                        "name": "bins",
                        "type": "STRING",
                        "description": "One or more six-digit bin separated by commas.",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "test2",
                "api_name": "/{orgCode}/accounts/{accountId}/cards",
                "api_description": "Returns a list of cards belonging to a specific account. User authentication is required.",
                "required_parameters": [
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "Language used.",
                        "default": "string"
                    },
                    {
                        "name": "msid",
                        "type": "STRING",
                        "description": "Session ID.",
                        "default": "string"
                    },
                    {
                        "name": "orgCode",
                        "type": "STRING",
                        "description": "The organization associated with the request.",
                        "default": "string"
                    },
                    {
                        "name": "muid",
                        "type": "STRING",
                        "description": "User ID.",
                        "default": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "STRING",
                        "description": "The parent account ID.",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Scanily",
                "api_name": "Health Check",
                "api_description": "This endpoint allows you to check the availability of the systems to ensure everything is operational.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to organize my credit cards and would like to fetch the list of cards associated with my user ID '12345'. Also, provide me with the health status of the systems.",
        "relevant APIs": [
            [
                "test2",
                "/{orgCode}/cards"
            ],
            [
                "Scanily",
                "Health Check"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 75958
    },
    {
        "api_list": [
            {
                "category_name": "Jobs",
                "tool_name": "Indeed Jobs API - Finland",
                "api_name": "SearchJobs",
                "api_description": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Helsinki (For now this API gets data for Finland Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Helsinki"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "python developer"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "company_logo_url": "str",
                    "company_name": "str",
                    "company_rating": "str",
                    "company_review_link": "str",
                    "company_reviews": "int",
                    "date": "str",
                    "job_location": "str",
                    "job_title": "str",
                    "job_url": "str",
                    "multiple_hiring": "str",
                    "next_page": "str",
                    "page_number": "int",
                    "position": "int",
                    "salary": "str",
                    "urgently_hiring": "str"
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "Indeed Jobs API - Sweden",
                "api_name": "SearchJobs",
                "api_description": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Stockholm (For now this API gets data for Sweden Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Stockholm"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "python"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "company_logo_url": "str",
                    "company_name": "str",
                    "company_rating": "str",
                    "company_review_link": "str",
                    "company_reviews": "int",
                    "date": "str",
                    "job_location": "str",
                    "job_title": "str",
                    "job_url": "str",
                    "multiple_hiring": "str",
                    "next_page": "str",
                    "page_number": "int",
                    "position": "int",
                    "salary": "str",
                    "urgently_hiring": "str"
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "AI Resume Generator",
                "api_name": "Generate Document: Resume",
                "api_description": "Endpoint that will generate a large text response containing a Resume document using the provided information",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "degree",
                        "type": "STRING",
                        "description": "",
                        "default": "Information Systems"
                    },
                    {
                        "name": "skills",
                        "type": "STRING",
                        "description": "",
                        "default": "Networking, Web Development"
                    },
                    {
                        "name": "university",
                        "type": "STRING",
                        "description": "",
                        "default": "Michigan State University"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Jobs",
                "tool_name": "AI Resume Generator",
                "api_name": "Generate Document: Cover Letter",
                "api_description": "Endpoint that will generate a large text response containing a Cover Letter document using the provided information",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "jobDescription",
                        "type": "STRING",
                        "description": "",
                        "default": "Example Co. is looking for a Full Stack Web Developer to maintain and improve our custom web application. The solutions will require both frontend and backend skills. Our web application runs on a LEMP stack. LEMP stack experience is a bonus, but not required."
                    },
                    {
                        "name": "degree",
                        "type": "STRING",
                        "description": "",
                        "default": "Information Systems"
                    },
                    {
                        "name": "university",
                        "type": "STRING",
                        "description": "",
                        "default": "Michigan State University"
                    },
                    {
                        "name": "skills",
                        "type": "STRING",
                        "description": "",
                        "default": "Networking, Web Development"
                    },
                    {
                        "name": "jobTitle",
                        "type": "STRING",
                        "description": "",
                        "default": "Full Stack Web Developer"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to explore job opportunities in Helsinki, Finland as a Python developer. Can you find some job postings for me? I need the details of the top 15 jobs, including the company name, job title, job location, salary, and job URL. Additionally, generate a cover letter for me with a degree in Information Systems from Michigan State University, skills in networking and web development, and a job title of Full Stack Web Developer.",
        "relevant APIs": [
            [
                "Indeed Jobs API - Finland",
                "SearchJobs"
            ],
            [
                "AI Resume Generator",
                "Generate Document: Cover Letter"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 56155
    },
    {
        "api_list": [
            {
                "category_name": "Communication",
                "tool_name": "On hold audio messages",
                "api_name": "Endpoint",
                "api_description": "It needs for ordering messages",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Communication",
                "tool_name": "Grup Terbuka",
                "api_name": "Kirim Pesan",
                "api_description": "api untuk kirim pesan",
                "required_parameters": [
                    {
                        "name": "pesan",
                        "type": "STRING",
                        "description": "",
                        "default": "pesan baru"
                    },
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "code": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "BOTlibre",
                "api_name": "form-check-user",
                "api_description": "The form-check-user API validates user, and returns the user's details.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "REQUIRED: The ID of the user. The user must be registered with BOT libre. If not passed the user will be anonymous. The user is required if the bot is private.",
                        "default": "myuserid"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "application",
                        "type": "STRING",
                        "description": "OPTIONAL: The application ID. If not passed, the application will be anonymous.",
                        "default": "myapp"
                    },
                    {
                        "name": "password",
                        "type": "STRING",
                        "description": "REQUIRED: The password of the user. A token can also be used.",
                        "default": "password"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "REQUIRED: The token of the user. A token can be obtained through check-user, and is valid until reset.",
                        "default": "123456"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Communication",
                "tool_name": "BOTlibre",
                "api_name": "form-check-instance",
                "api_description": "The form-check-instance API validates that a bot ID or name exists, and returns the bot's details.",
                "required_parameters": [
                    {
                        "name": "password",
                        "type": "STRING",
                        "description": "OPTIONAL: The password of the user. A token can also be used.",
                        "default": "password"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "REQUIRED: The ID of the bot to validate. The bot's name can also be used, but the ID is better as it is guaranteed to be unique.",
                        "default": "1234"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "REQUIRED: The nameof the bot to validate. The bot's ID can also be used.",
                        "default": "mybot"
                    },
                    {
                        "name": "application",
                        "type": "STRING",
                        "description": "OPTIONAL: The application ID. If not passed, the application will be anonymous.",
                        "default": "myapp"
                    },
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "OPTIONAL: The ID of the user. The user must be registered with BOT libre. If not passed the user will be anonymous. The user is required if the bot is private.",
                        "default": "myuserid"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "OPTIONAL: The token of the user. A token can be obtained through check-user, and is valid until reset.",
                        "default": "123456"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Communication",
                "tool_name": "BOTlibre",
                "api_name": "form-chat",
                "api_description": "The form-chat API receives a chat message and returns the chat bot's reply as an XML document.",
                "required_parameters": [
                    {
                        "name": "instance",
                        "type": "STRING",
                        "description": "REQUIRED: The ID of the bot to chat with. The bot's name can also be used, but the ID is better as it is guaranteed to be unique.",
                        "default": "mybot"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "application",
                        "type": "STRING",
                        "description": "OPTIONAL: The application ID. If not passed, the application will be anonymous.",
                        "default": "myapp"
                    },
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "OPTIONAL: The ID of the user who is sending the message. The user must be registered with BOT libre. If not passed the user will be anonymous. The user is required if the bot is private. The user/password are only required on the first message.",
                        "default": "myuserid"
                    },
                    {
                        "name": "password",
                        "type": "STRING",
                        "description": "OPTIONAL: The password of the user who is sending the message. A token can also be used.",
                        "default": "mypassword"
                    },
                    {
                        "name": "token",
                        "type": "STRING",
                        "description": "OPTIONAL: The token of the user who is sending the message. A token can be obtained through check-user, and is valid until reset.",
                        "default": "123456"
                    },
                    {
                        "name": "conversation",
                        "type": "STRING",
                        "description": "OPTIONAL: The conversation ID for the current conversation. This must not be passed on the first message, but will be returned by the response, and should be used for all subsequent messages in the conversation.",
                        "default": "1234"
                    },
                    {
                        "name": "message",
                        "type": "STRING",
                        "description": "OPTIONAL: The chat message to send to the bot. The message can be omitted if you wish the bot to start the conversation (if the bot has a greeting set). The message must be encoded in the URI.",
                        "default": "Hello  Bot"
                    },
                    {
                        "name": "emote",
                        "type": "STRING",
                        "description": "OPTIONAL: A emotion to tag the message with. This is one of LOVE, LIKE, DISLIKE, HATE, RAGE, ANGER, CALM, SERENE, ECSTATIC, HAPPY, SAD, CRYING, PANIC, AFRAID, CONFIDENT, COURAGEOUS, SURPRISE, BORED, LAUGHTER, SERIOUS.",
                        "default": "HAPPY"
                    },
                    {
                        "name": "correction",
                        "type": "STRING",
                        "description": "OPTIONAL: A boolean that defines the chat message is a correction to the bot's last answer.",
                        "default": ""
                    },
                    {
                        "name": "offensive",
                        "type": "STRING",
                        "description": "OPTIONAL: A boolean that defines the bot's last answer as offensive. The message will be flagged for the bot's administrator to review.",
                        "default": ""
                    },
                    {
                        "name": "disconnect",
                        "type": "STRING",
                        "description": "OPTIONAL: A boolean that defines the end of the conversation.",
                        "default": ""
                    },
                    {
                        "name": "includeQuestion",
                        "type": "STRING",
                        "description": "OPTIONAL: A boolean that indicates the question should be included in the response.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Communication",
                "tool_name": "Barbaraaa",
                "api_name": "M",
                "api_description": "crypto",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Communication",
                "tool_name": "Revista Verde",
                "api_name": "Green Journal",
                "api_description": "A Revista Verde (RV) \u00e9 peri\u00f3dico cient\u00edfico internacional semestral do Programa Escola Verde e do Grupo de Pesquisa em Educa\u00e7\u00e3o Ambiental Interdisciplinar (CNPq) sobre problem\u00e1ticas socioambientais e sustentabilidade.\n\nWebsite: https://revistaverde.escolaverde.org",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a content creator and I'm looking for an API that can generate chatbot responses for my videos. Can you recommend an API that provides this functionality? Additionally, suggest a hotel in a scenic location for my next travel vlog.",
        "relevant APIs": [
            [
                "Grup Terbuka",
                "Kirim Pesan"
            ],
            [
                "BOTlibre",
                "form-chat"
            ],
            [
                "Barbaraaa",
                "M"
            ],
            [
                "Revista Verde",
                "Green Journal"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 29346
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Language Detection_v2",
                "api_name": "Language Codes List",
                "api_description": "Return list of language codes in ISO 639-1 format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Translation",
                "tool_name": "Translate it",
                "api_name": "options",
                "api_description": "With this endpoint you can get the supported languages and the possible translations between them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family and I are planning a multilingual event and we need to know the language codes for different languages. Can you provide us with a list of language codes in ISO 639-1 format? Moreover, we would like to explore the supported languages and possible translations between them using the Translate it API.",
        "relevant APIs": [
            [
                "Language Detection_v2",
                "Language Codes List"
            ],
            [
                "Translate it",
                "options"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12894
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "RushTranslate",
                "api_name": "Get Order",
                "api_description": "Get detailed information about a specific order.",
                "required_parameters": [
                    {
                        "name": "order_number",
                        "type": "STRING",
                        "description": "Order number",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Translation",
                "tool_name": "RushTranslate",
                "api_name": "Download File",
                "api_description": "Retrieve a temporary download URL for the file. Files are encrypted and stored in an Amazon S3 bucket. When you want to download a file this request will generate a temporary signed URL allowing access to download the file securely. URLs expire after two minutes.",
                "required_parameters": [
                    {
                        "name": "file_id",
                        "type": "STRING",
                        "description": "File ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Translation",
                "tool_name": "RushTranslate",
                "api_name": "Get File",
                "api_description": "Get detailed information about a specific file.",
                "required_parameters": [
                    {
                        "name": "file_id",
                        "type": "STRING",
                        "description": "File ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Translation",
                "tool_name": "Translate Language",
                "api_name": "Supported Languages",
                "api_description": "Supported Languages",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "code": "str",
                            "language": "str",
                            "_list_length": 107
                        }
                    ],
                    "message": "str",
                    "status": "bool",
                    "totalResultCount": "int"
                }
            },
            {
                "category_name": "Translation",
                "tool_name": "ceviri",
                "api_name": "ceee",
                "api_description": "faas aasdd",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Translation",
                "tool_name": "AI Translation APIs",
                "api_name": "Supported Languages List",
                "api_description": "Get Supported Languages List That  AI Translation APIs Support",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Translation",
                "tool_name": "Language Detection_v2",
                "api_name": "Language Codes List",
                "api_description": "Return list of language codes in ISO 639-1 format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need the supported languages list for AI translation. Please provide me with the list of languages that AI translation APIs support. Additionally, I would like to retrieve the language codes in ISO 639-1 format. Thank you!",
        "relevant APIs": [
            [
                "AI Translation APIs",
                "Supported Languages List"
            ],
            [
                "Language Detection_v2",
                "Language Codes List"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 42365
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Document Image Validation",
                "api_name": "GET Call",
                "api_description": "Used to fetch api result using the request id received in responses.",
                "required_parameters": [
                    {
                        "name": "request_id",
                        "type": "STRING",
                        "description": "",
                        "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Label Detection",
                "api_name": "GET Label Detection",
                "api_description": "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=\u201cimage_url\u201d)",
                "required_parameters": [
                    {
                        "name": "image",
                        "type": "STRING",
                        "description": "",
                        "default": "https://m.media-amazon.com/images/I/71k6XnjuwkL._AC_SL1500_.jpg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "labels": [
                        {
                            "text": "str",
                            "score": "float",
                            "locale": "str",
                            "_list_length": 10
                        }
                    ],
                    "success": "bool",
                    "dimensions": {
                        "height": "int",
                        "width": "int",
                        "type": "str"
                    }
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Brand Recognition",
                "api_name": "Get version",
                "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is launching a new product and we need to ensure its brand recognition. Please fetch the version of the brand recognition service. Additionally, perform label detection on the product image to identify the brand and provide the label along with its score.",
        "relevant APIs": [
            [
                "Brand Recognition",
                "Get version"
            ],
            [
                "Label Detection",
                "GET Label Detection"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 79968
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Exercises by API-Ninjas",
                "api_name": "/v1/exercises",
                "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "muscle",
                        "type": "STRING",
                        "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
                        "default": "biceps"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
                        "default": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "STRING",
                        "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "type": "str",
                    "muscle": "str",
                    "equipment": "str",
                    "difficulty": "str",
                    "instructions": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Suggestic",
                "api_name": "Create User",
                "api_description": "Each Suggestic partner/client has the ability to create their own set of users.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Suggestic",
                "api_name": "Remove a Meal Plan",
                "api_description": "Use the **removeMealPlan** mutation to remove the current and following days in the profile's meal plan. Therefore, it is not possible to delete meal plans which dates have already passed.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "auth",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "errors": [
                        {
                            "message": "str",
                            "extensions": {
                                "code": "str"
                            },
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Calories Burned by API-Ninjas",
                "api_name": "/v1/caloriesburned",
                "api_description": "API Ninjas Calories Burned API endpoint.",
                "required_parameters": [
                    {
                        "name": "activity",
                        "type": "STRING",
                        "description": "name of the given activity. This value can be partial (e.g. ski will match water skiing and downhill skiing)",
                        "default": "skiing"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "weight of the user performing the activity in pounds. Must be between 50 and 500. Default value is 160.",
                        "default": ""
                    },
                    {
                        "name": "duration",
                        "type": "STRING",
                        "description": "how long the activity was performed in minutes. Must be 1 or greater. Default value is 60 (1 hour).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "calories_per_hour": "int",
                    "duration_minutes": "int",
                    "total_calories": "int"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get all fastingCenters",
                "api_description": "Get all",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "Name": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get ID",
                "api_description": "Get ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is organizing a wellness program and we want to create individual user profiles. Please assist us in setting up user accounts using the Suggestic API. Also, we would like to explore exercises that target the biceps and provide instructions on how to perform them.",
        "relevant APIs": [
            [
                "Suggestic",
                "Create User"
            ],
            [
                "Exercises by API-Ninjas",
                "/v1/exercises"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 67969
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "route-precedence-test-1",
                "api_name": "/prices/today",
                "api_description": "/prices/today",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "route-precedence-test-1",
                "api_name": "/prices/{date}",
                "api_description": "/prices/{date}",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "string",
                        "description": "",
                        "default": "my_date"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "ThisshouldbeFREE",
                "api_name": "logoutUser",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "ThisshouldbeFREE",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "ThisshouldbeFREE",
                "api_name": "getInventory",
                "api_description": "Returns a map of status codes to quantities",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Sale": "int",
                    "totvs": "int",
                    "sold": "int",
                    "string": "int",
                    "pending": "int",
                    "cat": "int",
                    "dgdfgdf": "int",
                    "available": "int",
                    "not available": "int",
                    "Available": "int",
                    "peric": "int",
                    "disponible": "int"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "March4",
                "api_name": "albums",
                "api_description": "njnj",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "userId": "int",
                    "id": "int",
                    "title": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "SEO Automations",
                "api_name": "Extract Sitemap XML as JSON",
                "api_description": "Are you looking for an API that can quickly and easily download and parse sitemap.xml files into JSON format? Look no further! Our API allows you to make a simple GET request, passing in the URL of a sitemap.xml file as a parameter. The API will handle the rest, downloading the file, parsing it into a JSON object, and returning the result in the response. And if you need a little extra information to help organize and navigate the URLs in the sitemap, we've got you covered there too. By adding a query parameter to the GET request, you can also include category and breadcrumb information for each URL in the parsed sitemap. Give it a try and see how much easier working with sitemaps can be!",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.sitemaps.org/sitemap.xml"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "meta",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    },
                    {
                        "name": "breadcrumbs",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    },
                    {
                        "name": "categories",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "urls": [
                            {
                                "url": "str",
                                "scheme": "str",
                                "lastModified": "str",
                                "category-1": "str",
                                "categoriesCount": "int",
                                "breadcrumb-1": "str",
                                "breadCrumbsCount": "int",
                                "pagePath": "str",
                                "_list_length": 84
                            }
                        ],
                        "numOfMaxCategories": "int",
                        "numOfMaxBreadCrumbs": "int"
                    },
                    "success": "bool"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "SEO Automations",
                "api_name": "Extract top Keywords, Phrases by density + all headers",
                "api_description": "Analyze any webpage's keyword density for SEO or research. Get the specified number of keywords or phrases you wish, sorted by density and occurrences in a JSON format. The algorithm has been optimized for pages with large amounts of text, as well as advanced cloud infrastracure ensuring accurate and speedy results for your SEO needs. This API uses Puppeteer to scrape even the most advanced SPA ( Single Page Applications ).",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://en.wikipedia.org/wiki/Example.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "numPhrases",
                        "type": "NUMBER",
                        "description": "Number of phrases to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                        "default": "20"
                    },
                    {
                        "name": "phraseLength",
                        "type": "NUMBER",
                        "description": "Number of words in each phrase to return ( results are sorted by density ). \nBetween 1 and 10.\nDefault is 10.",
                        "default": "5"
                    },
                    {
                        "name": "n",
                        "type": "NUMBER",
                        "description": "Number of Keywords to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "keywords": [
                        {
                            "keyword": "str",
                            "frequency": "float",
                            "_list_length": 20
                        }
                    ],
                    "phrases": [
                        "list of list with length 20"
                    ]
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PrivatePublicAPI",
                "api_name": "getPetById",
                "api_description": "Returns a single pet",
                "required_parameters": [
                    {
                        "name": "petId",
                        "type": "NUMBER",
                        "description": "ID of pet to return",
                        "default": 0
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PrivatePublicAPI",
                "api_name": "getUserByName",
                "api_description": "Get user by user name",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "username": "str",
                    "firstName": "str",
                    "lastName": "str",
                    "email": "str",
                    "password": "str",
                    "phone": "str",
                    "userStatus": "int"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PrivatePublicAPI",
                "api_name": "logoutUser",
                "api_description": "Logs out current logged in user session",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am organizing a charity event for my local community. Can you suggest some potential sponsors for the event? Also, provide me with the details of a specific order related to the event.",
        "relevant APIs": [
            [
                "route-precedence-test-1",
                "/prices/today"
            ],
            [
                "ThisshouldbeFREE",
                "getOrderById"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 73574
    },
    {
        "api_list": [
            {
                "category_name": "Monitoring",
                "tool_name": "Scan Web Heades API",
                "api_name": "Scan Headers",
                "api_description": "This endpoint takes a 'GET' request with domain as a query string parameter and returns  status of Headers of Web Page",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "www.google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "NoneType",
                    "config": "NoneType",
                    "timestamp": "str",
                    "results": "NoneType",
                    "id": "NoneType",
                    "statusObject": "NoneType"
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Plerdy",
                "api_name": "Heatmap",
                "api_description": "With Plerdy Heatmaps we see exactly where the clicks were on the website.  All clicks on the website are recorded and displayed in real time.  Which helps to understand how users behave on the website.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Price Tracking Tools",
                "api_name": "camelizer/get-prices",
                "api_description": "Get latest prices, history highest/lowest prices of a product from Amazon",
                "required_parameters": [
                    {
                        "name": "asin",
                        "type": "STRING",
                        "description": "The asin number of a product from Amazon, and must be in the correct format. Ex : B08QB93S6R",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "One of the following : au|ca|fr|de|it|es|uk|us",
                        "default": "us"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Price Tracking Tools",
                "api_name": "camelizer/get-price-chart",
                "api_description": "Get pricing history chart of a product from Amazon",
                "required_parameters": [
                    {
                        "name": "asin",
                        "type": "STRING",
                        "description": "The asin number of a product from Amazon, and must be in the correct format. Ex : B08QB93S6R",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "One of the following : en|fr|de|it|es",
                        "default": "en"
                    },
                    {
                        "name": "tp",
                        "type": "STRING",
                        "description": "Time period. One of the following : 1m|3m|6m|1y|all",
                        "default": "3m"
                    },
                    {
                        "name": "w",
                        "type": "NUMBER",
                        "description": "The width of the chart",
                        "default": "720"
                    },
                    {
                        "name": "h",
                        "type": "NUMBER",
                        "description": "The height of the chart",
                        "default": "480"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "One of the following : au|ca|fr|de|it|es|uk|us",
                        "default": "us"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Monitoring",
                "tool_name": "OTP",
                "api_name": "sms",
                "api_description": "otp sms to users",
                "required_parameters": [
                    {
                        "name": "mobileno",
                        "type": "string",
                        "description": "",
                        "default": "9629029442"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "MX - Email server UP or DOWN",
                "api_name": "Check EMAIL server",
                "api_description": "Returns if email server is up or down.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "microsoft.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "website": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a fashion blogger and I'm looking for trendy outfit ideas. Can you recommend some stylish outfits for summer? I also need to check the pricing history of certain fashion items on Amazon. Can you provide me with the pricing history chart for these items? Additionally, I want to analyze user behavior on my fashion blog. Can you assist me in generating a heatmap for my website?",
        "relevant APIs": [
            [
                "Plerdy",
                "Heatmap"
            ],
            [
                "Price Tracking Tools",
                "camelizer/get-price-chart"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12768
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "GoApis Geocoding API",
                "api_name": "Geocding",
                "api_description": "Geocoding is the process of converting a physical address into geographic coordinates, such as latitude and longitude. It allows for the identification of a specific location on the Earth's surface, making it possible to map and analyze data spatially",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "",
                        "default": "37.7749"
                    },
                    {
                        "name": "long",
                        "type": "STRING",
                        "description": "",
                        "default": "-122.4194"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "plus_code": {
                        "compound_code": "str",
                        "global_code": "str"
                    },
                    "results": [
                        {
                            "address_components": [
                                {
                                    "long_name": "str",
                                    "short_name": "str",
                                    "types": [
                                        "list of str with length 1"
                                    ],
                                    "_list_length": 8
                                }
                            ],
                            "formatted_address": "str",
                            "geometry": {
                                "location": {
                                    "lat": "float",
                                    "lng": "float"
                                },
                                "location_type": "str",
                                "viewport": {
                                    "northeast": {
                                        "lat": "float",
                                        "lng": "float"
                                    },
                                    "southwest": {
                                        "lat": "float",
                                        "lng": "float"
                                    }
                                }
                            },
                            "place_id": "str",
                            "plus_code": {
                                "compound_code": "str",
                                "global_code": "str"
                            },
                            "types": [
                                "list of str with length 1"
                            ],
                            "_list_length": 9
                        }
                    ],
                    "status": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Time by API-Ninjas",
                "api_name": "/v1/worldtime",
                "api_description": "API Ninjas World Time API endpoint. Returns the current date and time by city/state/country, location coordinates (latitude/longitude), or timezone.\n\nOne of the following parameter combinations must be set:\nlat + lon,\ncity (state and country optional),\ntimezone",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of desired location (e.g. Europe/London).",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "Longitude of desired location.",
                        "default": ""
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "Latitude of desired location.",
                        "default": ""
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "US state name or 2-letter abbreviation (for United States cities only).",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country name or 2-letter country code.",
                        "default": ""
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City name.",
                        "default": "London"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "timezone": "str",
                    "datetime": "str",
                    "date": "str",
                    "year": "str",
                    "month": "str",
                    "day": "str",
                    "hour": "str",
                    "minute": "str",
                    "second": "str",
                    "day_of_week": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a trip to London next week with my family. Can you provide me with the current date and time in London and also the geocoding details for the city? Additionally, fetch the world time for New York and get the geocoding information for that city as well.",
        "relevant APIs": [
            [
                "GoApis Geocoding API",
                "Geocding"
            ],
            [
                "World Time by API-Ninjas",
                "/v1/worldtime"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 48770
    }
]