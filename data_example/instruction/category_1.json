[
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Redfin Base",
                "api_name": "Get location infomation by zipcode",
                "api_description": "Get location infomation by zipcode",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "",
                        "default": "01003"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "zipCode": "str",
                            "regionId": "NoneType",
                            "city": "str",
                            "county": "str",
                            "state": "str",
                            "usps": "str",
                            "stateCapital": "str",
                            "countryName": "str",
                            "countryCode": "str",
                            "lat": "NoneType",
                            "lng": "NoneType",
                            "northLat": "NoneType",
                            "southLat": "NoneType",
                            "westLng": "NoneType",
                            "eastLng": "NoneType",
                            "fieldType": "NoneType",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Redfin Base",
                "api_name": "Get ZipCode by City",
                "api_description": "Get ZipCode by City",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "",
                        "default": "Holtsville"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "zipCode": "str",
                            "regionId": "NoneType",
                            "city": "str",
                            "county": "str",
                            "state": "str",
                            "usps": "str",
                            "stateCapital": "str",
                            "countryName": "str",
                            "countryCode": "str",
                            "lat": "NoneType",
                            "lng": "NoneType",
                            "northLat": "NoneType",
                            "southLat": "NoneType",
                            "westLng": "NoneType",
                            "eastLng": "NoneType",
                            "fieldType": "NoneType",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Redfin Base",
                "api_name": "Get region info",
                "api_description": "This API will return `region_type_id`, `region_id`\n\u279e Will use for API \u3010Search by region\u3011",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The input value can be full URL or sub URL\n- **Full URL**: `https://www.redfin.com/zipcode/01026`\n- **Sub URL**: `/zipcode/01026` (use the Auto-complete API to get the value, it is a property URL)",
                        "default": "https://www.redfin.com/zipcode/01026"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "region_type_id": "str",
                        "region_id": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "climate-change-live-api",
                "api_name": "Get individual publication's news about climate change",
                "api_description": "Get individual publication's news about climate change all over the world.",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "Guardian"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "at": "str",
                    "method": "str",
                    "hostname": "str",
                    "ip": "str",
                    "query": {},
                    "headers": {
                        "accept": "str",
                        "accept-encoding": "str",
                        "content-length": "str",
                        "host": "str",
                        "user-agent": "str",
                        "x-amzn-trace-id": "str",
                        "x-forwarded-for": "str",
                        "x-forwarded-host": "str",
                        "x-forwarded-port": "str",
                        "x-forwarded-proto": "str",
                        "x-mashape-proxy-secret": "str",
                        "x-mashape-subscription": "str",
                        "x-mashape-user": "str",
                        "x-mashape-version": "str",
                        "x-rapidapi-host": "str",
                        "x-rapidapi-proxy-secret": "str",
                        "x-rapidapi-request-id": "str",
                        "x-rapidapi-subscription": "str",
                        "x-rapidapi-tenant-name": "str",
                        "x-rapidapi-user": "str",
                        "x-rapidapi-version": "str",
                        "x-real-ip": "str",
                        "connection": "str"
                    },
                    "params": {
                        "0": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "climate-change-live-api",
                "api_name": "Get All Climate Change News",
                "api_description": "Get climate change news all over the world",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "at": "str",
                    "method": "str",
                    "hostname": "str",
                    "ip": "str",
                    "query": {},
                    "headers": {
                        "accept": "str",
                        "accept-encoding": "str",
                        "content-length": "str",
                        "host": "str",
                        "user-agent": "str",
                        "x-amzn-trace-id": "str",
                        "x-forwarded-for": "str",
                        "x-forwarded-host": "str",
                        "x-forwarded-port": "str",
                        "x-forwarded-proto": "str",
                        "x-mashape-proxy-secret": "str",
                        "x-mashape-subscription": "str",
                        "x-mashape-user": "str",
                        "x-mashape-version": "str",
                        "x-rapidapi-host": "str",
                        "x-rapidapi-proxy-secret": "str",
                        "x-rapidapi-request-id": "str",
                        "x-rapidapi-subscription": "str",
                        "x-rapidapi-tenant-name": "str",
                        "x-rapidapi-user": "str",
                        "x-rapidapi-version": "str",
                        "x-real-ip": "str",
                        "connection": "str"
                    },
                    "params": {
                        "0": "str"
                    }
                }
            }
        ],
        "query": "I'm planning a solo trip to explore different locations. Can you help me find the zip code for Holtsville? Additionally, I would like to stay updated on the latest climate change news from The Guardian.",
        "relevant APIs": [
            [
                "Redfin Base",
                "Get ZipCode by City"
            ],
            [
                "climate-change-live-api",
                "Get individual publication's news about climate change"
            ]
        ],
        "query_id": 1
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "natural milk",
                "api_name": "natural-milk",
                "api_description": "natural-milk",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "yiwugo product data",
                "api_name": "search shops",
                "api_description": "search shops by keyword.\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lan",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "msg": "str",
                    "detail": [
                        {
                            "loc": [
                                "list of str with length 2"
                            ],
                            "msg": "str",
                            "type": "str",
                            "ctx": {
                                "given": "str",
                                "permitted": [
                                    "list of str with length 2"
                                ]
                            },
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "yiwugo product data",
                "api_name": "search products",
                "api_description": "search products\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lan",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "yiwugo product data",
                "api_name": "get product detail",
                "api_description": "get product detail by item_id,\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)",
                "required_parameters": [
                    {
                        "name": "item_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "930783722"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lan",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "msg": "str",
                    "detail": [
                        {
                            "loc": [
                                "list of str with length 2"
                            ],
                            "msg": "str",
                            "type": "str",
                            "ctx": {
                                "given": "str",
                                "permitted": [
                                    "list of str with length 2"
                                ]
                            },
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Ecommerce Product API",
                "api_name": "Product Data",
                "api_description": "The /data endpoint is a part of the Ecommerce Product API that allows you to retrieve information about a specific product in your ecommerce store. By making a GET request to this endpoint and specifying the product name, you can access a wide range of information about the product, including its name, description, images, and more. The response to the request will be in JSON format and will include all relevant product data. This endpoint is an essential tool for retrieving information about products in your store, and is designed to be fast and efficient, ensuring that you receive the information you need quickly and easily.",
                "required_parameters": [
                    {
                        "name": "product",
                        "type": "STRING",
                        "description": "",
                        "default": "phone"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Get Promo Codes",
                "api_name": "Get Stores",
                "api_description": "Get Stores",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Get Promo Codes",
                "api_name": "Get Coupons",
                "api_description": "Get Coupons",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "",
                        "default": "update_time_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "store_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "request": {
                        "page": "str",
                        "store_id": "str",
                        "sort": "str",
                        "type": "str"
                    },
                    "time": "float",
                    "data": [
                        {
                            "id": "str",
                            "title": "str",
                            "description": "str",
                            "terms": "str",
                            "code": "str",
                            "url": "str",
                            "store_id": "str",
                            "language": "str",
                            "status": "str",
                            "add_time": "str",
                            "start_time": "str",
                            "end_time": "str",
                            "update_time": "str",
                            "_list_length": 98
                        }
                    ]
                }
            }
        ],
        "query": "I'm redecorating my living room and I need some inspiration. Can you help me find trendy home decor items and furniture? Additionally, provide me with interior design tips and tricks to create a stylish and cozy living space. It would be great if you could suggest some famous interior designers to follow for inspiration.",
        "relevant APIs": [
            [
                "yiwugo product data",
                "search products"
            ],
            [
                "yiwugo product data",
                "search shops"
            ],
            [
                "Ecommerce Product API",
                "Product Data"
            ],
            [
                "natural milk",
                "natural-milk"
            ]
        ],
        "query_id": 2
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Translate All Languages",
                "api_name": "Translate",
                "api_description": "Translates input text, returning translated text",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "The input text to translate.",
                        "default": "If you don\u2019t know what language the text is written in, our API will detect the language of the original request."
                    },
                    {
                        "name": "toLang",
                        "type": "STRING",
                        "description": "The language to use for translation of the input text, set to one of the language codes listed in the overview tab",
                        "default": "fr"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fromLang",
                        "type": "STRING",
                        "description": "The language of the fromLang, set to one of the language codes listed in Language Support. If the source language is not specified, the API will attempt to detect the source language automatically and return it within the response.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "int",
                    "langDetect": "str",
                    "translatedText": "str"
                }
            },
            {
                "category_name": "Translation",
                "tool_name": "Translate All Languages",
                "api_name": "Languages",
                "api_description": "Returns a list of supported languages for translation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "int",
                    "languages": [
                        {
                            "af": "str",
                            "_list_length": 91
                        }
                    ]
                }
            },
            {
                "category_name": "Translation",
                "tool_name": "Translate All Languages",
                "api_name": "Detect",
                "api_description": "Detects the language of text within a request.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "The input text upon which to perform language detection. Repeat this parameter to perform language detection on multiple text inputs.",
                        "default": "If you don\u2019t know what language the text is written in, our API will detect the language of the original request."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "int",
                    "langDetect": "str"
                }
            }
        ],
        "query": "Translate this email from Japanese to English and detect the language used. Additionally, provide me with a list of supported languages for translation.",
        "relevant APIs": [
            [
                "Translate All Languages",
                "Translate"
            ],
            [
                "Translate All Languages",
                "Detect"
            ],
            [
                "Translate All Languages",
                "Languages"
            ]
        ],
        "query_id": 3
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "Random Words",
                "api_name": "Get a random word",
                "api_description": "Returns a random words from a list of more than 5500+ words\n\nImportant Note: \n1. *wordLength* must not be used with minLength and/or maxLength",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "wordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "excludes",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beginsWith",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "endsWith",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "includes",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maxLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Random Words",
                "api_name": "Get multiple random words",
                "api_description": "Get multiple random words (i.e. min 2 and max 20) from a list of 5500+ words\n\nImportant Notes:\n1. *count* must be a valid number between 2 and 20 (both 2 and 20 included)\n2. *wordLength* must not be used with minLength and/or maxLength",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "The word count must be between 2 and 20",
                        "default": "5"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "endsWith",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "wordLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "includes",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beginsWith",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minLength",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "excludes",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Education",
                "tool_name": "Miraisoft Training",
                "api_name": "dashboard",
                "api_description": "dashboard",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "VN30": {
                            "stocks": {
                                "items": [
                                    {
                                        "symbol": "str",
                                        "buyPrice3": "float",
                                        "buyVolume3": "int",
                                        "buyPrice2": "float",
                                        "buyVolume2": "int",
                                        "buyPrice1": "int",
                                        "buyVolume1": "int",
                                        "change": "float",
                                        "currentPrice": "float",
                                        "currentVolume": "float",
                                        "totalVolume": "int",
                                        "sellPrice3": "float",
                                        "sellVolume3": "int",
                                        "sellPrice2": "float",
                                        "sellVolume2": "int",
                                        "sellPrice1": "int",
                                        "sellVolume1": "int",
                                        "highPrice": "float",
                                        "lowPrice": "float",
                                        "foreignBuyVolume": "int",
                                        "foreignSellVolume": "int",
                                        "floorPrice": "float",
                                        "ceilPrice": "int",
                                        "referencePrice": "float",
                                        "foreignBuyValue": "int",
                                        "foreignSellValue": "int",
                                        "_list_length": 5
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        ],
        "query": "I'm a teacher planning a fun activity for my students and I need some ideas for a game. Can you suggest some random words that I can use as themes for the game? Also, find me the nearest store that sells educational supplies.",
        "relevant APIs": [
            [
                "Random Words",
                "Get multiple random words"
            ],
            [
                "Miraisoft Training",
                "dashboard"
            ]
        ],
        "query_id": 4
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Daily-Sec-Financial-Statement-Dataset",
                "api_name": "basic_daily",
                "api_description": "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. With the basic subcription, you only have access to daily zip files older than 21 days.\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "string",
                        "description": "",
                        "default": "2022-11-10"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Daily-Sec-Financial-Statement-Dataset",
                "api_name": "premium_daily",
                "api_description": "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. The files are published daily (resp. once or twice a week during the beta phase).\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "string",
                        "description": "",
                        "default": "2022-11-10"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Daily-Sec-Financial-Statement-Dataset",
                "api_name": "content",
                "api_description": "This endpoint delivers the a json that shows which dates are available with which subscription. The format is as follows:\n\n```\n{\n  \"daily\": [\n  {  \n    \"date\": \"2022-01-03\",\n    \"file\": \"20220103.zip\",\n    \"subscription\": \"basic\"\n  },\n...\n  {  \n    \"date\": \"2022-12-02\",\n    \"file\": \"20221202.zip\",\n    \"subscription\": \"premium\"\n  },\n\n```\nEntries marked with \"subscription: premium\" are only accessible with the premium plan. All other entries are available with basic and premium plan",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "daily": [
                        {
                            "date": "str",
                            "file": "str",
                            "subscription": "str",
                            "_list_length": 220
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Daily-Sec-Financial-Statement-Dataset",
                "api_name": "heartbeat",
                "api_description": "A simple heartbeat that returns the time of the server to check if the connection to the server is working.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "time": "str"
                }
            }
        ],
        "query": "As a researcher, I require the basic daily zip files of filed 10-q and 10-k reports. Could you please provide me with the basic daily data for the date '2022-11-10'? Moreover, I would like to check the availability of dates for both basic and premium subscriptions using the content endpoint. Could you also provide the server time using the heartbeat endpoint?",
        "relevant APIs": [
            [
                "Daily-Sec-Financial-Statement-Dataset",
                "basic_daily"
            ],
            [
                "Daily-Sec-Financial-Statement-Dataset",
                "content"
            ],
            [
                "Daily-Sec-Financial-Statement-Dataset",
                "heartbeat"
            ]
        ],
        "query_id": 5
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "Motorcycles by API-Ninjas",
                "api_name": "/v1/motorcycles",
                "api_description": "API Ninjas Motorcycles API endpoint. Returns up to 30 motorcycle results matching the input name parameters. For searches that yield > 30 results, please use the offset parameter.\n\nEither **make** or **model** parameter must be set.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "model",
                        "type": "STRING",
                        "description": "name of motorcycle model. Supports partial matching (e.g. Ninja will match Ninja 650).",
                        "default": "Ninja"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "make",
                        "type": "STRING",
                        "description": "name of manufacturer/brand. Supports partial matching (e.g. Harley will match Harley-Davidson).",
                        "default": "Kawasaki"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "release year of motorcycle model. Must be in the form of YYYY (e.g. 2022).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "make": "str",
                    "model": "str",
                    "year": "str",
                    "type": "str",
                    "displacement": "str",
                    "engine": "str",
                    "power": "str",
                    "torque": "str",
                    "compression": "str",
                    "bore_stroke": "str",
                    "valves_per_cylinder": "str",
                    "fuel_system": "str",
                    "fuel_control": "str",
                    "ignition": "str",
                    "lubrication": "str",
                    "cooling": "str",
                    "gearbox": "str",
                    "transmission": "str",
                    "clutch": "str",
                    "frame": "str",
                    "front_suspension": "str",
                    "front_wheel_travel": "str",
                    "rear_suspension": "str",
                    "rear_wheel_travel": "str",
                    "front_tire": "str",
                    "rear_tire": "str",
                    "front_brakes": "str",
                    "rear_brakes": "str",
                    "total_weight": "str",
                    "seat_height": "str",
                    "total_height": "str",
                    "total_length": "str",
                    "total_width": "str",
                    "ground_clearance": "str",
                    "wheelbase": "str",
                    "fuel_capacity": "str",
                    "starter": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Airports by API-Ninjas",
                "api_name": "/v1/airports",
                "api_description": "API Ninjas Airports API endpoint. At least one of the optional parameters must be provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination.",
                        "default": ""
                    },
                    {
                        "name": "max_elevation",
                        "type": "NUMBER",
                        "description": "maximum airport elevation in feet.",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "administrative region such as state or province within a country (e.g. California)",
                        "default": ""
                    },
                    {
                        "name": "min_elevation",
                        "type": "NUMBER",
                        "description": "minimum airport elevation in feet.",
                        "default": ""
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "airport city (e.g. London)",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "airport country. Must be 2-character ISO-2 country code (e.g. GB)",
                        "default": ""
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "airport timezone (e.g. Europe/London)\n\n",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "airport name. This parameter supports partial matching (e.g. Heathrow will match London Heathrow Airport)",
                        "default": "London Heathrow"
                    },
                    {
                        "name": "icao",
                        "type": "STRING",
                        "description": "International Civil Aviation Organization (ICAO) 4-character airport code.",
                        "default": ""
                    },
                    {
                        "name": "iata",
                        "type": "STRING",
                        "description": "International Air Transport Association (IATA) 3-character airport code.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "icao": "str",
                    "iata": "str",
                    "name": "str",
                    "city": "str",
                    "region": "str",
                    "country": "str",
                    "elevation_ft": "str",
                    "latitude": "str",
                    "longitude": "str",
                    "timezone": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Vehicle RC Information_v2",
                "api_name": "Vehicle Information",
                "api_description": "Fetch Vehicle Information using Registration Number.",
                "required_parameters": [
                    {
                        "name": "VehicleNumber",
                        "type": "string",
                        "description": "",
                        "default": "PB65AM0008"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "Canadian Gas Prices",
                "api_name": "States",
                "api_description": "Returns the average price of gas in all American states.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "prices": [
                        {
                            "state": "str",
                            "price": "float",
                            "_list_length": 51
                        }
                    ]
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Canadian Gas Prices",
                "api_name": "City List",
                "api_description": "Returns a list of valid cities for this API when provided a valid province. Ex: 'Ontario'",
                "required_parameters": [
                    {
                        "name": "province",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Canadian Gas Prices",
                "api_name": "State",
                "api_description": "Endpoint to provide average gas price of a given American State.",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "ENUM",
                        "description": "Type of fuel you want the price for. Default is unleaded.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Datamo",
                "api_name": "/specs/v1/getMakes",
                "api_description": "This endpoint will return all the vehicle makes available, as an array of strings.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Transportation",
                "tool_name": "Datamo",
                "api_name": "/specs/v1/tier3",
                "api_description": "Pull requested vehicle data for specific field parameters. Tier 3 access grants to filter by any of the 100+ fields in the database\n\nAt least one query parameter is required for a successful call.",
                "required_parameters": [
                    {
                        "name": "make",
                        "type": "STRING",
                        "description": "At least 1 query parameter is required to make a successful call. For purpose of testing through the RapidAPI interface, this is required. Normally, only one of any additional query parameters is required. i.e. make, model, engineType, ...",
                        "default": "Tesla"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "bodyType",
                        "type": "STRING",
                        "description": "At least 1 query parameter is required to make a successful call.",
                        "default": ""
                    },
                    {
                        "name": "msrp",
                        "type": "STRING",
                        "description": "At least 1 query parameter is required to make a successful call.",
                        "default": ""
                    },
                    {
                        "name": "engineType",
                        "type": "STRING",
                        "description": "At least 1 query parameter is required to make a successful call.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page of data returned, starting with index 1 (Default 1).",
                        "default": ""
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Text search by the make, model, or year.",
                        "default": ""
                    },
                    {
                        "name": "model",
                        "type": "STRING",
                        "description": "At least 1 query parameter is required to make a successful call.",
                        "default": "Model 3"
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "The sort order of the specified field.",
                        "default": ""
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "The field you would like to sort by.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "The number of entries returned per query. The default is 10 per page. The max per page is 250. ",
                        "default": ""
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Over 100+ returnable fields including: make, model, year, engineType, bodyType, etc. See the Datamo website for a full list. Leave blank to return all fields.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Datamo",
                "api_name": "/specs/v1/tier1",
                "api_description": "Pull requested vehicle data for specific field parameters. Tier 1 allows the following to be queried by:  \n1. make\n2. model\n\nAt least one query parameter is required for a successful call.",
                "required_parameters": [
                    {
                        "name": "make",
                        "type": "STRING",
                        "description": "At least 1 query parameter is required to make a successful call. For purpose of testing through the RapidAPI interface, this is required. Normally, only one of any additional query parameters is required. i.e. make, model, engineType, ...",
                        "default": "Tesla"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "The field you would like to sort by.",
                        "default": ""
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "The sort order of the specified field.",
                        "default": ""
                    },
                    {
                        "name": "model",
                        "type": "STRING",
                        "description": "At least 1 query parameter is required to make a successful call.",
                        "default": "Model 3"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page of data returned, starting with index 1 (Default 1)",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "The number of entries returned per query. The default is 10 per page. The max per page is 250. ",
                        "default": ""
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Over 100+ returnable fields including: make, model, engineType, bodyType, msrp, etc. See the Datamo website for a full list. Leave blank to return all fields.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"totalItems\": \"int\", \"totalPages\": \"int\", \"data\": [{\"_id\": \"str\", \"angleOfApproach\": \"str\", \"angleOfDeparture\": \"str\", \"body\": \"str\", \"bodyType\": \"str\", \"camType\": \"str\", \"carClassification\": \"str\", \"cargoCapacity\": \"str\", \"chargeTime\": \"str\", \"colorsExterior\": \"str\", \"colorsInterior\": \"str\", \"comfort\": \"str\", \"convenience\": \"str\", \"countryOfOrigin\": \"str\", \"curbWeight\": \"str\", \"cylinders\": \"str\", \"dateAdded\": \"str\", \"domesticOrImported\": \"str\", \"doorFeatures\": \"str\", \"doors\": \"str\", \"dragCoefficient\": \"str\", \"driveType\": \"str\", \"eRange\": \"str\", \"energyConsumption\": \"str\", \"engineSize\": \"str\", \"engineType\": \"str\", \"expertRatingComfort\": \"str\", \"expertRatingDriving\": \"str\", \"expertRatingEconomy\": \"str\", \"expertRatingInterior\": \"str\", \"expertRatingStorage\": \"str\", \"expertRatingTechnology\": \"str\", \"expertRatingValue\": \"str\", \"expertRatingVerdict \": \"str\", \"expertRatingWildcard\": \"str\", \"exteriorOptions\": \"str\", \"frontHeadRoom\": \"str\", \"frontHipRoom\": \"str\", \"frontLegRoom\": \"str\", \"frontS"
            }
        ],
        "query": "I'm a car enthusiast and I want to learn more about motorcycles. Can you provide me with the specifications of motorcycles with the make 'Kawasaki' and year '2022' to broaden my knowledge? Additionally, suggest some airports where motorcycle events are frequently held.",
        "relevant APIs": [
            [
                "Motorcycles by API-Ninjas",
                "/v1/motorcycles"
            ],
            [
                "Airports by API-Ninjas",
                "/v1/airports"
            ]
        ],
        "query_id": 6
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Todo",
                "api_name": "getTodoUsingGET",
                "api_description": "Get todo from id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I need to update the status of a task in my todo list. Can you fetch the todo with id 1234 and provide me with the necessary information to make the update?",
        "relevant APIs": [
            [
                "Todo",
                "getTodoUsingGET"
            ]
        ],
        "query_id": 7
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "manatee jokes",
                "api_name": "random",
                "api_description": "retrieves a random manatee joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "setup": "str",
                    "punchline": "str",
                    "createdAt": "str",
                    "updatedAt": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "manatee jokes",
                "api_name": "find all",
                "api_description": "retrieves all available jokes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "setup": "str",
                    "punchline": "str",
                    "createdAt": "str",
                    "updatedAt": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "manatee jokes",
                "api_name": "get by id",
                "api_description": "gets a specific joke by id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Programming Memes Images",
                "api_name": "v1/memes",
                "api_description": "Get Random Programming Memes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Jokes By Specific Category",
                "api_description": "Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Women"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "score:desc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Random Joke By Category",
                "api_description": "Get the random joke by category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Political"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Joke of the Day By Category",
                "api_description": "Get the joke of the day of specific category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Money"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "Chuck Norris",
                "api_name": "/jokes/random",
                "api_description": "Retrieve a random chuck joke in JSON format.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Specifies the category of the random joke.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "timestamp": "str",
                    "status": "int",
                    "error": "str",
                    "message": "str",
                    "path": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Chuck Norris",
                "api_name": "/jokes/search",
                "api_description": "Free text search",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search term.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "timestamp": "str",
                    "status": "int",
                    "error": "str",
                    "message": "str",
                    "violations": {
                        "search.query": "str"
                    }
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Chuck Norris",
                "api_name": "/jokes/categories",
                "api_description": "Retrieve a list of available joke categories.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Memeados",
                "api_name": "Sponge bob",
                "api_description": "Generate Sponge Bob meme",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "",
                        "default": "Example test"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Memeados",
                "api_name": "Google Fake Autocomplete",
                "api_description": "Generate Fake google autocomplete",
                "required_parameters": [
                    {
                        "name": "text1",
                        "type": "STRING",
                        "description": "",
                        "default": "Search"
                    },
                    {
                        "name": "text3",
                        "type": "STRING",
                        "description": "",
                        "default": "search autocomplete 2"
                    },
                    {
                        "name": "text2",
                        "type": "STRING",
                        "description": "",
                        "default": "search autocomplete 1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Memeados",
                "api_name": "Pet Pet",
                "api_description": "Generate My Pet Pet meme GIF",
                "required_parameters": [
                    {
                        "name": "image",
                        "type": "STRING",
                        "description": "",
                        "default": "https://i.pravatar.cc/300"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm hosting a virtual party for my friends and I need some funny jokes to share. Can you give me a random joke from the 'Political' category and a manatee joke? Also, generate a hilarious fake Google autocomplete for the phrase 'search autocomplete 1 search autocomplete 2'.",
        "relevant APIs": [
            [
                "World of Jokes",
                "Get Random Joke By Category"
            ],
            [
                "manatee jokes",
                "random"
            ],
            [
                "Memeados",
                "Google Fake Autocomplete"
            ]
        ],
        "query_id": 8
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "Infos",
                "api_description": "Get the infos about the api in the current country",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "Radio",
                "api_description": "A radio object",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The radio deezer ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "Genre",
                "api_description": "A genre object",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The editorial's Deezer id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "* Search",
                "api_description": "Search tracks",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "eminem"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "Playlist",
                "api_description": "A playlist object",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The playlist's Deezer id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "Artist",
                "api_description": "An artist object",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The artist's Deezer id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "Editorial",
                "api_description": "An editorial object",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The editorial's Deezer id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "Track",
                "api_description": "A track object",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The track's Deezer id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "Comment",
                "api_description": "A comment object",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The playlist's Deezer id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Deezer",
                "api_name": "Album",
                "api_description": "An album object",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The Deezer album id",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to discover new music genres that match my taste. Can you provide me with a playlist that includes tracks from various genres? Additionally, I would like to read comments from other users about a specific playlist using the Comment API.",
        "relevant APIs": [
            [
                "Deezer",
                "Genre"
            ],
            [
                "Deezer",
                "Playlist"
            ],
            [
                "Deezer",
                "Comment"
            ]
        ],
        "query_id": 9
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "mydailyinspiration",
                "api_name": "helloworld",
                "api_description": "Test the API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "ASE's Quiz API",
                "api_name": "Get random 20 questions by category",
                "api_description": "Get random 20 questions by category",
                "required_parameters": [
                    {
                        "name": "categoryId",
                        "type": "string",
                        "description": "",
                        "default": "63357adc3ab81af9ad154eb4"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "ASE's Quiz API",
                "api_name": "Get all difficulties",
                "api_description": "Get all difficulties",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "ASE's Quiz API",
                "api_name": "Get random 20 questions by difficulty",
                "api_description": "Get random 20 questions by difficulty",
                "required_parameters": [
                    {
                        "name": "difficultyId",
                        "type": "string",
                        "description": "",
                        "default": "63343ba898b44503fecc49e9"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Regions",
                "api_description": "Return a listing of all regions (countries) that Watchmode currently supports and their 2 letter country codes used in the return data of other endpoints.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "name": "str",
                    "flag": "str",
                    "data_tier": "int",
                    "plan_enabled": "bool"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New York Lottery",
                "api_name": "Get Draw Results",
                "api_description": "Return all draw results for all games.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Game of Thrones",
                "api_name": "Get continents",
                "api_description": "Returns all GOT continents",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Game of Thrones",
                "api_name": "Get character by ID",
                "api_description": "Returns a character by their ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Game of Thrones",
                "api_name": "Get all characters",
                "api_description": "Returns all of the GOT characters",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Hello! I'm hosting a trivia night for my friends and I need some random questions. Can you fetch twenty random questions from the ASE's Quiz API based on the 'Music' category? Also, provide me with the streaming release dates for the upcoming titles.",
        "relevant APIs": [
            [
                "ASE's Quiz API",
                "Get random 20 questions by category"
            ],
            [
                "Watchmode",
                "Streaming Release Dates"
            ]
        ],
        "query_id": 10
    }
]