[
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "download",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getPdf",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getTask",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "taskId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getById",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "textId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getAll",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getInPage",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "pageNum",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm analyzing the content of a PDF document. I need to retrieve all the texts in the PDF, along with their corresponding page numbers. Additionally, I would like to extract the texts on a specific page. Can you assist me with these tasks?",
        "relevant APIs": [
            [
                "Reword PDF",
                "getAll"
            ],
            [
                "Reword PDF",
                "getInPage"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54839
    },
    {
        "api_list": [
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "CoinDesk",
                "api_description": "Get the top latest news from CoinDesk.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Bitcoinist",
                "api_description": "Get the top latest news from Bitcoinist.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Cointelegraph",
                "api_description": "Get the top latest news from Cointelegraph.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "The Guardian",
                "api_description": "Get the top latest news from The Guardian.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 20
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "BSC News",
                "api_description": "Get the top latest news from BSC News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 100
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Decrypt",
                "api_description": "Get the top latest news from Decrypt.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 58
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I run a cryptocurrency blog and I need the latest news articles from CoinDesk, Bitcoinist, and Decrypt. Can you provide me with the top news articles from these sources? It would be helpful if you could include the article title, description, and thumbnail image. Thank you!",
        "relevant APIs": [
            [
                "Cryptocurrency News",
                "CoinDesk"
            ],
            [
                "Cryptocurrency News",
                "Bitcoinist"
            ],
            [
                "Cryptocurrency News",
                "Decrypt"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 62728
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "totalIconsSelection",
                "api_description": "Method that allows you to get a number stating the full quantity of SELECTION icons available at Flaticon. The number refreshes periodically according to the content available at flaticon.com.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "searchPacks",
                "api_description": "Method that allows you to get a paged list with the results of the search. Packs returned by the search may be SELECTION packs or PREMIUM packs, according to the content.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "term to search for",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Order by in results from Flaticon API. You can choose between order the results between 'priority' or 'added'. Priority order will return items ordered by an algorithm based on the downloads ratio. Added order will return items ordered by the date they were added to Flaticon.\nFor example: `https://api.flaticon.com/v2/search/packs/added?q=media&stroke=2&styleName=gradient&packId=1554346&limit=15`\n",
                        "default": "priority"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "styleName",
                        "type": "STRING",
                        "description": "Filter the results by the name of style.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Page number",
                        "default": ""
                    },
                    {
                        "name": "categoryName",
                        "type": "STRING",
                        "description": "Filter the results by category name.",
                        "default": ""
                    },
                    {
                        "name": "iconType",
                        "type": "STRING",
                        "description": "Filter the results by icon type, valid values are `standard` and  `stickers`",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Number of max. items returned per request. In case it isn\u2019t requested, it will return 100 packs by default.",
                        "default": 100
                    },
                    {
                        "name": "familyId",
                        "type": "NUMBER",
                        "description": "Filter the results by family id.",
                        "default": ""
                    },
                    {
                        "name": "color",
                        "type": "NUMBER",
                        "description": "Filter the results by color id. Color id `1` means monocolor. Color id `2` means multicolor.",
                        "default": ""
                    },
                    {
                        "name": "tagsId",
                        "type": "STRING",
                        "description": "Filter the results by a list of tag ids separated by comma",
                        "default": ""
                    },
                    {
                        "name": "categoryId",
                        "type": "NUMBER",
                        "description": "Filter the results by category id.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "pack url to search for",
                        "default": ""
                    },
                    {
                        "name": "stroke",
                        "type": "NUMBER",
                        "description": "Filter the results by stroke id. Stroke id `1` means filled. Stroke id `2` means linear.",
                        "default": ""
                    },
                    {
                        "name": "familyName",
                        "type": "STRING",
                        "description": "Filter the results by family name.",
                        "default": ""
                    },
                    {
                        "name": "designerId",
                        "type": "NUMBER",
                        "description": "Filter the results by designer id.",
                        "default": ""
                    },
                    {
                        "name": "styleId",
                        "type": "NUMBER",
                        "description": "Filter the results by style id.",
                        "default": ""
                    },
                    {
                        "name": "designerName",
                        "type": "STRING",
                        "description": "Filter the results by designer name.",
                        "default": ""
                    },
                    {
                        "name": "packId",
                        "type": "NUMBER",
                        "description": "Filter the results by pack id.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "searchIcons",
                "api_description": "Method that allows you to get a paged list with the results of the search. Icons returned by the search may be SELECTION icons or PREMIUM icons. By default, it will return a list order by priority. If no order is set, it will return items order by priority. In order to avoid 403 errors when svg icon is used to show the icon in result lists you must not store data in cache more than 15 minutes",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "term to search for",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Order by in results from Flaticon API. You can choose between order the results between 'priority' or 'added'. Priority order will return items ordered by an algorithm based on the downloads ratio. Added order will return items ordered by the date they were added to Flaticon.\nFor example: `https://api.flaticon.com/v2/search/icons/added?q=arrow&stroke=2&styleName=gradient&packId=1554346&limit=15`\n",
                        "default": "priority"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "packId",
                        "type": "NUMBER",
                        "description": "Filter the results by pack id.",
                        "default": ""
                    },
                    {
                        "name": "categoryName",
                        "type": "STRING",
                        "description": "Filter the results by category name.",
                        "default": ""
                    },
                    {
                        "name": "designerId",
                        "type": "NUMBER",
                        "description": "Filter the results by designer id.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Page number",
                        "default": ""
                    },
                    {
                        "name": "categoryId",
                        "type": "NUMBER",
                        "description": "Filter the results by category id.",
                        "default": ""
                    },
                    {
                        "name": "tagsId",
                        "type": "STRING",
                        "description": "Filter the results by a list of tag ids separated by comma",
                        "default": ""
                    },
                    {
                        "name": "familyId",
                        "type": "NUMBER",
                        "description": "Filter the results by family id.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "icon url to search for",
                        "default": ""
                    },
                    {
                        "name": "designerName",
                        "type": "STRING",
                        "description": "Filter the results by designer name.",
                        "default": ""
                    },
                    {
                        "name": "color",
                        "type": "NUMBER",
                        "description": "Filter the results by color id. Color id `1` means monocolor. Color id `2` means multicolor.",
                        "default": ""
                    },
                    {
                        "name": "iconType",
                        "type": "STRING",
                        "description": "Filter the results by icon type, valid values are `standard` and `stickers`",
                        "default": ""
                    },
                    {
                        "name": "stroke",
                        "type": "NUMBER",
                        "description": "Filter the results by stroke id. Stroke id `1` means filled. Stroke id `2` means linear.",
                        "default": ""
                    },
                    {
                        "name": "familyName",
                        "type": "STRING",
                        "description": "Filter the results by family name.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Number of max. items returned per request. In case it isn\u2019t requested, it will return 100 packs by default.",
                        "default": 100
                    },
                    {
                        "name": "styleId",
                        "type": "NUMBER",
                        "description": "Filter the results by style id.",
                        "default": ""
                    },
                    {
                        "name": "styleName",
                        "type": "STRING",
                        "description": "Filter the results by the name of style.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "pack",
                "api_description": "Method that allows you to get detailed information about a pack. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "packs",
                "api_description": "Method that allows you to get a paged list with information about the packs available at Flaticon. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.  By default, it will return a list order by priority. If no order is set, it will return items order by priority.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "term to search for",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Order by in results from Flaticon API. You can choose between order the results between 'priority' or 'added'. Priority order will return items ordered by an algorithm based on the downloads ratio. Added order will return items ordered by the date they were added to Flaticon.\nFor example: `https://api.flaticon.com/v2/search/icons/added?q=arrow&stroke=2&styleName=gradient&packId=1554346&limit=15`\n",
                        "default": "priority"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "designerName",
                        "type": "STRING",
                        "description": "Filter the results by designer name.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Page number",
                        "default": ""
                    },
                    {
                        "name": "styleName",
                        "type": "STRING",
                        "description": "Filter the results by the name of style.",
                        "default": ""
                    },
                    {
                        "name": "categoryName",
                        "type": "STRING",
                        "description": "Filter the results by category name.",
                        "default": ""
                    },
                    {
                        "name": "categoryId",
                        "type": "NUMBER",
                        "description": "Filter the results by category id.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "icon url to search for",
                        "default": ""
                    },
                    {
                        "name": "stroke",
                        "type": "NUMBER",
                        "description": "Filter the results by stroke id. Stroke id `1` means filled. Stroke id `2` means linear.",
                        "default": ""
                    },
                    {
                        "name": "styleId",
                        "type": "NUMBER",
                        "description": "Filter the results by style id.",
                        "default": ""
                    },
                    {
                        "name": "packId",
                        "type": "NUMBER",
                        "description": "Filter the results by pack id.",
                        "default": ""
                    },
                    {
                        "name": "tagsId",
                        "type": "STRING",
                        "description": "Filter the results by a list of tag ids separated by comma",
                        "default": ""
                    },
                    {
                        "name": "familyName",
                        "type": "STRING",
                        "description": "Filter the results by family name.",
                        "default": ""
                    },
                    {
                        "name": "familyId",
                        "type": "NUMBER",
                        "description": "Filter the results by family id.",
                        "default": ""
                    },
                    {
                        "name": "color",
                        "type": "NUMBER",
                        "description": "Filter the results by color id. Color id `1` means monocolor. Color id `2` means multicolor.",
                        "default": ""
                    },
                    {
                        "name": "iconType",
                        "type": "STRING",
                        "description": "Filter the results by icon type, valid values are `standard` and `stickers`",
                        "default": ""
                    },
                    {
                        "name": "designerId",
                        "type": "NUMBER",
                        "description": "Filter the results by designer id.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Number of max. items returned per request. In case it isn\u2019t requested, it will return 100 packs by default.",
                        "default": 100
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "icons",
                "api_description": "Method that allows you to get a paged list with information about the icons available at Flaticon. By default, it will return a list order by priority. If no order is set, it will return items order by priority. In order to avoid 403 errors when svg icon is used to show the icon in result lists you must not store data in cache more than 15 minutes",
                "required_parameters": [
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Order by in results from Flaticon API. You can choose between order the results between 'priority' or 'added'. Priority order will return items ordered by an algorithm based on the downloads ratio. Added order will return items ordered by the date they were added to Flaticon.\nFor example: `https://api.flaticon.com/v2/search/icons/added?q=arrow&stroke=2&styleName=gradient&packId=1554346&limit=15`\n",
                        "default": "priority"
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "term to search for",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "designerId",
                        "type": "NUMBER",
                        "description": "Filter the results by designer id.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Page number",
                        "default": ""
                    },
                    {
                        "name": "categoryName",
                        "type": "STRING",
                        "description": "Filter the results by category name.",
                        "default": ""
                    },
                    {
                        "name": "styleId",
                        "type": "NUMBER",
                        "description": "Filter the results by style id.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Number of max. items returned per request. In case it isn\u2019t requested, it will return 100 packs by default.",
                        "default": 100
                    },
                    {
                        "name": "styleName",
                        "type": "STRING",
                        "description": "Filter the results by the name of style.",
                        "default": ""
                    },
                    {
                        "name": "designerName",
                        "type": "STRING",
                        "description": "Filter the results by designer name.",
                        "default": ""
                    },
                    {
                        "name": "stroke",
                        "type": "NUMBER",
                        "description": "Filter the results by stroke id. Stroke id `1` means filled. Stroke id `2` means linear.",
                        "default": ""
                    },
                    {
                        "name": "familyName",
                        "type": "STRING",
                        "description": "Filter the results by family name.",
                        "default": ""
                    },
                    {
                        "name": "categoryId",
                        "type": "NUMBER",
                        "description": "Filter the results by category id.",
                        "default": ""
                    },
                    {
                        "name": "tagsId",
                        "type": "STRING",
                        "description": "Filter the results by a list of tag ids separated by comma",
                        "default": ""
                    },
                    {
                        "name": "packId",
                        "type": "NUMBER",
                        "description": "Filter the results by pack id.",
                        "default": ""
                    },
                    {
                        "name": "familyId",
                        "type": "NUMBER",
                        "description": "Filter the results by family id.",
                        "default": ""
                    },
                    {
                        "name": "iconType",
                        "type": "STRING",
                        "description": "Filter the results by icon type, valid values are `standard` and `stickers`",
                        "default": ""
                    },
                    {
                        "name": "color",
                        "type": "NUMBER",
                        "description": "Filter the results by color id. Color id `1` means monocolor. Color id `2` means multicolor.",
                        "default": ""
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "icon url to search for",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "styles",
                "api_description": "Method that allows you to get a paged list with information about Flaticon styles, design formats that icons or packs have. Styles are the different versions in which an icon from a given family may appear. For example, an icon may be available in lineal, color, or lineal color styles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Number of max. authors returned per request. In case it isn\u2019t requested, it will return 100 styles by default.",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Page about which the request is made. In case it doesn\u2019t exist, it will return page 1.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "totalIcons",
                "api_description": "Method that allows you to get a number stating the full quantity of icons available at Flaticon. The number refreshes periodically according to the content available at flaticon.com.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "totalIconsPremium",
                "api_description": "Method that allows you to get a number stating the full quantity of PREMIUM icons available at Flaticon. The number refreshes periodically according to the content available at flaticon.com.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Flaticon",
                "api_name": "icon",
                "api_description": "Method that allows you to get detailed information about an icon.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Could you provide me with the total number of icons available at Flaticon? Additionally, I would like to search for packs related to the topic of 'education' and order the results by priority.",
        "relevant APIs": [
            [
                "Flaticon",
                "totalIcons"
            ],
            [
                "Flaticon",
                "searchPacks"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 77261
    },
    {
        "api_list": [
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "GetRecordsbystark_key",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "Which stark_key's record you want to query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": {
                        "list": "empty list",
                        "total": "int",
                        "current_page": "int",
                        "page_size": "int",
                        "total_page": "int"
                    }
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Aggregationbalanceofastark_keybycontractaddress",
                "api_description": "The API aggregation balances by contract address, for previous API, each NFT have an asset_id, but in this API. NFT do not have asset_id when return, but has token id",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "The stark_key you want to check balance",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Listallcollections",
                "api_description": "The API lists all collections on Reddio's layer2 system.\n\nThe return field is like the following descrption\n\n| **field** | **description** |\n| --- | --- |\n| contract_address | The contract address |\n| symbol | The symbol of |\n| type | ERC721 or ERC721M |\n| total_supply | Total Supply of the token |\n| base_uri | The base uri of NFT |\n| asset_type | The asset type is calculated by reddio, the definition is [here](https://docs.starkware.co/starkex/spot/shared/starkex-specific-concepts.html#computing_asset_info_asset_type_asset_id) |",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": [
                        {
                            "contract_address": "str",
                            "symbol": "str",
                            "type": "str",
                            "total_supply": "str",
                            "asset_type": "str",
                            "base_uri": "str",
                            "_list_length": 200
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Getnoncebystark_key",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "which stark_key's nonce you want to get",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "NoneType"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Balancesofstark_key",
                "api_description": "The API retrieves the balance of a stark_key, each return value are as the previous field",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "set limit per page",
                        "default": ""
                    },
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "The stark key",
                        "default": ""
                    },
                    {
                        "name": "contract_address",
                        "type": "STRING",
                        "description": "filter balance by contract address",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "which page(starts by 1)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "GetMarketplaces",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "project_uuid",
                        "type": "STRING",
                        "description": "",
                        "default": "eeda297e-4d35-4f11-915a-58e1a8873f17"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "NoneType",
                    "error": "str",
                    "error_code": "int"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Balanceofstark_keyandasset_id",
                "api_description": "This API retrieves the balance of a stark_key and asset_id\n\nThe return values description\n\n| **key** | **description** |\n| --- | --- |\n| asset_id | The asset's id |\n| contract_address | The contract address of ERC20/ERC721/ERC721, if the asset_id's type is ETH, it will return \"eth\" as a placeholder |\n| token_id | The NFT token ID(this field is set when type is ERC721 or ERC721M) |\n| base_uri | The NFT base uri(this field is set when type is ERC721 or ERC721M) |\n| available | The available balance on layer 2. |\n| frozen | The frozen balance on layer 2. |\n| type | Type of token, Possible enum values is ETH, ERC20, ERC721, ERC721M |\n| symbol | The symbol of ERC721/ERC721M or ERC20(\"ETH\" for ETH) |\n| decimals | The decimals of asset, for ETH is 18, ERC721/ERC721M is 1, and for ERC20, it is based the contracts, [here](https://medium.com/@jgm.orinoco/understanding-erc-20-token-contracts-a809a7310aa5) is more explain about decimals on Ethernum |\n| quantum | quantum is a starkex concept, it is auto-set when the contract is registered to reddio. [here](https://docs.starkware.co/starkex/spot/shared/starkex-specific-concepts.html) is more explain about quantum |\n| display_value | deprecated,use `available` instead |\n| display_frozen | deprecated,use `frozen` instead |\n| balance_available | The available balance represents on layer 2. Keep attention that it need to be converted with quantum and decimals if you need to use this field. All SDK hands this value, so most of the time you do not need to care about it. |\n| balance_frozen | The frozen balance represents on layer 2. Keep attention that it need to be converted with quantum and decimals if you need to use this field. All SDK hands this value, so most of the time you do not need to care about it. |",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "The stark_key which you want to check balance",
                        "default": ""
                    },
                    {
                        "name": "asset_id",
                        "type": "STRING",
                        "description": "Which asset you want to check, you can get asset id in prevous assets APIs",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "GetOrderInfo",
                "api_description": "This API is to get order related information, such as the asset id of base/quota tokens. nonce and vaults related to stark_key\n\n**If you use SDKs(including java/unity/js), you do not need to care about the order info interface, it is already handled by SDK internally**\n\nthe contract1 and contract2 values are like\n\n{type}:{contract_address}:{token_id}\n\nThere are many informations it returns\n\n| **field** | **description** |\n| --- | --- |\n| fee_rate | the upper fee_rate allowed by reddio and marketplace. that is, if reddio & marketplace charge's more then the rate, the order will fail |\n| base_token | base token asset id, in general, if you trade using ETH for NFT, then the base token is ETH's asset id |\n| fee_token | which token as a fee, in general, it is the same as base_token |\n| lower_limit | the lower price of the NFT |\n| nonce | the nonce of the stark_key |\n| contracts | the contracts info of contract1 and contract2 |\n| asset_ids | the asset ids of contract1 and contract2 |\n| vault_ids | first vault id is generated by the stark_key and first asset id, the second vault id is generated by the stark_key and second asset id(you can see the asset_ids above) |",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "stark_key",
                        "type": "STRING",
                        "description": "the stark_key that want to buy or sell NFT",
                        "default": ""
                    },
                    {
                        "name": "contract2",
                        "type": "STRING",
                        "description": "the quota contract and token id, the vaule can like ERC721:0xA21B04B6dbd1174155E242434B3Df2EeD74BaFb2:28",
                        "default": ""
                    },
                    {
                        "name": "contract1",
                        "type": "STRING",
                        "description": "the base contract info, if sell using ETH, then the vaule should be ETH:eth:1",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": "NoneType"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Listcolloction'snftowners",
                "api_description": "The api returns a collection's nft owners.\n\nThe response field description\n\n| **field** | **description** |\n| --- | --- |\n| contract_address | the contract_address of the collection |\n| token_id | the NFT token id |\n| owner | the owner of the NFT |\n| symbol | the NFT's symbol |\n| asset_id | the token's asset id |",
                "required_parameters": [
                    {
                        "name": "contract_address",
                        "type": "STRING",
                        "description": "",
                        "default": "0x6b4f24fd500bedb945fc8b93882766bb5e7cf620"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "error": "str",
                    "error_code": "int",
                    "data": {
                        "list": [
                            {
                                "token_id": "str",
                                "contract_address": "str",
                                "owner": "str",
                                "symbol": "str",
                                "asset_id": "str",
                                "_list_length": 4
                            }
                        ],
                        "total": "int",
                        "current_page": "int",
                        "page_size": "int",
                        "total_page": "int"
                    }
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Reddio NFT, Token and IPFS",
                "api_name": "Listfilesunderproject",
                "api_description": "It will list files under the project, the response item like\n\n| **field** | **description** |\n| --- | --- |\n| cid | [Content Identifiers](https://docs.ipfs.tech/concepts/content-addressing/#what-is-a-cid) |\n| filename | The stored file name |\n| created_at | first create time |\n| filesize | file size(in byte) |\n| endpoints | the endpoints you can view the file |",
                "required_parameters": [
                    {
                        "name": "project_uuid",
                        "type": "STRING",
                        "description": "",
                        "default": "eeda297e-4d35-4f11-915a-58e1a8873f17"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "NoneType",
                    "error": "str",
                    "error_code": "int"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm interested in buying NFTs and would like to know the order-related information. Could you provide me with the fee rate, base token, fee token, and lower limit using the GetOrderInfo API? Additionally, I would like to know the balance of a specific stark key and asset ID using the Balanceofstark_keyandasset_id API.",
        "relevant APIs": [
            [
                "Reddio NFT, Token and IPFS",
                "GetOrderInfo"
            ],
            [
                "Reddio NFT, Token and IPFS",
                "Balanceofstark_keyandasset_id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 3995
    },
    {
        "api_list": [
            {
                "category_name": "Logistics",
                "tool_name": "suivi-colis",
                "api_name": "Health",
                "api_description": "Get the API's health",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "checks": "empty list"
                }
            },
            {
                "category_name": "Logistics",
                "tool_name": "suivi-colis",
                "api_name": "Latest",
                "api_description": "L'\u00e9tat courant (ie. le dernier \u00e9tat du colis).",
                "required_parameters": [
                    {
                        "name": "colisId",
                        "type": "string",
                        "description": "",
                        "default": "CA107308006SI"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": {
                        "code": "str",
                        "iso": "str",
                        "name": "str"
                    },
                    "date": "str",
                    "informations": "str",
                    "itemId": "str",
                    "localisation": "str",
                    "localization": {
                        "longName": "str",
                        "name": "str",
                        "url": "str"
                    },
                    "pays": "str",
                    "rawDateHeure": "str",
                    "status": "str",
                    "typeEvenement": "str"
                }
            },
            {
                "category_name": "Logistics",
                "tool_name": "suivi-colis",
                "api_name": "Count",
                "api_description": "Compte le nombre d'\u00e9tapes de l'historique, pratique pour limiter la consommation r\u00e9seau ou les ressources sur un IoT. Permet par exemple de poller un \u00e9tat de mani\u00e8re optimale.",
                "required_parameters": [
                    {
                        "name": "colisId",
                        "type": "string",
                        "description": "",
                        "default": "CA107308006SI"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "nbSteps": "int"
                }
            },
            {
                "category_name": "Logistics",
                "tool_name": "suivi-colis",
                "api_name": "All",
                "api_description": "Tout l'historique du colis depuis son envoi jusqu'au dernier \u00e9tat en cours.",
                "required_parameters": [
                    {
                        "name": "colisid",
                        "type": "string",
                        "description": "",
                        "default": "CA107308006SI"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": {
                        "code": "str",
                        "iso": "str",
                        "name": "str"
                    },
                    "date": "str",
                    "informations": "str",
                    "itemId": "str",
                    "localisation": "str",
                    "localization": {
                        "longName": "str",
                        "name": "str",
                        "url": "str"
                    },
                    "pays": "str",
                    "rawDateHeure": "str",
                    "status": "str",
                    "typeEvenement": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company needs to monitor the progress of multiple packages. Can you help us count the number of steps in the history for each package? This will allow us to optimize our resources and network consumption.",
        "relevant APIs": [
            [
                "suivi-colis",
                "Count"
            ],
            [
                "suivi-colis",
                "All"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 29
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "About",
                "api_description": "Get general information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "version": "str",
                    "homepage": "str",
                    "source_code": "str",
                    "maintainer": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get a Language",
                "api_description": "Get a language.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "10"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "is_archived": "bool",
                    "source_file": "str",
                    "compile_cmd": "NoneType",
                    "run_cmd": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get Configuration",
                "api_description": "Configuration information gives you detailed information about the configuration of Judge0.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"maintenance_mode\": \"bool\", \"enable_wait_result\": \"bool\", \"enable_compiler_options\": \"bool\", \"allowed_languages_for_compile_options\": \"empty list\", \"enable_command_line_arguments\": \"bool\", \"enable_submission_delete\": \"bool\", \"enable_callbacks\": \"bool\", \"callbacks_max_tries\": \"int\", \"callbacks_timeout\": \"float\", \"enable_additional_files\": \"bool\", \"max_queue_size\": \"int\", \"cpu_time_limit\": \"float\", \"max_cpu_time_limit\": \"float\", \"cpu_extra_time\": \"float\", \"max_cpu_extra_time\": \"float\", \"wall_time_limit\": \"float\", \"max_wall_time_limit\": \"float\", \"memory_limit\": \"int\", \"max_memory_limit\": \"int\", \"stack_limit\": \"int\", \"max_stack_limit\": \"int\", \"max_processes_and_or_threads\": \"int\", \"max_max_processes_and_or_threads\": \"int\", \"enable_per_process_and_thread_time_limit\": \"bool\", \"allow_enable_per_process_and_thread_time_limit\": \"bool\", \"enable_per_process_and_thread_memory_limit\": \"bool\", \"allow_enable_per_process_and_thread_memory_limit\": \"bool\", \"max_file_size\": \"int\", \"max_max_file_size\": \""
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get Languages",
                "api_description": "Get active languages.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 Extra CE",
                "api_name": "Get Statuses",
                "api_description": "Get statuses.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "description": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm interested in using Judge0 Extra CE for my coding needs. Can you provide me with the general information, configuration information, active languages, and statuses? It would be helpful to know the version, homepage, source code, maintainer, maintenance mode, enable wait result, enable compiler options, allowed languages for compile options, enable command line arguments, enable submission delete, enable callbacks, callbacks max tries, callbacks timeout, enable additional files, max queue size, cpu time limit, max cpu time limit, cpu extra time, max cpu extra time, wall time limit, max wall time limit, memory limit, max memory limit, stack limit, max stack limit, max processes and/or threads, max max processes and/or threads, enable per process and thread time limit, allow enable per process and thread time limit, enable per process and thread memory limit, allow enable per process and thread memory limit, max file size, max max file size, language IDs, language names, status IDs, and descriptions.",
        "relevant APIs": [
            [
                "Judge0 Extra CE",
                "About"
            ],
            [
                "Judge0 Extra CE",
                "Get Configuration"
            ],
            [
                "Judge0 Extra CE",
                "Get Languages"
            ],
            [
                "Judge0 Extra CE",
                "Get Statuses"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54697
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "KolektifAPI",
                "api_name": "Haber",
                "api_description": "\u00abntv.com.tr\u00bb Son Dakika Haberleri Verileri",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kaynak": "str",
                    "saglayici": "str",
                    "veri": [
                        {
                            "gorsel": "str",
                            "haber": "str",
                            "link": "str",
                            "_list_length": 36
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "KolektifAPI",
                "api_name": "Deprem",
                "api_description": "\u00abafet.gen.tr\u00bb Son Depremler Verisi",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "KolektifAPI": "str",
                    "istekler": {
                        "akaryakit": [
                            "list of str with length 3"
                        ],
                        "bim": [
                            "list of str with length 3"
                        ],
                        "deprem": [
                            "list of str with length 3"
                        ],
                        "doviz": [
                            "list of str with length 3"
                        ],
                        "eczane": [
                            "list of str with length 3"
                        ],
                        "ezan": [
                            "list of str with length 3"
                        ],
                        "google": [
                            "list of str with length 3"
                        ],
                        "haber": [
                            "list of str with length 3"
                        ],
                        "piiz": [
                            "list of str with length 3"
                        ],
                        "sahibinden": [
                            "list of str with length 3"
                        ],
                        "trendyol_kategori": [
                            "list of str with length 3"
                        ],
                        "trendyol_urun": [
                            "list of str with length 3"
                        ],
                        "ucak": [
                            "list of str with length 3"
                        ],
                        "udemy": [
                            "list of str with length 3"
                        ],
                        "youtube": [
                            "list of str with length 3"
                        ]
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "KolektifAPI",
                "api_name": "Akaryak\u0131t",
                "api_description": "\u00abhaberler.com\u00bb G\u00fcncel Akaryak\u0131t Verileri",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kaynak": "str",
                    "saglayici": "str",
                    "veri": [
                        {
                            "cinsi": "str",
                            "fiyati": "str",
                            "_list_length": 6
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "KolektifAPI",
                "api_name": "D\u00f6viz",
                "api_description": "\u00abaltinkaynak.com\u00bb G\u00fcncel D\u00f6viz Verileri",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kaynak": "str",
                    "saglayici": "str",
                    "veri": [
                        {
                            "Gi\u015fe Al\u0131\u015f": "float",
                            "Gi\u015fe Sat\u0131\u015f": "float",
                            "birim": "str",
                            "_list_length": 15
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need the latest fuel prices and their types in Turkey. Can you fetch me this information? Additionally, I'm researching the recent earthquakes in Turkey. Can you provide me with information about the latest earthquakes?",
        "relevant APIs": [
            [
                "KolektifAPI",
                "Akaryak\u0131t"
            ],
            [
                "KolektifAPI",
                "Deprem"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 38125
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "Mobile Phone Specs Database",
                "api_name": "Get {Phone Image ids} by {Custom id}",
                "api_description": "Get up to 10 phone images (IDs). \nUse these IDs in the Endpoint:  Get {Image} by {Phone Image id}\nThe image IDs expire after 30 minutes.",
                "required_parameters": [
                    {
                        "name": "phoneCustomId",
                        "type": "NUMBER",
                        "description": "",
                        "default": "103693"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageOrder": "int",
                    "imageId": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Mobile Phone Specs Database",
                "api_name": "Get {Specifications} by {Brand Name} and {Model Name}",
                "api_description": "Get all phone specifications by brand name and model name",
                "required_parameters": [
                    {
                        "name": "brandName",
                        "type": "string",
                        "description": "",
                        "default": "Samsung"
                    },
                    {
                        "name": "modelName",
                        "type": "string",
                        "description": "",
                        "default": "Galaxy S22 Ultra 5G"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"phoneDetails\": {\"customId\": \"int\", \"yearValue\": \"str\", \"brandValue\": \"str\", \"modelValue\": \"str\"}, \"gsmNetworkDetails\": {\"networkTechnology\": \"str\", \"network2GBands\": \"str\", \"network3GBands\": \"str\", \"network4GBands\": \"str\", \"network5GBands\": \"str\", \"networkSpeed\": \"str\"}, \"gsmLaunchDetails\": {\"launchAnnounced\": \"str\", \"launchStatus\": \"str\"}, \"gsmBodyDetails\": {\"bodyDimensions\": \"str\", \"bodyWeight\": \"str\", \"bodySim\": \"str\", \"bodyBuild\": \"str\", \"bodyOther1\": \"str\", \"bodyOther2\": \"str\", \"bodyOther3\": \"str\"}, \"gsmDisplayDetails\": {\"displayType\": \"str\", \"displaySize\": \"str\", \"displayResolution\": \"str\", \"displayProtection\": \"str\", \"displayOther1\": \"str\"}, \"gsmPlatformDetails\": {\"platformChipset\": \"str\", \"platformCpu\": \"str\", \"platformGpu\": \"str\", \"platformOs\": \"str\"}, \"gsmMemoryDetails\": {\"memoryCardSlot\": \"str\", \"memoryInternal\": \"str\", \"memoryOther1\": \"str\"}, \"gsmMainCameraDetails\": {\"mainCameraFeatures\": \"str\", \"mainCameraQuad\": \"str\", \"mainCameraVideo\": \"str\"}, \"gsmSelfieCameraDetails\":"
            },
            {
                "category_name": "Devices",
                "tool_name": "Mobile Phone Specs Database",
                "api_name": "Get {Image} by {Phone Image id}",
                "api_description": "- Get Image by Id\n- Paste image ID from this api \"Get all phone image ids by phone custom id\" and image media content is returned\n- ex of image id : \"Z2RjOG80Smk2WVV2R0wwR1F1RjRNZG5TR1ZqUUZuU1JhU1pNT0FjNG94UT0=\"",
                "required_parameters": [
                    {
                        "name": "imageId",
                        "type": "string",
                        "description": "",
                        "default": "Z2RjOG80Smk2WVV2R0wwR1F1RjRNZG5TR1ZqUUZuU1JhU1pNT0FjNG94UT0="
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Devices",
                "tool_name": "Mobile Phone Specs Database",
                "api_name": "Get {Specifications} by {Custom id}",
                "api_description": "Get all phone specifications by phone custom id",
                "required_parameters": [
                    {
                        "name": "phoneCustomId",
                        "type": "NUMBER",
                        "description": "",
                        "default": "103693"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"phoneDetails\": {\"customId\": \"int\", \"yearValue\": \"str\", \"brandValue\": \"str\", \"modelValue\": \"str\"}, \"gsmNetworkDetails\": {\"networkTechnology\": \"str\", \"network2GBands\": \"str\", \"network3GBands\": \"str\", \"network4GBands\": \"str\", \"network5GBands\": \"str\", \"networkSpeed\": \"str\"}, \"gsmLaunchDetails\": {\"launchAnnounced\": \"str\", \"launchStatus\": \"str\"}, \"gsmBodyDetails\": {\"bodyDimensions\": \"str\", \"bodyWeight\": \"str\", \"bodySim\": \"str\", \"bodyBuild\": \"str\", \"bodyOther1\": \"str\", \"bodyOther2\": \"str\", \"bodyOther3\": \"str\"}, \"gsmDisplayDetails\": {\"displayType\": \"str\", \"displaySize\": \"str\", \"displayResolution\": \"str\", \"displayProtection\": \"str\", \"displayOther1\": \"str\"}, \"gsmPlatformDetails\": {\"platformChipset\": \"str\", \"platformCpu\": \"str\", \"platformGpu\": \"str\", \"platformOs\": \"str\"}, \"gsmMemoryDetails\": {\"memoryCardSlot\": \"str\", \"memoryInternal\": \"str\", \"memoryOther1\": \"str\"}, \"gsmMainCameraDetails\": {\"mainCameraFeatures\": \"str\", \"mainCameraQuad\": \"str\", \"mainCameraVideo\": \"str\"}, \"gsmSelfieCameraDetails\":"
            },
            {
                "category_name": "Devices",
                "tool_name": "Mobile Phone Specs Database",
                "api_name": "List  all {Models} by {Phone Brand}",
                "api_description": "List Models By Phone Brand name",
                "required_parameters": [
                    {
                        "name": "brandName",
                        "type": "string",
                        "description": "",
                        "default": "Samsung"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "modelValue": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Mobile Phone Specs Database",
                "api_name": "List all {Phone Brands}",
                "api_description": "1. List all Phone Brands",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "brandValue": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm writing a blog post about the latest mobile phone models, and I would like to include images of the Samsung Galaxy S22 Ultra 5G. Can you please provide me with up to 10 images of the phone? Additionally, I would like to know the specifications of the Samsung Galaxy S22 Ultra 5G, including the display size, processor, memory, camera specifications, and battery capacity.",
        "relevant APIs": [
            [
                "Mobile Phone Specs Database",
                "Get {Phone Image ids} by {Custom id}"
            ],
            [
                "Mobile Phone Specs Database",
                "Get {Specifications} by {Brand Name} and {Model Name}"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 15137
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "SEO Checker",
                "api_name": "Analyze V2",
                "api_description": "analyze page speed with more results information",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://google.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "the options: **accessibility, best-practices, performance, seo, pwa**. default: performance ",
                        "default": ""
                    },
                    {
                        "name": "strategy",
                        "type": "STRING",
                        "description": "the options: **desktop, mobile** default: empty",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"loading_experience\": {\"id\": \"str\", \"metrics\": {\"CUMULATIVE_LAYOUT_SHIFT_SCORE\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"EXPERIMENTAL_INTERACTION_TO_NEXT_PAINT\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"EXPERIMENTAL_TIME_TO_FIRST_BYTE\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"FIRST_CONTENTFUL_PAINT_MS\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"FIRST_INPUT_DELAY_MS\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_list_length\": 3}], \"category\": \"str\"}, \"INTERACTION_TO_NEXT_PAINT\": {\"percentile\": \"int\", \"distributions\": [{\"min\": \"int\", \"max\": \"int\", \"proportion\": \"float\", \"_"
            },
            {
                "category_name": "Tools",
                "tool_name": "SEO Checker",
                "api_name": "Analyze",
                "api_description": "analyze page speed",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://google.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strategy",
                        "type": "STRING",
                        "description": "the options: **desktop, mobile** default: empty",
                        "default": ""
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "the options: **accessibility, best-practices, performance, seo, pwa**. default: performance ",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"unused-javascript\": {\"id\": \"str\", \"title\": \"str\", \"description\": \"str\", \"score\": \"float\", \"scoreDisplayMode\": \"str\", \"displayValue\": \"str\", \"details\": {\"type\": \"str\", \"overallSavingsMs\": \"int\", \"headings\": [{\"valueType\": \"str\", \"label\": \"str\", \"key\": \"str\", \"subItemsHeading\": {\"key\": \"str\", \"valueType\": \"str\"}, \"_list_length\": 3}], \"overallSavingsBytes\": \"int\", \"sortedBy\": [\"list of str with length 1\"], \"items\": [{\"wastedPercent\": \"float\", \"wastedBytes\": \"int\", \"url\": \"str\", \"totalBytes\": \"int\", \"_list_length\": 6}]}, \"numericValue\": \"int\", \"numericUnit\": \"str\"}, \"network-rtt\": {\"id\": \"str\", \"title\": \"str\", \"description\": \"str\", \"score\": \"NoneType\", \"scoreDisplayMode\": \"str\", \"displayValue\": \"str\", \"details\": {\"headings\": \"empty list\", \"type\": \"str\", \"items\": \"empty list\"}, \"numericValue\": \"int\", \"numericUnit\": \"str\"}, \"offscreen-images\": {\"id\": \"str\", \"title\": \"str\", \"description\": \"str\", \"score\": \"int\", \"scoreDisplayMode\": \"str\", \"details\": {\"overallSavingsMs\": \"int\", \"headings\": \"e"
            },
            {
                "category_name": "Tools",
                "tool_name": "SEO Checker",
                "api_name": "Summary",
                "api_description": "Summary SEO",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "page": {
                        "title": "str",
                        "description": "str",
                        "meta": {
                            "viewport": "str",
                            "description": "str",
                            "og:title": "str",
                            "og:description": "str",
                            "og:url": "str",
                            "canonical": "str",
                            "language": "str",
                            "author": "str",
                            "keywords": [
                                "list of str with length 1"
                            ]
                        }
                    },
                    "heading_count": "int",
                    "word_count": "int",
                    "external_links": "int",
                    "internal_links": "int",
                    "links": [
                        "list of str with length 18"
                    ],
                    "headings": "empty list"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend is working on a website project and wants to optimize its performance. Can you analyze the page speed and provide suggestions for improvement? It would be great to receive details on unused JavaScript, network round trip time, and offscreen images. Thanks!",
        "relevant APIs": [
            [
                "SEO Checker",
                "Analyze"
            ],
            [
                "SEO Checker",
                "Summary"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 4286
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Spotify Downloader",
                "api_name": "Track List - Album",
                "api_description": "Get track list from album",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "6lggWd5q9Rh66OkDE1eNDr"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "nextOffset": "NoneType",
                    "trackList": [
                        {
                            "id": "str",
                            "title": "str",
                            "artists": "str",
                            "cover": "NoneType",
                            "_list_length": 12
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Spotify Downloader",
                "api_name": "Track List - Playlist",
                "api_description": "Get Track List from Playlist",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "37i9dQZF1DX0XUsuxWHRQd"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "nextOffset": "NoneType",
                    "trackList": [
                        {
                            "id": "str",
                            "title": "str",
                            "artists": "str",
                            "cover": "str",
                            "album": "str",
                            "releaseDate": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Spotify Downloader",
                "api_name": "Metadata - Album",
                "api_description": "Get metadata about album",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "6lggWd5q9Rh66OkDE1eNDr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "artists": "str",
                    "title": "str",
                    "cover": "str",
                    "releaseDate": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Spotify Downloader",
                "api_name": "Metadata - Track",
                "api_description": "Get metadata about track",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "22LAwLoDA5b4AaGSkg6bKW"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Spotify Downloader",
                "api_name": "Download Song",
                "api_description": "Download a song by spotify's song ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "22LAwLoDA5b4AaGSkg6bKW"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Spotify Downloader",
                "api_name": "Metadata - Playlist",
                "api_description": "Get metadata about playlist",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "37i9dQZF1DX0XUsuxWHRQd"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a music lover and I want to download all the tracks from the album with the ID 6lggWd5q9Rh66OkDE1eNDr. Can you provide me with the track list, including the title, artists, and cover? Also, fetch the metadata for each track.",
        "relevant APIs": [
            [
                "Spotify Downloader",
                "Track List - Album"
            ],
            [
                "Spotify Downloader",
                "Metadata - Track"
            ],
            [
                "Spotify Downloader",
                "Download Song"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 46688
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YouTube Video Summarizer",
                "api_name": "/v1/youtube/summarizeVideoFromCache",
                "api_description": "Return the video summary of a given YouTube video that has already been summarized. The summary is provided in markdown format.",
                "required_parameters": [
                    {
                        "name": "videoURL",
                        "type": "STRING",
                        "description": "The URL of the YouTube video to get from the summary cache.",
                        "default": "https://www.youtube.com/watch?v=ykY69lSpDdo"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "summary": "str",
                    "videoTitle": "str",
                    "videoAuthor": "str",
                    "videoId": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "YouTube Video Summarizer",
                "api_name": "/v1/youtube/summarizeVideoWithToken",
                "api_description": "Create a video summary of a given YouTube video. The summary is provided in markdown format.",
                "required_parameters": [
                    {
                        "name": "videoURL",
                        "type": "STRING",
                        "description": "The URL of the YouTube video to summarize.",
                        "default": "https://www.youtube.com/watch?v=Yzx7ihtCGBs"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I recently watched a YouTube video about DIY home improvement projects, and I would like to get a summary of the video. Can you provide me with the summarized content in markdown format? Please include the video title, author, and ID. The video URL is https://www.youtube.com/watch?v=Yzx7ihtCGBs.",
        "relevant APIs": [
            [
                "YouTube Video Summarizer",
                "/v1/youtube/summarizeVideoFromCache"
            ],
            [
                "YouTube Video Summarizer",
                "/v1/youtube/summarizeVideoWithToken"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 80170
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "QR Code Generator",
                "api_name": "Generate Advance - Direct Image",
                "api_description": "Generates a QR code as a direct image with additional settings. (NOTE: doesn't show correctly in RapidAPI)",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "1234"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "foreground_color",
                        "type": "STRING",
                        "description": "",
                        "default": "FF2400"
                    },
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "",
                        "default": "00DBFF"
                    },
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "500"
                    },
                    {
                        "name": "margin",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "label",
                        "type": "STRING",
                        "description": "",
                        "default": "My label"
                    },
                    {
                        "name": "label_size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    },
                    {
                        "name": "label_alignment",
                        "type": "STRING",
                        "description": "",
                        "default": "center"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "QR Code Generator",
                "api_name": "Generate Basic - Base64",
                "api_description": "Generates a QR code as base64 with limited settings.",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "1234"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "500"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "QR Code Generator",
                "api_name": "Generate Advance - Base64",
                "api_description": "Generates a QR code as base64 with additional settings.",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "1234"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "",
                        "default": "00DBFF"
                    },
                    {
                        "name": "foreground_color",
                        "type": "STRING",
                        "description": "",
                        "default": "FF2400"
                    },
                    {
                        "name": "label",
                        "type": "STRING",
                        "description": "",
                        "default": "My label"
                    },
                    {
                        "name": "margin",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "500"
                    },
                    {
                        "name": "label_size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    },
                    {
                        "name": "label_alignment",
                        "type": "STRING",
                        "description": "",
                        "default": "center"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "QR Code Generator",
                "api_name": "Generate Basic - Direct Image",
                "api_description": "Generates a QR code as a direct image with limited settings. (NOTE: doesn't show correctly in RapidAPI)",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "1234"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "NUMBER",
                        "description": "",
                        "default": "500"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a surprise birthday party for my friend and I want to create personalized QR codes for the invitations. Can you generate QR codes as base64 images with individual labels for each guest? It would be great if the QR codes could be customized with different foreground and background colors.",
        "relevant APIs": [
            [
                "QR Code Generator",
                "Generate Advance - Base64"
            ],
            [
                "QR Code Generator",
                "Generate Basic - Base64"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 4328
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_analytics-videos-videoId",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "videoId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "metadata",
                        "type": "ARRAY",
                        "description": "Metadata and Dynamic Metadata filter.\n(Dynamic metadata filter are available for  Business plans only)",
                        "default": "[]"
                    },
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "Period must have one of the following formats: \n\n- For a day : 2018-01-01,\n- For a week: 2018-W01, \n- For a month: 2018-01\n- For a year: 2018\n\nFor a range period: \n-  Date range: 2018-01-01/2018-01-15\n",
                        "default": ""
                    },
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Number of the page to display",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Expected number of items to display on the page. Might be lower on the last page",
                        "default": 25
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_analytics-sessions-sessionId-events",
                "api_description": "Useful to track and measure video's engagement.",
                "required_parameters": [
                    {
                        "name": "sessionId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Number of the page to display",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Expected number of items to display on the page. Might be lower on the last page",
                        "default": 25
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_videos-videoId-chapters-language",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "videoId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "A valid BCP 47 language representation",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_players",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Expected number of items to display on the page. Might be lower on the last page",
                        "default": 25
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "",
                        "default": "createdAt"
                    },
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Number of the page to display",
                        "default": 1
                    },
                    {
                        "name": "sortOrder",
                        "type": "STRING",
                        "description": "Allowed: asc, desc",
                        "default": "asc"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_live-streams-liveStreamId",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "liveStreamId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "LIST-videos",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Search results page. Minimum value: 1",
                        "default": "1"
                    },
                    {
                        "name": "liveStreamId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sortOrder",
                        "type": "STRING",
                        "description": "Allowed: asc, desc",
                        "default": ""
                    },
                    {
                        "name": "tags",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Results per page. Allowed values 1-100, default is 25.",
                        "default": "25"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Allowed: publishedAt, title",
                        "default": ""
                    },
                    {
                        "name": "description",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "metadata",
                        "type": "ARRAY",
                        "description": "metadata[foo]=bar",
                        "default": "[]"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET-video-status",
                "api_description": "This API provides upload status & encoding status to determine when the video is uploaded or ready to playback.\n\nOnce encoding is completed, the response also lists the available stream qualities.",
                "required_parameters": [
                    {
                        "name": "videoId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_live-streams",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Number of the page to display",
                        "default": 1
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Allowed: createdAt, publishedAt, name",
                        "default": ""
                    },
                    {
                        "name": "streamKey",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Expected number of items to display on the page. Might be lower on the last page",
                        "default": 25
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_players-playerId",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "playerId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET-video",
                "api_description": "This call provides the same JSON information provided on video creation. For private videos, it will generate a unique token url.",
                "required_parameters": [
                    {
                        "name": "videoId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is planning to host live streams and we need to choose a player. Can you provide us with the available players? Display them on the first page with 20 items per page, sorted by their creation date in ascending order.",
        "relevant APIs": [
            [
                "api.video",
                "GET_players"
            ],
            [
                "api.video",
                "GET_live-streams"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 26661
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "download",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getPdf",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getTask",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "taskId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getById",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "textId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getAll",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Reword PDF",
                "api_name": "getInPage",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "pdfId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "pageNum",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm conducting a study and need to analyze the text from a specific page of a PDF. Could you please provide me with the PDF ID and the page number I should focus on? Once I have this information, I would like to extract the text from that page, retrieve the corresponding text ID, and replace certain words. Finally, I need to download the modified PDF. Thank you!",
        "relevant APIs": [
            [
                "Reword PDF",
                "getPdf"
            ],
            [
                "Reword PDF",
                "getInPage"
            ],
            [
                "Reword PDF",
                "getById"
            ],
            [
                "Reword PDF",
                "download"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 63190
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_analytics-videos-videoId",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "videoId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "metadata",
                        "type": "ARRAY",
                        "description": "Metadata and Dynamic Metadata filter.\n(Dynamic metadata filter are available for  Business plans only)",
                        "default": "[]"
                    },
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "Period must have one of the following formats: \n\n- For a day : 2018-01-01,\n- For a week: 2018-W01, \n- For a month: 2018-01\n- For a year: 2018\n\nFor a range period: \n-  Date range: 2018-01-01/2018-01-15\n",
                        "default": ""
                    },
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Number of the page to display",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Expected number of items to display on the page. Might be lower on the last page",
                        "default": 25
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_analytics-sessions-sessionId-events",
                "api_description": "Useful to track and measure video's engagement.",
                "required_parameters": [
                    {
                        "name": "sessionId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Number of the page to display",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Expected number of items to display on the page. Might be lower on the last page",
                        "default": 25
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_videos-videoId-chapters-language",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "videoId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "A valid BCP 47 language representation",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_players",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Expected number of items to display on the page. Might be lower on the last page",
                        "default": 25
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "",
                        "default": "createdAt"
                    },
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Number of the page to display",
                        "default": 1
                    },
                    {
                        "name": "sortOrder",
                        "type": "STRING",
                        "description": "Allowed: asc, desc",
                        "default": "asc"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_live-streams-liveStreamId",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "liveStreamId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "LIST-videos",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Search results page. Minimum value: 1",
                        "default": "1"
                    },
                    {
                        "name": "liveStreamId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sortOrder",
                        "type": "STRING",
                        "description": "Allowed: asc, desc",
                        "default": ""
                    },
                    {
                        "name": "tags",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Results per page. Allowed values 1-100, default is 25.",
                        "default": "25"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Allowed: publishedAt, title",
                        "default": ""
                    },
                    {
                        "name": "description",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "metadata",
                        "type": "ARRAY",
                        "description": "metadata[foo]=bar",
                        "default": "[]"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET-video-status",
                "api_description": "This API provides upload status & encoding status to determine when the video is uploaded or ready to playback.\n\nOnce encoding is completed, the response also lists the available stream qualities.",
                "required_parameters": [
                    {
                        "name": "videoId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_live-streams",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currentPage",
                        "type": "NUMBER",
                        "description": "Number of the page to display",
                        "default": 1
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Allowed: createdAt, publishedAt, name",
                        "default": ""
                    },
                    {
                        "name": "streamKey",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "Expected number of items to display on the page. Might be lower on the last page",
                        "default": 25
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET_players-playerId",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "playerId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "api.video",
                "api_name": "GET-video",
                "api_description": "This call provides the same JSON information provided on video creation. For private videos, it will generate a unique token url.",
                "required_parameters": [
                    {
                        "name": "videoId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to track user engagement for a specific session identified by the sessionId parameter using the GET_analytics-sessions-sessionId-events API. Can you provide me with the events related to that session? Additionally, I'm interested in retrieving the details of a specific player identified by the playerId parameter using the GET_players-playerId API.",
        "relevant APIs": [
            [
                "api.video",
                "GET_analytics-sessions-sessionId-events"
            ],
            [
                "api.video",
                "GET_players-playerId"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 51817
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Bing Video Search",
                "api_name": "Trending",
                "api_description": "Get currently trending videos.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_type": "str",
                    "instrumentation": {
                        "_type": "str"
                    },
                    "errors": [
                        {
                            "code": "str",
                            "subCode": "str",
                            "message": "str",
                            "moreDetails": "str",
                            "parameter": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Bing Video Search",
                "api_name": "Video Details",
                "api_description": "Get insights about a video, such as related videos.",
                "required_parameters": [
                    {
                        "name": "modules",
                        "type": "STRING",
                        "description": "",
                        "default": "A comma-delimited list of one or more insights to request."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "An ID that uniquely identifies a video. The Video object's videoId field contains the ID that you set this parameter to."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_type": "str",
                    "instrumentation": {
                        "_type": "str"
                    },
                    "errors": [
                        {
                            "code": "str",
                            "subCode": "str",
                            "message": "str",
                            "moreDetails": "str",
                            "parameter": "str",
                            "value": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Bing Video Search",
                "api_name": "Video Search",
                "api_description": "Get videos relevant for a given query.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The user's search query string",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "safeSearch",
                        "type": "STRING",
                        "description": "A filter used to filter results for adult content.",
                        "default": ""
                    },
                    {
                        "name": "mkt",
                        "type": "STRING",
                        "description": "The market where the results come from. Typically, this is the country where the user is making the request from; however, it could be a different country if the user is not located in a country where Bing delivers results. The market must be in the form -. For example, en-US.\n\nFull list of supported markets:\nes-AR, en-AU, de-AT, nl-BE, fr-BE, pt-BR, en-CA, fr-CA, es-CL, da-DK, fi-FI, fr-FR, de-DE, zh-HK, en-IN, en-ID, en-IE, it-IT, ja-JP, ko-KR, en-MY, es-MX, nl-NL, en-NZ, no-NO, zh-CN, pl-PL, pt-PT, en-PH, ru-RU, ar-SA, en-ZA, es-ES, sv-SE, fr-CH, de-CH, zh-TW, tr-TR, en-GB, en-US, es-US",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "The number of video results to return in the response. The actual number delivered may be less than requested.",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "The zero-based offset that indicates the number of video results to skip before returning results.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "_type": "str",
                    "errors": [
                        {
                            "code": "str",
                            "subCode": "str",
                            "message": "str",
                            "moreDetails": "str",
                            "parameter": "str",
                            "value": "str",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a video enthusiast and I want to stay updated on the latest trends. Can you provide me with a list of currently trending videos? Additionally, it would be helpful if I could search for videos related to a specific query and get insights about a video, including related videos.",
        "relevant APIs": [
            [
                "Bing Video Search",
                "Trending"
            ],
            [
                "Bing Video Search",
                "Video Search"
            ],
            [
                "Bing Video Search",
                "Video Details"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 9679
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "ProxyPage",
                "api_name": "Random proxy",
                "api_description": "Get random proxy,\n\nchoose type and country",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25",
                        "default": "HTTP"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "You can specify a country for a proxy that you want to be returened\n",
                        "default": "US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "port": "int",
                    "latency": "int",
                    "ssl": "bool",
                    "is_anonymous": "bool",
                    "types": [
                        "list of str with length 1"
                    ],
                    "country": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "ProxyPage",
                "api_name": "Tier2",
                "api_description": "Tier 2 proxies\n\nEach proxy returned costs 1 credit\n\n\nWith our /v1/tier2 endpoint you can set different parameters for proxies that you need.\n\nYou can set type which is just your proxy type, either HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25 (which is smtp proxy)\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "HTTP"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ssl",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "100"
                    },
                    {
                        "name": "is_anonymous",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "US"
                    },
                    {
                        "name": "latency",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "port": "int",
                    "latency": "int",
                    "is_anonymous": "bool",
                    "types": [
                        "list of str with length 1"
                    ],
                    "country": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "ProxyPage",
                "api_name": "Tier1",
                "api_description": "List our tier 1 proxies with filters\nThis proxies are more comprehensively checked\n\n\nYou can set type which is just your proxy type, either HTTP, HTTPS\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25",
                        "default": "HTTP"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "latency",
                        "type": "NUMBER",
                        "description": "ms latency for a proxy, everything that is below that value is returned\n",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "You can specify a country for a proxy that you want to be returened\n",
                        "default": "US"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the number of proxies returned, helps you control how many credits can be used\n",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "port": "int",
                    "latency": "int",
                    "is_anonymous": "bool",
                    "types": [
                        "list of str with length 1"
                    ],
                    "country": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I require a tier 2 proxy with low latency and SSL support for my company's data analysis. Can you provide me with a random proxy that is anonymous and located in Germany? Additionally, I need a tier 1 proxy with high speed and located in France.",
        "relevant APIs": [
            [
                "ProxyPage",
                "Tier2"
            ],
            [
                "ProxyPage",
                "Random proxy"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 80377
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Any Anime",
                "api_name": "anime gif",
                "api_description": "Get anime gif pfp's / banners",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Any Anime",
                "api_name": "anime img",
                "api_description": "Show only the image from the api on your browser .",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Any Anime",
                "api_name": "anime",
                "api_description": "Shows json data and image url of the anime pfp you want to use / show !",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "str",
                    "stuff": [
                        {
                            "name": "str",
                            "image": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to discover new anime profile pictures. Can you assist me in finding various anime pfp's and banners? It would be great if I could get the image URLs and json data for each anime pfp.",
        "relevant APIs": [
            [
                "Any Anime",
                "anime gif"
            ],
            [
                "Any Anime",
                "anime"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 9708
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Temp Email",
                "api_name": "List Domains",
                "api_description": "List of Domains for email",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Temp Email",
                "api_name": "Fetch Message",
                "api_description": "Get message of the provided message ID",
                "required_parameters": [
                    {
                        "name": "message_id",
                        "type": "string",
                        "description": "",
                        "default": "The ID of the message you want to fetch"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company needs to protect our personal email accounts from spam. Can you suggest some domains that we can use to create temporary email addresses? Additionally, I would like to fetch a specific message by providing its message ID.",
        "relevant APIs": [
            [
                "Temp Email",
                "List Domains"
            ],
            [
                "Temp Email",
                "Fetch Message"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12770
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Discord Lookup",
                "api_name": "Get Invite Data",
                "api_description": "Fetches detailed data, including hidden data of invites or vanities",
                "required_parameters": [
                    {
                        "name": "invite",
                        "type": "string",
                        "description": "",
                        "default": "minecraft"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "data": {
                        "code": "str",
                        "type": "int",
                        "expires_at": "NoneType",
                        "guild": {
                            "id": "str",
                            "name": "str",
                            "splash": "str",
                            "banner": "str",
                            "description": "str",
                            "icon": "str",
                            "features": [
                                "list of str with length 26"
                            ],
                            "verification_level": "int",
                            "vanity_url_code": "str",
                            "premium_subscription_count": "int",
                            "nsfw": "bool",
                            "nsfw_level": "int",
                            "welcome_screen": {
                                "description": "str",
                                "welcome_channels": [
                                    {
                                        "channel_id": "str",
                                        "description": "str",
                                        "emoji_id": "NoneType",
                                        "emoji_name": "str",
                                        "_list_length": 4
                                    }
                                ]
                            }
                        },
                        "channel": {
                            "id": "str",
                            "name": "str",
                            "type": "int"
                        },
                        "uses": "int",
                        "max_uses": "int",
                        "max_age": "int",
                        "temporary": "bool",
                        "created_at": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Discord Lookup",
                "api_name": "Get User Data",
                "api_description": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "25458687581618176"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "data": {
                        "id": "str",
                        "username": "str",
                        "avatar": "str",
                        "discriminator": "str",
                        "public_flags": "int",
                        "flags": "int",
                        "banner": "str",
                        "accent_color": "NoneType",
                        "global_name": "str",
                        "avatar_decoration": "str",
                        "display_name": "str",
                        "banner_color": "NoneType",
                        "created_at": "int"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a Discord server moderator and need to gather information about a specific invite. Fetch detailed data, including hidden data and the server's features, for the 'minecraft' invite. Also, provide me with the user data for the user with ID '25458687581618176'.",
        "relevant APIs": [
            [
                "Discord Lookup",
                "Get Invite Data"
            ],
            [
                "Discord Lookup",
                "Get User Data"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 21518
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "SEO Keyword Research",
                "api_name": "Keyword Research API",
                "api_description": "Keyword Research API",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "email marketing"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "in"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "cpc": "str",
                    "vol": "int",
                    "v": "int",
                    "competition": "str",
                    "score": "float"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "SEO Keyword Research",
                "api_name": "Global Result (single)",
                "api_description": "Keyword Research API",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "email marketing"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "cpc": "float",
                    "vol": "int",
                    "v": "int",
                    "competition": "str",
                    "score": "float"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family is planning a vacation to India and I want to explore the keyword 'email marketing' in relation to India. Can you provide me with the search volume, competition level, and CPC for this keyword in India? It would be great to have suggestions for related keywords as well.",
        "relevant APIs": [
            [
                "SEO Keyword Research",
                "Keyword Research API"
            ],
            [
                "SEO Keyword Research",
                "Global Result (single)"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 71685
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "tes",
                "api_name": "logoutUser",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "tes",
                "api_name": "loginUser",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "password",
                        "type": "STRING",
                        "description": "The password for login in clear text",
                        "default": ""
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The user name for login",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "tes",
                "api_name": "getUserByName",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "tes",
                "api_name": "getPetById",
                "api_description": "Returns a single pet",
                "required_parameters": [
                    {
                        "name": "petId",
                        "type": "NUMBER",
                        "description": "ID of pet to return",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "tes",
                "api_name": "getInventory",
                "api_description": "Returns a map of status codes to quantities",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Sale": "int",
                    "totvs": "int",
                    "sold": "int",
                    "string": "int",
                    "pending": "int",
                    "dgdfgdf": "int",
                    "available": "int",
                    "peric": "int",
                    "cat": "int",
                    "not available": "int",
                    "new-2": "int",
                    "Available": "int",
                    "disponible": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "tes",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is conducting a survey and we need to retrieve user details by their username 'survey123'. Can you provide us with the API call for this? Additionally, we would like to get the pet details by their ID '56789' and retrieve the inventory status of the store.",
        "relevant APIs": [
            [
                "tes",
                "getUserByName"
            ],
            [
                "tes",
                "getPetById"
            ],
            [
                "tes",
                "getInventory"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 59890
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTConvert",
                "api_name": "Url Download",
                "api_description": "Gets a url to download the file",
                "required_parameters": [
                    {
                        "name": "Type",
                        "type": "STRING",
                        "description": "",
                        "default": "MP3"
                    },
                    {
                        "name": "Url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.youtube.com/watch?v=Qzw6A2WC5Qo"
                    },
                    {
                        "name": "Title",
                        "type": "STRING",
                        "description": "",
                        "default": "name_music"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "str",
                    "key": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "YTConvert",
                "api_name": "Search",
                "api_description": "Search by content or URL",
                "required_parameters": [
                    {
                        "name": "SearchQuery",
                        "type": "STRING",
                        "description": "",
                        "default": "Skillet"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "image": "str",
                    "url": "str",
                    "author": "str",
                    "duration": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend wants to convert a YouTube video to MP3. Can you find a URL to download the audio file? The video he wants to convert is titled 'Guitar Tutorial'.",
        "relevant APIs": [
            [
                "YTConvert",
                "Url Download"
            ],
            [
                "YTConvert",
                "Search"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 80194
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "SEO Keyword Research",
                "api_name": "Keyword Research API",
                "api_description": "Keyword Research API",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "email marketing"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "in"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "cpc": "str",
                    "vol": "int",
                    "v": "int",
                    "competition": "str",
                    "score": "float"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "SEO Keyword Research",
                "api_name": "Global Result (single)",
                "api_description": "Keyword Research API",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "email marketing"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "cpc": "float",
                    "vol": "int",
                    "v": "int",
                    "competition": "str",
                    "score": "float"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a freelance content writer and I'm looking for trending keywords in the field of technology. Can you suggest some high-volume keywords related to technology? I would appreciate it if you could also provide the competition level and CPC for these keywords. Additionally, I'm curious about the global results for the keyword 'technology'.",
        "relevant APIs": [
            [
                "SEO Keyword Research",
                "Keyword Research API"
            ],
            [
                "SEO Keyword Research",
                "Global Result (single)"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12759
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "MlemAPI",
                "api_name": "New mlem",
                "api_description": "Returns one most recently published mlem image in JSON",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "url": "str",
                    "width": "int",
                    "height": "int",
                    "orientation": "str",
                    "brightness": "str",
                    "tags": [
                        "list of str with length 1"
                    ],
                    "code": "int"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "MlemAPI",
                "api_name": "Mlem ID",
                "api_description": "Returns one mlem image by ID in JSON",
                "required_parameters": [
                    {
                        "name": "mlemid",
                        "type": "NUMBER",
                        "description": "Mlem ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "MlemAPI",
                "api_name": "Tags",
                "api_description": "Returns all tags in JSON",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Video_Images",
                "tool_name": "MlemAPI",
                "api_name": "Random mlem",
                "api_description": "Returns one random mlem image in JSON",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brightness",
                        "type": "STRING",
                        "description": "Image brightness: dark or bright",
                        "default": ""
                    },
                    {
                        "name": "maxheight",
                        "type": "NUMBER",
                        "description": "Maximum height",
                        "default": ""
                    },
                    {
                        "name": "minwidth",
                        "type": "NUMBER",
                        "description": "Maximum width",
                        "default": ""
                    },
                    {
                        "name": "minheight",
                        "type": "NUMBER",
                        "description": "Minimum height",
                        "default": ""
                    },
                    {
                        "name": "tag",
                        "type": "STRING",
                        "description": "Tag of mlem",
                        "default": ""
                    },
                    {
                        "name": "maxwidth",
                        "type": "NUMBER",
                        "description": "Minimum width",
                        "default": ""
                    },
                    {
                        "name": "orientation",
                        "type": "STRING",
                        "description": "Image orientation: square, landscape, portrait",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "url": "str",
                    "width": "int",
                    "height": "int",
                    "orientation": "str",
                    "brightness": "str",
                    "tags": [
                        "list of str with length 1"
                    ],
                    "code": "int"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm writing a children's book and I need illustrations of cute animals. Can you give me the most recent mlem image with the 'animals' tag in JSON format? I also need to know the brightness, width, height, and orientation of the image.",
        "relevant APIs": [
            [
                "MlemAPI",
                "New mlem"
            ],
            [
                "MlemAPI",
                "Tags"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 26691
    },
    {
        "api_list": [
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources/{datasource_id}/variables",
                "api_description": "This resource list the variables of a specified data source, showing all the fields of the variables.",
                "required_parameters": [
                    {
                        "name": "datasource_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables/{variable_id}",
                "api_description": "This resource returns a variable and its details. It shows additional fields than the ones required during the creation of the variable:  last_value: Shows the last value written to the variable.",
                "required_parameters": [
                    {
                        "name": "variable_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables",
                "api_description": "Retrieves the list of all the variables owned by a user. The header X-Auth-Token is needed to have the permissions for this endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources",
                "api_description": "This resource lists all the existing data sources of a user.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /datasources/{datasource_id}",
                "api_description": "This resource obtains an existing data source and its details. Also, it returns additional fields besides the ones required during the creation of the data source:  number_of_variables: Shows the number of variables contained by the data source. last_activity: Returns the date of the last activity",
                "required_parameters": [
                    {
                        "name": "datasource_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Devices",
                "tool_name": "Ubidots",
                "api_name": "GET /variables/{variable_id}/values",
                "api_description": "This resource returns the values of the specified variable.  Every value will have a timestamp which is a value in milliseconds according to the POSIX standard.",
                "required_parameters": [
                    {
                        "name": "variable_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to retrieve the list of variables for my data source with ID 'abc123'. Additionally, I want to obtain the details of the variable with ID 'xyz789'.",
        "relevant APIs": [
            [
                "Ubidots",
                "GET /datasources/{datasource_id}/variables"
            ],
            [
                "Ubidots",
                "GET /variables/{variable_id}"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 6504
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "2. Thumbnail ready",
                "api_description": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Pagepeeker",
                "api_name": "1. Shoot thumbnail",
                "api_description": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
                "required_parameters": [
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
                        "default": "m"
                    },
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to generate the thumbnail from",
                        "default": "http://www.mashape.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "refresh",
                        "type": "STRING",
                        "description": "This parameter forces the currently generate d thumbnail to be regenerated.  It is optional and will be ignored unless it contains the value 1",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Could you please generate a small-sized thumbnail image for my friend's blog? Check if the thumbnail is ready and download it for me if it is. The blog URL is 'www.blogexample.com'.",
        "relevant APIs": [
            [
                "Pagepeeker",
                "1. Shoot thumbnail"
            ],
            [
                "Pagepeeker",
                "2. Thumbnail ready"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 4179
    },
    {
        "api_list": [
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "CoinDesk",
                "api_description": "Get the top latest news from CoinDesk.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Bitcoinist",
                "api_description": "Get the top latest news from Bitcoinist.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Cointelegraph",
                "api_description": "Get the top latest news from Cointelegraph.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "The Guardian",
                "api_description": "Get the top latest news from The Guardian.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 20
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "BSC News",
                "api_description": "Get the top latest news from BSC News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 100
                        }
                    ]
                }
            },
            {
                "category_name": "Cryptography",
                "tool_name": "Cryptocurrency News",
                "api_name": "Decrypt",
                "api_description": "Get the top latest news from Decrypt.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "url": "str",
                            "title": "str",
                            "description": "str",
                            "thumbnail": "str",
                            "createdAt": "str",
                            "_list_length": 58
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are starting a cryptocurrency blog and we need content. Can you fetch the top news articles from CoinDesk, The Guardian, and Decrypt? We require the article URLs, titles, and thumbnails. Your assistance would be highly valuable!",
        "relevant APIs": [
            [
                "Cryptocurrency News",
                "CoinDesk"
            ],
            [
                "Cryptocurrency News",
                "The Guardian"
            ],
            [
                "Cryptocurrency News",
                "Decrypt"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12535
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "IMDB_API",
                "api_name": "/get_movies_by_cast_name",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "cast_name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "rank": "int",
                    "title": "str",
                    "year": "int",
                    "director": "str",
                    "cast": "str",
                    "rating": "float"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "IMDB_API",
                "api_name": "/get_movies_by_director",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "movie_director",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "rank": "int",
                    "title": "str",
                    "year": "int",
                    "director": "str",
                    "cast": "str",
                    "rating": "float"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "IMDB_API",
                "api_name": "/get_movies_by_name",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "Movie_name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "rank": "int",
                    "title": "str",
                    "year": "int",
                    "director": "str",
                    "cast": "str",
                    "rating": "float"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "IMDB_API",
                "api_name": "/get_movies_by_year",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "movie_year",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a movie trivia night and I need some questions related to movies. Can you provide me with a list of movies from the 80s, along with their directors and cast members? It would be great if the movies have a rating above 7.",
        "relevant APIs": [
            [
                "IMDB_API",
                "/get_movies_by_year"
            ],
            [
                "IMDB_API",
                "/get_movies_by_director"
            ],
            [
                "IMDB_API",
                "/get_movies_by_cast_name"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 77096
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "MikuAPI",
                "api_name": "getImage",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "fileId",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "timestamp": "str",
                    "status": "int",
                    "error": "str",
                    "path": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "MikuAPI",
                "api_name": "getRandomImage",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "apiUrl": "str",
                    "description": "str",
                    "artist": "str",
                    "title": "str",
                    "sourceLink": "str",
                    "webPLink": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a virtual concert featuring Hatsune Miku, and I need captivating images to promote the event. Can you provide me with a random image of Hatsune Miku from the MikuAPI? It would be great if the image includes the artist's name, title, and a link to the source. Thank you!",
        "relevant APIs": [
            [
                "MikuAPI",
                "getRandomImage"
            ],
            [
                "MikuAPI",
                "getImage"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 34811
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "PurgoMalum",
                "api_name": "Remove profanity",
                "api_description": "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed.",
                        "default": "This is some test input"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "A comma separated list of words to be added to the profanity list. Accepts letters, numbers, underscores (_) and commas (,). Accepts up to 10 words (or 200 maximum characters in length). The PurgoMalum filter is case-insensitive, so the case of you entry is not important.",
                        "default": ""
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text used to replace any words matching the profanity list. Accepts letters, numbers, underscores (_) tildes (~), exclamation points (!), dashes/hyphens (-), equal signs (=), pipes (|), single quotes ('), double quotes (\"), asterisks (*), open and closed curly brackets ({ }), square brackets ([ ]) and parentheses (). Maximum length of 20 characters. When not used, the default is an asterisk (*) fill.",
                        "default": ""
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Single character used to replace any words matching the profanity list. Fills designated character to length of word replaced. Accepts underscore (_) tilde (~), dash/hyphen (-), equal sign (=), pipe (|) and asterisk (*). When not used, the default is an asterisk (*) fill.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "PurgoMalum",
                "api_name": "Check if text contains profanity",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "",
                        "default": "This is some test input"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Please assist me in removing profanity from a document I received. The document contains sensitive information, so I want to ensure it is free from any inappropriate content. Additionally, I would like to check if the filtered document contains any profanity using the Check if text contains profanity API.",
        "relevant APIs": [
            [
                "PurgoMalum",
                "Remove profanity"
            ],
            [
                "PurgoMalum",
                "Check if text contains profanity"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 71583
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Discord Lookup",
                "api_name": "Get Invite Data",
                "api_description": "Fetches detailed data, including hidden data of invites or vanities",
                "required_parameters": [
                    {
                        "name": "invite",
                        "type": "string",
                        "description": "",
                        "default": "minecraft"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "data": {
                        "code": "str",
                        "type": "int",
                        "expires_at": "NoneType",
                        "guild": {
                            "id": "str",
                            "name": "str",
                            "splash": "str",
                            "banner": "str",
                            "description": "str",
                            "icon": "str",
                            "features": [
                                "list of str with length 26"
                            ],
                            "verification_level": "int",
                            "vanity_url_code": "str",
                            "premium_subscription_count": "int",
                            "nsfw": "bool",
                            "nsfw_level": "int",
                            "welcome_screen": {
                                "description": "str",
                                "welcome_channels": [
                                    {
                                        "channel_id": "str",
                                        "description": "str",
                                        "emoji_id": "NoneType",
                                        "emoji_name": "str",
                                        "_list_length": 4
                                    }
                                ]
                            }
                        },
                        "channel": {
                            "id": "str",
                            "name": "str",
                            "type": "int"
                        },
                        "uses": "int",
                        "max_uses": "int",
                        "max_age": "int",
                        "temporary": "bool",
                        "created_at": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Discord Lookup",
                "api_name": "Get User Data",
                "api_description": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "25458687581618176"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "data": {
                        "id": "str",
                        "username": "str",
                        "avatar": "str",
                        "discriminator": "str",
                        "public_flags": "int",
                        "flags": "int",
                        "banner": "str",
                        "accent_color": "NoneType",
                        "global_name": "str",
                        "avatar_decoration": "str",
                        "display_name": "str",
                        "banner_color": "NoneType",
                        "created_at": "int"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a member of a Discord server and I'm interested in learning more about the server's features. Can you fetch the invite data for the server, including the server's name, description, features, and the welcome screen channels?",
        "relevant APIs": [
            [
                "Discord Lookup",
                "Get Invite Data"
            ],
            [
                "Discord Lookup",
                "Get User Data"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 63233
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Nexweave",
                "api_name": "GetCampaignDetails",
                "api_description": "This API will return the Campaign details including variables used in the overall Campaign.",
                "required_parameters": [
                    {
                        "name": "campaignId",
                        "type": "STRING",
                        "description": "",
                        "default": "campaignId"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Nexweave",
                "api_name": "GetAllTemplates",
                "api_description": "This API will return all the templates associated with the user's account, including Images & Video.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Nexweave",
                "api_name": "GetTemplateDetails",
                "api_description": "This API will return the template details including variables for a valid template.",
                "required_parameters": [
                    {
                        "name": "templateId",
                        "type": "STRING",
                        "description": "",
                        "default": "templateId"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Video_Images",
                "tool_name": "Nexweave",
                "api_name": "GetAllCampaigns",
                "api_description": "The API will return all the CSV Campaigns associated with the user's account, including Images, Videos &  Image+Video Campaign.\n\nNote: The campaigns must be in Success state.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a graphic designer and I want to explore the templates available in my Nexweave account. Can you provide me with the details of all the templates? Also, give me the campaign details for the campaign with the ID 'lmn321'.",
        "relevant APIs": [
            [
                "Nexweave",
                "GetAllTemplates"
            ],
            [
                "Nexweave",
                "GetCampaignDetails"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 18268
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Helper Function",
                "api_name": "Random",
                "api_description": "Generate Random String with custom length\nBASIC: 20 \nPRO: 30\nULTRA: 70\nMEGA: 150",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "length",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Helper Function",
                "api_name": "Generate UUID",
                "api_description": "Generate UUID v4 with dash or not.\nmax\nBASIC: 3\nPRO: 20\nULTRA: 50\nMEGA: 150",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "timestamp_first",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "false"
                    },
                    {
                        "name": "remove_dash",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    },
                    {
                        "name": "count",
                        "type": "STRING",
                        "description": "",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": [
                        "list of str with length 3"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm looking for a random string of 70 characters. Could you also generate 150 UUIDs with dashes? Thank you!",
        "relevant APIs": [
            [
                "Helper Function",
                "Random"
            ],
            [
                "Helper Function",
                "Generate UUID"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 54801
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Get Products in Category",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Me",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Get Product",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Get Categories",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Get User Orders",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Get Products",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Get Order",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to find the categories of products available in the catalog. Can you provide me with a list of all the categories? Also, I would like to get the details of the products in the 'electronics' category. Please give me the product names, descriptions, and prices.",
        "relevant APIs": [
            [
                "\ud83d\udc4b Demo Project_v13",
                "Get Categories"
            ],
            [
                "\ud83d\udc4b Demo Project_v13",
                "Get Products in Category"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 62870
    },
    {
        "api_list": [
            {
                "category_name": "Video_Images",
                "tool_name": "Youtube Search",
                "api_name": "search",
                "api_description": "Search video on YouTube",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "cats"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "c",
                        "type": "STRING",
                        "description": "",
                        "default": "continuation_token"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "id": "str",
                            "type": "str",
                            "url": "str",
                            "title": "str",
                            "channel_name": "str",
                            "channel_url": "str",
                            "views": "int",
                            "length": "str",
                            "_list_length": 20
                        }
                    ],
                    "next_continuation": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are planning a movie night and we want to watch some entertaining YouTube Shorts. Can you fetch a variety of YouTube Shorts URLs for us using the keyword 'comedy'? We would appreciate having multiple videos to choose from. Thanks!",
        "relevant APIs": [
            [
                "Youtube Search",
                "search"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 84908
    }
]