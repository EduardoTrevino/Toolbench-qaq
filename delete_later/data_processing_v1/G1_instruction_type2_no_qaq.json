[
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Search jokes by anime name",
                "api_description": "Search jokes using anime name",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Get jokes using page",
                "api_description": "Enter the page number to get the jokes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Get anime by ID",
                "api_description": "Search anime using ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Get animes",
                "api_description": "Get all the anime from Anime Jokes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Search jokes",
                "api_description": "Search jokes using the keywords of joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Query joke using ID",
                "api_description": "Search anime joke using joke ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "4"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Get all jokes",
                "api_description": "Get all the jokes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My friends and I are hosting an anime-themed event and we would love to include some anime jokes. Can you help us find jokes related to the anime 'One Piece' and also jokes that include the keyword 'how'? Additionally, we would like to browse through all the available anime jokes.",
        "relevant APIs": [
            [
                "Anime Jokes",
                "Search jokes by anime name"
            ],
            [
                "Anime Jokes",
                "Search jokes"
            ],
            [
                "Anime Jokes",
                "Get all jokes"
            ]
        ],
        "query_id": 23982
    },
    {
        "api_list": [],
        "query": "I'm planning a family road trip and we want to listen to radio stations with different genres along the way. Can you provide us with a list of cities where we can find radio stations and their respective genres? Also, it would be great if you could suggest some popular genres suitable for the whole family.",
        "relevant APIs": [
            [
                "50K Radio Stations",
                "Get Cities"
            ],
            [
                "50K Radio Stations",
                "Get Genres"
            ]
        ],
        "query_id": 75390
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get all employees' payment cards.",
                "api_description": "This endpoint gets all the available records in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": [
                        {
                            "cardTypeCode": "str",
                            "cardTypeFullName": "str",
                            "issuingBank": "str",
                            "cardNumber": "int",
                            "cardHolderName": "str",
                            "ccv_ccv2": "int",
                            "issueDate": "str",
                            "expiryDate": "str",
                            "billingDate": "int",
                            "cardPIN": "int",
                            "creditLimit": "int",
                            "cardHolderID": "int",
                            "_list_length": 952
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get a specific employee by employee ID.",
                "api_description": "This endpoint gets one record by a specific employee ID that is unique for each employee in the employees table, up to 900 employees with their information.\nFor example:  employee ID , first name, email, and  etc...",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "715505"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": {
                        "empID": "int",
                        "namePrefix": "str",
                        "firstName": "str",
                        "middleInitial": "str",
                        "lastName": "str",
                        "gender": "str",
                        "email": "str",
                        "fatherName": "str",
                        "motherName": "str",
                        "dateOfBirth": "str",
                        "timeOfBirth": "str",
                        "ageInYears": "float",
                        "weightInKgs": "int",
                        "dateOfJoining": "str",
                        "yearOfJoining": "int",
                        "monthOfJoining": "int",
                        "monthNameOfJoining": "str",
                        "shortMonth": "str",
                        "dayOfJoining": "int",
                        "DOWofJoining": "str",
                        "shortDOW": "str",
                        "ageInCompany_Years": "float",
                        "salary": "int",
                        "lastPercentHike": "str",
                        "ssn": "str",
                        "phoneNumber": "str",
                        "placeName": "str",
                        "county": "str",
                        "city": "str",
                        "state": "str",
                        "zip": "int",
                        "region": "str",
                        "username": "str",
                        "password": "str",
                        "bankCardNumber": "int"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get a specific payment card by card number.",
                "api_description": "This endpoint gets one record by a specific card number that is unique for each card in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "30965048563652"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": {
                        "cardTypeCode": "str",
                        "cardTypeFullName": "str",
                        "issuingBank": "str",
                        "cardNumber": "int",
                        "cardHolderName": "str",
                        "ccv_ccv2": "int",
                        "issueDate": "str",
                        "expiryDate": "str",
                        "billingDate": "int",
                        "cardPIN": "int",
                        "creditLimit": "int",
                        "cardHolderID": "int"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Paginate through campany employees information.",
                "api_description": "This endpoint lets you paginate through all the available records in the employees' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...",
                "required_parameters": [
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "end",
                        "type": "NUMBER",
                        "description": "",
                        "default": "25"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str",
                        "start": "int",
                        "end": "int",
                        "previousPage": "NoneType",
                        "currentPage": "int",
                        "nextPage": "int",
                        "totalPages": "int"
                    },
                    "data": [
                        {
                            "empID": "int",
                            "namePrefix": "str",
                            "firstName": "str",
                            "middleInitial": "str",
                            "lastName": "str",
                            "gender": "str",
                            "email": "str",
                            "fatherName": "str",
                            "motherName": "str",
                            "dateOfBirth": "str",
                            "timeOfBirth": "str",
                            "ageInYears": "float",
                            "weightInKgs": "int",
                            "dateOfJoining": "str",
                            "yearOfJoining": "int",
                            "monthOfJoining": "int",
                            "monthNameOfJoining": "str",
                            "shortMonth": "str",
                            "dayOfJoining": "int",
                            "DOWofJoining": "str",
                            "shortDOW": "str",
                            "ageInCompany_Years": "float",
                            "salary": "int",
                            "lastPercentHike": "str",
                            "ssn": "str",
                            "phoneNumber": "str",
                            "placeName": "str",
                            "county": "str",
                            "city": "str",
                            "state": "str",
                            "zip": "int",
                            "region": "str",
                            "username": "str",
                            "password": "str",
                            "bankCardNumber": "int",
                            "_list_length": 25
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Paginate through  employees payment cards infomation.",
                "api_description": "This endpoint lets you paginate through all the available records in the bank cards' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 bank cards with their information.\nFor example:  card number, holder name,  card type, and etc...",
                "required_parameters": [
                    {
                        "name": "end",
                        "type": "NUMBER",
                        "description": "",
                        "default": "25"
                    },
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str",
                        "start": "int",
                        "end": "int",
                        "previousPage": "NoneType",
                        "currentPage": "int",
                        "nextPage": "int",
                        "totalPages": "int"
                    },
                    "data": [
                        {
                            "cardTypeCode": "str",
                            "cardTypeFullName": "str",
                            "issuingBank": "str",
                            "cardNumber": "int",
                            "cardHolderName": "str",
                            "ccv_ccv2": "int",
                            "issueDate": "str",
                            "expiryDate": "str",
                            "billingDate": "int",
                            "cardPIN": "int",
                            "creditLimit": "int",
                            "cardHolderID": "int",
                            "_list_length": 25
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get employee information associated with a specific payment card.",
                "api_description": "This endpoint gets employee record associated with a specific card number that is unique for each card, and displays  the employee information in the response.\nFor example:  employee ID , first name, and  etc...",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "30965048563652"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": {
                        "empID": "int",
                        "namePrefix": "str",
                        "firstName": "str",
                        "middleInitial": "str",
                        "lastName": "str",
                        "gender": "str",
                        "email": "str",
                        "fatherName": "str",
                        "motherName": "str",
                        "dateOfBirth": "str",
                        "timeOfBirth": "str",
                        "ageInYears": "float",
                        "weightInKgs": "int",
                        "dateOfJoining": "str",
                        "yearOfJoining": "int",
                        "monthOfJoining": "int",
                        "monthNameOfJoining": "str",
                        "shortMonth": "str",
                        "dayOfJoining": "int",
                        "DOWofJoining": "str",
                        "shortDOW": "str",
                        "ageInCompany_Years": "float",
                        "salary": "int",
                        "lastPercentHike": "str",
                        "ssn": "str",
                        "phoneNumber": "str",
                        "placeName": "str",
                        "county": "str",
                        "city": "str",
                        "state": "str",
                        "zip": "int",
                        "region": "str",
                        "username": "str",
                        "password": "str",
                        "bankCardNumber": "int"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get payment cards information associated with a specific employee.",
                "api_description": "This endpoint gets all bank payment cards records associated with a specific employee ID that is unique for each employee and displays all cards information in the response.\nFor example:  card number, expiry date, and etc...",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "715505"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": {
                        "cardTypeCode": "str",
                        "cardTypeFullName": "str",
                        "issuingBank": "str",
                        "cardNumber": "int",
                        "cardHolderName": "str",
                        "ccv_ccv2": "int",
                        "issueDate": "str",
                        "expiryDate": "str",
                        "billingDate": "int",
                        "cardPIN": "int",
                        "creditLimit": "int",
                        "cardHolderID": "int"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Human Resources API",
                "api_name": "Get all campany employees information.",
                "api_description": "This endpoint gets all the available records in the employees table, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": {
                        "message": "str"
                    },
                    "data": [
                        {
                            "empID": "int",
                            "namePrefix": "str",
                            "firstName": "str",
                            "middleInitial": "str",
                            "lastName": "str",
                            "gender": "str",
                            "email": "str",
                            "fatherName": "str",
                            "motherName": "str",
                            "dateOfBirth": "str",
                            "timeOfBirth": "str",
                            "ageInYears": "float",
                            "weightInKgs": "int",
                            "dateOfJoining": "str",
                            "yearOfJoining": "int",
                            "monthOfJoining": "int",
                            "monthNameOfJoining": "str",
                            "shortMonth": "str",
                            "dayOfJoining": "int",
                            "DOWofJoining": "str",
                            "shortDOW": "str",
                            "ageInCompany_Years": "float",
                            "salary": "int",
                            "lastPercentHike": "str",
                            "ssn": "str",
                            "phoneNumber": "str",
                            "placeName": "str",
                            "county": "str",
                            "city": "str",
                            "state": "str",
                            "zip": "int",
                            "region": "str",
                            "username": "str",
                            "password": "str",
                            "bankCardNumber": "int",
                            "_list_length": 953
                        }
                    ]
                }
            }
        ],
        "query": "I need to retrieve the bank card details for a specific employee with ID 715505. Additionally, I want to know the employee's email, date of joining, and salary. Can you provide me with this information?",
        "relevant APIs": [
            [
                "Human Resources API",
                "Get a specific employee by employee ID."
            ],
            [
                "Human Resources API",
                "Get payment cards information associated with a specific employee."
            ]
        ],
        "query_id": 42351
    },
    {
        "api_list": [],
        "query": "I am a travel blogger and would like to explore new destinations. Can you suggest some cities where Flixbus operates? I am particularly interested in cities with historical landmarks and natural attractions. Also, provide me with the available trips and schedules for each city.",
        "relevant APIs": [
            [
                "Flixbus",
                "cities"
            ],
            [
                "Flixbus",
                "search-trips"
            ],
            [
                "Flixbus",
                "schedule"
            ]
        ],
        "query_id": 70915
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "cat-facts",
                "api_name": "Get all facts about cat",
                "api_description": "This endpoint returns all available fact about cats in our database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "AllFacts": [
                        "list of str with length 279"
                    ]
                }
            },
            {
                "category_name": "Other",
                "tool_name": "cat-facts",
                "api_name": "Get a random fact about cats",
                "api_description": "This endpoint returns a random fact about cats",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Fact": "str"
                }
            }
        ],
        "query": "My friend is a cat lover and I want to surprise her with an interesting cat fact every day for a month. Can you provide me with a random cat fact and a list of all cat facts? This will make her days even more delightful.",
        "relevant APIs": [
            [
                "cat-facts",
                "Get all facts about cat"
            ],
            [
                "cat-facts",
                "Get a random fact about cats"
            ]
        ],
        "query_id": 32001
    },
    {
        "api_list": [
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET queue",
                "api_description": "Returns the list of people in division, tier and according to the type of queue",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "queue",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "division",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "tier",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET player by name",
                "api_description": "Return you the summoner related the name given",
                "required_parameters": [
                    {
                        "name": "summonerName",
                        "type": "STRING",
                        "description": "",
                        "default": "Nogaruki"
                    },
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET player by puiid",
                "api_description": "Return you the summoner profile related to the puuid given",
                "required_parameters": [
                    {
                        "name": "puuid",
                        "type": "STRING",
                        "description": "",
                        "default": "qorSH3-x2S4Mi34VTL4QeRenrGeRkUKnVVcQa2e9gQXyDHJvl8CH7xotdh20FG3A5Hac43FM4rX3VA"
                    },
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET PlayerMatch",
                "api_description": "Return an detailed list of games for the number you passed for a player",
                "required_parameters": [
                    {
                        "name": "summonerName",
                        "type": "STRING",
                        "description": "",
                        "default": "Nogaruki"
                    },
                    {
                        "name": "region",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Number of match return\nBy default 10",
                        "default": "10"
                    },
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "Starting number in the player's game list\n\nBy default 0 ( last game played)",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET Champion details",
                "api_description": "Getting detail from champion name you give, translate by the language you give",
                "required_parameters": [
                    {
                        "name": "champion",
                        "type": "STRING",
                        "description": "",
                        "default": "Volibear"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET champions",
                "api_description": "Get list of all champions by default give you in english",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"Aatrox\": {\"version\": \"str\", \"id\": \"str\", \"key\": \"str\", \"name\": \"str\", \"title\": \"str\", \"blurb\": \"str\", \"info\": {\"attack\": \"int\", \"defense\": \"int\", \"magic\": \"int\", \"difficulty\": \"int\"}, \"image\": {\"full\": \"str\", \"sprite\": \"str\", \"group\": \"str\", \"x\": \"int\", \"y\": \"int\", \"w\": \"int\", \"h\": \"int\"}, \"tags\": [\"list of str with length 2\"], \"partype\": \"str\", \"stats\": {\"hp\": \"int\", \"hpperlevel\": \"int\", \"mp\": \"int\", \"mpperlevel\": \"int\", \"movespeed\": \"int\", \"armor\": \"int\", \"armorperlevel\": \"float\", \"spellblock\": \"int\", \"spellblockperlevel\": \"float\", \"attackrange\": \"int\", \"hpregen\": \"int\", \"hpregenperlevel\": \"int\", \"mpregen\": \"int\", \"mpregenperlevel\": \"int\", \"crit\": \"int\", \"critperlevel\": \"int\", \"attackdamage\": \"int\", \"attackdamageperlevel\": \"int\", \"attackspeedperlevel\": \"float\", \"attackspeed\": \"float\"}}, \"Ahri\": {\"version\": \"str\", \"id\": \"str\", \"key\": \"str\", \"name\": \"str\", \"title\": \"str\", \"blurb\": \"str\", \"info\": {\"attack\": \"int\", \"defense\": \"int\", \"magic\": \"int\", \"difficulty\": \"int\"}, \"image\": {\"full"
            },
            {
                "category_name": "Gaming",
                "tool_name": "League of Legends API",
                "api_name": "GET Champion rotation",
                "api_description": "Return's you a liste of free champion ids and liste of free champions ids for new player.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to see the summoner profile for the player with the summoner name 'Nogaruki' in League of Legends. Additionally, provide me with their recent match history and a list of free champion rotations.",
        "relevant APIs": [
            [
                "League of Legends API",
                "GET player by name"
            ],
            [
                "League of Legends API",
                "GET PlayerMatch"
            ],
            [
                "League of Legends API",
                "GET Champion rotation"
            ]
        ],
        "query_id": 47838
    },
    {
        "api_list": [],
        "query": "I need to check the availability of the item in the order with the ID 7 using the getInventory API. After that, I want to retrieve the details of the user with the username 'janedoe' using the getUserByName API.",
        "relevant APIs": [],
        "query_id": 40436
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Competitor Small Image",
                "api_description": "Get competitor small image. It generates image/png.",
                "required_parameters": [
                    {
                        "name": "imageVersion",
                        "type": "NUMBER",
                        "description": "The imageVersion value.",
                        "default": 1
                    },
                    {
                        "name": "competitorId",
                        "type": "NUMBER",
                        "description": "The athlete id.",
                        "default": 1314
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Athlete Large Image",
                "api_description": "Get athlete large image. It generates image/png.",
                "required_parameters": [
                    {
                        "name": "athleteId",
                        "type": "NUMBER",
                        "description": "The athlete id.",
                        "default": 64139
                    },
                    {
                        "name": "imageVersion",
                        "type": "NUMBER",
                        "description": "The imageVersion value.",
                        "default": 12
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Competition Standings",
                "api_description": "Get competition standings.",
                "required_parameters": [
                    {
                        "name": "isPreview",
                        "type": "BOOLEAN",
                        "description": "Is it for use in a preview?",
                        "default": false
                    },
                    {
                        "name": "seasonNum",
                        "type": "NUMBER",
                        "description": "The season number.",
                        "default": 83
                    },
                    {
                        "name": "competition",
                        "type": "NUMBER",
                        "description": "The competition id.",
                        "default": 103
                    },
                    {
                        "name": "stageNum",
                        "type": "NUMBER",
                        "description": "The stage number.",
                        "default": 2
                    },
                    {
                        "name": "live",
                        "type": "BOOLEAN",
                        "description": "Get live standings.",
                        "default": false
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lastUpdateId",
                        "type": "NUMBER",
                        "description": "The last update id. Only fill this parameter if you want updated data",
                        "default": ""
                    },
                    {
                        "name": "groupCategory",
                        "type": "NUMBER",
                        "description": "The group category.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "NUMBER",
                        "description": "The type.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Athlete Trophy Stats",
                "api_description": "Get athlete trophy stats.",
                "required_parameters": [
                    {
                        "name": "athleteId",
                        "type": "NUMBER",
                        "description": "The athlete id.",
                        "default": 1911
                    },
                    {
                        "name": "competitionId",
                        "type": "NUMBER",
                        "description": "The competition id.",
                        "default": 5930
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "competitors": [
                        {
                            "color": "str",
                            "competitorNum": "int",
                            "countryId": "int",
                            "hasSquad": "bool",
                            "id": "int",
                            "imageVersion": "int",
                            "longName": "str",
                            "mainCompetitionId": "int",
                            "name": "str",
                            "nameForURL": "str",
                            "popularityRank": "int",
                            "sportId": "int",
                            "symbolicName": "str",
                            "type": "int",
                            "_list_length": 1
                        }
                    ],
                    "countries": [
                        {
                            "id": "int",
                            "imageVersion": "int",
                            "name": "str",
                            "nameForURL": "str",
                            "sportTypes": [
                                "list of int with length 8"
                            ],
                            "_list_length": 1
                        }
                    ],
                    "lastUpdateId": "int",
                    "sports": [
                        {
                            "drawSupport": "bool",
                            "id": "int",
                            "imageVersion": "int",
                            "name": "str",
                            "nameForURL": "str",
                            "_list_length": 1
                        }
                    ],
                    "stats": {
                        "columns": [
                            {
                                "entity": {
                                    "id": "int",
                                    "type": "str"
                                },
                                "name": "str",
                                "num": "int",
                                "order": "int",
                                "_list_length": 3
                            }
                        ],
                        "rowEntityType": "str",
                        "rows": [
                            {
                                "entityId": "int",
                                "num": "int",
                                "secondaryTitle": "str",
                                "title": "str",
                                "values": [
                                    {
                                        "columnNum": "int",
                                        "value": "str",
                                        "_list_length": 3
                                    }
                                ],
                                "_list_length": 1
                            }
                        ],
                        "showColumnIcons": "bool"
                    },
                    "ttl": "int"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Country Flag",
                "api_description": "Get country flag. It generates image/png.",
                "required_parameters": [
                    {
                        "name": "countryId",
                        "type": "NUMBER",
                        "description": "The country id.",
                        "default": 10
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Game Details",
                "api_description": "Get game details.",
                "required_parameters": [
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    },
                    {
                        "name": "gameId",
                        "type": "NUMBER",
                        "description": "The game id.",
                        "default": 3627363
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lastUpdateId",
                        "type": "NUMBER",
                        "description": "The last update id. Only fill this parameter if you want updated data",
                        "default": ""
                    },
                    {
                        "name": "matchupId",
                        "type": "NUMBER",
                        "description": "The matchup id.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"competitions\": [{\"color\": \"str\", \"competitorsType\": \"int\", \"countryId\": \"int\", \"currentPhaseName\": \"str\", \"currentPhaseNum\": \"int\", \"currentSeasonNum\": \"int\", \"currentStageNum\": \"int\", \"currentStageType\": \"int\", \"hasActiveGames\": \"bool\", \"hasBrackets\": \"bool\", \"hasStandings\": \"bool\", \"hasStandingsGroups\": \"bool\", \"id\": \"int\", \"imageVersion\": \"int\", \"liveGames\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"popularityRank\": \"int\", \"sportId\": \"int\", \"totalGames\": \"int\", \"_list_length\": 1}], \"countries\": [{\"id\": \"int\", \"imageVersion\": \"int\", \"liveGames\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"sportTypes\": [\"list of int with length 7\"], \"totalGames\": \"int\", \"_list_length\": 11}], \"game\": {\"awayCompetitor\": {\"color\": \"str\", \"countryId\": \"int\", \"id\": \"int\", \"imageVersion\": \"int\", \"isQualified\": \"bool\", \"isWinner\": \"bool\", \"lineups\": {\"hasFieldPositions\": \"bool\", \"members\": [{\"formation\": {\"id\": \"int\", \"name\": \"str\", \"shortName\": \"str\"}, \"hasStats\": \"bool\", \"id\": \"int\", \"position\": {\"id\":"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Fixtures",
                "api_description": "Get fixtures for competitors or competitions.",
                "required_parameters": [
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "competitorId",
                        "type": "NUMBER",
                        "description": "The competitor id. Only if you want the competitor's fixtures.",
                        "default": ""
                    },
                    {
                        "name": "lastUpdateId",
                        "type": "NUMBER",
                        "description": "The last update id. Only fill this parameter if you want updated data",
                        "default": ""
                    },
                    {
                        "name": "competition",
                        "type": "NUMBER",
                        "description": "The competition id. Only if you want competition's fixtures",
                        "default": 103
                    }
                ],
                "method": "GET",
                "template_response": {
                    "lastUpdateId": "int",
                    "requestedUpdateId": "int",
                    "summary": {},
                    "ttl": "int"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Featured Competitions",
                "api_description": "Get featured competitions.",
                "required_parameters": [
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    },
                    {
                        "name": "sport",
                        "type": "NUMBER",
                        "description": "The sport.",
                        "default": 1
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type.",
                        "default": "stats"
                    },
                    {
                        "name": "withSeasons",
                        "type": "BOOLEAN",
                        "description": "Include seasons?",
                        "default": true
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Game H2H Matches",
                "api_description": "Get game h2h matches.",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "NUMBER",
                        "description": "The game id.",
                        "default": 3627363
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lastUpdateId",
                        "type": "NUMBER",
                        "description": "The last update id. Only fill this parameter if you want updated data",
                        "default": ""
                    },
                    {
                        "name": "matchupId",
                        "type": "NUMBER",
                        "description": "The matchup id.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"competitions\": [{\"color\": \"str\", \"competitorsType\": \"int\", \"countryId\": \"int\", \"currentPhaseName\": \"str\", \"currentPhaseNum\": \"int\", \"currentSeasonNum\": \"int\", \"currentStageType\": \"int\", \"hasBrackets\": \"bool\", \"hasStandings\": \"bool\", \"hasStandingsGroups\": \"bool\", \"hasStats\": \"bool\", \"id\": \"int\", \"imageVersion\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"popularityRank\": \"int\", \"sportId\": \"int\", \"_list_length\": 1}], \"countries\": [{\"id\": \"int\", \"imageVersion\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"_list_length\": 16}], \"game\": {\"awayCompetitor\": {\"color\": \"str\", \"competitorNum\": \"int\", \"countryId\": \"int\", \"hasSquad\": \"bool\", \"id\": \"int\", \"imageVersion\": \"int\", \"lastMatchesLayoutData\": {\"columns\": [{\"num\": \"int\", \"title\": \"str\", \"_list_length\": 3}]}, \"mainCompetitionId\": \"int\", \"name\": \"str\", \"nameForURL\": \"str\", \"popularityRank\": \"int\", \"recentGames\": [{\"awayCompetitor\": {\"competitorNum\": \"int\", \"countryId\": \"int\", \"hasSquad\": \"bool\", \"id\": \"int\", \"imageVersion\": \"int\", \"isWinner\""
            },
            {
                "category_name": "Sports",
                "tool_name": "AllScores",
                "api_name": "Competition Details",
                "api_description": "Get competition details.",
                "required_parameters": [
                    {
                        "name": "competition",
                        "type": "NUMBER",
                        "description": "The competition id.",
                        "default": 103
                    },
                    {
                        "name": "langId",
                        "type": "NUMBER",
                        "description": "The language id. Check the tutorials.",
                        "default": 1
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "The timezone name. Check the tutorials.",
                        "default": "America/Chicago"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "withSeasons",
                        "type": "BOOLEAN",
                        "description": "Include seasons?",
                        "default": true
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I am a baseball enthusiast and want to stay updated on the latest news and breaking updates in the MLB. Can you provide me with real-time news articles, including headlines, summaries, and publication dates? It would be helpful to have the small images of the news sources and the large images of the featured athletes mentioned in the articles.",
        "relevant APIs": [
            [
                "AllScores",
                "Featured Competitions"
            ],
            [
                "AllScores",
                "Athlete Large Image"
            ]
        ],
        "query_id": 44238
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Twitter Hashtags",
                "api_name": "Get country's hashtags",
                "api_description": "Get hashtags based on country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "string",
                        "description": "",
                        "default": "argentina"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "tweets": "empty list"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter Hashtags",
                "api_name": "Get worldwide hashtags",
                "api_description": "Returns a list of all recent hashtags worldwide",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "tweets": [
                        {
                            "title": "str",
                            "volume": "str",
                            "link": "str",
                            "_list_length": 50
                        }
                    ]
                }
            }
        ],
        "query": "I'm planning a trip to Europe and I want to stay updated with the latest hashtags worldwide. Can you provide me with a list of recent trending hashtags globally? Additionally, could you suggest popular hashtags specific to Argentina? It would be great if you could include the volume of tweets and links related to each hashtag.",
        "relevant APIs": [
            [
                "Twitter Hashtags",
                "Get worldwide hashtags"
            ],
            [
                "Twitter Hashtags",
                "Get country's hashtags"
            ]
        ],
        "query_id": 14714
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "Roman Gods By Pizza API",
                "api_name": "Search Roman God By Name",
                "api_description": "Search for a Roman God By name to get a description about them",
                "required_parameters": [
                    {
                        "name": "god",
                        "type": "STRING",
                        "description": "",
                        "default": "jupiter"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Description": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "Roman Gods By Pizza API",
                "api_name": "Random Roman God",
                "api_description": "Returns information about a random Roman God",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Description": "str",
                    "God": "str"
                }
            }
        ],
        "query": "I'm planning a family game night and I want to include a Roman mythology trivia game. Can you give me a random Roman god along with a description and then provide me with detailed information about the god Mars?",
        "relevant APIs": [
            [
                "Roman Gods By Pizza API",
                "Random Roman God"
            ],
            [
                "Roman Gods By Pizza API",
                "Search Roman God By Name"
            ]
        ],
        "query_id": 37421
    },
    {
        "api_list": [],
        "query": "I'm planning a picnic with my friends this weekend. Can you fetch the wind speed for the picnic location? Also, provide the current weather conditions and the forecast for the picnic day.",
        "relevant APIs": [
            [
                "Cloud Cast",
                "Get wind speed"
            ],
            [
                "Cloud Cast",
                "Get current weather"
            ],
            [
                "Cloud Cast",
                "Get the forecast"
            ]
        ],
        "query_id": 72285
    },
    {
        "api_list": [],
        "query": "I'm planning a family vacation in Italy. Please give me a list of Flixbus stations and search for available trips from Rome to Venice on 2022-04-30 for 6 people.",
        "relevant APIs": [
            [
                "Flixbus",
                "stations"
            ],
            [
                "Flixbus",
                "search-trips"
            ]
        ],
        "query_id": 3510
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Token Forwarding",
                "api_name": "Get token forwarding transaction webhook",
                "api_description": "Get token forwarding transaction webhook",
                "required_parameters": [
                    {
                        "name": "transactionId",
                        "type": "string",
                        "description": "",
                        "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str",
                    "error": "str",
                    "requestId": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Token Forwarding",
                "api_name": "Get token forwarding transactions",
                "api_description": "Get token forwarding transactions",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "updatedLt",
                        "type": "STRING",
                        "description": "",
                        "default": "2022-01-11 06:08:17"
                    },
                    {
                        "name": "updatedGte",
                        "type": "STRING",
                        "description": "",
                        "default": "2023-01-10 06:08:17"
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str",
                    "data": {
                        "offset": "int",
                        "limit": "int",
                        "total": "int",
                        "count": "int",
                        "tokenForwardingTransactions": "empty list"
                    },
                    "requestId": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Token Forwarding",
                "api_name": "Get usage quota for the current month",
                "api_description": "Get usage quota for the current month",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str",
                    "data": {
                        "walletQuota": "str",
                        "walletQuotaUsed": "str"
                    },
                    "requestId": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Token Forwarding",
                "api_name": "Get gas fee funding wallets",
                "api_description": "Get gas fee funding wallets",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "100"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str",
                    "data": {
                        "offset": "int",
                        "limit": "int",
                        "total": "int",
                        "count": "int",
                        "gasFeeFundingWallets": "empty list"
                    },
                    "requestId": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Token Forwarding",
                "api_name": "Get token forwarding wallets",
                "api_description": "Get token forwarding wallets",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "100"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str",
                    "data": {
                        "offset": "int",
                        "limit": "int",
                        "total": "int",
                        "count": "int",
                        "tokenForwardingWallets": "empty list"
                    },
                    "requestId": "str"
                }
            }
        ],
        "query": "I need to keep track of the token forwarding transactions for my company. Please retrieve the token forwarding transactions, including the offset, limit, total count, and the list of token forwarding transactions. Additionally, I want to obtain the usage quota for the current month and how much of the quota has been used so far.",
        "relevant APIs": [
            [
                "Token Forwarding",
                "Get token forwarding transactions"
            ],
            [
                "Token Forwarding",
                "Get usage quota for the current month"
            ]
        ],
        "query_id": 33889
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "UK Postcode",
                "api_name": "/search",
                "api_description": "Find an street or post code using one of more key words",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string",
                        "default": "Downing Street London"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "The maximum number of results of the query (May be artificially limited)",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "results": [
                        {
                            "postCode": "str",
                            "postCodeTrimmed": "str",
                            "streetName": "str",
                            "longitude": "float",
                            "latitude": "float",
                            "plusCode": "str",
                            "region": "str",
                            "locality": "str",
                            "area": "str",
                            "numUPRNs": "int",
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "UK Postcode",
                "api_name": "/getpostcode",
                "api_description": "Find an exact match for a given post code.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "An exact match for the post code to be queried",
                        "default": "SW1A2AA"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "result": {
                        "postCode": "str",
                        "postCodeTrimmed": "str",
                        "streetName": "str",
                        "longitude": "float",
                        "latitude": "float",
                        "plusCode": "str",
                        "region": "str",
                        "locality": "str",
                        "area": "str",
                        "numUPRNs": "int"
                    }
                }
            }
        ],
        "query": "I'm a real estate agent and I need to find properties for sale in Manchester. Can you help me search for properties using keywords like 'house', 'apartment', and 'garden'? It would be great to see the postcodes, street names, and coordinates of each property.",
        "relevant APIs": [
            [
                "UK Postcode",
                "/search"
            ],
            [
                "UK Postcode",
                "/getpostcode"
            ]
        ],
        "query_id": 39545
    },
    {
        "api_list": [],
        "query": "I'm a fitness trainer and I want to create a workout routine based on impressive Guinness World Records related to push-ups. Can you fetch the record details for the most challenging push-up records, including who achieved them, where and when they took place, and any tips or techniques used to accomplish these records?",
        "relevant APIs": [
            [
                "Guinness-World-Records-Api",
                "Get Records"
            ],
            [
                "Guinness-World-Records-Api",
                "Get Record Details"
            ]
        ],
        "query_id": 40699
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Nitro",
                "api_name": "Get a Specific Order",
                "api_description": "This endpoint retrieves a specific order.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Translation",
                "tool_name": "Nitro",
                "api_name": "Account",
                "api_description": "This endpoint retrieves an account.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Translation",
                "tool_name": "Nitro",
                "api_name": "Get All Orders",
                "api_description": "This endpoint retrieves all account orders.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Translation",
                "tool_name": "Nitro",
                "api_name": "Rates",
                "api_description": "This endpoint retrieves all rates.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_language": "str",
                    "target_language": "str",
                    "rate": "float"
                }
            }
        ],
        "query": "I'm planning a trip to a foreign country and need some documents translated. Before proceeding, I would like to know the rates for translation services. Can you provide me with the rates offered by Nitro for different language pairs? I need information about the source language, target language, and the corresponding rates.",
        "relevant APIs": [
            [
                "Nitro",
                "Rates"
            ],
            [
                "Nitro",
                "Get a Specific Order"
            ]
        ],
        "query_id": 46403
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Get Promo Codes",
                "api_name": "Get Stores",
                "api_description": "Get Stores",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Get Promo Codes",
                "api_name": "Get Coupons",
                "api_description": "Get Coupons",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "",
                        "default": "update_time_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "store_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "request": {
                        "page": "str",
                        "store_id": "str",
                        "sort": "str",
                        "type": "str"
                    },
                    "time": "float",
                    "data": [
                        {
                            "id": "str",
                            "title": "str",
                            "description": "str",
                            "terms": "str",
                            "code": "str",
                            "url": "str",
                            "store_id": "str",
                            "language": "str",
                            "status": "str",
                            "add_time": "str",
                            "start_time": "str",
                            "end_time": "str",
                            "update_time": "str",
                            "_list_length": 98
                        }
                    ]
                }
            }
        ],
        "query": "My friend loves shopping online. Could you help me find promo codes for her favorite stores? She frequently shops at Sephora, Nike, and Target. It would be great if you could also provide the description and terms of the coupons.",
        "relevant APIs": [
            [
                "Get Promo Codes",
                "Get Coupons"
            ],
            [
                "Get Promo Codes",
                "Get Stores"
            ]
        ],
        "query_id": 27079
    },
    {
        "api_list": [],
        "query": "I want to surprise my family with a weekend getaway. Can you suggest a nice destination within a 200-mile radius of our current location? Please provide driving directions from our location to the suggested destination.",
        "relevant APIs": [
            [
                "Waze",
                "Autocomplete"
            ],
            [
                "Waze",
                "Driving Directions"
            ]
        ],
        "query_id": 74098
    },
    {
        "api_list": [],
        "query": "I'm a small business owner looking to invest in the stock market. I want to make informed decisions based on the probability of price movements and peer ratios. Can you give me the probability of the stock price going up or down in the next day, week, and month, as well as the average peer ratios for Apple Inc.?",
        "relevant APIs": [
            [
                "MarketCI Analytics",
                "Price Probability"
            ],
            [
                "MarketCI Analytics",
                "Peer Ratio Averages"
            ]
        ],
        "query_id": 26752
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Translator",
                "api_name": "Get Languages",
                "api_description": "Get all supported languages",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            }
        ],
        "query": "I want to explore the different languages supported by the Translator tool. Can you assist me in obtaining the complete list of languages? It would be great to have this information for my research project.",
        "relevant APIs": [
            [
                "Translator",
                "Get Languages"
            ]
        ],
        "query_id": 86143
    },
    {
        "api_list": [],
        "query": "I need to download the translated document for the job with ID 'd0c30471-7c70-45d4-bcc1-a7773cb352b' in the project with ID 'bc141454-5949-401b-9c05-7591ee2f562'. Can you help me with that?",
        "relevant APIs": [
            [
                "TEXTKING Translation",
                "Download translated document"
            ],
            [
                "TEXTKING Translation",
                "Get job"
            ]
        ],
        "query_id": 7989
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get NBA Games and Stats for a Single Player",
                "api_description": "This call will grab a map of all of the games a player has played in the season.     \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \nseason is an optional parameter.  Currently only 2022 (last season) and 2023 (this season) are available.  If you do not include season as a parameter, it will return this season's games. \n\nExample:\nCorrect way to get the stats for Nikola Vucevic for his game against the Heat on 10/19/2022 would be this:\n/getNBAGamesForPlayer?playerID=28268405032&gameID=20221019_CHI@MIA\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nIf you want his games from last season, do this..\n/getNBAGamesForPlayer?playerID=28268405032&season=2022\n\nBut if you wanted to get all of his games this season, you don't have to include the season. Simply make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNBABoxScore call with that specific gameID.",
                "required_parameters": [
                    {
                        "name": "playerID",
                        "type": "STRING",
                        "description": "playerID required",
                        "default": "28268405032"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "numberOfGames",
                        "type": "STRING",
                        "description": "use this to restrict the results to the most recent numberOfGames you give here for the parameter",
                        "default": ""
                    },
                    {
                        "name": "season",
                        "type": "STRING",
                        "description": "season in format YYYY\ndefaults to current season if gameID is not listed",
                        "default": "2023"
                    },
                    {
                        "name": "gameID",
                        "type": "STRING",
                        "description": "use this to restrict the results to the boxscore for only one game of this player.  This increases the speed of the call.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"statusCode\": \"int\", \"body\": {\"20230414_CHI@MIA\": {\"blk\": \"str\", \"OffReb\": \"str\", \"ftp\": \"str\", \"DefReb\": \"str\", \"plusMinus\": \"str\", \"stl\": \"str\", \"pts\": \"str\", \"tech\": \"str\", \"team\": \"str\", \"TOV\": \"str\", \"fga\": \"str\", \"ast\": \"str\", \"tptfgp\": \"str\", \"teamAbv\": \"str\", \"mins\": \"str\", \"fgm\": \"str\", \"fgp\": \"str\", \"reb\": \"str\", \"teamID\": \"str\", \"tptfgm\": \"str\", \"fta\": \"str\", \"tptfga\": \"str\", \"longName\": \"str\", \"PF\": \"str\", \"playerID\": \"str\", \"ftm\": \"str\", \"gameID\": \"str\"}, \"20230412_CHI@TOR\": {\"blk\": \"str\", \"OffReb\": \"str\", \"ftp\": \"str\", \"DefReb\": \"str\", \"plusMinus\": \"str\", \"stl\": \"str\", \"pts\": \"str\", \"tech\": \"str\", \"team\": \"str\", \"TOV\": \"str\", \"fga\": \"str\", \"ast\": \"str\", \"tptfgp\": \"str\", \"teamAbv\": \"str\", \"mins\": \"str\", \"fgm\": \"str\", \"fgp\": \"str\", \"reb\": \"str\", \"teamID\": \"str\", \"tptfgm\": \"str\", \"fta\": \"str\", \"tptfga\": \"str\", \"longName\": \"str\", \"PF\": \"str\", \"playerID\": \"str\", \"ftm\": \"str\", \"gameID\": \"str\"}, \"20230409_DET@CHI\": {\"blk\": \"str\", \"OffReb\": \"str\", \"ftp\": \"str\", \"DefReb\": \"str\", "
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get Teams",
                "api_description": "This call will retrieve the list of NBA teams. Included is their name, city, abbreviation, and teamID which can be used in other calls.   This also includes standings (win/loss/ppg/oppg/streak) data.\n\nIn the team rosters, all player information is available, which includes current injury status. \n\n/getNBATeams\n\nOptional parameters are schedules=true ,  rosters=true , and/or topPerformers=true\n\ntopPerformers get returned in a list for each stat, since a team might have multiple leaders averaging the same amount of whichever stat.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "statsToGet",
                        "type": "STRING",
                        "description": "",
                        "default": "averages"
                    },
                    {
                        "name": "schedules",
                        "type": "STRING",
                        "description": "schedules=\\\\\\\"true\\\\\\\"  to add team schedules to the data returned",
                        "default": "true"
                    },
                    {
                        "name": "teamStats",
                        "type": "STRING",
                        "description": "teamStats=true to add team stats to the data returned",
                        "default": "true"
                    },
                    {
                        "name": "topPerformers",
                        "type": "STRING",
                        "description": "topPerformers=true  to add the team's stat leaders to the data returned",
                        "default": "true"
                    },
                    {
                        "name": "rosters",
                        "type": "STRING",
                        "description": "rosters=\\\\\\\"true\\\\\\\" to add team rosters to the data returned",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": "{\"statusCode\": \"int\", \"body\": [{\"teamAbv\": \"str\", \"teamCity\": \"str\", \"teamSchedule\": {\"20221223_SA@ORL\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\": \"str\", \"gameTime\": \"str\", \"gameDate\": \"str\", \"teamIDHome\": \"str\", \"gameTime_epoch\": \"str\", \"teamIDAway\": \"str\", \"home\": \"str\"}, \"20230110_ORL@POR\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\": \"str\", \"gameTime\": \"str\", \"gameDate\": \"str\", \"teamIDHome\": \"str\", \"gameTime_epoch\": \"str\", \"teamIDAway\": \"str\", \"home\": \"str\"}, \"20230205_ORL@CHA\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\": \"str\", \"gameTime\": \"str\", \"gameDate\": \"str\", \"teamIDHome\": \"str\", \"gameTime_epoch\": \"str\", \"teamIDAway\": \"str\", \"home\": \"str\"}, \"20230207_NY@ORL\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\": \"str\", \"gameTime\": \"str\", \"gameDate\": \"str\", \"teamIDHome\": \"str\", \"gameTime_epoch\": \"str\", \"teamIDAway\": \"str\", \"home\": \"str\"}, \"20221024_ORL@NY\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\": \"str\", \"gameTime\": \"str\", \"gameDate\": \"str\", \"teamIDHome\": \"str\", \"gam"
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get NBA Betting Odds",
                "api_description": "This grabs NBA betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getNBABettingLines?gameDate=20221227\n/getNBABettingLines?gameID=20221227_DEN@SAC",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "gameID",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "gameDate",
                        "type": "STRING",
                        "description": "format YYYYMMDD",
                        "default": "20230304"
                    }
                ],
                "method": "GET",
                "template_response": "{\"statusCode\": \"int\", \"body\": {\"20230304_ATL@MIA\": {\"last_updated_e_time\": \"str\", \"betmgm\": {\"totalUnder\": \"str\", \"awayTeamSpread\": \"str\", \"awayTeamSpreadOdds\": \"str\", \"homeTeamSpread\": \"str\", \"homeTeamSpreadOdds\": \"str\", \"totalOverOdds\": \"str\", \"totalUnderOdds\": \"str\", \"awayTeamMLOdds\": \"str\", \"homeTeamMLOdds\": \"str\", \"totalOver\": \"str\"}, \"gameDate\": \"str\", \"fanduel\": {\"totalUnder\": \"str\", \"awayTeamSpread\": \"str\", \"awayTeamSpreadOdds\": \"str\", \"homeTeamSpread\": \"str\", \"homeTeamSpreadOdds\": \"str\", \"totalOverOdds\": \"str\", \"totalUnderOdds\": \"str\", \"awayTeamMLOdds\": \"str\", \"homeTeamMLOdds\": \"str\", \"totalOver\": \"str\"}, \"wynnbet\": {\"totalUnder\": \"str\", \"awayTeamSpread\": \"str\", \"awayTeamSpreadOdds\": \"str\", \"homeTeamSpread\": \"str\", \"homeTeamSpreadOdds\": \"str\", \"totalOverOdds\": \"str\", \"totalUnderOdds\": \"str\", \"awayTeamMLOdds\": \"str\", \"homeTeamMLOdds\": \"str\", \"totalOver\": \"str\"}, \"unibet\": {\"totalUnder\": \"str\", \"awayTeamSpread\": \"str\", \"awayTeamSpreadOdds\": \"str\", \"homeTeamSpread\": \"str\", \"homeT"
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get Player Information",
                "api_description": "Call this to get general information on each player (name, team, experience, birthday, college, etc).\n\nYou can call with their playerID, if you know it.  playerID calls will always be quicker as it acts on the key of the table.  \n\nYou can also call with playerName.  This call will return a list of players who have that name.  If you want to include spaces in the search name, then use underscore.  So if you want to find LeBron, you can use lebron_james and it will bring him back.  Or try with playerName=smith and it will return a list of guys with smith in their name.\n\n/getNBAPlayerInfo?playerID=28908111729\n\n/getNBAPlayerInfo?playerName=smith\n\netc",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "statsToGet",
                        "type": "STRING",
                        "description": "can be: totals or averages\nWorks for current season only.",
                        "default": "averages"
                    },
                    {
                        "name": "playerID",
                        "type": "STRING",
                        "description": "Numerical playerID\neither playerID or playerName is required\nIf playerID is used then the endpoint returns a map, not a list, as only one player will be returned.",
                        "default": ""
                    },
                    {
                        "name": "playerName",
                        "type": "STRING",
                        "description": "player name\neither playerID or playerName is required\nIf this is used, the endpoint returns a list of players that match the entered playerName.",
                        "default": "smith"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": [
                        {
                            "espnID": "str",
                            "espnName": "str",
                            "nbaComName": "str",
                            "college": "str",
                            "weight": "str",
                            "nbaComHeadshot": "str",
                            "jerseyNum": "str",
                            "team": "str",
                            "espnLink": "str",
                            "bDay": "str",
                            "espnHeadshot": "str",
                            "nbaComID": "str",
                            "shortName": "str",
                            "nbaComLink": "str",
                            "teamID": "str",
                            "bRefName": "str",
                            "pos": "str",
                            "cbsPlayerID": "str",
                            "longName": "str",
                            "height": "str",
                            "bRefID": "str",
                            "lastGamePlayed": "str",
                            "playerID": "str",
                            "exp": "str",
                            "stats": {
                                "blk": "str",
                                "fga": "str",
                                "DefReb": "str",
                                "ast": "str",
                                "ftp": "str",
                                "tptfgp": "str",
                                "tptfgm": "str",
                                "trueShootingPercentage": "str",
                                "stl": "str",
                                "fgm": "str",
                                "pts": "str",
                                "reb": "str",
                                "fgp": "str",
                                "effectiveShootingPercentage": "str",
                                "fta": "str",
                                "mins": "str",
                                "gamesPlayed": "str",
                                "TOV": "str",
                                "tptfga": "str",
                                "OffReb": "str",
                                "ftm": "str"
                            },
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get NBA Injury List History",
                "api_description": "This table currently has injury history from the years 2020, 2021, 2022, and 2023 for players who played an NBA game in the 21-22 season and afterwards.  Consider this table as \"beta\" at this point, as we are still collecting previous seasons' data and working through some challenges. \n\nparameters:\n(All dates must be in format YYYYMMDD)\nplayerID - Use this if you only want to pull back injury history from a specific player.\ninjDate - Use this is to pull back injury history for only a specific date.\nThe next two are used to pull back a range of dates.  You can use one or the other. Or none. \nbeginningInjDate - Lower boundary of the range of dates. Inclusive\nendInjDate - Upper boundary of the range of dates.  Inclusive.\nyear - If your range of dates include multiple years, the api will only pull back dates for one year.  If year isn't selected then you will get injuries from current year.   Using \"year\" without any other parameters will do nothing and the api will still bring back the default, last 14 days of injuries.\nnumberOfDays - Valid for numbers 0 through 30, you can pull back information from the previous 0 to 30 days.  \nCalling this endpoint with no parameters will give a list of all players injuries from the last 14 calendar days. \n\nAgain, please consider this endpoint as not fully functional and it could be buggy.  We'll update the description here whenever we add more years, add options, or finalize the interface.\n\nWe encourage testing and feedback here.  Thanks in advance!",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "format YYYY\nUse this to restrict results to one year",
                        "default": ""
                    },
                    {
                        "name": "endInjDate",
                        "type": "STRING",
                        "description": "format YYYYMMDD\nUse this to restrict date range. This date is inclusive and the end of the date range.",
                        "default": ""
                    },
                    {
                        "name": "numberOfDays",
                        "type": "STRING",
                        "description": "Number of days should be from 1 to 30, and will restrict your results to the most recent number of days you provide as the variable.",
                        "default": ""
                    },
                    {
                        "name": "beginningInjDate",
                        "type": "STRING",
                        "description": "format YYYYMMDD\nUse this to restrict date range. This date is inclusive and the beginning of the date range.",
                        "default": ""
                    },
                    {
                        "name": "playerID",
                        "type": "STRING",
                        "description": "Numerical playerID\nRestricts results to a specific player only.",
                        "default": ""
                    },
                    {
                        "name": "injDate",
                        "type": "STRING",
                        "description": "format YYYYMMDD\nUse this if you want to restrict your results to only one date",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": [
                        {
                            "designation": "str",
                            "injDate": "str",
                            "playerID": "str",
                            "description": "str",
                            "_list_length": 15
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get Team Roster",
                "api_description": "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getNBATeams\" call.\n\nRosters are updated a few times throughout the day.  Usually once per hour and before each game starts.\n \nCall needs to look like this:\n/getNBATeamRoster?teamID=1\nor\n/getNBATeamRoster?teamAbv=ATL\n\n\nThat will return a list of the team's current roster players in the body.\n\nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "teamID",
                        "type": "STRING",
                        "description": "Number 1 - 30",
                        "default": ""
                    },
                    {
                        "name": "statsToGet",
                        "type": "STRING",
                        "description": "either: totals or averages\nDoes not work with archiveDate",
                        "default": "averages"
                    },
                    {
                        "name": "archiveDate",
                        "type": "STRING",
                        "description": "format YYYYMMDD",
                        "default": ""
                    },
                    {
                        "name": "teamAbv",
                        "type": "STRING",
                        "description": "format CHI, BOS, ATL, etc",
                        "default": "SAC"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": {
                        "team": "str",
                        "teamID": "str",
                        "roster": [
                            {
                                "college": "str",
                                "jerseyNum": "str",
                                "bRefID": "str",
                                "espnName": "str",
                                "nbaComLink": "str",
                                "nbaComHeadshot": "str",
                                "lastGamePlayed": "str",
                                "espnLink": "str",
                                "pos": "str",
                                "teamID": "str",
                                "injury": {
                                    "description": "str",
                                    "injDate": "str",
                                    "designation": "str"
                                },
                                "nbaComName": "str",
                                "exp": "str",
                                "height": "str",
                                "nbaComID": "str",
                                "espnHeadshot": "str",
                                "espnID": "str",
                                "weight": "str",
                                "team": "str",
                                "bRefName": "str",
                                "espnShortName": "str",
                                "bDay": "str",
                                "shortName": "str",
                                "longName": "str",
                                "playerID": "str",
                                "stats": {
                                    "blk": "str",
                                    "fga": "str",
                                    "DefReb": "str",
                                    "ast": "str",
                                    "ftp": "str",
                                    "tptfgp": "str",
                                    "tptfgm": "str",
                                    "trueShootingPercentage": "str",
                                    "stl": "str",
                                    "fgm": "str",
                                    "pts": "str",
                                    "reb": "str",
                                    "fgp": "str",
                                    "effectiveShootingPercentage": "str",
                                    "fta": "str",
                                    "mins": "str",
                                    "gamesPlayed": "str",
                                    "TOV": "str",
                                    "tptfga": "str",
                                    "OffReb": "str",
                                    "ftm": "str"
                                },
                                "_list_length": 17
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get Team Schedule",
                "api_description": "This call returns the schedule of any team, using the teamID that can be found in \"getNBATeams\" call.\n\nCall needs to look like this:\n\n/getNBATeamSchedule?teamID=1\n\nYou can also use the team Abbreviation:\n\n/getNBATeamSchedule?teamAbv=CHI   \n\nThat will return a list of the team's games in the body. \n\nTo get a list of appropriate team abbreviations, use the getTeams call.\n\nYou can also add the \"season\" parameter if you want to specify season.  Right now we only have season 2022 and 2023.   \nDefault season is current season.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "season",
                        "type": "STRING",
                        "description": "format YYYY and defaults to current season's year.  For instance, NBA season 2022-23 would just be formatted 2023. \nthis only works for 2022 and 2023",
                        "default": "2023"
                    },
                    {
                        "name": "teamID",
                        "type": "STRING",
                        "description": "teamID is 1-30",
                        "default": ""
                    },
                    {
                        "name": "teamAbv",
                        "type": "STRING",
                        "description": "teamAbv is format like CHI, BOS, or ATL, etc",
                        "default": "GS"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": {
                        "team": "str",
                        "teamID": "str",
                        "schedule": [
                            {
                                "gameID": "str",
                                "seasonType": "str",
                                "away": "str",
                                "teamIDHome": "str",
                                "gameDate": "str",
                                "gameStatus": "str",
                                "teamIDAway": "str",
                                "home": "str",
                                "awayResult": "str",
                                "homePts": "str",
                                "gameTime": "str",
                                "homeResult": "str",
                                "awayPts": "str",
                                "_list_length": 95
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get Player List",
                "api_description": "Grabs all of this season's players and their IDs.  \n\nONE CALL is all you need to retrieve every player.  No need to call multiple times to get the full list.\n\nRosters are updated multiple times per day during the season.\n\nYou mainly will use this to match a player with his playerID.\n\nThere are no parameters, just a simple call..\n\n/getNBAPlayerList",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": [
                        {
                            "playerID": "str",
                            "team": "str",
                            "longName": "str",
                            "teamID": "str",
                            "_list_length": 761
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get Daily Schedule",
                "api_description": "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNBAGamesForDate?gameDate=20220310\nThe above call will return all of the games from March 10th, 2022.  Date must be in that format.  \nFor March 10th, there were two games. They come back in a list format within the body of the response.",
                "required_parameters": [
                    {
                        "name": "gameDate",
                        "type": "STRING",
                        "description": "format: YYYYMMDD\nrequired",
                        "default": "20221202"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": [
                        {
                            "gameID": "str",
                            "teamIDAway": "str",
                            "away": "str",
                            "gameDate": "str",
                            "teamIDHome": "str",
                            "home": "str",
                            "_list_length": 11
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 Fantasy Stats",
                "api_name": "Get General Game Information",
                "api_description": "This call pulls back the most general information for a game: away team, home team, game date, and game start time.  All times are in Eastern (ET) time zone.  \ngameID is needed.  You can retrieve gameID from a few different calls.  The \"getNBAGamesForDate\" call or the \"getNBATeamSchedule\" call will be the best ways to get the gameID's.   \n\nCall should look like this: \n/getNBAGameInfo?gameID=20220310_BKN@PHI",
                "required_parameters": [
                    {
                        "name": "gameID",
                        "type": "STRING",
                        "description": "",
                        "default": "20221202_CHI@GS"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": {
                        "season": "str",
                        "gameDate": "str",
                        "nbaComLink": "str",
                        "neutralSite": "str",
                        "teamIDHome": "str",
                        "gameTime": "str",
                        "gameTime_epoch": "str",
                        "teamIDAway": "str",
                        "away": "str",
                        "gameID": "str",
                        "seasonType": "str",
                        "home": "str"
                    }
                }
            }
        ],
        "query": "I am a sports journalist and I need the game information for all NBA games on a specific date. Can you provide me with the game schedule, including the teams playing, game dates, and start times? Also, give me the betting odds for the games, including the spreads, over/under, and moneyline.",
        "relevant APIs": [
            [
                "Tank01 Fantasy Stats",
                "Get Daily Schedule"
            ],
            [
                "Tank01 Fantasy Stats",
                "Get Team Schedule"
            ],
            [
                "Tank01 Fantasy Stats",
                "Get NBA Betting Odds"
            ]
        ],
        "query_id": 77901
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "Airplanes ordered by descending",
                "api_description": "Get all airplanes ordered by name in descending order.",
                "required_parameters": [
                    {
                        "name": "ordering",
                        "type": "STRING",
                        "description": "",
                        "default": "-plane"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "Airplanes ordered by ascending",
                "api_description": "Get all airplanes ordered by name in ascending order.",
                "required_parameters": [
                    {
                        "name": "ordering",
                        "type": "STRING",
                        "description": "",
                        "default": "plane"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "Search by Engine",
                "api_description": "Get all airplanes by engine keyword.",
                "required_parameters": [
                    {
                        "name": "engine__icontains",
                        "type": "STRING",
                        "description": "",
                        "default": "rolls"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "Airplanes by Brand",
                "api_description": "Get all airplanes by brands such as Boeing, Airbus, etc.",
                "required_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "",
                        "default": "Airbus"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "Search",
                "api_description": "Search airplane by name.",
                "required_parameters": [
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "a380"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "Single Airplane",
                "api_description": "Get details of a single airplane by its ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "76"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "AirplanesDB",
                "api_name": "All Airplanes",
                "api_description": "Get complete data of all airplanes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "plane": "str",
                    "brand": "str",
                    "passenger_capacity": "int",
                    "priceUSD": "float",
                    "fuel_capacity_litres": "float",
                    "max_takeoff_weight_kg": "float",
                    "max_landing_weight_kg": "float",
                    "empty_weight_kg": "float",
                    "range_km": "float",
                    "length_ft": "float",
                    "wingspan_ft": "float",
                    "height_ft": "float",
                    "engine": "str",
                    "cruise_speed_kmph": "float",
                    "ceiling_ft": "float",
                    "imgThumb": "str",
                    "img_attribution": "str",
                    "img_creative_commons": "bool"
                }
            }
        ],
        "query": "I am a travel blogger and I want to provide my readers with information on different types of airplanes. Can you provide me with a list of all the airplanes ordered by their names in descending order, along with their passenger capacity and range?",
        "relevant APIs": [
            [
                "AirplanesDB",
                "Airplanes ordered by descending"
            ],
            [
                "AirplanesDB",
                "Airplanes ordered by ascending"
            ],
            [
                "AirplanesDB",
                "Search by Engine"
            ],
            [
                "AirplanesDB",
                "Airplanes by Brand"
            ]
        ],
        "query_id": 12204
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "Currency Converter With Forecast and Historical Data",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nAllows to convert currency and shows prediction of exchange rate for currency pairs.\n\n`country_code` - is now optional. API will try first to get cross rate from European Central Bank. If API will found both currencies in another central bank, you will see from which central bank it was taken.\n\nExample: To get CNY to GBP provided by European Central Bank\n`/api/get_cross?currency=cny&currency_cross=gbp`\nor \n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp`\nor from Kazakhstan's CB:\n`/api/get_cross?country_code=kz&currency=cny&currency_cross=gbp`\nOf course cross rates from KZ and EU will be slightly different.\n\nExample 2: If you want to get historical data, add `&history_yyyy_mm_dd=2022-06-21`\n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp&history_yyyy_mm_dd=2022-06-21`\n\nExotic example: To get CNY to MDL (Yuan to Moldavian Lei) provided by Kazakhstan CB\n`/api/get_cross?currency=cny&currency_cross=mdl`\n\nParameters:\n1) country_code; 2) currency; 3) currency_cross; 4) optional parameter is `history_yyyy_mm_dd` (example:2022-06-27)' .\nTo get available `country_code` - access `/api/info/countries`\nTo get all currency abbreviations - access `/api/info/currencies` - there you need `code` value which is having  3 capital letters, like USD or CHF\n\nExample 3: If you want get price of Bitcoin in USD use:\n`/api/get_cross?currency=btc&currency_cross=usd`\n...same in GBP with specified `country_code`:\n`/api/get_cross?country_code=bitcoin&currency=btc&currency_cross=gbp`\n\nExample 4: If you want get price of Bitcoin in USD for a day in the past use:\n`/api/get_cross?country_code=bitcoin&history_yyyy_mm_dd=2022-06-27&currency=btc&currency_cross=usd`",
                "required_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "",
                        "default": "cny"
                    },
                    {
                        "name": "currency_cross",
                        "type": "STRING",
                        "description": "",
                        "default": "gbp"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "Get banks in a country",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis endpoint gives list of banks in selected country.\n\nExample 1\n` /api/get_all_banks_in_country?country_code=eu`\n\nExample 2\n `/api/get_all_banks_in_country?country_code=md`\n\nExample 3\n `/api/get_all_banks_in_country?country_code=bitcoin`\nwell... I hope you've got the idea:) The currency must have it's country and bank and for cryptocurrencies it is just imaginable bank \"Bitcoin\" and imaginable country \"Bitcoin\". This request will show you JSON\n{... \"is_central\": 1, \"name\": \"Bitcoin\", \"name_short\": \"Bitcoin\",...}\n\nTo get all available `country_code` use free endpoint `/api/info/countries`",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "",
                        "default": "eu"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "Currency rates for 1 bank. Historical data.",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\n**S**o it does - get exchange rates for selected bank on chosen date. Timezone is important!!!\n\nExample 1 - get currency rates provided by ECB(European Central Bank) in Berlin:\n`/api/get_all_currencies_values_for_1bank/?country_code=eu&date_yyyy_mm_dd_from=2021-11-15&date_yyyy_mm_dd_till=2021-11-15&bank_id=15&tz=Europe/Berlin`\n\nExample 2, MAIB (private Moldavian bank): `/api/get_all_currencies_values_for_1bank/?country_code=md&date_yyyy_mm_dd_from=2021-11-12&date_yyyy_mm_dd_till=2021-11-12&bank_id=1&tz=Europe/Chisinau`\n\nPrameters and where to get info:\n`country_code=`   -->> `/api/info/countries`  -here you can get all available country_code's and their's timezones.\n`bank_id=`  -->>  `/api/get_all_banks_in_country?country_code=bitcoin` or `/api/get_all_banks_in_country?country_code=eu`\n`date_yyyy_mm_dd_till=` and `date_yyyy_mm_dd_from=`  -->>  must be equal",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "",
                        "default": "eu"
                    },
                    {
                        "name": "date_yyyy_mm_dd_from",
                        "type": "STRING",
                        "description": "",
                        "default": "2022-06-22"
                    },
                    {
                        "name": "bank_id",
                        "type": "STRING",
                        "description": "",
                        "default": "15"
                    },
                    {
                        "name": "date_yyyy_mm_dd_till",
                        "type": "STRING",
                        "description": "",
                        "default": "2022-06-22"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "",
                        "default": "Europe/Berlin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "API Info",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nAll info about API's of this project are available at `/api/info`     Free of charge.\nFor example, if you access  `/api/info/get_forecast`  -  you will get information about  `/api/get_forecast`\n\nThe `ENDPOINT_NAME` can be one of these:\n`timezones` , `countries` , `languages` , `currencies` , `author`\n..and it provides response with data, for example all available countries.\n\nAlso  `ENDPOINT_NAME` can be one of these:\n`get_forecast` , `get_all_banks_in_country` , `get_best_rates` , `get_all_currencies_values_for_1bank` ,  `faq`\n..but  these requests provides only information about selected endoint.\n\nTo get all available `ENDPOINT_NAME` , go to `/api/info/all`",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ENDPOINT_NAME",
                        "type": "string",
                        "description": "",
                        "default": "get_forecast"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "Get Exchange Rates Forecast",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis API provides convinient way to get forecast for almost all fiat currencies and for bitcoin. Forecast based on Moving Average method with at least 30 historical observations.\n\nExample with fiat- \n`/api/get_forecast?country_code=eu&currency=usd&predict_days=5`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nExample 1 - \n`/api/get_forecast?country_code=bitcoin&currency=btc`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nSince 11 April 2022 you can request `/api/get_forecast?country_code=bitcoin&currency=btc&predict_days=10`\nThis will provide prediction for 10 days. `&predict_days` accepting integer from 2 to 10\n\nExample 2 - If you want to get forecast for Canadian Dollar in USD:\n`/api/get_forecast?country_code=eu&currency=usd&cross_currency=cad`\nyou will get response:\n\"`message`\":\".......... price for 1 CAD in US DOLLAR.... \"\n\"`forecast_rate`\": 0.7896,  -->> means that  forecast for 1 CAD is equal to 0.7896 USD\n\"`forecast_date`\": \"2021-11-21\", \n...\n\nExample 3 - If you want to get forecast of exchange rate for US Dollar in EU (European Union)  provided by European Central Bank:\n`/api/get_forecast?country_code=eu&currency=usd`\nyou get:\n\"`forecast_rate`\": 1.1254,  -->>which means 1 Euro = 1.1254 US Dollar\n\"`forecast_date`\": \"2021-11-21\",\n\nExample 4 - get  forecast and exhange rates for 1 USD provided by Moldavian Central Bank in Russian language:\n`/api/get_forecast?country_code=md&lang=ru&currency=eur&cross_currency=usd`\nInfo about lang= : `/api/info/languages`\nInfo about `cross_currency`= : `/api/info/currencies`",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "",
                        "default": "eu"
                    },
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "",
                        "default": "usd"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "predict_days",
                        "type": "STRING",
                        "description": "",
                        "default": "5"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a cryptocurrency trader and I need to know the exchange rate forecast for Bitcoin in USD. Can you provide me with the forecasted rate for the next 7 days? Additionally, I would like to get the list of all available banks in my country.",
        "relevant APIs": [
            [
                "Forecast crypto and fiat currency exchange rates",
                "Get Exchange Rates Forecast"
            ],
            [
                "Forecast crypto and fiat currency exchange rates",
                "Get banks in a country"
            ]
        ],
        "query_id": 79053
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "pizzaallapala",
                "api_name": "Get Productos",
                "api_description": "asd",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "mensaje": "str",
                    "ok": "bool",
                    "productos": [
                        {
                            "id": "int",
                            "nombre": "str",
                            "descripcion": "str",
                            "linkImagen": "str",
                            "precio": "str",
                            "tasaIva": "str",
                            "vendible": "int",
                            "borrado": "NoneType",
                            "stockRequerido": "NoneType",
                            "created_at": "str",
                            "_list_length": 21
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "pizzaallapala",
                "api_name": "Get Producto Promo",
                "api_description": "Adsa",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ok": "bool",
                    "mensaje": "str",
                    "promo": [
                        {
                            "id": "int",
                            "nombrePromo": "str",
                            "descripcion": "str",
                            "precioFinal": "str",
                            "porcentajeDescuento": "NoneType",
                            "cantidadDescuento": "NoneType",
                            "sucursal": "int",
                            "linkImagen": "str",
                            "fechaInicio": "str",
                            "fechaCaducidad": "str",
                            "borrado": "int",
                            "tags": [
                                "list of str with length 1"
                            ],
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "pizzaallapala",
                "api_name": "Usuarios",
                "api_description": "Hsjssj",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "alias": "str",
                            "dni": "str",
                            "nombre": "str",
                            "apellido": "str",
                            "categoriaIva": "str",
                            "domicilio": "empty list",
                            "email": "str",
                            "id": "str",
                            "_list_length": 35
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "pizzaallapala",
                "api_name": "Get Tags",
                "api_description": "Adss",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ok": "bool",
                    "mensaje": "str",
                    "data": [
                        {
                            "id": "int",
                            "entidad": "NoneType",
                            "idEntidad": "NoneType",
                            "nombre": "str",
                            "sucursal": "int",
                            "cantidad": "NoneType",
                            "_list_length": 10
                        }
                    ]
                }
            }
        ],
        "query": "I am planning a family gathering and I need some pizza recommendations. Please suggest some pizza options from the 'Get Productos' API. Additionally, find any available promo pizzas using the 'Get Producto Promo' API. Lastly, check if there are any special tags associated with the pizzas using the 'Get Tags' API.",
        "relevant APIs": [
            [
                "pizzaallapala",
                "Get Productos"
            ],
            [
                "pizzaallapala",
                "Get Producto Promo"
            ],
            [
                "pizzaallapala",
                "Get Tags"
            ]
        ],
        "query_id": 32652
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Get Promo Codes",
                "api_name": "Get Stores",
                "api_description": "Get Stores",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Get Promo Codes",
                "api_name": "Get Coupons",
                "api_description": "Get Coupons",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "",
                        "default": "update_time_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "store_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "request": {
                        "page": "str",
                        "store_id": "str",
                        "sort": "str",
                        "type": "str"
                    },
                    "time": "float",
                    "data": [
                        {
                            "id": "str",
                            "title": "str",
                            "description": "str",
                            "terms": "str",
                            "code": "str",
                            "url": "str",
                            "store_id": "str",
                            "language": "str",
                            "status": "str",
                            "add_time": "str",
                            "start_time": "str",
                            "end_time": "str",
                            "update_time": "str",
                            "_list_length": 98
                        }
                    ]
                }
            }
        ],
        "query": "My friends and I are organizing a group trip and we want to save money on accommodations. Can you help us find the best deals by providing a list of stores offering coupons for hotel bookings? Please include the store name, coupon code, and the expiration date for each coupon.",
        "relevant APIs": [
            [
                "Get Promo Codes",
                "Get Stores"
            ],
            [
                "Get Promo Codes",
                "Get Coupons"
            ]
        ],
        "query_id": 60255
    },
    {
        "api_list": [],
        "query": "Could you assist me in retrieving the data for my PLN postpaid account? The ID is '532411286263'. Also, I want to check the token details for my prepaid PLN account. The ID is '56213840202'.",
        "relevant APIs": [
            [
                "Cek ID PLN PASCA DAN PRA BAYAR",
                "Get Data ID Pelanggan Tagihan PLN / PASCA BAYAR"
            ],
            [
                "Cek ID PLN PASCA DAN PRA BAYAR",
                "GET Data ID Pelanggan Token PLN"
            ]
        ],
        "query_id": 68335
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 Inplay Filter",
                "api_description": "bet365 inplay filter",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "league_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sport_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "skip_esports",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "pager": {
                        "page": "int",
                        "per_page": "int",
                        "total": "int"
                    },
                    "results": [
                        {
                            "id": "str",
                            "sport_id": "str",
                            "time": "str",
                            "time_status": "str",
                            "league": {
                                "id": "str",
                                "name": "str"
                            },
                            "home": {
                                "id": "str",
                                "name": "str"
                            },
                            "away": {
                                "id": "str",
                                "name": "str"
                            },
                            "ss": "str",
                            "our_event_id": "str",
                            "r_id": "str",
                            "ev_id": "str",
                            "updated_at": "str",
                            "_list_length": 54
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 InPlay",
                "api_description": "bet365 inplay data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "results": [
                        "list of list with length 1"
                    ],
                    "stats": {
                        "update_at": "str",
                        "update_dt": "str"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 InPlay Event",
                "api_description": "inplay event with all scores/stats/markets",
                "required_parameters": [
                    {
                        "name": "FI",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "stats",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lineup",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "error": "str",
                    "error_detail": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 Upcoming Events",
                "api_description": "get bet365 fixtures",
                "required_parameters": [
                    {
                        "name": "sport_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "day",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "league_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "error": "str",
                    "error_detail": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 PreMatch Odds",
                "api_description": "prematch odds",
                "required_parameters": [
                    {
                        "name": "FI",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "error": "str",
                    "error_detail": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 Result",
                "api_description": "to view bet365 event result",
                "required_parameters": [
                    {
                        "name": "event_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "results": [
                        {
                            "id": "str",
                            "success": "int",
                            "_list_length": 1
                        }
                    ]
                }
            }
        ],
        "query": "I am planning to watch a live sports event. Can you provide me with a list of upcoming fixtures for a specific sport? Additionally, I would like to know the in-play events and their scores, stats, and markets. Finally, can you give me the pre-match odds for a particular event?",
        "relevant APIs": [
            [
                "BetsAPI",
                "Bet365 Upcoming Events"
            ],
            [
                "BetsAPI",
                "Bet365 InPlay"
            ],
            [
                "BetsAPI",
                "Bet365 InPlay Event"
            ],
            [
                "BetsAPI",
                "Bet365 PreMatch Odds"
            ]
        ],
        "query_id": 44482
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "House Plants",
                "api_name": "Get By Climate",
                "api_description": "Get plants by climate of their natural habitat.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "climate",
                        "type": "string",
                        "description": "",
                        "default": "Tropical"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "latin": "str",
                    "family": "str",
                    "common": [
                        "list of str with length 1"
                    ],
                    "category": "str",
                    "origin": "str",
                    "climate": "str",
                    "tempmax": {
                        "celsius": "int",
                        "fahrenheit": "float"
                    },
                    "tempmin": {
                        "celsius": "int",
                        "fahrenheit": "float"
                    },
                    "ideallight": "str",
                    "toleratedlight": "str",
                    "watering": "str",
                    "insects": [
                        "list of str with length 3"
                    ],
                    "diseases": "str",
                    "use": [
                        "list of str with length 3"
                    ]
                }
            },
            {
                "category_name": "Database",
                "tool_name": "House Plants",
                "api_name": "Get By Origin",
                "api_description": "Get plants by their origin.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "origin",
                        "type": "string",
                        "description": "",
                        "default": "Asia"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "latin": "str",
                    "family": "str",
                    "common": [
                        "list of str with length 1"
                    ],
                    "category": "str",
                    "origin": "str",
                    "climate": "str",
                    "tempmax": {
                        "celsius": "int",
                        "fahrenheit": "float"
                    },
                    "tempmin": {
                        "celsius": "int",
                        "fahrenheit": "int"
                    },
                    "ideallight": "str",
                    "toleratedlight": "str",
                    "watering": "str",
                    "insects": "str",
                    "diseases": "str",
                    "use": [
                        "list of str with length 2"
                    ]
                }
            },
            {
                "category_name": "Database",
                "tool_name": "House Plants",
                "api_name": "Get By Category",
                "api_description": "Get plants by their category.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "string",
                        "description": "",
                        "default": "flower"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "latin": "str",
                    "family": "str",
                    "common": [
                        "list of str with length 1"
                    ],
                    "category": "str",
                    "origin": "str",
                    "climate": "str",
                    "tempmax": {
                        "celsius": "int",
                        "fahrenheit": "int"
                    },
                    "tempmin": {
                        "celsius": "int",
                        "fahrenheit": "int"
                    },
                    "ideallight": "str",
                    "toleratedlight": "str",
                    "watering": "str",
                    "insects": [
                        "list of str with length 3"
                    ],
                    "diseases": "str",
                    "use": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "House Plants",
                "api_name": "Get By Latin Name",
                "api_description": "Retrieves all plants that match the provided Latin plant name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "latin-name",
                        "type": "string",
                        "description": "The parameter accepts only [a-zA-Z] characters.",
                        "default": "philodendron"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "latin": "str",
                    "family": "str",
                    "common": [
                        "list of str with length 2"
                    ],
                    "category": "str",
                    "origin": "str",
                    "climate": "str",
                    "tempmax": {
                        "celsius": "int",
                        "fahrenheit": "float"
                    },
                    "tempmin": {
                        "celsius": "int",
                        "fahrenheit": "float"
                    },
                    "ideallight": "str",
                    "toleratedlight": "str",
                    "watering": "str",
                    "insects": "str",
                    "diseases": "str",
                    "use": [
                        "list of str with length 2"
                    ]
                }
            },
            {
                "category_name": "Database",
                "tool_name": "House Plants",
                "api_name": "Get All Plants",
                "api_description": "This endpoint retrieves all the plants.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "latin": "str",
                    "family": "str",
                    "common": [
                        "list of str with length 1"
                    ],
                    "category": "str",
                    "origin": "str",
                    "climate": "str",
                    "tempmax": {
                        "celsius": "int",
                        "fahrenheit": "float"
                    },
                    "tempmin": {
                        "celsius": "int",
                        "fahrenheit": "float"
                    },
                    "ideallight": "str",
                    "toleratedlight": "str",
                    "watering": "str",
                    "insects": [
                        "list of str with length 3"
                    ],
                    "diseases": "str",
                    "use": [
                        "list of str with length 3"
                    ]
                }
            },
            {
                "category_name": "Database",
                "tool_name": "House Plants",
                "api_name": "Get By Common Name",
                "api_description": "Retrieves all plants that match a given common plant name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "common-name",
                        "type": "string",
                        "description": "",
                        "default": "coralberry"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "latin": "str",
                    "family": "str",
                    "common": [
                        "list of str with length 1"
                    ],
                    "category": "str",
                    "origin": "str",
                    "climate": "str",
                    "tempmax": {
                        "celsius": "int",
                        "fahrenheit": "int"
                    },
                    "tempmin": {
                        "celsius": "int",
                        "fahrenheit": "float"
                    },
                    "ideallight": "str",
                    "toleratedlight": "str",
                    "watering": "str",
                    "insects": "str",
                    "diseases": "str",
                    "use": [
                        "list of str with length 3"
                    ]
                }
            }
        ],
        "query": "I'm planning to surprise my mom with a house plant for her birthday. Can you suggest a flowering plant that can add a pop of color to her living room? It would be helpful if you could provide information about its ideal light conditions and any common diseases it might be prone to.",
        "relevant APIs": [
            [
                "House Plants",
                "Get By Category"
            ],
            [
                "House Plants",
                "Get All Plants"
            ]
        ],
        "query_id": 3723
    },
    {
        "api_list": [
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "erzeugung",
                "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Verbraucher sein d\u00fcrfen, die  von einer Erzeugungsanlage von angegebener Postleitzahl ihren Strom beziehen sollen.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/erzeugung?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Verbraucher sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn dessen Netzeinspeisung (Erzeuger) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "Postleitzahl der Erzeugungsanlage, f\u00fcr die eine Liste der Postleitzahlen von Verbrauchergebiete einers regionalen \u00d6kostrombezugs erstellt werden soll.",
                        "default": "01609"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "Strommix",
                "api_description": "Resultierender Strommix nach Anwendung der regionalen \u00d6kostromerzeugung im Gebiet einer Postleitzahl.",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "",
                        "default": "69168"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "entnahme",
                "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Erzeugungsanlagen sein d\u00fcrfen, die  f\u00fcr einen Verbraucher (Entnahme) an gegebener Postleitzahl ist.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/entnahme?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Erzeugungsanlage sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn die Netzentnahme (Verbrauch) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "Postleitzahl des Verbrauchers (Entnahmestelle)",
                        "default": "09669"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My friends and I are interested in understanding the relationship between power generation and consumption in different zip codes. Can you provide us with a list of zip codes where a generation facility can supply power to consumers located in a specific zip code? For example, if we provide the zip code 88888, we would like to receive a list of zip codes where a generation facility can supply power to consumers in the zip code 88888.",
        "relevant APIs": [
            [
                "Regionalkonzept Strom Herkunft",
                "erzeugung"
            ],
            [
                "Regionalkonzept Strom Herkunft",
                "entnahme"
            ]
        ],
        "query_id": 16196
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Nowcast",
                "api_description": "3-hour forecast in 15-minute time steps.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "relHumidity": "int",
                            "dewPoint": "int",
                            "windDir": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "windDirString": "str",
                            "precipProb": "int",
                            "snowRate": "int",
                            "precipRate": "int",
                            "cloudiness": "int",
                            "thunderProb": "int",
                            "uvIndex": "int",
                            "pressure": "float",
                            "precipType": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Three-hourly",
                "api_description": "A longer three-hourly forecast up to 14 days.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "history",
                        "type": "BOOLEAN",
                        "description": "Whether to include 24 hours of past data.",
                        "default": "0"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "relHumidity": "int",
                            "dewPoint": "int",
                            "windDir": "int",
                            "windDirString": "str",
                            "precipProb": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "cloudiness": "int",
                            "thunderProb": "int",
                            "uvIndex": "int",
                            "pressure": "float",
                            "visibility": "int",
                            "solarRadiation": "int",
                            "precipType": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Daily",
                "api_description": "Daily forecast.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "date": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "maxTemp": "int",
                            "minTemp": "int",
                            "maxFeelsLikeTemp": "int",
                            "minFeelsLikeTemp": "int",
                            "maxRelHumidity": "int",
                            "minRelHumidity": "int",
                            "maxDewPoint": "int",
                            "minDewPoint": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "maxWindSpeed": "int",
                            "windDir": "int",
                            "maxWindGust": "int",
                            "precipProb": "int",
                            "cloudiness": "int",
                            "sunrise": "str",
                            "sunset": "str",
                            "sunriseEpoch": "int",
                            "sunsetEpoch": "int",
                            "moonrise": "str",
                            "moonset": "str",
                            "moonPhase": "int",
                            "uvIndex": "int",
                            "minVisibility": "int",
                            "pressure": "float",
                            "confidence": "str",
                            "solarRadiationSum": "int",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Location info",
                "api_description": "Metadata for location.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "101275339"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "country": "str",
                    "timezone": "str",
                    "language": "str",
                    "adminArea": "str",
                    "adminArea2": "NoneType",
                    "adminArea3": "NoneType",
                    "lon": "float",
                    "lat": "float"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Current",
                "api_description": "Current weather estimate for location.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language (ISO 639-1 codes). Options: de, en, es, fr, it, pl, ru, fi, sv, nl, ko, pt, th, tr, zh, zh_TW (Chinese in Taiwan), zh_CN (Chinese in China). (default en)",
                        "default": "en"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "current": {
                        "time": "str",
                        "symbol": "str",
                        "symbolPhrase": "str",
                        "temperature": "int",
                        "feelsLikeTemp": "int",
                        "relHumidity": "int",
                        "dewPoint": "int",
                        "windSpeed": "int",
                        "windDir": "int",
                        "windDirString": "str",
                        "windGust": "int",
                        "precipProb": "int",
                        "precipRate": "int",
                        "cloudiness": "int",
                        "thunderProb": "int",
                        "uvIndex": "int",
                        "pressure": "float",
                        "visibility": "int"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Latest observations",
                "api_description": "Observations from nearby representative weather stations.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "observations": [
                        {
                            "station": "str",
                            "distance": "str",
                            "time": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "symbol": "str",
                            "windDirString": "str",
                            "windDir": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "pressure": "int",
                            "relHumidity": "int",
                            "visibility": "int",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Location search",
                "api_description": "Search for locations by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "string",
                        "description": "",
                        "default": "mumbai"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "in"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "locations": [
                        {
                            "id": "int",
                            "name": "str",
                            "country": "str",
                            "timezone": "str",
                            "language": "str",
                            "adminArea": "str",
                            "adminArea2": "NoneType",
                            "adminArea3": "NoneType",
                            "lon": "float",
                            "lat": "float",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Hourly",
                "api_description": "Hourly forecast.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "history",
                        "type": "BOOLEAN",
                        "description": "Whether to include 24 hours of past data.",
                        "default": "0"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "relHumidity": "int",
                            "dewPoint": "int",
                            "windDir": "int",
                            "windDirString": "str",
                            "precipProb": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "cloudiness": "int",
                            "thunderProb": "int",
                            "uvIndex": "int",
                            "pressure": "float",
                            "visibility": "int",
                            "solarRadiation": "int",
                            "precipType": "str",
                            "_list_length": 8
                        }
                    ]
                }
            }
        ],
        "query": "I'm a photographer looking for the perfect sunset location. Can you suggest some places with stunning sunsets and provide me with the daily weather forecast for those locations? I also need information on the best camera settings for capturing sunsets.",
        "relevant APIs": [
            [
                "Foreca Weather",
                "Daily"
            ],
            [
                "Foreca Weather",
                "Location search"
            ]
        ],
        "query_id": 21776
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "Get Tide Extreme Data",
                "api_description": "**Stormglass Tide Extreme Data**\n\nRetrieve information about high and low tide for a single coordinate. If nothing is specified, the returned values will be in relative to Mean Sea Level - MSL.",
                "required_parameters": [
                    {
                        "name": "lng",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "apiKey",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lat",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "endDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "startDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "datum",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "Get Tide Sea-level Data",
                "api_description": "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL.",
                "required_parameters": [
                    {
                        "name": "params",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "apiKey",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lat",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lng",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "datum",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "startDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "GET Astronomy Data",
                "api_description": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lng",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "startDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "Get Tide Station Area Data",
                "api_description": "**Stormglass Tide Station Area Data**\n\nThe Tide Stations Area Request will list all available tide stations within a defined geographic area.\n\nTop right and bottom left coordinate draws a box with the selected coordinates. \nAll stations with in the area of this box are queried.",
                "required_parameters": [
                    {
                        "name": "botLng",
                        "type": "string",
                        "description": "",
                        "default": "Bottom right Lng"
                    },
                    {
                        "name": "apiKey",
                        "type": "string",
                        "description": "",
                        "default": "Stormglass API Key"
                    },
                    {
                        "name": "topLng",
                        "type": "string",
                        "description": "",
                        "default": "Top left Lng"
                    },
                    {
                        "name": "topLat",
                        "type": "string",
                        "description": "",
                        "default": "Top left Lat"
                    },
                    {
                        "name": "botLat",
                        "type": "string",
                        "description": "",
                        "default": "Bottom right  Lat"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm a photographer and want to capture the beauty of the beach during sunrise and sunset. Can you provide me with the astronomy data for a specific location? It would be great to know the sunrise and sunset times. Additionally, I would like to retrieve the high and low tide information for that location.",
        "relevant APIs": [
            [
                "Stormglass Complete",
                "GET Astronomy Data"
            ],
            [
                "Stormglass Complete",
                "Get Tide Extreme Data"
            ]
        ],
        "query_id": 38494
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Property Details",
                "api_description": "Get property details by  property ID  or by Address",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "property_id",
                        "type": "STRING",
                        "description": "",
                        "default": "1497548641"
                    },
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"home\": {\"advertisers\": [{\"builder\": \"NoneType\", \"office\": {\"phones\": [{\"ext\": \"str\", \"number\": \"str\", \"primary\": \"bool\", \"trackable\": \"NoneType\", \"type\": \"str\", \"_list_length\": 2}]}, \"state_license\": \"str\", \"team\": \"NoneType\", \"team_name\": \"NoneType\", \"type\": \"str\", \"_list_length\": 1}], \"branding\": [{\"accent_color\": \"NoneType\", \"name\": \"str\", \"phone\": \"NoneType\", \"photo\": \"NoneType\", \"slogan\": \"NoneType\", \"type\": \"str\", \"_list_length\": 2}], \"builder\": \"NoneType\", \"coming_soon_date\": \"NoneType\", \"community\": \"NoneType\", \"consumer_advertisers\": [{\"address\": \"NoneType\", \"advertiser_id\": \"str\", \"agent_id\": \"str\", \"broker_id\": \"NoneType\", \"contact_name\": \"NoneType\", \"hours\": \"NoneType\", \"href\": \"str\", \"name\": \"str\", \"phone\": \"NoneType\", \"photo\": {\"description\": \"NoneType\", \"href\": \"NoneType\", \"type\": \"NoneType\"}, \"show_realtor_logo\": \"bool\", \"slogan\": \"NoneType\", \"type\": \"str\", \"_list_length\": 2}], \"description\": {\"baths\": \"int\", \"baths_1qtr\": \"NoneType\", \"baths_3qtr\": \"NoneType\", \"baths_"
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search for region",
                "api_description": "Get location suggestions by keyword",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": "str",
                    "_score": "float",
                    "area_type": "str",
                    "centroid": {
                        "lat": "float",
                        "lon": "float"
                    },
                    "city": "str",
                    "counties": [
                        {
                            "fips": "str",
                            "name": "str",
                            "state_code": "str",
                            "_list_length": 1
                        }
                    ],
                    "country": "str",
                    "county_needed_for_uniq": "bool",
                    "geo_id": "str",
                    "slug_id": "str",
                    "state_code": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search agents",
                "api_description": "Search agents by city/zip",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "price",
                        "type": "STRING",
                        "description": "Price range\nexample for range between 50k to 2m : \n50000_2000000",
                        "default": ""
                    },
                    {
                        "name": "agentname",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "[afrikaans\nalbanian\narabic\narmenian\nasl\nbengali\nbosnian\nbulgarian\nchinese\ncroatian\nczech\nDanish\ndutch\nEstonian\nfarsi\nfilipino\nfinnish\nfrench\ngaelic\ngeorgian\ngerman\ngreek\nhawaiian\nhebrew\nhindi\nhungarian\nindonesian\nitalian\njapanese\nkorean\nlao\nlatvian\nlithuanian\nmalay\nmandarin\nnepali\nnorwegian\npolish\nportuguese\npunjabi\nromanian\nrussian\nserbian\nsindhi\nsinghalese\nslovenian\nspanish\nswahili\nswedish\ntagalog\ntaiwanese\nthai\nturkish\nukrainian\nurdu\nvietnamese\nyugoslavian]",
                        "default": ""
                    },
                    {
                        "name": "photo",
                        "type": "BOOLEAN",
                        "description": "If the agent has a photo or not \n1 if yes\n0 if no",
                        "default": "1"
                    },
                    {
                        "name": "rating",
                        "type": "NUMBER",
                        "description": "Rating (between 1 and 5)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"agents\": [{\"address\": {\"city\": \"str\", \"country\": \"str\", \"line\": \"str\", \"line2\": \"str\", \"postal_code\": \"str\", \"state\": \"str\", \"state_code\": \"str\"}, \"advertiser_id\": \"int\", \"agent_rating\": \"int\", \"agent_team_details\": {\"is_team_member\": \"bool\"}, \"agent_type\": [\"list of str with length 2\"], \"areas_of_business\": \"empty list\", \"background_photo\": {\"href\": \"str\"}, \"broker\": {\"accent_color\": \"str\", \"designations\": \"empty list\", \"fulfillment_id\": \"int\", \"name\": \"str\", \"photo\": {\"href\": \"str\"}, \"video\": \"str\"}, \"data_flags\": \"NoneType\", \"description\": \"str\", \"designations\": \"empty list\", \"feed_licenses\": [{\"country\": \"str\", \"license_number\": \"str\", \"state_code\": \"str\", \"_list_length\": 1}], \"first_month\": \"int\", \"first_name\": \"str\", \"first_year\": \"int\", \"for_sale_price\": {\"count\": \"int\", \"last_listing_date\": \"str\", \"max\": \"int\", \"min\": \"int\"}, \"full_name\": \"str\", \"has_photo\": \"bool\", \"href\": \"str\", \"id\": \"str\", \"is_realtor\": \"bool\", \"lang\": {\"srp_content\": {\"Recommendations\": \"str\", \"active_ag"
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Agent details",
                "api_description": "Get agent details by id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "569e892a89a68901006bdb99"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"agentDetails\": {\"address\": {\"city\": \"str\", \"country\": \"str\", \"line\": \"str\", \"line2\": \"str\", \"postal_code\": \"str\", \"state\": \"str\", \"state_code\": \"str\"}, \"advertiser_id\": \"int\", \"agent_rating\": \"int\", \"agent_type\": [\"list of str with length 2\"], \"background_photo\": {\"href\": \"str\"}, \"broker\": {\"accent_color\": \"str\", \"designations\": \"empty list\", \"fulfillment_id\": \"int\", \"name\": \"str\", \"photo\": {\"href\": \"str\"}, \"video\": \"str\"}, \"description\": \"str\", \"designations\": \"empty list\", \"feed_licenses\": [{\"country\": \"str\", \"license_number\": \"str\", \"state_code\": \"str\", \"_list_length\": 1}], \"first_month\": \"int\", \"first_name\": \"str\", \"first_year\": \"int\", \"full_name\": \"str\", \"has_photo\": \"bool\", \"href\": \"str\", \"id\": \"str\", \"is_realtor\": \"bool\", \"languages\": \"empty list\", \"last_name\": \"str\", \"last_updated\": \"str\", \"marketing_area_cities\": [{\"city_state\": \"str\", \"name\": \"str\", \"state_code\": \"str\", \"_list_length\": 3}], \"mls\": [{\"abbreviation\": \"str\", \"license_number\": \"str\", \"member\": {\"id\": \"str\"}, \"p"
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search properties for sale",
                "api_description": "Search properties for sale by Address, School, City, Zip or Neighborhood. Filter the results using different parameter filters",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "beds-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "baths-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "year_built-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "year_built-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_date-min",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "open_house-max",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "has_tour",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_price-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "hoa_fee_optional-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_date-max",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_price-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "baths-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "open_house-min",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Property type comma-separated or empty for all types:\nsingle_family\nmulti_family\nland\ntownhomes\nduplex_triplex\nmobile\ncondos\ncondo_townhome_rowhome_coop\ncondo_townhome\nfarm\n",
                        "default": "single_family,condos"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort properties by :\nNewest_Listing \nHighest_Price \nLowest_Price\nOpen_House_Date\nRecently-Reduced\nLargest_Sqft\nLot_Size",
                        "default": ""
                    },
                    {
                        "name": "beds-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lot_sqft-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lot_sqft-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "hoa_fee_optional-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sqft-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sqft-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Realtor",
                "api_name": "Search properties for rent",
                "api_description": "Search properties for rent by location",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "santa monica"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "move_in_date-max",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sqft-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Property type comma-separated or empty for all types:\nsingle_family\napartment\ntownhomes\ncondo_townhome_rowhome_coop\nduplex_triplex\ncondos\ncondo_townhome_rowhome_coop\ncondo_townhome\n",
                        "default": ""
                    },
                    {
                        "name": "sqft-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_price-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beds-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort properties by :\nRecently_Added\nHighest_Price \nLowest_Price",
                        "default": ""
                    },
                    {
                        "name": "threeDTours",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "baths-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "list_price-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "beds-max",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "baths-min",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "noFees",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "dogs",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "move_in_date-min",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "cats",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            }
        ],
        "query": "I'm planning a family vacation to Santa Monica and I need some assistance. Can you help me find available rental properties in this area? I would like to know the address, monthly rent, number of bedrooms and bathrooms, and any additional details for each property. Also, please provide me with the contact information of agents who specialize in rental properties in Santa Monica.",
        "relevant APIs": [
            [
                "Realtor",
                "Search properties for rent"
            ],
            [
                "Realtor",
                "Search agents"
            ]
        ],
        "query_id": 42638
    },
    {
        "api_list": [],
        "query": "I want to compare the performance of Apple's stock with its peers. Can you give me the list of company peers and the average metrics and ratios of Apple's peers? Additionally, I need the discounted cash flow models for Apple's stock.",
        "relevant APIs": [
            [
                "MarketCI Analytics",
                "Peers"
            ],
            [
                "MarketCI Analytics",
                "Peer Metrics Average"
            ],
            [
                "MarketCI Analytics",
                "Peer Ratio Averages"
            ],
            [
                "MarketCI Analytics",
                "Discounted Cash Flow Models (DCF's)"
            ]
        ],
        "query_id": 59954
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Quarterly Cash Flow",
                "api_description": "Get Company Quarterly Cash Flow",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "",
                        "default": "quarterly"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"netIncomeLoss\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"totalDepreciationAndAmortization\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"otherNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"totalNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"changeInAccountsReceivable\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"changeInInventories\": {\"isMain\": \"b"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Quarterly Balance Sheet",
                "api_description": "Get Company Quarterly Balance Sheet",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "",
                        "default": "quarterly"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"cashOnHand\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"receivables\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"inventory\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"prePaidExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"NoneType\", \"fiveYrChage\": \"NoneType\", \"tenYrChange\": \"NoneType\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"otherCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"totalCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiv"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Quarterly Income Statement",
                "api_description": "Get Company Income Statement",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "",
                        "default": "quarterly"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"revenue\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"costOfGoodsSold\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"grossProfit\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"researchAndDevelopmentExpenses\": \"NoneType\", \"sgAndAExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"otherOperatingIncomeOrExpenses\": \"NoneType\", \"operatingExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_l"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Quarterly  Ratios",
                "api_description": "Get Company Ratios Latest Data",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "",
                        "default": "quarterly"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"currentRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"longTermDebtCapital\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"debtEquityRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"grossMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"operatingMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"EBITMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"f"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Ratios",
                "api_description": "Get Company ratios latest data",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"currentRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"longTermDebtCapital\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"debtEquityRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"grossMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"operatingMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"EBITMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"f"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Cash Flow",
                "api_description": "Get company cash flow latest data.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"netIncomeLoss\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"totalDepreciationAndAmortization\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"otherNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"totalNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"changeInAccountsReceivable\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"changeInInventories\": {\"isMain\": \"b"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Balance Sheet",
                "api_description": "Get Company latest data for balance sheet",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"cashOnHand\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"receivables\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"inventory\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"prePaidExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"NoneType\", \"fiveYrChage\": \"NoneType\", \"tenYrChange\": \"int\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"otherCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"NoneType\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"totalCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveY"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get Company Income Statement",
                "api_description": "Get Company Income Statement",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "googl"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"revenue\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"costOfGoodsSold\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"grossProfit\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"researchAndDevelopmentExpenses\": \"NoneType\", \"sgAndAExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"otherOperatingIncomeOrExpenses\": \"NoneType\", \"operatingExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_l"
            },
            {
                "category_name": "Finance",
                "tool_name": "Finance Data",
                "api_name": "Get All Symbols",
                "api_description": "Get all available symbols in API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": [
                        "list of str with length 6387"
                    ]
                }
            }
        ],
        "query": "My friend is interested in investing in stocks and wants to know more about Google. Can you fetch the quarterly cash flow, balance sheet, income statement, and ratios for Google? It would be great to have data on net income, total assets, revenue, and current ratio to assess the company's financial health.",
        "relevant APIs": [
            [
                "Finance Data",
                "Get Company Quarterly Cash Flow"
            ],
            [
                "Finance Data",
                "Get Company Quarterly Balance Sheet"
            ],
            [
                "Finance Data",
                "Get Company Quarterly Income Statement"
            ]
        ],
        "query_id": 70610
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "asdfadsf",
                "api_name": "Get Products in Category",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "products": "empty list",
                    "summary": {
                        "count": "int"
                    }
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "asdfadsf",
                "api_name": "Get Order",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "asdfadsf",
                "api_name": "Get Products",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "products": [
                        {
                            "id": "int",
                            "name": "str",
                            "category": "NoneType",
                            "_list_length": 10
                        }
                    ],
                    "summary": {
                        "count": "int"
                    }
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "asdfadsf",
                "api_name": "Get Categories",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "categories": [
                        {
                            "category": "NoneType",
                            "_list_length": 872
                        }
                    ]
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "asdfadsf",
                "api_name": "Get Product",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            }
        ],
        "query": "I want to know the list of categories available in the advertising tool. Also, get the product details for the products in the 'Electronics' category.",
        "relevant APIs": [
            [
                "asdfadsf",
                "Get Categories"
            ],
            [
                "asdfadsf",
                "Get Products in Category"
            ]
        ],
        "query_id": 13095
    }
]