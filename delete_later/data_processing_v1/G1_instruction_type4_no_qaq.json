[
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "game",
                "api_description": "Query Baseball games, teams, scores etc...",
                "required_parameters": [
                    {
                        "name": "gamePk",
                        "type": "STRING",
                        "description": "Enter a game ID - can be found in the schedule endpoint",
                        "default": "633282"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"meta\": {\"version\": \"str\", \"status\": \"int\"}, \"results\": {\"game\": {\"pk\": \"int\", \"type\": \"str\", \"doubleHeader\": \"str\", \"id\": \"str\", \"gamedayType\": \"str\", \"tiebreaker\": \"str\", \"gameNumber\": \"int\", \"calendarEventID\": \"str\", \"season\": \"str\", \"seasonDisplay\": \"str\"}, \"datetime\": {\"dateTime\": \"str\", \"originalDate\": \"str\", \"officialDate\": \"str\", \"dayNight\": \"str\", \"time\": \"str\", \"ampm\": \"str\"}, \"status\": {\"abstractGameState\": \"str\", \"codedGameState\": \"str\", \"detailedState\": \"str\", \"statusCode\": \"str\", \"startTimeTBD\": \"bool\", \"abstractGameCode\": \"str\"}, \"teams\": {\"away\": {\"springLeague\": {\"id\": \"int\", \"name\": \"str\", \"abbreviation\": \"str\"}, \"allStarStatus\": \"str\", \"id\": \"int\", \"name\": \"str\", \"season\": \"int\", \"venue\": {\"id\": \"int\", \"name\": \"str\"}, \"springVenue\": {\"id\": \"int\"}, \"teamCode\": \"str\", \"fileCode\": \"str\", \"abbreviation\": \"str\", \"teamName\": \"str\", \"locationName\": \"str\", \"firstYearOfPlay\": \"str\", \"league\": {\"id\": \"int\", \"name\": \"str\"}, \"division\": {\"id\": \"int\", \"name\": \"str\"}, \"sport\": {\""
            },
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "game-playbyplay/{gamePk}",
                "api_description": "Query Baseball games, teams, scores etc...",
                "required_parameters": [
                    {
                        "name": "gamePk",
                        "type": "STRING",
                        "description": "Enter a game ID - can be found in the schedule endpoint",
                        "default": "633282"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"meta\": {\"version\": \"str\", \"status\": \"int\"}, \"results\": {\"allPlays\": [{\"result\": {\"type\": \"str\", \"event\": \"str\", \"eventType\": \"str\", \"description\": \"str\", \"rbi\": \"int\", \"awayScore\": \"int\", \"homeScore\": \"int\", \"isOut\": \"bool\"}, \"about\": {\"atBatIndex\": \"int\", \"halfInning\": \"str\", \"isTopInning\": \"bool\", \"inning\": \"int\", \"startTime\": \"str\", \"endTime\": \"str\", \"isComplete\": \"bool\", \"isScoringPlay\": \"bool\", \"hasReview\": \"bool\", \"hasOut\": \"bool\", \"captivatingIndex\": \"int\"}, \"count\": {\"balls\": \"int\", \"strikes\": \"int\", \"outs\": \"int\"}, \"matchup\": {\"batter\": {\"id\": \"int\", \"fullName\": \"str\"}, \"batSide\": {\"code\": \"str\", \"description\": \"str\"}, \"pitcher\": {\"id\": \"int\", \"fullName\": \"str\"}, \"pitchHand\": {\"code\": \"str\", \"description\": \"str\"}, \"batterHotColdZones\": \"empty list\", \"pitcherHotColdZones\": \"empty list\", \"splits\": {\"batter\": \"str\", \"pitcher\": \"str\", \"menOnBase\": \"str\"}}, \"pitchIndex\": {\"1\": \"int\"}, \"actionIndex\": {\"1\": \"int\", \"2\": \"int\"}, \"runnerIndex\": \"empty list\", \"runners\": [{\"movement\": {"
            },
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "game-matrix/{gamePk}",
                "api_description": "Query Baseball scores, stats, betting information etc...",
                "required_parameters": [
                    {
                        "name": "gamePk",
                        "type": "STRING",
                        "description": "Enter a game ID - can be found in the schedule endpoint",
                        "default": "633282"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"meta\": {\"version\": \"str\", \"status\": \"int\"}, \"results\": {\"game\": {\"gamePk\": \"int\", \"gameType\": \"str\", \"season\": \"str\", \"gameDate\": \"str\", \"officialDate\": \"str\", \"status\": {\"abstractGameState\": \"str\", \"codedGameState\": \"str\", \"detailedState\": \"str\", \"statusCode\": \"str\", \"startTimeTBD\": \"bool\", \"abstractGameCode\": \"str\"}, \"teams\": {\"away\": {\"leagueRecord\": {\"wins\": \"int\", \"losses\": \"int\", \"pct\": \"str\"}, \"score\": \"int\", \"team\": {\"id\": \"int\", \"name\": \"str\"}, \"isWinner\": \"bool\", \"probablePitcher\": {\"id\": \"int\", \"fullName\": \"str\"}, \"splitSquad\": \"bool\", \"seriesNumber\": \"int\"}, \"home\": {\"leagueRecord\": {\"wins\": \"int\", \"losses\": \"int\", \"pct\": \"str\"}, \"score\": \"int\", \"team\": {\"id\": \"int\", \"name\": \"str\"}, \"isWinner\": \"bool\", \"probablePitcher\": {\"id\": \"int\", \"fullName\": \"str\"}, \"splitSquad\": \"bool\", \"seriesNumber\": \"int\"}}, \"venue\": {\"id\": \"int\", \"name\": \"str\"}, \"content\": \"empty list\", \"isTie\": \"bool\", \"gameNumber\": \"int\", \"publicFacing\": \"bool\", \"doubleHeader\": \"str\", \"gamedayType\": \"str\", \"ti"
            },
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "game-probability/{gamePk}",
                "api_description": "Query Baseball probability data.",
                "required_parameters": [
                    {
                        "name": "gamePk",
                        "type": "STRING",
                        "description": "Enter a game ID - can be found in the schedule endpoint",
                        "default": "633282"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"meta\": {\"version\": \"str\", \"status\": \"int\"}, \"results\": [{\"result\": {\"type\": \"str\", \"event\": \"str\", \"eventType\": \"str\", \"description\": \"str\", \"rbi\": \"int\", \"awayScore\": \"int\", \"homeScore\": \"int\", \"isOut\": \"bool\"}, \"about\": {\"atBatIndex\": \"int\", \"halfInning\": \"str\", \"isTopInning\": \"bool\", \"inning\": \"int\", \"startTime\": \"str\", \"endTime\": \"str\", \"isComplete\": \"bool\", \"isScoringPlay\": \"bool\", \"hasReview\": \"bool\", \"hasOut\": \"bool\", \"captivatingIndex\": \"int\"}, \"count\": {\"balls\": \"int\", \"strikes\": \"int\", \"outs\": \"int\"}, \"matchup\": {\"batter\": {\"id\": \"int\", \"fullName\": \"str\"}, \"batSide\": {\"code\": \"str\", \"description\": \"str\"}, \"pitcher\": {\"id\": \"int\", \"fullName\": \"str\"}, \"pitchHand\": {\"code\": \"str\", \"description\": \"str\"}, \"batterHotColdZones\": \"empty list\", \"pitcherHotColdZones\": \"empty list\", \"splits\": {\"batter\": \"str\", \"pitcher\": \"str\", \"menOnBase\": \"str\"}}, \"pitchIndex\": {\"1\": \"int\"}, \"actionIndex\": {\"1\": \"int\", \"2\": \"int\"}, \"runnerIndex\": \"empty list\", \"runners\": [{\"movement\": {\"originBase\":"
            },
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "game-boxscore/{gamePk}",
                "api_description": "Query Baseball games, teams, scores etc...",
                "required_parameters": [
                    {
                        "name": "gamePk",
                        "type": "STRING",
                        "description": "Enter a game ID - can be found in the schedule endpoint",
                        "default": "633282"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"meta\": {\"version\": \"str\", \"status\": \"int\"}, \"results\": {\"away\": {\"team\": {\"springLeague\": {\"id\": \"int\", \"name\": \"str\", \"abbreviation\": \"str\"}, \"allStarStatus\": \"str\", \"id\": \"int\", \"name\": \"str\", \"season\": \"int\", \"venue\": {\"id\": \"int\", \"name\": \"str\"}, \"springVenue\": {\"id\": \"int\"}, \"teamCode\": \"str\", \"fileCode\": \"str\", \"abbreviation\": \"str\", \"teamName\": \"str\", \"locationName\": \"str\", \"firstYearOfPlay\": \"str\", \"league\": {\"id\": \"int\", \"name\": \"str\"}, \"division\": {\"id\": \"int\", \"name\": \"str\"}, \"sport\": {\"id\": \"int\", \"name\": \"str\"}, \"shortName\": \"str\", \"record\": {\"gamesPlayed\": \"int\", \"wildCardGamesBack\": \"str\", \"leagueGamesBack\": \"str\", \"springLeagueGamesBack\": \"str\", \"sportGamesBack\": \"str\", \"divisionGamesBack\": \"str\", \"conferenceGamesBack\": \"str\", \"leagueRecord\": {\"wins\": \"int\", \"losses\": \"int\", \"ties\": \"int\", \"pct\": \"str\"}, \"records\": \"empty list\", \"divisionLeader\": \"bool\", \"wins\": \"int\", \"losses\": \"int\", \"winningPercentage\": \"str\"}, \"franchiseName\": \"str\", \"clubName\": \"str\", \"active\": \""
            },
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "schedule",
                "api_description": "Baseball schedule",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"meta\": {\"version\": \"str\", \"status\": \"int\"}, \"results\": [{\"gamePk\": \"int\", \"gameType\": \"str\", \"season\": \"str\", \"gameDate\": \"str\", \"officialDate\": \"str\", \"status\": {\"abstractGameState\": \"str\", \"codedGameState\": \"str\", \"detailedState\": \"str\", \"statusCode\": \"str\", \"startTimeTBD\": \"bool\", \"abstractGameCode\": \"str\"}, \"teams\": {\"away\": {\"leagueRecord\": {\"wins\": \"int\", \"losses\": \"int\", \"pct\": \"str\"}, \"score\": \"int\", \"team\": {\"id\": \"int\", \"name\": \"str\"}, \"splitSquad\": \"bool\", \"seriesNumber\": \"int\"}, \"home\": {\"leagueRecord\": {\"wins\": \"int\", \"losses\": \"int\", \"pct\": \"str\"}, \"score\": \"int\", \"team\": {\"id\": \"int\", \"name\": \"str\"}, \"splitSquad\": \"bool\", \"seriesNumber\": \"int\"}}, \"venue\": {\"id\": \"int\", \"name\": \"str\"}, \"content\": \"empty list\", \"gameNumber\": \"int\", \"publicFacing\": \"bool\", \"doubleHeader\": \"str\", \"gamedayType\": \"str\", \"tiebreaker\": \"str\", \"calendarEventID\": \"str\", \"seasonDisplay\": \"str\", \"dayNight\": \"str\", \"scheduledInnings\": \"int\", \"reverseHomeAwayStatus\": \"bool\", \"inningBreakLength\": \"in"
            },
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "teams-affiliates/{teamIds}",
                "api_description": "Query baseball team affiliates by ID",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "teamIds",
                        "type": "STRING",
                        "description": "Enter a team ID - can be found in the game's endpoint",
                        "default": "145"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {
                        "version": "str",
                        "status": "int"
                    },
                    "results": {
                        "teams": [
                            {
                                "springLeague": {
                                    "id": "int",
                                    "name": "str",
                                    "abbreviation": "str"
                                },
                                "allStarStatus": "str",
                                "id": "int",
                                "name": "str",
                                "season": "int",
                                "venue": {
                                    "id": "int",
                                    "name": "str"
                                },
                                "springVenue": {
                                    "id": "int"
                                },
                                "teamCode": "str",
                                "fileCode": "str",
                                "abbreviation": "str",
                                "teamName": "str",
                                "locationName": "str",
                                "firstYearOfPlay": "str",
                                "league": {
                                    "id": "int",
                                    "name": "str"
                                },
                                "division": {
                                    "id": "int",
                                    "name": "str"
                                },
                                "sport": {
                                    "id": "int",
                                    "name": "str"
                                },
                                "shortName": "str",
                                "franchiseName": "str",
                                "clubName": "str",
                                "active": "bool",
                                "_list_length": 9
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "teams-coaches/{teamIds}",
                "api_description": "Query baseball team coaches by ID",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "teamIds",
                        "type": "STRING",
                        "description": "Enter a team ID - can be found in the game's endpoint",
                        "default": "145"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {
                        "version": "str",
                        "status": "int"
                    },
                    "results": {
                        "roster": [
                            {
                                "person": {
                                    "id": "int",
                                    "fullName": "str"
                                },
                                "jerseyNumber": "str",
                                "job": "str",
                                "jobId": "str",
                                "title": "str",
                                "_list_length": 11
                            }
                        ],
                        "teamId": "int",
                        "rosterType": "str"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "leagues",
                "api_description": "Baseball leagues",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"meta\": {\"version\": \"str\", \"status\": \"int\"}, \"results\": [{\"id\": \"int\", \"name\": \"str\", \"abbreviation\": \"str\", \"nameShort\": \"str\", \"seasonState\": \"str\", \"hasWildCard\": \"bool\", \"hasSplitSeason\": \"bool\", \"numGames\": \"int\", \"hasPlayoffPoints\": \"bool\", \"numTeams\": \"int\", \"numWildcardTeams\": \"int\", \"seasonDateInfo\": {\"seasonId\": \"str\", \"preSeasonStartDate\": \"str\", \"preSeasonEndDate\": \"str\", \"seasonStartDate\": \"str\", \"springStartDate\": \"str\", \"springEndDate\": \"str\", \"regularSeasonStartDate\": \"str\", \"lastDate1stHalf\": \"str\", \"allStarDate\": \"str\", \"firstDate2ndHalf\": \"str\", \"regularSeasonEndDate\": \"str\", \"postSeasonStartDate\": \"str\", \"postSeasonEndDate\": \"str\", \"seasonEndDate\": \"str\", \"offseasonStartDate\": \"str\", \"offSeasonEndDate\": \"str\", \"seasonLevelGamedayType\": \"str\", \"gameLevelGamedayType\": \"str\", \"qualifierPlateAppearances\": \"float\", \"qualifierOutsPitched\": \"int\"}, \"season\": \"str\", \"orgCode\": \"str\", \"conferencesInUse\": \"bool\", \"divisionsInUse\": \"bool\", \"sport\": {\"id\": \"int\"}, \"sortOrder\":"
            },
            {
                "category_name": "Sports",
                "tool_name": "Baseball",
                "api_name": "venues",
                "api_description": "Baseball venues",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "meta": {
                        "version": "str",
                        "status": "int"
                    },
                    "results": {
                        "venues": [
                            {
                                "id": "int",
                                "name": "str",
                                "active": "bool",
                                "season": "str",
                                "_list_length": 58
                            }
                        ]
                    }
                }
            }
        ],
        "query": "I'm a sports journalist working on an article about baseball leagues. Can you provide me with information on all the baseball leagues, including their names, abbreviations, season dates, and number of teams? It would be great to have the team affiliates and venues for each league as well.",
        "relevant APIs": [
            [
                "Baseball",
                "leagues"
            ],
            [
                "Baseball",
                "teams-affiliates/{teamIds}"
            ],
            [
                "Baseball",
                "venues"
            ]
        ],
        "query_id": 69206
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 Inplay Filter",
                "api_description": "bet365 inplay filter",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "league_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sport_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "skip_esports",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "pager": {
                        "page": "int",
                        "per_page": "int",
                        "total": "int"
                    },
                    "results": [
                        {
                            "id": "str",
                            "sport_id": "str",
                            "time": "str",
                            "time_status": "str",
                            "league": {
                                "id": "str",
                                "name": "str"
                            },
                            "home": {
                                "id": "str",
                                "name": "str"
                            },
                            "away": {
                                "id": "str",
                                "name": "str"
                            },
                            "ss": "str",
                            "our_event_id": "str",
                            "r_id": "str",
                            "ev_id": "str",
                            "updated_at": "str",
                            "_list_length": 54
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 InPlay",
                "api_description": "bet365 inplay data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "results": [
                        "list of list with length 1"
                    ],
                    "stats": {
                        "update_at": "str",
                        "update_dt": "str"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 InPlay Event",
                "api_description": "inplay event with all scores/stats/markets",
                "required_parameters": [
                    {
                        "name": "FI",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "stats",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lineup",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "error": "str",
                    "error_detail": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 Upcoming Events",
                "api_description": "get bet365 fixtures",
                "required_parameters": [
                    {
                        "name": "sport_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "day",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "league_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "error": "str",
                    "error_detail": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 PreMatch Odds",
                "api_description": "prematch odds",
                "required_parameters": [
                    {
                        "name": "FI",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "error": "str",
                    "error_detail": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "BetsAPI",
                "api_name": "Bet365 Result",
                "api_description": "to view bet365 event result",
                "required_parameters": [
                    {
                        "name": "event_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "int",
                    "results": [
                        {
                            "id": "str",
                            "success": "int",
                            "_list_length": 1
                        }
                    ]
                }
            }
        ],
        "query": "I am planning to watch a live sports event. Can you provide me with a list of upcoming fixtures for a specific sport? Additionally, I would like to know the in-play events and their scores, stats, and markets. Finally, can you give me the pre-match odds for a particular event?",
        "relevant APIs": [
            [
                "BetsAPI",
                "Bet365 Upcoming Events"
            ],
            [
                "BetsAPI",
                "Bet365 InPlay"
            ],
            [
                "BetsAPI",
                "Bet365 InPlay Event"
            ],
            [
                "BetsAPI",
                "Bet365 PreMatch Odds"
            ]
        ],
        "query_id": 44482
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Passbook",
                "api_name": "Download Pass",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "passtypeidentifier",
                        "type": "STRING",
                        "description": "",
                        "default": "pass.example.id1"
                    },
                    {
                        "name": "serialnumber",
                        "type": "STRING",
                        "description": "",
                        "default": "27f145d2-5713-4a8d-af64-b269f95ade3b"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Passbook",
                "api_name": "List Passes",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm attending a conference and I need to have my pass ready on my phone. Can you help me download a pass with the passTypeIdentifier 'pass.example.id1' and the serialNumber '27f145d2-5713-4a8d-af64-b269f95ade3b'? It would be great if you could also provide me with a list of all available passes.",
        "relevant APIs": [
            [
                "Passbook",
                "List Passes"
            ],
            [
                "Passbook",
                "Download Pass"
            ]
        ],
        "query_id": 33112
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "Currency Converter With Forecast and Historical Data",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nAllows to convert currency and shows prediction of exchange rate for currency pairs.\n\n`country_code` - is now optional. API will try first to get cross rate from European Central Bank. If API will found both currencies in another central bank, you will see from which central bank it was taken.\n\nExample: To get CNY to GBP provided by European Central Bank\n`/api/get_cross?currency=cny&currency_cross=gbp`\nor \n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp`\nor from Kazakhstan's CB:\n`/api/get_cross?country_code=kz&currency=cny&currency_cross=gbp`\nOf course cross rates from KZ and EU will be slightly different.\n\nExample 2: If you want to get historical data, add `&history_yyyy_mm_dd=2022-06-21`\n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp&history_yyyy_mm_dd=2022-06-21`\n\nExotic example: To get CNY to MDL (Yuan to Moldavian Lei) provided by Kazakhstan CB\n`/api/get_cross?currency=cny&currency_cross=mdl`\n\nParameters:\n1) country_code; 2) currency; 3) currency_cross; 4) optional parameter is `history_yyyy_mm_dd` (example:2022-06-27)' .\nTo get available `country_code` - access `/api/info/countries`\nTo get all currency abbreviations - access `/api/info/currencies` - there you need `code` value which is having  3 capital letters, like USD or CHF\n\nExample 3: If you want get price of Bitcoin in USD use:\n`/api/get_cross?currency=btc&currency_cross=usd`\n...same in GBP with specified `country_code`:\n`/api/get_cross?country_code=bitcoin&currency=btc&currency_cross=gbp`\n\nExample 4: If you want get price of Bitcoin in USD for a day in the past use:\n`/api/get_cross?country_code=bitcoin&history_yyyy_mm_dd=2022-06-27&currency=btc&currency_cross=usd`",
                "required_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "",
                        "default": "cny"
                    },
                    {
                        "name": "currency_cross",
                        "type": "STRING",
                        "description": "",
                        "default": "gbp"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "Get banks in a country",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis endpoint gives list of banks in selected country.\n\nExample 1\n` /api/get_all_banks_in_country?country_code=eu`\n\nExample 2\n `/api/get_all_banks_in_country?country_code=md`\n\nExample 3\n `/api/get_all_banks_in_country?country_code=bitcoin`\nwell... I hope you've got the idea:) The currency must have it's country and bank and for cryptocurrencies it is just imaginable bank \"Bitcoin\" and imaginable country \"Bitcoin\". This request will show you JSON\n{... \"is_central\": 1, \"name\": \"Bitcoin\", \"name_short\": \"Bitcoin\",...}\n\nTo get all available `country_code` use free endpoint `/api/info/countries`",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "",
                        "default": "eu"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "Currency rates for 1 bank. Historical data.",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\n**S**o it does - get exchange rates for selected bank on chosen date. Timezone is important!!!\n\nExample 1 - get currency rates provided by ECB(European Central Bank) in Berlin:\n`/api/get_all_currencies_values_for_1bank/?country_code=eu&date_yyyy_mm_dd_from=2021-11-15&date_yyyy_mm_dd_till=2021-11-15&bank_id=15&tz=Europe/Berlin`\n\nExample 2, MAIB (private Moldavian bank): `/api/get_all_currencies_values_for_1bank/?country_code=md&date_yyyy_mm_dd_from=2021-11-12&date_yyyy_mm_dd_till=2021-11-12&bank_id=1&tz=Europe/Chisinau`\n\nPrameters and where to get info:\n`country_code=`   -->> `/api/info/countries`  -here you can get all available country_code's and their's timezones.\n`bank_id=`  -->>  `/api/get_all_banks_in_country?country_code=bitcoin` or `/api/get_all_banks_in_country?country_code=eu`\n`date_yyyy_mm_dd_till=` and `date_yyyy_mm_dd_from=`  -->>  must be equal",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "",
                        "default": "eu"
                    },
                    {
                        "name": "date_yyyy_mm_dd_from",
                        "type": "STRING",
                        "description": "",
                        "default": "2022-06-22"
                    },
                    {
                        "name": "bank_id",
                        "type": "STRING",
                        "description": "",
                        "default": "15"
                    },
                    {
                        "name": "date_yyyy_mm_dd_till",
                        "type": "STRING",
                        "description": "",
                        "default": "2022-06-22"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "",
                        "default": "Europe/Berlin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "API Info",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nAll info about API's of this project are available at `/api/info`     Free of charge.\nFor example, if you access  `/api/info/get_forecast`  -  you will get information about  `/api/get_forecast`\n\nThe `ENDPOINT_NAME` can be one of these:\n`timezones` , `countries` , `languages` , `currencies` , `author`\n..and it provides response with data, for example all available countries.\n\nAlso  `ENDPOINT_NAME` can be one of these:\n`get_forecast` , `get_all_banks_in_country` , `get_best_rates` , `get_all_currencies_values_for_1bank` ,  `faq`\n..but  these requests provides only information about selected endoint.\n\nTo get all available `ENDPOINT_NAME` , go to `/api/info/all`",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ENDPOINT_NAME",
                        "type": "string",
                        "description": "",
                        "default": "get_forecast"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "Forecast crypto and fiat currency exchange rates",
                "api_name": "Get Exchange Rates Forecast",
                "api_description": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis API provides convinient way to get forecast for almost all fiat currencies and for bitcoin. Forecast based on Moving Average method with at least 30 historical observations.\n\nExample with fiat- \n`/api/get_forecast?country_code=eu&currency=usd&predict_days=5`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nExample 1 - \n`/api/get_forecast?country_code=bitcoin&currency=btc`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nSince 11 April 2022 you can request `/api/get_forecast?country_code=bitcoin&currency=btc&predict_days=10`\nThis will provide prediction for 10 days. `&predict_days` accepting integer from 2 to 10\n\nExample 2 - If you want to get forecast for Canadian Dollar in USD:\n`/api/get_forecast?country_code=eu&currency=usd&cross_currency=cad`\nyou will get response:\n\"`message`\":\".......... price for 1 CAD in US DOLLAR.... \"\n\"`forecast_rate`\": 0.7896,  -->> means that  forecast for 1 CAD is equal to 0.7896 USD\n\"`forecast_date`\": \"2021-11-21\", \n...\n\nExample 3 - If you want to get forecast of exchange rate for US Dollar in EU (European Union)  provided by European Central Bank:\n`/api/get_forecast?country_code=eu&currency=usd`\nyou get:\n\"`forecast_rate`\": 1.1254,  -->>which means 1 Euro = 1.1254 US Dollar\n\"`forecast_date`\": \"2021-11-21\",\n\nExample 4 - get  forecast and exhange rates for 1 USD provided by Moldavian Central Bank in Russian language:\n`/api/get_forecast?country_code=md&lang=ru&currency=eur&cross_currency=usd`\nInfo about lang= : `/api/info/languages`\nInfo about `cross_currency`= : `/api/info/currencies`",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "",
                        "default": "eu"
                    },
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "",
                        "default": "usd"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "predict_days",
                        "type": "STRING",
                        "description": "",
                        "default": "5"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a cryptocurrency trader and I need to know the exchange rate forecast for Bitcoin in USD. Can you provide me with the forecasted rate for the next 7 days? Additionally, I would like to get the list of all available banks in my country.",
        "relevant APIs": [
            [
                "Forecast crypto and fiat currency exchange rates",
                "Get Exchange Rates Forecast"
            ],
            [
                "Forecast crypto and fiat currency exchange rates",
                "Get banks in a country"
            ]
        ],
        "query_id": 79053
    },
    {
        "api_list": [
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "erzeugung",
                "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Verbraucher sein d\u00fcrfen, die  von einer Erzeugungsanlage von angegebener Postleitzahl ihren Strom beziehen sollen.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/erzeugung?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Verbraucher sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn dessen Netzeinspeisung (Erzeuger) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "Postleitzahl der Erzeugungsanlage, f\u00fcr die eine Liste der Postleitzahlen von Verbrauchergebiete einers regionalen \u00d6kostrombezugs erstellt werden soll.",
                        "default": "01609"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "Strommix",
                "api_description": "Resultierender Strommix nach Anwendung der regionalen \u00d6kostromerzeugung im Gebiet einer Postleitzahl.",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "",
                        "default": "69168"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Energy",
                "tool_name": "Regionalkonzept Strom Herkunft",
                "api_name": "entnahme",
                "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Erzeugungsanlagen sein d\u00fcrfen, die  f\u00fcr einen Verbraucher (Entnahme) an gegebener Postleitzahl ist.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/entnahme?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Erzeugungsanlage sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn die Netzentnahme (Verbrauch) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
                "required_parameters": [
                    {
                        "name": "postleitzahl",
                        "type": "STRING",
                        "description": "Postleitzahl des Verbrauchers (Entnahmestelle)",
                        "default": "09669"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My friends and I are interested in understanding the relationship between power generation and consumption in different zip codes. Can you provide us with a list of zip codes where a generation facility can supply power to consumers located in a specific zip code? For example, if we provide the zip code 88888, we would like to receive a list of zip codes where a generation facility can supply power to consumers in the zip code 88888.",
        "relevant APIs": [
            [
                "Regionalkonzept Strom Herkunft",
                "erzeugung"
            ],
            [
                "Regionalkonzept Strom Herkunft",
                "entnahme"
            ]
        ],
        "query_id": 16196
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Metals Futures Prices",
                "api_description": "page source : https://www.investing.com/commodities/metals",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "EUREX Futures Market Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 1
                            }
                        ],
                        "MCX Futures Market Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 18
                            }
                        ],
                        "Real Time Streaming Futures Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "NoneType",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 11
                            }
                        ],
                        "US Futures Market Quotes (10-minute Delayed)": [
                            {
                                "Chg.": "float",
                                "High": "float",
                                "Last": "str",
                                "Low": "float",
                                "Month": "str",
                                "Name": "str",
                                "Open": "float",
                                "Time": "str",
                                "_list_length": 12
                            }
                        ]
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Softs Futures Prices",
                "api_description": "page source : https://www.investing.com/commodities/softs",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "MCX Futures Market Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 6
                            }
                        ],
                        "Real Time Streaming Futures Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 9
                            }
                        ],
                        "US Futures Market Quotes (10-minute Delayed)": [
                            {
                                "Chg.": "float",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Name": "str",
                                "Open": "float",
                                "Time": "str",
                                "_list_length": 6
                            }
                        ]
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Energy Futures Prices",
                "api_description": "page source: https://www.investing.com/commodities/energy",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "MCX Futures Market Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 3
                            }
                        ],
                        "Real Time Streaming Futures Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 7
                            }
                        ],
                        "US Futures Market Quotes (10-minute Delayed)": [
                            {
                                "Chg.": "float",
                                "High": "float",
                                "Last": "str",
                                "Low": "float",
                                "Month": "str",
                                "Name": "str",
                                "Open": "float",
                                "Time": "str",
                                "_list_length": 13
                            }
                        ]
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Get Commodities",
                "api_description": "Get Commodities",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "country": "str",
                            "currency": "str",
                            "full_name": "str",
                            "group": "str",
                            "name": "str",
                            "title": "str",
                            "_list_length": 66
                        }
                    ],
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Commodity Groups",
                "api_description": "Get data for commodity groups",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        "list of str with length 5"
                    ],
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Grains Futures Prices",
                "api_description": "page source : https://www.investing.com/commodities/grains",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Commodity Indices",
                "api_description": "page source : https://www.investing.com/indices/commodities-indices",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "Chg. %": "str",
                            "High": "float",
                            "Index": "str",
                            "Last": "float",
                            "Low": "float",
                            "Time": "str",
                            "_list_length": 41
                        }
                    ],
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Meats Futures Prices",
                "api_description": "page source: https://www.investing.com/commodities/meats",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "Real Time Streaming Futures Quotes": [
                            {
                                "Area": "str",
                                "Chg.": "float",
                                "Chg. %": "str",
                                "Commodity": "str",
                                "High": "float",
                                "Last": "float",
                                "Low": "float",
                                "Month": "str",
                                "Prev.": "float",
                                "Time": "str",
                                "_list_length": 3
                            }
                        ],
                        "US Futures Market Quotes (10-minute Delayed)": [
                            {
                                "Chg.": "float",
                                "High": "float",
                                "Last": "str",
                                "Low": "float",
                                "Month": "str",
                                "Name": "str",
                                "Open": "float",
                                "Time": "str",
                                "_list_length": 7
                            }
                        ]
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "Real Time Commodity Futures Prices",
                "api_description": "page source : https://www.investing.com/commodities/real-time-futures",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "Area": "str",
                            "Chg.": "float",
                            "Chg. %": "str",
                            "High": "float",
                            "Last": "float",
                            "Low": "float",
                            "Month": "str",
                            "Name": "str",
                            "Time": "str",
                            "_list_length": 34
                        }
                    ],
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Investing",
                "api_name": "List of Countries for Stocks",
                "api_description": "This is a list of available countries, it is used as a request on another endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        "list of str with length 94"
                    ],
                    "message": "str",
                    "status": "int"
                }
            }
        ],
        "query": "I am a financial consultant and I need real-time data on commodities futures prices. Can you provide me with the latest quotes for metals, softs, energy, grains, and meats? Additionally, I would like to know the commodity groups these futures belong to.",
        "relevant APIs": [
            [
                "Investing",
                "Metals Futures Prices"
            ],
            [
                "Investing",
                "Softs Futures Prices"
            ],
            [
                "Investing",
                "Energy Futures Prices"
            ],
            [
                "Investing",
                "Grains Futures Prices"
            ],
            [
                "Investing",
                "Meats Futures Prices"
            ],
            [
                "Investing",
                "Commodity Groups"
            ]
        ],
        "query_id": 11653
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Daily Match List-Scheduled",
                "api_description": "Daily match list including scheduled matches.\n\nThe data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date of the matches. The format is {dd/mm/yyyy}. Match list data can be retrieved for only \u00b1 7 days.",
                        "default": "07/02/2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "homeTeam": {
                        "name": "str",
                        "shortName": "str",
                        "mediumName": "str",
                        "id": "int"
                    },
                    "awayTeam": {
                        "name": "str",
                        "shortName": "str",
                        "mediumName": "str",
                        "id": "int"
                    },
                    "status": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "date": "str",
                    "id": "int",
                    "tournament": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "stage": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "round": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Match Boxscore",
                "api_description": "Live, detailed team and player statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**\n\nP.S.\nFull data is available at Boxscore endpoint but can not shown in mock  response.",
                "required_parameters": [
                    {
                        "name": "matchId",
                        "type": "NUMBER",
                        "description": "The id of the match.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Daily Match List-All",
                "api_description": "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date of the match. The format is {dd/MM/yyyy}. Match list data can be retrieved for only \u00b1 7 days.",
                        "default": "06/10/2020"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "homeTeam": {
                        "score": {
                            "quarter1": "int",
                            "quarter2": "int",
                            "halfTime": "int",
                            "quarter3": "int",
                            "quarter4": "int",
                            "regular": "int",
                            "current": "int"
                        },
                        "name": "str",
                        "shortName": "str",
                        "mediumName": "str",
                        "id": "int"
                    },
                    "awayTeam": {
                        "score": {
                            "quarter1": "int",
                            "quarter2": "int",
                            "halfTime": "int",
                            "quarter3": "int",
                            "quarter4": "int",
                            "regular": "int",
                            "current": "int"
                        },
                        "name": "str",
                        "shortName": "str",
                        "mediumName": "str",
                        "id": "int"
                    },
                    "status": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "date": "str",
                    "id": "int",
                    "tournament": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "stage": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "round": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Tournament Info",
                "api_description": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament.",
                "required_parameters": [
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The id of the tournament.",
                        "default": "9"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "season": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "country": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "participantType": {
                        "name": "str",
                        "id": "int"
                    },
                    "stages": [
                        {
                            "rounds": [
                                {
                                    "name": "str",
                                    "shortName": "str",
                                    "id": "int",
                                    "_list_length": 17
                                }
                            ],
                            "name": "str",
                            "shortName": "str",
                            "id": "int",
                            "_list_length": 2
                        }
                    ],
                    "name": "str",
                    "shortName": "str",
                    "globalName": "str",
                    "localName": "str",
                    "id": "int"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Tournament Standings",
                "api_description": "Team Rankings for a specific competition.",
                "required_parameters": [
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The id of the tournament.",
                        "default": "9"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Daily Match List-Results",
                "api_description": "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date of matches. The format is {dd/mm/yyyy}. Match list data can be retrieved for only \u00b1 7 days.",
                        "default": "24/01/2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "homeTeam": {
                        "score": {
                            "quarter1": "int",
                            "quarter2": "int",
                            "halfTime": "int",
                            "quarter3": "int",
                            "quarter4": "int",
                            "regular": "int",
                            "current": "int"
                        },
                        "name": "str",
                        "shortName": "str",
                        "mediumName": "str",
                        "id": "int"
                    },
                    "awayTeam": {
                        "score": {
                            "quarter1": "int",
                            "quarter2": "int",
                            "halfTime": "int",
                            "quarter3": "int",
                            "quarter4": "int",
                            "regular": "int",
                            "current": "int"
                        },
                        "name": "str",
                        "shortName": "str",
                        "mediumName": "str",
                        "id": "int"
                    },
                    "status": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "date": "str",
                    "id": "int",
                    "tournament": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "stage": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "round": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Tournament List",
                "api_description": "List of tournaments in your data coverage.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "participantType": {
                        "name": "str",
                        "id": "int"
                    },
                    "name": "str",
                    "shortName": "str",
                    "globalName": "str",
                    "localName": "str",
                    "id": "int"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Match Team Statistics",
                "api_description": "Provides the team statistics of the match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**",
                "required_parameters": [
                    {
                        "name": "matchId",
                        "type": "NUMBER",
                        "description": "The id of the match.",
                        "default": "21587"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"homeTeam\": {\"statistics\": {\"totalFirstDowns\": \"int\", \"rushingFirstDowns\": \"int\", \"passingFirstDowns\": \"int\", \"penaltyFirstDowns\": \"int\", \"thirdDownSucceed\": \"int\", \"thirdDownAttempt\": \"int\", \"thirdDownEfficiency\": \"float\", \"fourthDownEfficiency\": \"float\", \"totalNetYards\": \"int\", \"totalOffensivePlays\": \"int\", \"averageGainPerPlay\": \"float\", \"rushingNetYards\": \"int\", \"totalRushingPlays\": \"int\", \"averageGainPerRush\": \"float\", \"passingNetYards\": \"int\", \"sackedCount\": \"int\", \"completedPasses\": \"int\", \"attemptedPasses\": \"int\", \"interceptedPasses\": \"int\", \"averageGainPerPass\": \"float\", \"penaltyNumbers\": \"int\", \"penaltyYards\": \"int\", \"turnovers\": \"int\", \"fumbleNumbers\": \"int\", \"fumblesLost\": \"int\", \"fumbleYards\": \"int\", \"passingTDs\": \"int\", \"score\": \"int\", \"extraPointsMade\": \"int\", \"extraPointsAttempted\": \"int\", \"twoPointExtraPointsAttempted\": \"int\", \"fieldGoalsMade\": \"int\", \"fieldGoalsAttempted\": \"int\", \"possessionMinute\": \"int\", \"possessionSecond\": \"int\"}, \"name\": \"str\", \"shortName\": \"str\","
            },
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Tournament Teams",
                "api_description": "List of teams participating in a specific tournament.",
                "required_parameters": [
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The id of the tournament.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "isNational": "bool",
                    "country": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "name": "str",
                    "shortName": "str",
                    "mediumName": "str",
                    "id": "int"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Football Data",
                "api_name": "Match Play by Play",
                "api_description": "Provides all match drives and plays during the match with their detailed informations.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**",
                "required_parameters": [
                    {
                        "name": "matchId",
                        "type": "NUMBER",
                        "description": "The id of the match.",
                        "default": "18656"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "id": "int",
                    "homeTeam": {
                        "name": "str",
                        "shortName": "str",
                        "mediumName": "str",
                        "id": "int"
                    },
                    "awayTeam": {
                        "name": "str",
                        "shortName": "str",
                        "mediumName": "str",
                        "id": "int"
                    },
                    "drives": [
                        {
                            "id": "int",
                            "period": "int",
                            "startTime": "str",
                            "playCount": "int",
                            "yardsGained": "int",
                            "totalFirstDowns": "int",
                            "duration": "str",
                            "team": {
                                "name": "str",
                                "shortName": "str",
                                "id": "int"
                            },
                            "plays": [
                                {
                                    "quarter": "int",
                                    "time": "str",
                                    "down": "int",
                                    "yardsToGo": "int",
                                    "startYardTeamShortName": "str",
                                    "startYardLine": "int",
                                    "commentaryText": "str",
                                    "_list_length": 8
                                }
                            ],
                            "_list_length": 2
                        }
                    ],
                    "tournament": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "stage": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    },
                    "round": {
                        "name": "str",
                        "shortName": "str",
                        "id": "int"
                    }
                }
            }
        ],
        "query": "My friend is a huge football fan and I want to surprise him with some interesting football facts. Can you provide me with a list of daily match results from the past week? Additionally, I would like to know the tournament details and participating teams.",
        "relevant APIs": [
            [
                "Football Data",
                "Daily Match List-Results"
            ],
            [
                "Football Data",
                "Tournament Info"
            ],
            [
                "Football Data",
                "Tournament Teams"
            ]
        ],
        "query_id": 60806
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Domain Info",
                "api_name": "Full information",
                "api_description": "This endpoint returns the full information on the domain.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "isAvailable": "bool"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Domain Info",
                "api_name": "Check domain info",
                "api_description": "This endpoint returns the domain information.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "isAvailable": "bool"
                }
            }
        ],
        "query": "I need to gather comprehensive information about the domain 'exampledomain.com'. Can you provide me with its availability status and complete details?",
        "relevant APIs": [
            [
                "Domain Info",
                "Full information"
            ],
            [
                "Domain Info",
                "Check domain info"
            ]
        ],
        "query_id": 76957
    },
    {
        "api_list": [
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "GetTaskResult [free of use]",
                "api_description": "To get the result of the task just provide the **task_id** that you obtained after requesting **GetSerpAsync**. When task is not finished yet you will receive **task_status: inprogress**. For a finished task you will get **task_status: succeeded**. Check the **Example Responses** tab to see the examples. \nPossible task statuses:\n- **pending** - task is waiting for its turn\n- **inprogress** - task has been passed to the worker\n- **succeeded** - task has been finished with success\n\nUse this endpoint how much you want. **It's free of charge**!\n\nThe average **GetCompleteDataAsync**  execution time is 10-40 seconds.  It all depends how many tasks are in the queue.",
                "required_parameters": [
                    {
                        "name": "task_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "task_id": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "GetMyTasks [free of use]",
                "api_description": "Retrieves your all tasks. Use this endpoint when lost your **task_id** . Use this endpoint how much you want. **It's free of charge**!",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "task_status",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "description": "str",
                    "status": "int",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "Get server time",
                "api_description": "Returns server time.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "CancelTask [free of use]",
                "api_description": "Cancels pending task. Removes task from your job queue. Use this endpoint how much you want. **It's free of charge**!",
                "required_parameters": [
                    {
                        "name": "task_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "task_id": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "Monitoring",
                "tool_name": "Yandex SERP",
                "api_name": "Get SERP [async]",
                "api_description": "Creates a task that will return complete SERP data for provided domain. Using this endpoint is very simple!\n1. Make a request\n2. Grab received **task_id**\n3. Provide the **task_id** to **GetTaskResult** endpoint to get complete domain data.\n\nThe average execution time is 5-40 seconds. It all depends how many tasks are in the queue.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "ENUM",
                        "description": "get search results from:\n- yandex.com\n- yandex.ru\n- yandex.by\n- yandex.kz\n- yandex.uz",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "0 - first page\n1 - second page",
                        "default": "0"
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "bitcoin"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "enums available:\nbe - belorussian\nde - german\nen - english\nfr - french\nid - indonesian\nkk - kazakh\nru - russian\ntr - turkish\ntt - tatar\nuk - ukrainian\n\ne.g. for multiple select: en,fr",
                        "default": ""
                    },
                    {
                        "name": "within",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "e.g. Paris, France",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "Domain": [
                            "list of str with length 1"
                        ],
                        "Region": [
                            "list of str with length 1"
                        ]
                    }
                }
            }
        ],
        "query": "I'm planning a trip to New York and I want to know the search engine results for the query 'best attractions in New York'. Can you create a task to retrieve the complete SERP data for this query? Once the task is completed, please provide me with the task ID so that I can use it to obtain the results using the 'GetTaskResult' endpoint. Additionally, I would like to specify the language as English and the region as New York.",
        "relevant APIs": [
            [
                "Yandex SERP",
                "Get SERP [async]"
            ],
            [
                "Yandex SERP",
                "GetTaskResult [free of use]"
            ]
        ],
        "query_id": 62757
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "COVID-19 INDIA",
                "api_name": "Get Info",
                "api_description": "Get Covid Latest Information",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"21/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"20/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"19/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"18/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"17/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"16/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"15/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"14/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"13/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"12/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"11/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"10/05/2023\": [{\"info\": \"str\", \"text\": \"str\", \"link\": \"str\", \"_list_length\": 1}], \"09/05/2023\": ["
            },
            {
                "category_name": "Data",
                "tool_name": "COVID-19 INDIA",
                "api_name": "Get Details",
                "api_description": "Coronavirus India Live Updates (State)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"Andaman and Nicobar Islands\": {\"slno\": \"int\", \"state\": \"str\", \"confirm\": \"str\", \"cured\": \"str\", \"death\": \"int\", \"total\": \"int\"}, \"Andhra Pradesh\": {\"slno\": \"int\", \"state\": \"str\", \"confirm\": \"str\", \"cured\": \"str\", \"death\": \"int\", \"total\": \"int\"}, \"Arunachal Pradesh\": {\"slno\": \"int\", \"state\": \"str\", \"confirm\": \"str\", \"cured\": \"str\", \"death\": \"int\", \"total\": \"int\"}, \"Assam\": {\"slno\": \"int\", \"state\": \"str\", \"confirm\": \"str\", \"cured\": \"str\", \"death\": \"int\", \"total\": \"int\"}, \"Bihar\": {\"slno\": \"int\", \"state\": \"str\", \"confirm\": \"str\", \"cured\": \"str\", \"death\": \"int\", \"total\": \"int\"}, \"Chandigarh\": {\"slno\": \"int\", \"state\": \"str\", \"confirm\": \"str\", \"cured\": \"str\", \"death\": \"int\", \"total\": \"int\"}, \"Chhattisgarh\": {\"slno\": \"int\", \"state\": \"str\", \"confirm\": \"str\", \"cured\": \"str\", \"death\": \"int\", \"total\": \"int\"}, \"Dadra and Nagar Haveli and Daman and Diu\": {\"slno\": \"int\", \"state\": \"str\", \"confirm\": \"str\", \"cured\": \"str\", \"death\": \"int\", \"total\": \"int\"}, \"Delhi\": {\"slno\": \"int\", \"state\": \"str\", \"con"
            },
            {
                "category_name": "Data",
                "tool_name": "COVID-19 INDIA",
                "api_name": "Get Latest Updates",
                "api_description": "Coronavirus India Live Guidelines, Bills, etc",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"Developed and hosted by\": \"str\", \"21/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"20/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"19/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"18/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"17/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"16/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"15/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"14/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"13/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"12/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"11/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"10/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"09/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"08/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"07/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"06/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"05/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"04/05/2023\": [{\"info\": \"str\", \"_list_length\": 1}], \"03/05/2023\": [{\"info\": \"str\""
            }
        ],
        "query": "I'm interested in the COVID-19 situation in India. Can you provide me with the latest updates on active, recovered, and deaths cases in the country? Additionally, I would like to know the guidelines and bills related to the coronavirus. Please organize this information into a comprehensive report.",
        "relevant APIs": [
            [
                "COVID-19 INDIA",
                "Get Info"
            ],
            [
                "COVID-19 INDIA",
                "Get Latest Updates"
            ]
        ],
        "query_id": 17952
    },
    {
        "api_list": [
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Categories",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "categories": [
                        {
                            "category": "NoneType",
                            "_list_length": 872
                        }
                    ]
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Product",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Products in Category",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "products": "empty list",
                    "summary": {
                        "count": "int"
                    }
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Order",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get User Orders",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Products",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "products": [
                        {
                            "id": "int",
                            "name": "str",
                            "category": "NoneType",
                            "_list_length": 10
                        }
                    ],
                    "summary": {
                        "count": "int"
                    }
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Me",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            }
        ],
        "query": "I am a business owner who wants to analyze the performance of my products. Can you provide me with a list of available products in the Demo Project catalog? Additionally, give me the details of a specific order with ID ORD456.",
        "relevant APIs": [
            [
                "\ud83d\udc4b Demo Project",
                "Get Products"
            ],
            [
                "\ud83d\udc4b Demo Project",
                "Get Order"
            ]
        ],
        "query_id": 55721
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "api_name": "Popular",
                "api_description": "Get popular videos",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "videoId": "str",
                    "videoThumbnails": [
                        {
                            "quality": "str",
                            "url": "str",
                            "width": "int",
                            "height": "int",
                            "_list_length": 9
                        }
                    ],
                    "lengthSeconds": "int",
                    "author": "str",
                    "authorId": "str",
                    "authorUrl": "str",
                    "published": "int",
                    "publishedText": "str",
                    "viewCount": "int"
                }
            },
            {
                "category_name": "Media",
                "tool_name": "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "api_name": "Search suggestions",
                "api_description": "Get search suggestions for a query\n\nexample: \n/search/suggestions?q=crypto",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "crypto"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "query": "str",
                    "suggestions": [
                        "list of str with length 13"
                    ]
                }
            },
            {
                "category_name": "Media",
                "tool_name": "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "api_name": "Trending (music, gaming, news, movies)",
                "api_description": "Get trending videos.\n\nOptional parameters:\ntype: \"music\", \"gaming\", \"news\", \"movies\"\nregion: ISO 3166 country code (default: \"US\")",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "gaming"
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "",
                        "default": "US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "videoId": "str",
                    "author": "str",
                    "authorId": "str",
                    "authorUrl": "str",
                    "authorVerified": "bool",
                    "videoThumbnails": [
                        {
                            "quality": "str",
                            "url": "str",
                            "width": "int",
                            "height": "int",
                            "_list_length": 9
                        }
                    ],
                    "description": "str",
                    "descriptionHtml": "str",
                    "viewCount": "int",
                    "viewCountText": "str",
                    "published": "int",
                    "publishedText": "str",
                    "lengthSeconds": "int",
                    "liveNow": "bool",
                    "premium": "bool",
                    "isUpcoming": "bool"
                }
            },
            {
                "category_name": "Media",
                "tool_name": "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "api_name": "Search",
                "api_description": "Get search results\n\nexample:\n/search?q=crypto",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "crypto"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "videoId": "str",
                    "author": "str",
                    "authorId": "str",
                    "authorUrl": "str",
                    "authorVerified": "bool",
                    "videoThumbnails": [
                        {
                            "quality": "str",
                            "url": "str",
                            "width": "int",
                            "height": "int",
                            "_list_length": 9
                        }
                    ],
                    "description": "str",
                    "descriptionHtml": "str",
                    "viewCount": "int",
                    "viewCountText": "str",
                    "published": "int",
                    "publishedText": "str",
                    "lengthSeconds": "int",
                    "liveNow": "bool",
                    "premium": "bool",
                    "isUpcoming": "bool"
                }
            },
            {
                "category_name": "Media",
                "tool_name": "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "api_name": "Playlist",
                "api_description": "Get playlist\nexample:\n/playlists/PLV3BLrRejJR_8XjiMrbev1_7RjIZTg1qb",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "PLV3BLrRejJR_8XjiMrbev1_7RjIZTg1qb"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "playlistId": "str",
                    "playlistThumbnail": "str",
                    "author": "str",
                    "authorId": "str",
                    "authorUrl": "str",
                    "authorThumbnails": [
                        {
                            "url": "str",
                            "width": "int",
                            "height": "int",
                            "_list_length": 6
                        }
                    ],
                    "description": "str",
                    "descriptionHtml": "str",
                    "videoCount": "int",
                    "viewCount": "int",
                    "updated": "int",
                    "isListed": "bool",
                    "videos": [
                        {
                            "title": "str",
                            "videoId": "str",
                            "author": "str",
                            "authorId": "str",
                            "authorUrl": "str",
                            "videoThumbnails": [
                                {
                                    "quality": "str",
                                    "url": "str",
                                    "width": "int",
                                    "height": "int",
                                    "_list_length": 9
                                }
                            ],
                            "index": "int",
                            "lengthSeconds": "int",
                            "_list_length": 4
                        }
                    ]
                }
            },
            {
                "category_name": "Media",
                "tool_name": "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "api_name": "Video",
                "api_description": "Get all info about single Youtube video\nexample:  /videos/dQw4w9WgXcQ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "dQw4w9WgXcQ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"type\": \"str\", \"title\": \"str\", \"videoId\": \"str\", \"videoThumbnails\": [{\"quality\": \"str\", \"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 9}], \"storyboards\": [{\"url\": \"str\", \"templateUrl\": \"str\", \"width\": \"int\", \"height\": \"int\", \"count\": \"int\", \"interval\": \"int\", \"storyboardWidth\": \"int\", \"storyboardHeight\": \"int\", \"storyboardCount\": \"int\", \"_list_length\": 3}], \"description\": \"str\", \"descriptionHtml\": \"str\", \"published\": \"int\", \"publishedText\": \"str\", \"keywords\": [\"list of str with length 27\"], \"viewCount\": \"int\", \"likeCount\": \"int\", \"dislikeCount\": \"int\", \"paid\": \"bool\", \"premium\": \"bool\", \"isFamilyFriendly\": \"bool\", \"allowedRegions\": [\"list of str with length 249\"], \"genre\": \"str\", \"genreUrl\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorUrl\": \"str\", \"authorThumbnails\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 6}], \"subCountText\": \"str\", \"lengthSeconds\": \"int\", \"allowRatings\": \"bool\", \"rating\": \"int\", \"isListed\": \"bool\", \"liveNow\": \"bool\", \""
            },
            {
                "category_name": "Media",
                "tool_name": "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "api_name": "Channel",
                "api_description": "Get all info and videos from a channel\nexample:  /channels/UCN9Nj4tjXbVTLYWN0EKly_Q",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "UCN9Nj4tjXbVTLYWN0EKly_Q"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"author\": \"str\", \"authorId\": \"str\", \"authorUrl\": \"str\", \"authorBanners\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"authorThumbnails\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 6}], \"subCount\": \"int\", \"totalViews\": \"int\", \"joined\": \"int\", \"autoGenerated\": \"bool\", \"isFamilyFriendly\": \"bool\", \"description\": \"str\", \"descriptionHtml\": \"str\", \"allowedRegions\": [\"list of str with length 249\"], \"tabs\": [\"list of str with length 8\"], \"authorVerified\": \"bool\", \"latestVideos\": [{\"type\": \"str\", \"title\": \"str\", \"videoId\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorUrl\": \"str\", \"authorVerified\": \"bool\", \"videoThumbnails\": [{\"quality\": \"str\", \"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 9}], \"description\": \"str\", \"descriptionHtml\": \"str\", \"viewCount\": \"int\", \"viewCountText\": \"str\", \"published\": \"int\", \"publishedText\": \"str\", \"lengthSeconds\": \"int\", \"liveNow\": \"bool\", \"premium\": \"bool\", \"isUpcoming\": \"bool\", \"_list_length\": "
            },
            {
                "category_name": "Media",
                "tool_name": "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "api_name": "Comments",
                "api_description": "**Get comments from a video**\nexample: /comments/dQw4w9WgXcQ\n\n**Parameters**\nsort_by: \"top\", \"new\" (default: top)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "dQw4w9WgXcQ"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "",
                        "default": "top"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "commentCount": "int",
                    "videoId": "str",
                    "comments": [
                        {
                            "verified": "bool",
                            "author": "str",
                            "authorThumbnails": [
                                {
                                    "url": "str",
                                    "width": "int",
                                    "height": "int",
                                    "_list_length": 3
                                }
                            ],
                            "authorId": "str",
                            "authorUrl": "str",
                            "isEdited": "bool",
                            "content": "str",
                            "contentHtml": "str",
                            "isPinned": "bool",
                            "isSponsor": "bool",
                            "published": "int",
                            "publishedText": "str",
                            "likeCount": "int",
                            "commentId": "str",
                            "authorIsChannelOwner": "bool",
                            "replies": {
                                "replyCount": "int",
                                "continuation": "str"
                            },
                            "_list_length": 20
                        }
                    ],
                    "continuation": "str"
                }
            }
        ],
        "query": "Can you help me find popular videos and trending gaming videos? I'm interested in their titles, authors, view counts, and thumbnails. I'm using the 'Cheap YouTube API' tool.",
        "relevant APIs": [
            [
                "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "Popular"
            ],
            [
                "\ud83d\ude80 Cheap YouTube API \ud83d\udd25",
                "Trending (music, gaming, news, movies)"
            ]
        ],
        "query_id": 77471
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideoFromUser",
                "api_description": "Get all videos credited to a user (both uploaded and appears).",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosByTag",
                "api_description": "Get a list of videos that have the specified tag.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "tag",
                        "type": "STRING",
                        "description": "The tag to get",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Page number to show",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": "most_commented"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllChannels",
                "api_description": "Get a list of all public channels.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: newest, oldest, alphabetical, most_videos, most_subscribed, or most_recently_updated.",
                        "default": "most_recently_updated"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedTags",
                "api_description": "Get a list of related tags for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The Name of category",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosComment",
                "api_description": "Get a list of the comments on a video.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "The ID of the video.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a film student doing research on videos with the tag 'animation'. Can you provide me with videos that have this tag? I would like to see the most commented videos first.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetVideosByTag"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ]
        ],
        "query_id": 77514
    },
    {
        "api_list": [
            {
                "category_name": "Mapping",
                "tool_name": "LocationIQ",
                "api_name": "Matrix",
                "api_description": "Computes duration of the fastest route between all pairs of supplied coordinates. Returns the durations or distances or both between the coordinate pairs. Note that the distances are not the shortest distance between two coordinates, but rather the distances of the fastest routes.",
                "required_parameters": [
                    {
                        "name": "coordinates",
                        "type": "STRING",
                        "description": "String of format {longitude},{latitude};{longitude},{latitude}[;{longitude},{latitude} ...] or polyline({polyline}) or polyline6({polyline6}). polyline follows Google's polyline format with precision 5",
                        "default": "\"-0.16102,51.523854;-0.15797,51.52326;-0.161593,51.522550\""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "radiuses",
                        "type": "STRING",
                        "description": "Limits the search to given radius in meters Radiuses array length should be same as coordinates array, eaach value separated by semi-colon. Input Value - {radius};{radius}[;{radius} ...] Radius has following format :- double >= 0 or unlimited (default)",
                        "default": "\"500;200;300\""
                    },
                    {
                        "name": "annotations",
                        "type": "STRING",
                        "description": "Returns additional metadata for each coordinate along the route geometry.  [ true, false (default), nodes, distance, duration, datasources, weight, speed ]",
                        "default": "\"distance\""
                    },
                    {
                        "name": "fallback_coordinate",
                        "type": "STRING",
                        "description": "When using a fallback_speed, use the user-supplied coordinate (input), or the snapped location (snapped) for calculating distances. [ input (default), or snapped ]",
                        "default": "\"snapped\""
                    },
                    {
                        "name": "generate_hints",
                        "type": "STRING",
                        "description": "Adds a Hint to the response which can be used in subsequent requests, see hints parameter. Input Value - true (default), false Format - Base64 String",
                        "default": "\"false\""
                    },
                    {
                        "name": "fallback_speed",
                        "type": "NUMBER",
                        "description": "If no route found between a source/destination pair, calculate the as-the-crow-flies distance,  then use this speed to estimate duration. double > 0",
                        "default": 25.65
                    },
                    {
                        "name": "sources",
                        "type": "NUMBER",
                        "description": "Use location with given index as source. [ {index};{index}[;{index} ...] or all (default) ] => index\t 0 <= integer < #locations",
                        "default": 0
                    },
                    {
                        "name": "exclude",
                        "type": "STRING",
                        "description": "Additive list of classes to avoid, order does not matter. input Value - {class}[,{class}] Format - A class name determined by the profile or none.",
                        "default": "\"toll\""
                    },
                    {
                        "name": "destinations",
                        "type": "NUMBER",
                        "description": "Use location with given index as destination. [ {index};{index}[;{index} ...] or all (default) ]",
                        "default": 2
                    },
                    {
                        "name": "bearings",
                        "type": "STRING",
                        "description": "Limits the search to segments with given bearing in degrees towards true north in clockwise direction. List of positive integer pairs separated by semi-colon and bearings array should be equal to length of coordinate array.\nInput Value :- {bearing};{bearing}[;{bearing} ...] Bearing follows the following format : bearing\t{value},{range} integer 0 .. 360,integer 0 .. 180",
                        "default": "\"10,20;40,30;30,9\""
                    },
                    {
                        "name": "approaches",
                        "type": "STRING",
                        "description": "Keep waypoints on curb side. Input Value - {approach};{approach}[;{approach} ...] Format - curb or unrestricted (default)",
                        "default": "\"curb;curb;curb\""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Mapping",
                "tool_name": "LocationIQ",
                "api_name": "autocomplete",
                "api_description": "The Autocomplete API is a variant of the Search API that returns place predictions in response to an HTTP request.  The request specifies a textual search string and optional geographic bounds.  The service can be used to provide autocomplete functionality for text-based geographic searches, by returning places such as businesses, addresses and points of interest as a user types. The Autocomplete API can match on full words as well as substrings. Applications can therefore send queries as the user types, to provide on-the-fly place predictions.",
                "required_parameters": [
                    {
                        "name": "normalizecity",
                        "type": "NUMBER",
                        "description": "For responses with no city value in the address section, the next available element in this order - city_district, locality, town, borough, municipality, village, hamlet, quarter, neighbourhood - from the address section will be normalized to city. Defaults to 1 for SDKs.",
                        "default": 1
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Address to geocode",
                        "default": "\"Empire state\""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "viewbox",
                        "type": "STRING",
                        "description": "The preferred area to find search results.  To restrict results to those within the viewbox, use along with the bounded option. Tuple of 4 floats. Any two corner points of the box - `max_lon,max_lat,min_lon,min_lat` or `min_lon,min_lat,max_lon,max_lat` - are accepted in any order as long as they span a real box. ",
                        "default": "\"-132.84908,47.69382,-70.44674,30.82531\""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the number of returned results. Default is 10.",
                        "default": 10
                    },
                    {
                        "name": "countrycodes",
                        "type": "STRING",
                        "description": "Limit search to a list of countries.",
                        "default": "\"us\""
                    },
                    {
                        "name": "tag",
                        "type": "STRING",
                        "description": "Restricts the autocomplete search results to elements of specific OSM class and type.  Example - To restrict results to only class place and type city: tag=place:city, To restrict the results to all of OSM class place: tag=place",
                        "default": "\"place\""
                    },
                    {
                        "name": "accept-language",
                        "type": "STRING",
                        "description": "Preferred language order for showing search results, overrides the value specified in the Accept-Language HTTP header. Defaults to en. To use native language for the response when available, use accept-language=native",
                        "default": "\"en\""
                    },
                    {
                        "name": "bounded",
                        "type": "NUMBER",
                        "description": "Restrict the results to only items contained with the viewbox",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Mapping",
                "tool_name": "LocationIQ",
                "api_name": "reverse",
                "api_description": "Reverse geocoding is the process of converting a coordinate or location (latitude, longitude) to a readable address or place name. This permits the identification of nearby street addresses, places, and/or area subdivisions such as a neighborhood, county, state, or country.",
                "required_parameters": [
                    {
                        "name": "normalizecity",
                        "type": "NUMBER",
                        "description": "Normalizes village to city level data to city",
                        "default": 1
                    },
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude of the location to generate an address for.",
                        "default": 40.7487727
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Format to geocode. Only JSON supported for SDKs",
                        "default": "\"json\""
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "Longitude of the location to generate an address for.",
                        "default": -73.9849336
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "addressdetails",
                        "type": "NUMBER",
                        "description": "Include a breakdown of the address into elements. Defaults to 1.",
                        "default": 1
                    },
                    {
                        "name": "accept-language",
                        "type": "STRING",
                        "description": "Preferred language order for showing search results, overrides the value specified in the Accept-Language HTTP header. Defaults to en. To use native language for the response when available, use accept-language=native",
                        "default": "\"en\""
                    },
                    {
                        "name": "postaladdress",
                        "type": "NUMBER",
                        "description": "Returns address inside the postaladdress key, that is specifically formatted for each country. Currently supported for addresses in Germany. Defaults to 0 [0,1]",
                        "default": 0
                    },
                    {
                        "name": "namedetails",
                        "type": "NUMBER",
                        "description": "Include a list of alternative names in the results. These may include language variants, references, operator and brand.",
                        "default": 0
                    },
                    {
                        "name": "showdistance",
                        "type": "NUMBER",
                        "description": "Returns the straight line distance (meters) between the input location and the result's location. Value is set in the distance key of the response. Defaults to 0 [0,1]",
                        "default": 0
                    },
                    {
                        "name": "statecode",
                        "type": "NUMBER",
                        "description": "Adds state or province code when available to the statecode key inside the address element. Currently supported for addresses in the USA, Canada and Australia. Defaults to 0",
                        "default": 0
                    },
                    {
                        "name": "extratags",
                        "type": "NUMBER",
                        "description": "Include additional information in the result if available, e.g. wikipedia link, opening hours.",
                        "default": 0
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Mapping",
                "tool_name": "LocationIQ",
                "api_name": "balance",
                "api_description": "The Balance API provides a count of request credits left in the user's account for the day. Balance is reset at midnight UTC everyday (00:00 UTC).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Mapping",
                "tool_name": "LocationIQ",
                "api_name": "search",
                "api_description": "The Search API allows converting addresses, such as a street address, into geographic coordinates (latitude and longitude). These coordinates can serve various use-cases, from placing markers on a map to helping algorithms determine nearby bus stops. This process is also known as Forward Geocoding.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Address to geocode",
                        "default": "\"Empire state building\""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Format to geocode. Only JSON supported for SDKs",
                        "default": "\"json\""
                    },
                    {
                        "name": "normalizecity",
                        "type": "NUMBER",
                        "description": "For responses with no city value in the address section, the next available element in this order - city_district, locality, town, borough, municipality, village, hamlet, quarter, neighbourhood - from the address section will be normalized to city. Defaults to 1 for SDKs.",
                        "default": 1
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "addressdetails",
                        "type": "NUMBER",
                        "description": "Include a breakdown of the address into elements. Defaults to 0.",
                        "default": 1
                    },
                    {
                        "name": "bounded",
                        "type": "NUMBER",
                        "description": "Restrict the results to only items contained with the viewbox",
                        "default": 1
                    },
                    {
                        "name": "statecode",
                        "type": "NUMBER",
                        "description": "Adds state or province code when available to the statecode key inside the address element. Currently supported for addresses in the USA, Canada and Australia. Defaults to 0",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the number of returned results. Default is 10.",
                        "default": 10
                    },
                    {
                        "name": "extratags",
                        "type": "NUMBER",
                        "description": "Include additional information in the result if available, e.g. wikipedia link, opening hours.",
                        "default": 0
                    },
                    {
                        "name": "postaladdress",
                        "type": "NUMBER",
                        "description": "Returns address inside the postaladdress key, that is specifically formatted for each country. Currently supported for addresses in Germany. Defaults to 0 [0,1]",
                        "default": 0
                    },
                    {
                        "name": "namedetails",
                        "type": "NUMBER",
                        "description": "Include a list of alternative names in the results. These may include language variants, references, operator and brand.",
                        "default": 1
                    },
                    {
                        "name": "accept-language",
                        "type": "STRING",
                        "description": "Preferred language order for showing search results, overrides the value specified in the Accept-Language HTTP header. Defaults to en. To use native language for the response when available, use accept-language=native",
                        "default": "\"en\""
                    },
                    {
                        "name": "countrycodes",
                        "type": "STRING",
                        "description": "Limit search to a list of countries.",
                        "default": "\"us\""
                    },
                    {
                        "name": "dedupe",
                        "type": "NUMBER",
                        "description": "Sometimes you have several objects in OSM identifying the same place or object in reality. The simplest case is a street being split in many different OSM ways due to different characteristics. Nominatim will attempt to detect such duplicates and only return one match; this is controlled by the dedupe parameter which defaults to 1. Since the limit is, for reasons of efficiency, enforced before and not after de-duplicating, it is possible that de-duplicating leaves you with less results than requested.",
                        "default": 1
                    },
                    {
                        "name": "matchquality",
                        "type": "NUMBER",
                        "description": "Returns additional information about quality of the result in a matchquality object. Read more Defaults to 0 [0,1]",
                        "default": 0
                    },
                    {
                        "name": "viewbox",
                        "type": "STRING",
                        "description": "The preferred area to find search results.  To restrict results to those within the viewbox, use along with the bounded option. Tuple of 4 floats. Any two corner points of the box - `max_lon,max_lat,min_lon,min_lat` or `min_lon,min_lat,max_lon,max_lat` - are accepted in any order as long as they span a real box. ",
                        "default": "\"-132.84908,47.69382,-70.44674,30.82531\""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Mapping",
                "tool_name": "LocationIQ",
                "api_name": "Matching",
                "api_description": "Matching API matches or snaps given GPS points to the road network in the most plausible way.  Please note the request might result multiple sub-traces.  Large jumps in the timestamps (> 60s) or improbable transitions lead to trace splits if a complete matching could not be found. The algorithm might not be able to match all points. Outliers are removed if they can not be matched successfully.",
                "required_parameters": [
                    {
                        "name": "coordinates",
                        "type": "STRING",
                        "description": "String of format {longitude},{latitude};{longitude},{latitude}[;{longitude},{latitude} ...] or polyline({polyline}) or polyline6({polyline6}). polyline follows Google's polyline format with precision 5",
                        "default": "\"-0.16102,51.523854;-0.15797,51.52326;-0.161593,51.522550\""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "radiuses",
                        "type": "STRING",
                        "description": "Limits the search to given radius in meters Radiuses array length should be same as coordinates array, eaach value separated by semi-colon. Input Value - {radius};{radius}[;{radius} ...] Radius has following format :- double >= 0 or unlimited (default)",
                        "default": "\"None\""
                    },
                    {
                        "name": "generate_hints",
                        "type": "STRING",
                        "description": "Adds a Hint to the response which can be used in subsequent requests, see hints parameter. Input Value - true (default), false Format - Base64 String",
                        "default": "\"false\""
                    },
                    {
                        "name": "bearings",
                        "type": "STRING",
                        "description": "Limits the search to segments with given bearing in degrees towards true north in clockwise direction. List of positive integer pairs separated by semi-colon and bearings array should be equal to length of coordinate array.\nInput Value :- {bearing};{bearing}[;{bearing} ...] Bearing follows the following format : bearing\t{value},{range} integer 0 .. 360,integer 0 .. 180",
                        "default": "\"None\""
                    },
                    {
                        "name": "tidy",
                        "type": "STRING",
                        "description": "Allows the input track modification to obtain better matching quality for noisy tracks. [ true, false (default) ]",
                        "default": "\"false\""
                    },
                    {
                        "name": "gaps",
                        "type": "STRING",
                        "description": "Allows the input track splitting based on huge timestamp gaps between points. [ split (default), ignore ]",
                        "default": "\"ignore\""
                    },
                    {
                        "name": "waypoints",
                        "type": "STRING",
                        "description": "Treats input coordinates indicated by given indices as waypoints in returned Match object. Default is to treat all input coordinates as waypoints. [ {index};{index};{index}... ]",
                        "default": "\"0;1;2\""
                    },
                    {
                        "name": "annotations",
                        "type": "STRING",
                        "description": "Returns additional metadata for each coordinate along the route geometry.  [ true, false (default), nodes, distance, duration, datasources, weight, speed ]",
                        "default": "\"false\""
                    },
                    {
                        "name": "steps",
                        "type": "STRING",
                        "description": "Returned route steps for each route leg [ true, false (default) ]",
                        "default": "\"true\""
                    },
                    {
                        "name": "geometries",
                        "type": "STRING",
                        "description": "Returned route geometry format (influences overview and per step) [ polyline (default), polyline6, geojson ]",
                        "default": "\"polyline\""
                    },
                    {
                        "name": "exclude",
                        "type": "STRING",
                        "description": "Additive list of classes to avoid, order does not matter. input Value - {class}[,{class}] Format - A class name determined by the profile or none.",
                        "default": "\"toll\""
                    },
                    {
                        "name": "timestamps",
                        "type": "STRING",
                        "description": "Timestamps for the input locations in seconds since UNIX epoch. Timestamps need to be monotonically increasing. [ {timestamp};{timestamp}[;{timestamp} ...]  integer seconds since UNIX epoch",
                        "default": "\"200;300;900\""
                    },
                    {
                        "name": "overview",
                        "type": "STRING",
                        "description": "Add overview geometry either full, simplified according to highest zoom level it could be display on, or not at all. [ simplified (default), full, false ]",
                        "default": "\"simplified\""
                    },
                    {
                        "name": "approaches",
                        "type": "STRING",
                        "description": "Keep waypoints on curb side. Input Value - {approach};{approach}[;{approach} ...] Format - curb or unrestricted (default)",
                        "default": "\"curb;curb;curb\""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Mapping",
                "tool_name": "LocationIQ",
                "api_name": "Directions",
                "api_description": "Finds the fastest route between coordinates in the supplied order.",
                "required_parameters": [
                    {
                        "name": "coordinates",
                        "type": "STRING",
                        "description": "String of format {longitude},{latitude};{longitude},{latitude}[;{longitude},{latitude} ...] or polyline({polyline}) or polyline6({polyline6}). polyline follows Google's polyline format with precision 5",
                        "default": "\"-0.16102,51.523854;-0.15797,51.52326;-0.161593,51.522550\""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "continue_straight",
                        "type": "STRING",
                        "description": "Forces the route to keep going straight at waypoints constraining uturns there even if it would be faster. Default value depends on the profile [ default (default), true, false ]",
                        "default": "\"default\""
                    },
                    {
                        "name": "geometries",
                        "type": "STRING",
                        "description": "Returned route geometry format (influences overview and per step) [ polyline (default), polyline6, geojson ]",
                        "default": "\"polyline\""
                    },
                    {
                        "name": "exclude",
                        "type": "STRING",
                        "description": "Additive list of classes to avoid, order does not matter. input Value - {class}[,{class}] Format - A class name determined by the profile or none.",
                        "default": "\"toll\""
                    },
                    {
                        "name": "generate_hints",
                        "type": "STRING",
                        "description": "Adds a Hint to the response which can be used in subsequent requests, see hints parameter. Input Value - true (default), false Format - Base64 String",
                        "default": "\"false\""
                    },
                    {
                        "name": "steps",
                        "type": "STRING",
                        "description": "Returned route steps for each route leg [ true, false (default) ]",
                        "default": "\"true\""
                    },
                    {
                        "name": "bearings",
                        "type": "STRING",
                        "description": "Limits the search to segments with given bearing in degrees towards true north in clockwise direction. List of positive integer pairs separated by semi-colon and bearings array should be equal to length of coordinate array.\nInput Value :- {bearing};{bearing}[;{bearing} ...] Bearing follows the following format : bearing\t{value},{range} integer 0 .. 360,integer 0 .. 180",
                        "default": "\"10,20;40,30;30,9\""
                    },
                    {
                        "name": "annotations",
                        "type": "STRING",
                        "description": "Returns additional metadata for each coordinate along the route geometry.  [ true, false (default), nodes, distance, duration, datasources, weight, speed ]",
                        "default": "\"false\""
                    },
                    {
                        "name": "radiuses",
                        "type": "STRING",
                        "description": "Limits the search to given radius in meters Radiuses array length should be same as coordinates array, eaach value separated by semi-colon. Input Value - {radius};{radius}[;{radius} ...] Radius has following format :- double >= 0 or unlimited (default)",
                        "default": "\"500;200;300\""
                    },
                    {
                        "name": "approaches",
                        "type": "STRING",
                        "description": "Keep waypoints on curb side. Input Value - {approach};{approach}[;{approach} ...] Format - curb or unrestricted (default)",
                        "default": "\"curb;curb;curb\""
                    },
                    {
                        "name": "alternatives",
                        "type": "NUMBER",
                        "description": "Search for alternative routes. Passing a number alternatives=n searches for up to n alternative routes. [ true, false (default), or Number ]",
                        "default": 0
                    },
                    {
                        "name": "overview",
                        "type": "STRING",
                        "description": "Add overview geometry either full, simplified according to highest zoom level it could be display on, or not at all. [ simplified (default), full, false ]",
                        "default": "\"simplified\""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Mapping",
                "tool_name": "LocationIQ",
                "api_name": "Nearest",
                "api_description": "Snaps a coordinate to the street network and returns the nearest n matches. Where coordinates only supports a single {longitude},{latitude} entry.",
                "required_parameters": [
                    {
                        "name": "coordinates",
                        "type": "STRING",
                        "description": "String of format {longitude},{latitude};{longitude},{latitude}[;{longitude},{latitude} ...] or polyline({polyline}) or polyline6({polyline6}). polyline follows Google's polyline format with precision 5",
                        "default": "\"-0.16102,51.523854\""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "exclude",
                        "type": "STRING",
                        "description": "Additive list of classes to avoid, order does not matter. input Value - {class}[,{class}] Format - A class name determined by the profile or none.",
                        "default": "\"toll\""
                    },
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "Number of nearest segments that should be returned. [ integer >= 1 (default 1) ]",
                        "default": 3
                    },
                    {
                        "name": "bearings",
                        "type": "STRING",
                        "description": "Limits the search to segments with given bearing in degrees towards true north in clockwise direction. List of positive integer pairs separated by semi-colon and bearings array should be equal to length of coordinate array.\nInput Value :- {bearing};{bearing}[;{bearing} ...] Bearing follows the following format : bearing\t{value},{range} integer 0 .. 360,integer 0 .. 180",
                        "default": "\"10,20\""
                    },
                    {
                        "name": "generate_hints",
                        "type": "STRING",
                        "description": "Adds a Hint to the response which can be used in subsequent requests, see hints parameter. Input Value - true (default), false Format - Base64 String",
                        "default": "\"false\""
                    },
                    {
                        "name": "approaches",
                        "type": "STRING",
                        "description": "Keep waypoints on curb side. Input Value - {approach};{approach}[;{approach} ...] Format - curb or unrestricted (default)",
                        "default": "\"curb\""
                    },
                    {
                        "name": "radiuses",
                        "type": "STRING",
                        "description": "Limits the search to given radius in meters Radiuses array length should be same as coordinates array, eaach value separated by semi-colon. Input Value - {radius};{radius}[;{radius} ...] Radius has following format :- double >= 0 or unlimited (default)",
                        "default": "\"1000\""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you suggest the nearest tourist attractions to my current location? Additionally, provide me with the duration and distance to each attraction.",
        "relevant APIs": [
            [
                "LocationIQ",
                "Nearest"
            ],
            [
                "LocationIQ",
                "Matrix"
            ]
        ],
        "query_id": 44774
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "User feed (Video posts)",
                "api_description": "Get current user feed. \n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The influencer username. For example: **charlidamelio**\n\n- **NOTE:** By using **sec_uid** instead of the **username** request will be executed faster\n- To use **sec_uid** use input field **BELOW**",
                        "default": "amazon"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the output number of records. \n\n- Default is 100\n- Max number is 500\n",
                        "default": ""
                    },
                    {
                        "name": "max_cursor",
                        "type": "NUMBER",
                        "description": "Pagination cursor. \nTo get more videos, paste here **max_cursor** value that you have received in previous request response.",
                        "default": ""
                    },
                    {
                        "name": "sec_uid",
                        "type": "STRING",
                        "description": "**NOTE:** By using **sec_uid**, request will be executed faster then if you will use username\n\n**NOTE:** **sec_uid** can be obtained from the **User Information** endpoint\n\n**NOTE:** **sec_uid** example: MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"has_more\": \"bool\", \"max_cursor\": \"str\", \"media\": [{\"video_id\": \"str\", \"create_time\": \"int\", \"description\": \"str\", \"desc_language\": \"str\", \"author\": {\"unique_id\": \"str\", \"nickname\": \"str\", \"is_private\": \"bool\", \"language\": \"str\", \"signature\": \"str\", \"custom_verify\": \"str\", \"uid\": \"str\", \"sec_uid\": \"str\", \"avatar_large\": \"str\", \"avatar_thumb\": \"str\", \"region\": \"str\", \"ins_id\": \"str\", \"youtube_channel_title\": \"str\", \"youtube_channel_id\": \"str\", \"twitter_id\": \"str\", \"total_favorited\": \"int\", \"following_count\": \"int\", \"follower_count\": \"int\", \"aweme_count\": \"int\"}, \"video\": {\"video_no_watermark\": \"str\", \"video_with_watermark\": \"str\", \"cover\": \"str\", \"dynamic_cover\": \"str\", \"duration\": \"float\"}, \"statistics\": {\"play_count\": \"int\", \"whatsapp_share_count\": \"int\", \"comment_count\": \"int\", \"forward_count\": \"int\", \"like_count\": \"int\", \"share_count\": \"int\", \"download_count\": \"int\"}, \"music\": {\"id\": \"str\", \"title\": \"str\", \"playUrl\": \"str\", \"coverThumb\": \"str\", \"coverMedium\": \"str\", \"coverLarge\": \""
            },
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "User feed (Video posts) V2",
                "api_description": "Get user feed V2\n\nV2 - returns more data then older version of the endpoint",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the output number of records. \n\n- Default is 30\n- Max number is 30\n",
                        "default": ""
                    },
                    {
                        "name": "max_cursor",
                        "type": "NUMBER",
                        "description": "Pagination cursor. \nTo get more videos, paste here **max_cursor** value that you have received in previous request response.",
                        "default": ""
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The influencer username. For example: **charlidamelio**\n",
                        "default": "tiktok"
                    },
                    {
                        "name": "sec_uid",
                        "type": "STRING",
                        "description": "**NOTE:** By using **sec_uid**, request will be executed faster then if you will use username\n\n**NOTE:** **sec_uid** can be obtained from the **User Information** endpoint\n\n**NOTE:** **sec_uid** example: MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "Real-time hashtag search",
                "api_description": "Search for hashtags by keyword",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "blah"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": [
                        {
                            "cha_name": "str",
                            "view_count": "int",
                            "cid": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "Direct post url",
                "api_description": "Get direct post url",
                "required_parameters": [
                    {
                        "name": "video",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "Hashtag feed (Video posts)",
                "api_description": "Get current hashtag feed. \n\n- Before testing don't forget to fill out the name **OR** hashtag_id inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the output number of records. \n\n- Default is 100\n- Max number is 500\n",
                        "default": ""
                    },
                    {
                        "name": "hashtag_id",
                        "type": "STRING",
                        "description": "**NOTE:** By using **hashtag_id**, request will be executed faster then if you will use hashtag name\n\n**NOTE:** **hashtag_id** can be obtained from the **/live/hashtag** endpoint\n\n**NOTE:** **hashtag_id** example: 4232322",
                        "default": ""
                    },
                    {
                        "name": "max_cursor",
                        "type": "STRING",
                        "description": "Pagination cursor. \nTo get more videos, paste here **max_cursor** value that you have received in previous request response.",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Hashtag name. For example: **duett**\n\n- **NOTE:** By using **hashtag_id** instead of the hashtag **name** request will be executed faster\n- To use **hashtag_id** use input field **BELOW**",
                        "default": "summer"
                    }
                ],
                "method": "GET",
                "template_response": "{\"has_more\": \"bool\", \"max_cursor\": \"str\", \"media\": [{\"video_id\": \"str\", \"create_time\": \"int\", \"description\": \"str\", \"desc_language\": \"str\", \"author\": {\"unique_id\": \"str\", \"nickname\": \"str\", \"is_private\": \"bool\", \"language\": \"str\", \"signature\": \"str\", \"custom_verify\": \"str\", \"uid\": \"str\", \"sec_uid\": \"str\", \"avatar_large\": \"str\", \"avatar_thumb\": \"str\", \"region\": \"str\", \"ins_id\": \"str\", \"youtube_channel_title\": \"str\", \"youtube_channel_id\": \"str\", \"twitter_id\": \"str\", \"total_favorited\": \"int\", \"following_count\": \"int\", \"follower_count\": \"int\", \"aweme_count\": \"int\"}, \"video\": {\"video_no_watermark\": \"str\", \"video_with_watermark\": \"str\", \"cover\": \"str\", \"dynamic_cover\": \"str\", \"duration\": \"float\"}, \"statistics\": {\"play_count\": \"int\", \"whatsapp_share_count\": \"int\", \"comment_count\": \"int\", \"forward_count\": \"int\", \"like_count\": \"int\", \"share_count\": \"int\", \"download_count\": \"int\"}, \"music\": {\"id\": \"str\", \"title\": \"str\", \"playUrl\": \"str\", \"coverThumb\": \"str\", \"coverMedium\": \"str\", \"coverLarge\": \""
            },
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "Hashtag metadata (information)",
                "api_description": "Get hashtag metadata\n\nBasic informations as number of posts and etc",
                "required_parameters": [
                    {
                        "name": "hashtag",
                        "type": "STRING",
                        "description": "Hashtag name. For example: **summer**",
                        "default": "summer"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "challenge": {
                        "id": "str",
                        "title": "str",
                        "desc": "str",
                        "profileThumb": "str",
                        "profileMedium": "str",
                        "profileLarger": "str",
                        "isCommerce": "bool"
                    },
                    "stats": {
                        "videoCount": "int",
                        "viewCount": "int"
                    }
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "Hashtag metadata (information) V2",
                "api_description": "Get hashtag metadata V2\n\nV2 - returns more data then older version of the endpoint",
                "required_parameters": [
                    {
                        "name": "hashtag",
                        "type": "STRING",
                        "description": "Hashtag name. For example: **summer**",
                        "default": "summer"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "Trending feed (Video posts)",
                "api_description": "Get current trending feed. \n\n- Due to nature of this endpoint the **max_cursor** is not required. Each request can return different data by default\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the output number of records. \n\n- Default is 20\n- Max number is 20\n",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "Hashtag feed (Video posts) V2",
                "api_description": "Get hashtag feed V2. \n\nV2 - returns more data then older version of the endpoint, video without watermark and etc\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Hashtag name. For example: **duett**",
                        "default": "summer"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the output number of records. \n\n- Default is 20\n- Max number is 20\n",
                        "default": ""
                    },
                    {
                        "name": "max_cursor",
                        "type": "STRING",
                        "description": "Pagination cursor. \nTo get more videos, paste here **max_cursor** value that you have received in previous request response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Social Media Data TT",
                "api_name": "Video post metadata",
                "api_description": "Get single post metadata",
                "required_parameters": [
                    {
                        "name": "video",
                        "type": "STRING",
                        "description": "Post url",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to explore trending content on social media. Can you provide me with the current trending feed of videos? I would like to limit the output to 20 records. Please include the direct URLs to the videos and their statistics. Additionally, if possible, I would like to filter the feed based on a specific hashtag, such as #summer.",
        "relevant APIs": [
            [
                "Social Media Data TT",
                "Trending feed (Video posts)"
            ],
            [
                "Social Media Data TT",
                "Hashtag feed (Video posts) V2"
            ]
        ],
        "query_id": 5965
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "Get Tide Extreme Data",
                "api_description": "**Stormglass Tide Extreme Data**\n\nRetrieve information about high and low tide for a single coordinate. If nothing is specified, the returned values will be in relative to Mean Sea Level - MSL.",
                "required_parameters": [
                    {
                        "name": "lng",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "apiKey",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lat",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "endDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "startDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "datum",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "Get Tide Sea-level Data",
                "api_description": "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL.",
                "required_parameters": [
                    {
                        "name": "params",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "apiKey",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lat",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lng",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "datum",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "startDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "GET Astronomy Data",
                "api_description": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "lng",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "startDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Stormglass Complete",
                "api_name": "Get Tide Station Area Data",
                "api_description": "**Stormglass Tide Station Area Data**\n\nThe Tide Stations Area Request will list all available tide stations within a defined geographic area.\n\nTop right and bottom left coordinate draws a box with the selected coordinates. \nAll stations with in the area of this box are queried.",
                "required_parameters": [
                    {
                        "name": "botLng",
                        "type": "string",
                        "description": "",
                        "default": "Bottom right Lng"
                    },
                    {
                        "name": "apiKey",
                        "type": "string",
                        "description": "",
                        "default": "Stormglass API Key"
                    },
                    {
                        "name": "topLng",
                        "type": "string",
                        "description": "",
                        "default": "Top left Lng"
                    },
                    {
                        "name": "topLat",
                        "type": "string",
                        "description": "",
                        "default": "Top left Lat"
                    },
                    {
                        "name": "botLat",
                        "type": "string",
                        "description": "",
                        "default": "Bottom right  Lat"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm a photographer and want to capture the beauty of the beach during sunrise and sunset. Can you provide me with the astronomy data for a specific location? It would be great to know the sunrise and sunset times. Additionally, I would like to retrieve the high and low tide information for that location.",
        "relevant APIs": [
            [
                "Stormglass Complete",
                "GET Astronomy Data"
            ],
            [
                "Stormglass Complete",
                "Get Tide Extreme Data"
            ]
        ],
        "query_id": 38494
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Joke of the Day By Category",
                "api_description": "Get the joke of the day of specific category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Money"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Random Joke By Category",
                "api_description": "Get the random joke by category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Political"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Random Joke",
                "api_description": "Get the random joke from a collection of most rated and most popular jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Jokes",
                "api_description": "Access our huge collection of jokes and paginate through them based on your desired limit and sorting criteria.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "score:desc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Categories of Jokes",
                "api_description": "Get all available categories of our Jokes collection which can be used to filter jokes based on specific category.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Jokes By Specific Category",
                "api_description": "Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Women"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "score:desc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Joke of the Day",
                "api_description": "Get the joke of the day from a collection of most rated and most popular jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm writing a comedy script and I need a large collection of jokes. Can you give me a list of jokes with a limit of 200 and sorted by score in descending order? Also, provide me with the joke of the day and the available categories of jokes.",
        "relevant APIs": [
            [
                "World of Jokes",
                "Get Jokes"
            ],
            [
                "World of Jokes",
                "Get Joke of the Day"
            ],
            [
                "World of Jokes",
                "Get Categories of Jokes"
            ]
        ],
        "query_id": 32285
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "cat-facts",
                "api_name": "Get all facts about cat",
                "api_description": "This endpoint returns all available fact about cats in our database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "AllFacts": [
                        "list of str with length 279"
                    ]
                }
            },
            {
                "category_name": "Other",
                "tool_name": "cat-facts",
                "api_name": "Get a random fact about cats",
                "api_description": "This endpoint returns a random fact about cats",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Fact": "str"
                }
            }
        ],
        "query": "My friend is a cat lover and I want to surprise her with an interesting cat fact every day for a month. Can you provide me with a random cat fact and a list of all cat facts? This will make her days even more delightful.",
        "relevant APIs": [
            [
                "cat-facts",
                "Get all facts about cat"
            ],
            [
                "cat-facts",
                "Get a random fact about cats"
            ]
        ],
        "query_id": 32001
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Dad Jokes_v2",
                "api_name": "/dad-jokes/joke-of-the-day",
                "api_description": "Return joke of the day. Each new UTC day API will return a new joke. During the UTC day, API returns the same joke.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Dad Jokes_v2",
                "api_name": "/dad-jokes/search",
                "api_description": "Search for a joke by a keyword. Keyword will be used as is in the search. E.g. if you need to search for a joke with the keyword \"dad\" in it, you will need to pass \"dad\" as the keyword. If you need to search for a joke with specific word, you will need to pass keyword with surrounding spaces or punctuation, e.g. \" dad\". Search is not case-sensitive.\n\nAPI return is limited to 3 records per one search request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "'text' query parameter is required and should be more than 3 characters long.",
                        "default": "dad"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Dad Jokes_v2",
                "api_name": "/dad-jokes/random",
                "api_description": "Return random joke.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Dad Jokes_v2",
                "api_name": "/dad-jokes/health",
                "api_description": "Return the health status of the API. Returns current UTC time.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm planning a joke-themed party for my friends and I need some fresh material. Can you provide me with the joke of the day? Also, it would be great if you could give me a random joke to add some variety to the party. Finally, I'd like to check the health status of the Dad Jokes API. Please include the current UTC time in the response.",
        "relevant APIs": [
            [
                "Dad Jokes_v2",
                "/dad-jokes/joke-of-the-day"
            ],
            [
                "Dad Jokes_v2",
                "/dad-jokes/random"
            ],
            [
                "Dad Jokes_v2",
                "/dad-jokes/health"
            ]
        ],
        "query_id": 6959
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "Reqres - dont change!",
                "api_name": "Users",
                "api_description": "Users",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "per_page": "int",
                    "total": "int",
                    "total_pages": "int",
                    "data": [
                        {
                            "id": "int",
                            "email": "str",
                            "first_name": "str",
                            "last_name": "str",
                            "avatar": "str",
                            "_list_length": 6
                        }
                    ],
                    "support": {
                        "url": "str",
                        "text": "str"
                    }
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "Reqres - dont change!",
                "api_name": "User by id",
                "api_description": "User by id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "array[]",
                        "type": "ARRAY",
                        "description": "",
                        "default": "[\"asd\", \"dsa\"]"
                    },
                    {
                        "name": "array[]",
                        "type": "ARRAY",
                        "description": "",
                        "default": "2"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "int",
                        "email": "str",
                        "first_name": "str",
                        "last_name": "str",
                        "avatar": "str"
                    },
                    "support": {
                        "url": "str",
                        "text": "str"
                    }
                }
            }
        ],
        "query": "For my advertising project, I need to fetch user data from the Reqres API. Retrieve the list of users and their details, such as email, first name, last name, and avatar. Additionally, retrieve the user with ID 1 and display their email, first name, last name, and avatar. Ensure you include the support URL and text in the response.",
        "relevant APIs": [
            [
                "Reqres - dont change!",
                "Users"
            ],
            [
                "Reqres - dont change!",
                "User by id"
            ]
        ],
        "query_id": 21596
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Movie Showtimes",
                "api_name": "/api/all",
                "api_description": "Get all the sessions for all the available movies",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Movie Showtimes",
                "api_name": "/api/information",
                "api_description": "Get the sessions for the specified movie (IMDb id)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "IMDb movie id",
                        "default": "tt6105098"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a movie-themed party and I need to gather all the available movies and their showtimes at Cinemas NOS. Can you provide me with the sessions for all the movies? Additionally, I would like to get more information about a specific movie with the IMDb id 'tt6105098' to create a movie trivia game.",
        "relevant APIs": [
            [
                "Movie Showtimes",
                "/api/all"
            ],
            [
                "Movie Showtimes",
                "/api/information"
            ]
        ],
        "query_id": 66018
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get NFL Team Schedule",
                "api_description": "This call returns the schedule of any team, using the teamID that can be found in \"getNFLTeams\" call.\n\nCall needs to look like this:\n/getNFLTeamSchedule?teamID=1\nYou can also use the team Abbreviation:\n/getNFLTeamSchedule?teamAbv=CHI   \n\nThat will return a list of the team's games in the body. \n\nTo get a list of appropriate team abbreviations, use the getNFLTeams call.\n\nYou can also add the \"season\" parameter if you want to specify season.  Good for seasons 2022 and 2023.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "teamID",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "season",
                        "type": "STRING",
                        "description": "",
                        "default": "2022"
                    },
                    {
                        "name": "teamAbv",
                        "type": "STRING",
                        "description": "",
                        "default": "CHI"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": {
                        "team": "str",
                        "schedule": [
                            {
                                "gameID": "str",
                                "seasonType": "str",
                                "away": "str",
                                "teamIDHome": "str",
                                "gameDate": "str",
                                "gameStatus": "str",
                                "gameWeek": "str",
                                "teamIDAway": "str",
                                "home": "str",
                                "awayResult": "str",
                                "homePts": "str",
                                "gameTime": "str",
                                "homeResult": "str",
                                "awayPts": "str",
                                "_list_length": 20
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get NFL Games and Stats For a Single Player",
                "api_description": "This call will grab a map of all of the games a player has played this season.   \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \n\nExample:\nCorrect way to get the stats for Justin Fields for his game against Detroit on 11/13/2022 would be this:\n/getNFLGamesForPlayer?playerID=4362887&gameID=20221113_DET@CHI\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNFLGamesForPlayer?playerID=4362887\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNFLBoxScore call with that specific gameID.\n\nYou can choose which season you pull games from with parameter: season .   \nNFL Season that runs from 2022-2023 is season 2022.  And so on.\nIf you call without season parameter then it will pull back current season's games.\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "playerID",
                        "type": "STRING",
                        "description": "",
                        "default": "4362887"
                    },
                    {
                        "name": "gameID",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"statusCode\": \"int\", \"body\": {\"20230101_CHI@DET\": {\"Defense\": {\"fumblesLost\": \"str\", \"defensiveInterceptions\": \"str\", \"fumbles\": \"str\", \"fumblesRecovered\": \"str\"}, \"teamAbv\": \"str\", \"Passing\": {\"qbr\": \"str\", \"rtg\": \"str\", \"sacked\": \"str\", \"passAttempts\": \"str\", \"passAvg\": \"str\", \"passTD\": \"str\", \"passYds\": \"str\", \"int\": \"str\", \"passCompletions\": \"str\"}, \"longName\": \"str\", \"Rushing\": {\"rushAvg\": \"str\", \"rushYds\": \"str\", \"carries\": \"str\", \"longRush\": \"str\", \"rushTD\": \"str\"}, \"scoringPlays\": [{\"score\": \"str\", \"scorePeriod\": \"str\", \"homeScore\": \"str\", \"awayScore\": \"str\", \"teamID\": \"str\", \"scoreDetails\": \"str\", \"scoreType\": \"str\", \"scoreTime\": \"str\", \"team\": \"str\", \"playerIDs\": [\"list of str with length 3\"], \"_list_length\": 1}], \"playerID\": \"str\", \"team\": \"str\", \"teamID\": \"str\", \"gameID\": \"str\"}, \"20221224_BUF@CHI\": {\"Defense\": {\"fumblesLost\": \"str\", \"defensiveInterceptions\": \"str\", \"fumbles\": \"str\", \"fumblesRecovered\": \"str\"}, \"teamAbv\": \"str\", \"Passing\": {\"qbr\": \"str\", \"rtg\": \"str\", \"sac"
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get NFL Team Roster",
                "api_description": "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getNFLTeams\" call.\n\nRosters are updated a few times throughout the day.  Usually every hour.  \n \nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n\nCall needs to look like this:\n/getNFLTeamRoster?teamID=6\nor\n/getNFLTeamRoster?teamAbv=CHI\n\nThat will return a list of the team's current roster players in the body.\n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "archiveDate",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "teamAbv",
                        "type": "STRING",
                        "description": "",
                        "default": "CHI"
                    },
                    {
                        "name": "teamID",
                        "type": "STRING",
                        "description": "",
                        "default": "6"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": {
                        "team": "str",
                        "roster": [
                            {
                                "jerseyNum": "str",
                                "espnName": "str",
                                "espnHeadshot": "str",
                                "espnID": "str",
                                "cbsLongName": "str",
                                "cbsPlayerIDFull": "str",
                                "weight": "str",
                                "team": "str",
                                "espnIDFull": "str",
                                "lastGamePlayed": "str",
                                "espnLink": "str",
                                "pos": "str",
                                "school": "str",
                                "bDay": "str",
                                "teamID": "str",
                                "injury": {
                                    "description": "str",
                                    "injDate": "str",
                                    "designation": "str"
                                },
                                "exp": "str",
                                "age": "str",
                                "longName": "str",
                                "height": "str",
                                "playerID": "str",
                                "_list_length": 86
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get NFL Teams",
                "api_description": "This call will retrieve the list of NFL teams. Included is their name, city, abbreviation, and teamID which can be used in other calls.  Their current record and current W/L streak is included as well. Optional data that can be included are the team rosters and their schedules.      \n\nIncluded in team rosters is all players injuries. \n/getNFLTeams\n\nOptional parameters are ?schedules=true    or    ?rosters=true",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "schedules",
                        "type": "STRING",
                        "description": "",
                        "default": "true"
                    },
                    {
                        "name": "rosters",
                        "type": "STRING",
                        "description": "",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": "{\"statusCode\": \"int\", \"body\": [{\"teamAbv\": \"str\", \"teamCity\": \"str\", \"teamSchedule\": {\"20231218_KC@NE\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\": \"str\", \"gameTime\": \"str\", \"gameDate\": \"str\", \"teamIDHome\": \"str\", \"gameTime_epoch\": \"str\", \"gameWeek\": \"str\", \"teamIDAway\": \"str\", \"home\": \"str\"}, \"20231015_NE@LV\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\": \"str\", \"gameTime\": \"str\", \"gameDate\": \"str\", \"teamIDHome\": \"str\", \"gameTime_epoch\": \"str\", \"gameWeek\": \"str\", \"teamIDAway\": \"str\", \"home\": \"str\"}, \"20230825_NE@TEN\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\": \"str\", \"gameTime\": \"str\", \"gameDate\": \"str\", \"teamIDHome\": \"str\", \"gameTime_epoch\": \"str\", \"gameWeek\": \"str\", \"teamIDAway\": \"str\", \"home\": \"str\"}, \"20231105_WSH@NE\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\": \"str\", \"gameTime\": \"str\", \"gameDate\": \"str\", \"teamIDHome\": \"str\", \"gameTime_epoch\": \"str\", \"gameWeek\": \"str\", \"teamIDAway\": \"str\", \"home\": \"str\"}, \"20231022_BUF@NE\": {\"gameID\": \"str\", \"seasonType\": \"str\", \"away\""
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get NFL Betting Odds",
                "api_description": "This grabs NFL betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getNFLBettingOdds?gameDate=20230101\n/getNFLBettingOdds?gameID=20230101_CHI@DET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "gameDate",
                        "type": "STRING",
                        "description": "",
                        "default": "20230101"
                    },
                    {
                        "name": "gameID",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": {},
                    "error": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get Player Information",
                "api_description": "Call this to get general information on each player (name, team, experience, birthday, college, etc).\n\nYou can call with their playerID, if you know it.  playerID calls will always be quicker as it acts on the key of the table.  \n\nYou can also call with playerName.  This call will return a list of players who have that name.  If you want to include spaces in the search name, then use underscore.  So if you want to find Justin Fields, you can use \"Justin_fields\" and it will bring him back.  Or try with playerName=justin and it will return a list of guys with justin in their name.\n\n/getNFLPlayerInfo?playerID=4374033\n\n/getNFLPlayerInfo?playerName=justin_fields\n\netc",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "playerID",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "playerName",
                        "type": "STRING",
                        "description": "",
                        "default": "justin_fi"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": [
                        {
                            "espnID": "str",
                            "espnName": "str",
                            "espnIDFull": "str",
                            "weight": "str",
                            "jerseyNum": "str",
                            "cbsShortName": "str",
                            "team": "str",
                            "age": "str",
                            "espnLink": "str",
                            "bDay": "str",
                            "espnHeadshot": "str",
                            "cbsLongName": "str",
                            "injury": {
                                "description": "str",
                                "injDate": "str",
                                "designation": "str"
                            },
                            "teamID": "str",
                            "pos": "str",
                            "school": "str",
                            "cbsPlayerID": "str",
                            "longName": "str",
                            "height": "str",
                            "cbsPlayerIDFull": "str",
                            "lastGamePlayed": "str",
                            "playerID": "str",
                            "exp": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get Player List",
                "api_description": "Grabs all of this season's players and their IDs.  \n\nONE CALL is all you need to retrieve every player.  No need to call multiple times to get the full list.\n\nRosters are updated multiple times per day during the season.\n\nYou mainly will use this to match a player with his playerID.\n\nThere are no parameters, just a simple call..\n\n/getNFLPlayerList",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": [
                        {
                            "espnID": "str",
                            "espnName": "str",
                            "espnIDFull": "str",
                            "weight": "str",
                            "jerseyNum": "str",
                            "cbsShortName": "str",
                            "team": "str",
                            "age": "str",
                            "espnLink": "str",
                            "bDay": "str",
                            "espnHeadshot": "str",
                            "cbsLongName": "str",
                            "injury": {
                                "description": "str",
                                "injDate": "str",
                                "designation": "str"
                            },
                            "teamID": "str",
                            "pos": "str",
                            "school": "str",
                            "cbsPlayerID": "str",
                            "longName": "str",
                            "height": "str",
                            "cbsPlayerIDFull": "str",
                            "lastGamePlayed": "str",
                            "playerID": "str",
                            "exp": "str",
                            "_list_length": 3489
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get Daily NFL Schedule",
                "api_description": "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNFLGamesForDate?gameDate=20221211\nThe above call will return all of the games from December 11th, 2022.  Date must be in that format.  \nThey come back in a list format within the body of the response.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "gameDate",
                        "type": "STRING",
                        "description": "",
                        "default": "20221211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": [
                        {
                            "gameID": "str",
                            "seasonType": "str",
                            "away": "str",
                            "gameDate": "str",
                            "espnID": "str",
                            "teamIDHome": "str",
                            "gameStatus": "str",
                            "gameWeek": "str",
                            "teamIDAway": "str",
                            "home": "str",
                            "espnLink": "str",
                            "cbsLink": "str",
                            "gameTime": "str",
                            "season": "str",
                            "neutralSite": "bool",
                            "_list_length": 11
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get General Game Information",
                "api_description": "This call pulls back the most general information for a game: away team, home team, game date, and game start time.  All times are in Eastern (ET) time zone.  \ngameID is needed.  You can retrieve gameID from a few different calls.  The \"getNFLGamesForDate\" call or the \"getNFLTeamSchedule\" call will be the best ways to get the gameID's.   \n\nCall should look like this: \n/getNFLGameInfo?gameID=20221212_NE@ARI",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "gameID",
                        "type": "STRING",
                        "description": "",
                        "default": "20221212_NE@ARI"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "body": {
                        "espnID": "str",
                        "gameStatus": "str",
                        "season": "str",
                        "gameDate": "str",
                        "neutralSite": "str",
                        "teamIDHome": "str",
                        "cbsLink": "str",
                        "gameTime": "str",
                        "teamIDAway": "str",
                        "away": "str",
                        "gameWeek": "str",
                        "gameID": "str",
                        "seasonType": "str",
                        "espnLink": "str",
                        "home": "str"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "api_name": "Get NFL Game Box Score - Live Real Time",
                "api_description": "Retrieves the entire box score for a game either in progress or already completed for the current season.  The stats retrieved here are what are normally shown in box scores or used in fantasy games.  If there are any stats here that you'd like to see, please message me.  \n\nThe call looks like this /getNFLBoxScore?gameID=20221212_NE@ARI\n\nThe call needs to be exactly in the same format as above.  8 digit date, underscore, then the away team abbreviation, @, then home team abbreviation.  Complete list of team abbreviations can be retrieved with the getNFLTeams call or various other calls.  \n\nBut, the best way to find specific game ID's are either from the \"getNFLGamesForDate\" call, or the \"getNFLTeamSchedule\" call.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "gameID",
                        "type": "STRING",
                        "description": "",
                        "default": "20221212_NE@ARI"
                    }
                ],
                "method": "GET",
                "template_response": "{\"statusCode\": \"int\", \"body\": {\"gameStatus\": \"str\", \"teamStats\": {\"away\": {\"totalYards\": \"str\", \"rushingAttempts\": \"str\", \"rushingYards\": \"str\", \"fumblesLost\": \"str\", \"penalties\": \"str\", \"totalPlays\": \"str\", \"possession\": \"str\", \"passCompletionsAndAttempts\": \"str\", \"passingFirstDowns\": \"str\", \"interceptionsThrown\": \"str\", \"sacksAndYardsLost\": \"str\", \"thirdDownEfficiency\": \"str\", \"yardsPerPlay\": \"str\", \"redZoneScoredAndAttempted\": \"str\", \"teamID\": \"str\", \"defensiveOrSpecialTeamsTds\": \"str\", \"totalDrives\": \"str\", \"rushingFirstDowns\": \"str\", \"firstDowns\": \"str\", \"team\": \"str\", \"teamAbv\": \"str\", \"firstDownsFromPenalties\": \"str\", \"fourthDownEfficiency\": \"str\", \"passingYards\": \"str\", \"yardsPerRush\": \"str\", \"turnovers\": \"str\", \"yardsPerPass\": \"str\"}, \"home\": {\"totalYards\": \"str\", \"rushingAttempts\": \"str\", \"rushingYards\": \"str\", \"fumblesLost\": \"str\", \"penalties\": \"str\", \"totalPlays\": \"str\", \"possession\": \"str\", \"passCompletionsAndAttempts\": \"str\", \"passingFirstDowns\": \"str\", \"interceptionsThro"
            }
        ],
        "query": "I am organizing a fantasy football league and need to create a list of all players participating in the current NFL season. Can you fetch me the player list with their respective IDs? Additionally, I would like to get the team schedules and the daily NFL schedule for reference.",
        "relevant APIs": [
            [
                "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "Get Player List"
            ],
            [
                "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "Get NFL Team Schedule"
            ],
            [
                "Tank01 NFL Live In-Game Real Time Statistics NFL",
                "Get Daily NFL Schedule"
            ]
        ],
        "query_id": 60757
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Florida Realty API",
                "api_name": "getListing",
                "api_description": "Use this endpoint to get detailed information about a single condominium or townhouse.",
                "required_parameters": [
                    {
                        "name": "identifier",
                        "type": "STRING",
                        "description": "The unique identifier of a listing you'll got before from getListings.  Each OfferForPurchase has got an attribute named Identifier that is used  on this endpoint to get the details of the property.",
                        "default": "M5215311859"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"@context\": [\"list of str with length 10\"], \"@type\": \"str\", \"ActionStatus\": \"str\", \"Result\": {\"@type\": \"str\", \"DateModified\": \"str\", \"Creator\": {\"@type\": \"str\", \"Name\": \"str\", \"Address\": {\"@type\": \"str\", \"StreetAddress\": \"str\", \"PostalCode\": \"str\", \"AddressLocality\": \"str\", \"AddressCountry\": \"str\"}, \"ContactPoint\": {\"@type\": \"str\", \"Name\": \"str\", \"EMail\": \"str\"}, \"SameAs\": \"str\"}, \"Offers\": [{\"@context\": [\"list of str with length 15\"], \"@id\": \"str\", \"@type\": \"str\", \"Identifier\": \"str\", \"OfferedBy\": {\"@type\": \"str\", \"Name\": \"str\", \"JobTitle\": \"str\", \"Email\": \"str\", \"SameAs\": \"str\", \"Image\": {\"@type\": \"str\", \"ContentUrl\": \"str\"}, \"WorksFor\": {\"@type\": \"str\", \"Name\": \"str\", \"Telephone\": \"str\", \"Email\": \"str\", \"Logo\": {\"@type\": \"str\", \"ContentUrl\": \"str\"}}}, \"Price\": \"int\", \"PriceCurrency\": \"str\", \"PriceSpecification\": [{\"@type\": \"str\", \"Identifier\": \"str\", \"Name\": \"str\", \"Price\": \"int\", \"PriceCurrency\": \"str\", \"_list_length\": 1}], \"Availability\": \"str\", \"AvailabilityStarts\": \"str\", \"Busi"
            },
            {
                "category_name": "Business",
                "tool_name": "Florida Realty API",
                "api_name": "getImage",
                "api_description": "Load images of cities you retrieve by calling getCities().",
                "required_parameters": [
                    {
                        "name": "filename",
                        "type": "string",
                        "description": "The name of the image to load.",
                        "default": "capecoral.jpg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Florida Realty API",
                "api_name": "getCities",
                "api_description": "Get a list of supported cities with some data about those cities like the number of residents, the latitude, longitude, altitude  and a description and image of the city.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "@context": [
                        "list of str with length 12"
                    ],
                    "@type": "str",
                    "ActionStatus": "str",
                    "Result": [
                        {
                            "@type": "str",
                            "Identifier": "str",
                            "Name": "str",
                            "Latitude": "float",
                            "Longitude": "float",
                            "Altitude": {
                                "@type": "str",
                                "UnitCode": "str",
                                "Value": "int"
                            },
                            "Description": [
                                {
                                    "@value": "str",
                                    "@language": "str",
                                    "_list_length": 2
                                }
                            ],
                            "NumberOfResidents": "int",
                            "SameAs": "str",
                            "Photo": {
                                "@type": "str",
                                "EncodingFormat": "str",
                                "ContentUrl": "str"
                            },
                            "Address": {
                                "@type": "str",
                                "AddressRegion": "str"
                            },
                            "_list_length": 13
                        }
                    ]
                }
            },
            {
                "category_name": "Business",
                "tool_name": "Florida Realty API",
                "api_name": "getListings",
                "api_description": "Use this endpoint to retrieve a list of condominiums and townhouses in Southwest Florida and on the East Coast.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Supported values are RELEVANCE (best match), NEWEST (newest first), PRICE_LOW (cheapest first), PRICE_HIGH (cheapest last). By default RELEVANCE is used.",
                        "default": "RELEVANCE"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "If you want to implement a paging use offset. The maximum items are defined by the parameter limit starting at offset For example, to return for the frist 10 items set offset to 0 and limit to 10. To return the next 10 items set offset to 10 and limit to 10 and so on. By default offset ist 0.",
                        "default": "0"
                    },
                    {
                        "name": "price_max",
                        "type": "NUMBER",
                        "description": "The maximum price of the condos and townhouses you search for in US Dollar. By default 250000 for $250,000 is used.",
                        "default": "250000"
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of the city to search for condos and townhouses. Supported cities are Cape Coral, Fort Myers, West Palm Beach, Lake Worth, Lantana, Boynton Beach, Delray Beach, Boca Raton, Pompano Beach, Fort Lauderdale. New supported cities are Naples, Tampa and Saint Petersburg. By default Cape Coral is used.",
                        "default": "Cape Coral"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "The maximum number of items to return in the result list. By default 50 is used.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": "{\"@context\": [\"list of str with length 10\"], \"@type\": \"str\", \"ActionStatus\": \"str\", \"Result\": {\"@type\": \"str\", \"Creator\": {\"@type\": \"str\", \"Name\": \"str\", \"Address\": {\"@type\": \"str\", \"StreetAddress\": \"str\", \"PostalCode\": \"str\", \"AddressLocality\": \"str\", \"AddressCountry\": \"str\"}, \"ContactPoint\": {\"@type\": \"str\", \"Name\": \"str\", \"EMail\": \"str\"}, \"SameAs\": \"str\"}, \"Offers\": [{\"@context\": [\"list of str with length 15\"], \"@type\": \"str\", \"@id\": \"str\", \"Identifier\": \"str\", \"OfferedBy\": {\"@type\": \"str\", \"Name\": \"str\", \"JobTitle\": \"str\", \"WorksFor\": {\"@type\": \"str\", \"Name\": \"str\"}}, \"Price\": \"int\", \"PriceCurrency\": \"str\", \"Availability\": \"str\", \"BusinessFunction\": \"str\", \"ItemOffered\": {\"@type\": \"str\", \"@id\": \"str\", \"FloorLevel\": \"NoneType\", \"AmenityFeature\": \"empty list\", \"FloorSize\": {\"@type\": \"str\", \"Name\": \"str\", \"Value\": \"int\", \"UnitCode\": \"str\", \"UnitText\": \"str\"}, \"NumberOfBathroomsTotal\": \"int\", \"NumberOfBedrooms\": \"int\", \"NumberOfFullBathrooms\": \"int\", \"NumberOfPartialBathrooms\": \"int\", "
            }
        ],
        "query": "My friend is interested in purchasing a townhouse in West Palm Beach. Could you retrieve a list of available listings in West Palm Beach and provide the image of the city? Also, please generate a brief report comparing the prices of the listings in West Palm Beach and Fort Lauderdale.",
        "relevant APIs": [
            [
                "Florida Realty API",
                "getListings"
            ],
            [
                "Florida Realty API",
                "getCities"
            ],
            [
                "Florida Realty API",
                "getImage"
            ]
        ],
        "query_id": 24810
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Nowcast",
                "api_description": "3-hour forecast in 15-minute time steps.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "relHumidity": "int",
                            "dewPoint": "int",
                            "windDir": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "windDirString": "str",
                            "precipProb": "int",
                            "snowRate": "int",
                            "precipRate": "int",
                            "cloudiness": "int",
                            "thunderProb": "int",
                            "uvIndex": "int",
                            "pressure": "float",
                            "precipType": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Three-hourly",
                "api_description": "A longer three-hourly forecast up to 14 days.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "history",
                        "type": "BOOLEAN",
                        "description": "Whether to include 24 hours of past data.",
                        "default": "0"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "relHumidity": "int",
                            "dewPoint": "int",
                            "windDir": "int",
                            "windDirString": "str",
                            "precipProb": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "cloudiness": "int",
                            "thunderProb": "int",
                            "uvIndex": "int",
                            "pressure": "float",
                            "visibility": "int",
                            "solarRadiation": "int",
                            "precipType": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Daily",
                "api_description": "Daily forecast.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "date": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "maxTemp": "int",
                            "minTemp": "int",
                            "maxFeelsLikeTemp": "int",
                            "minFeelsLikeTemp": "int",
                            "maxRelHumidity": "int",
                            "minRelHumidity": "int",
                            "maxDewPoint": "int",
                            "minDewPoint": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "maxWindSpeed": "int",
                            "windDir": "int",
                            "maxWindGust": "int",
                            "precipProb": "int",
                            "cloudiness": "int",
                            "sunrise": "str",
                            "sunset": "str",
                            "sunriseEpoch": "int",
                            "sunsetEpoch": "int",
                            "moonrise": "str",
                            "moonset": "str",
                            "moonPhase": "int",
                            "uvIndex": "int",
                            "minVisibility": "int",
                            "pressure": "float",
                            "confidence": "str",
                            "solarRadiationSum": "int",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Location info",
                "api_description": "Metadata for location.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "101275339"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "country": "str",
                    "timezone": "str",
                    "language": "str",
                    "adminArea": "str",
                    "adminArea2": "NoneType",
                    "adminArea3": "NoneType",
                    "lon": "float",
                    "lat": "float"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Current",
                "api_description": "Current weather estimate for location.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language (ISO 639-1 codes). Options: de, en, es, fr, it, pl, ru, fi, sv, nl, ko, pt, th, tr, zh, zh_TW (Chinese in Taiwan), zh_CN (Chinese in China). (default en)",
                        "default": "en"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "current": {
                        "time": "str",
                        "symbol": "str",
                        "symbolPhrase": "str",
                        "temperature": "int",
                        "feelsLikeTemp": "int",
                        "relHumidity": "int",
                        "dewPoint": "int",
                        "windSpeed": "int",
                        "windDir": "int",
                        "windDirString": "str",
                        "windGust": "int",
                        "precipProb": "int",
                        "precipRate": "int",
                        "cloudiness": "int",
                        "thunderProb": "int",
                        "uvIndex": "int",
                        "pressure": "float",
                        "visibility": "int"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Latest observations",
                "api_description": "Observations from nearby representative weather stations.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "observations": [
                        {
                            "station": "str",
                            "distance": "str",
                            "time": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "symbol": "str",
                            "windDirString": "str",
                            "windDir": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "pressure": "int",
                            "relHumidity": "int",
                            "visibility": "int",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Location search",
                "api_description": "Search for locations by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "string",
                        "description": "",
                        "default": "mumbai"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "in"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "locations": [
                        {
                            "id": "int",
                            "name": "str",
                            "country": "str",
                            "timezone": "str",
                            "language": "str",
                            "adminArea": "str",
                            "adminArea2": "NoneType",
                            "adminArea3": "NoneType",
                            "lon": "float",
                            "lat": "float",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Hourly",
                "api_description": "Hourly forecast.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "history",
                        "type": "BOOLEAN",
                        "description": "Whether to include 24 hours of past data.",
                        "default": "0"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "relHumidity": "int",
                            "dewPoint": "int",
                            "windDir": "int",
                            "windDirString": "str",
                            "precipProb": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "cloudiness": "int",
                            "thunderProb": "int",
                            "uvIndex": "int",
                            "pressure": "float",
                            "visibility": "int",
                            "solarRadiation": "int",
                            "precipType": "str",
                            "_list_length": 8
                        }
                    ]
                }
            }
        ],
        "query": "I'm a photographer looking for the perfect sunset location. Can you suggest some places with stunning sunsets and provide me with the daily weather forecast for those locations? I also need information on the best camera settings for capturing sunsets.",
        "relevant APIs": [
            [
                "Foreca Weather",
                "Daily"
            ],
            [
                "Foreca Weather",
                "Location search"
            ]
        ],
        "query_id": 21776
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "Indie Songs : DistroKid & Unsigned",
                "api_name": "Get songs with ALL metadata and stats (play counts)",
                "api_description": "Get all tracks with full metadata including recent Spotify play counts.\n\nAlso Apple song URL, Spotify song URL, Composer name, ISRC, Label, Release date, Genres, Apple IDs, Spotify IDs are included.",
                "required_parameters": [
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "20"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Music",
                "tool_name": "Indie Songs : DistroKid & Unsigned",
                "api_name": "Get Top 50 indie songs",
                "api_description": "Get TOP 50 indie songs based on their daily stream increase ratio",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Music",
                "tool_name": "Indie Songs : DistroKid & Unsigned",
                "api_name": "Search indie songs by filters",
                "api_description": "Search song by track name,  artist name, label, release date, ISRC, composer name, genre",
                "required_parameters": [
                    {
                        "name": "by",
                        "type": "STRING",
                        "description": "'trackname', 'artistname', 'isrc', 'label',  'genre', 'composer_name', or 'release_date'",
                        "default": "trackname"
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "love"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Music",
                "tool_name": "Indie Songs : DistroKid & Unsigned",
                "api_name": "Get CSV of Top 50 Indie Songs",
                "api_description": "Get TOP 50 indie songs by their daily stream increase in a CSV format using URL",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm a music enthusiast and I want to discover new indie songs. Can you give me a list of the top 50 indie songs based on their daily stream increase ratio? Additionally, I would like to know the full metadata, including recent Spotify play counts, for these songs.",
        "relevant APIs": [
            [
                "Indie Songs : DistroKid & Unsigned",
                "Get Top 50 indie songs"
            ],
            [
                "Indie Songs : DistroKid & Unsigned",
                "Get songs with ALL metadata and stats (play counts)"
            ]
        ],
        "query_id": 41444
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Climate Change Live_v27",
                "api_name": "Home page",
                "api_description": "This is the API's home page",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Climate Change Live_v27",
                "api_name": "Get individual news source news",
                "api_description": "This API gets news from individual news source",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "guardian"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Climate Change Live_v27",
                "api_name": "Get all climate change news",
                "api_description": "This endpoint will return back all news about Climate Change from all over the world.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm working on a research paper about climate change and I need a comprehensive list of all the climate change news articles available. Can you fetch those for me? I also require articles specifically from The Guardian. Additionally, it would be helpful if you can provide me with the API's home page for further reference.",
        "relevant APIs": [
            [
                "Climate Change Live_v27",
                "Get all climate change news"
            ],
            [
                "Climate Change Live_v27",
                "Get individual news source news"
            ],
            [
                "Climate Change Live_v27",
                "Home page"
            ]
        ],
        "query_id": 55323
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "Nutrition by API-Ninjas",
                "api_name": "/v1/nutrition",
                "api_description": "API Ninjas Nutrition API endpoint.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query text to extract nutrition information (e.g. **bacon and 3 eggs**).",
                        "default": "1lb brisket with fries"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "calories": "float",
                    "serving_size_g": "float",
                    "fat_total_g": "float",
                    "fat_saturated_g": "float",
                    "protein_g": "float",
                    "sodium_mg": "int",
                    "potassium_mg": "int",
                    "cholesterol_mg": "int",
                    "carbohydrates_total_g": "float",
                    "fiber_g": "float",
                    "sugar_g": "float"
                }
            }
        ],
        "query": "I'm planning a family dinner and I need to know the nutrition information for a recipe. Can you extract the nutrition data for a dish that includes 2 pounds of chicken, 1 cup of rice, and 3 tablespoons of olive oil?",
        "relevant APIs": [
            [
                "Nutrition by API-Ninjas",
                "/v1/nutrition"
            ]
        ],
        "query_id": 88193
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "[Embedded signing] Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get field and field invite id",
                "api_description": "The endpoint returns field and field invite ids.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "id of the document",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get signing links",
                "api_description": "The endpoint allows to get all existing signing links and IDs of these signing links.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "code": "int"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids for template",
                "api_description": "The endpoint allows to get role ids for a template.",
                "required_parameters": [
                    {
                        "name": "template_id",
                        "type": "string",
                        "description": "ID of the template.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            }
        ],
        "query": "I have a document with ID '123abc' and I need to get the role IDs and field IDs. Can you provide me with the details?",
        "relevant APIs": [
            [
                "SignNow",
                "Get role ids"
            ],
            [
                "SignNow",
                "Get field and field invite id"
            ]
        ],
        "query_id": 49991
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": " Quotes API",
                "api_name": "get_quotes_by_max_char_count",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "max_char_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": " Quotes API",
                "api_name": "get_quotes_by_keyword",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Social",
                "tool_name": " Quotes API",
                "api_name": "get_quotes_by_source",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "source",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Social",
                "tool_name": " Quotes API",
                "api_name": "get_random_quote",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "source": "str",
                    "quote": "str",
                    "char_count": "int"
                }
            }
        ],
        "query": "I'm a content creator working on a project about happiness. Can you provide me with quotes about happiness with a maximum character count of 100? Additionally, could you give me quotes from different sources like Aristotle, Dalai Lama, and Albert Einstein?",
        "relevant APIs": [
            [
                " Quotes API",
                "get_quotes_by_max_char_count"
            ],
            [
                " Quotes API",
                "get_quotes_by_source"
            ]
        ],
        "query_id": 22937
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Zodiac Sign API",
                "api_name": "Getallsign",
                "api_description": "Get all sign. This returns all the available signs",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Aquarius": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Aries": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Cancer": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Capricorn": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Gemini": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Leo": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Libra": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Pisces": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Sagittarius": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Scorpio": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Taurus": {
                        "date": "str",
                        "personality": "str"
                    },
                    "Virgo": {
                        "date": "str",
                        "personality": "str"
                    }
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Zodiac Sign API",
                "api_name": "SearchZodiacbySign",
                "api_description": "Search Zodiac by sign. This returns the value of the selected sign",
                "required_parameters": [
                    {
                        "name": "sign",
                        "type": "STRING",
                        "description": "Ensure the first letter of the value is in capital letter",
                        "default": "Gemini"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "personality": "str"
                }
            }
        ],
        "query": "I want to surprise my partner with a personalized gift based on their zodiac sign. Can you provide me with the personality traits and dates for all the zodiac signs? Also, I'd like to search for the personality traits of the Virgo sign.",
        "relevant APIs": [
            [
                "Zodiac Sign API",
                "Getallsign"
            ],
            [
                "Zodiac Sign API",
                "SearchZodiacbySign"
            ]
        ],
        "query_id": 56226
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Instant Cameroon News",
                "api_name": "Retrieve data",
                "api_description": "Endpoint, which you use to retrieve the data you need. This endpoint can accept some parameters like page, search key and data range",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rank",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Instant Cameroon News",
                "api_name": "Home page",
                "api_description": "Home and Welcome page that introduces the API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to create a news aggregator app for Cameroon. Can you provide me with the necessary data, such as news titles, descriptions, and source URLs? It would be great if I can display the news articles on my app's home page.",
        "relevant APIs": [
            [
                "Instant Cameroon News",
                "Retrieve data"
            ],
            [
                "Instant Cameroon News",
                "Home page"
            ]
        ],
        "query_id": 47301
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "German Police and Crime News Live",
                "api_name": "Get Individual Source News",
                "api_description": "This endpoint will return back all news about police, crime, accidents and more like this from germany from a specific news source.",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "tag24"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str",
                    "info": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "German Police and Crime News Live",
                "api_name": "Get all Police News",
                "api_description": "This endpoint will return back all news about police, crime, accidents and more like this from germany.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "url": "str",
                    "source": "str"
                }
            }
        ],
        "query": "I'm researching crime trends in Germany. Can you provide me with all the news related to police, crime, and accidents? It would be great if you could fetch news from a specific news source called 'tag24'. Please include the title, URL, and source of each news article.",
        "relevant APIs": [
            [
                "German Police and Crime News Live",
                "Get all Police News"
            ],
            [
                "German Police and Crime News Live",
                "Get Individual Source News"
            ]
        ],
        "query_id": 81195
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Cloud Cast",
                "api_name": "Get humidty",
                "api_description": "Get the humidity for the current city",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Cloud Cast",
                "api_name": "Get wind speed",
                "api_description": "Get the current wind speed",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Cloud Cast",
                "api_name": "Get hourly forecast",
                "api_description": "Get the hourly forecast",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Cloud Cast",
                "api_name": "Get the forecast",
                "api_description": "Get the forecast for the current city",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Cloud Cast",
                "api_name": "Get current weather",
                "api_description": "Gets the current weather for the inputted city name",
                "required_parameters": [
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a picnic with my friends this weekend. Can you fetch the wind speed for the picnic location? Also, provide the current weather conditions and the forecast for the picnic day.",
        "relevant APIs": [
            [
                "Cloud Cast",
                "Get wind speed"
            ],
            [
                "Cloud Cast",
                "Get current weather"
            ],
            [
                "Cloud Cast",
                "Get the forecast"
            ]
        ],
        "query_id": 72285
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Top Coins By Followers",
                "api_description": "Retrieve real time top 10 coins by Followers\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers value\n\n**Definitions:**\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n- All results are in real time",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Rank": "int",
                    "CoinName": "str",
                    "CoinTicker": "str",
                    "Value": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Top Coins By Sentiment",
                "api_description": "Retrieve real time top 10 coins by Sentiment\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Sentiment value\n\n**Definitions:**\n\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\n**Details:**\n- All results are in real time",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Daily Influencer Posts by Coin Ticker",
                "api_description": "Retrieve news and posts from Top Influencers in social media ordered by date by coin ticker\nThis endpoint contains results on a specific coin. To search for influencer posts on all coins coins check \"Get Daily Influencer Posts\"\n\n**Input:**\n\n- Coin Ticker (Required)\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Publisher\n- Source\n- Related coins\n- Event Color\n- Number of followers\n- Event text\n\n**Definitions:**\n\n- Publisher: User name of the publisher of the event in social media\n- Source: Social media where the post was published\n- Related coins: Coins mentioned in the post\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Number of followers: Influencer\u00b4s number of followers in social media\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC",
                "required_parameters": [
                    {
                        "name": "coinTicker",
                        "type": "STRING",
                        "description": "",
                        "default": "BTC"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Coin Metrics By Name",
                "api_description": "Retrieve  coin\u00b4s real time social media metrics by Coin name\nIn the case you want to retrieve historical data check \"Get Coin Historical Metrics by Name\" or \"Get Coin Historical Metrics by Ticker\"\n\n**Input:** \n- Security Name: Coin Name (Required)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All dates are in UTC\n- Results are on 1 day timeframe",
                "required_parameters": [
                    {
                        "name": "securityName",
                        "type": "STRING",
                        "description": "",
                        "default": "bitcoin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Coin Metrics By Ticker",
                "api_description": "Retrieve coin\u00b4s  real time social media metrics by Coin ticker\nIn the case you want to retrieve historical data check \"Get Coin Historical Metrics by Name\" or \"Get Coin Historical Metrics by Ticker\"\n\n**Input:** \n- Security Ticker: Coin Ticker (Required)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n\n- All dates are in UTC\n- Results are on 1 day timeframe",
                "required_parameters": [
                    {
                        "name": "securityTicker",
                        "type": "STRING",
                        "description": "",
                        "default": "eth"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Top Coins By Followers Change",
                "api_description": "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers change value\n\n**Definitions:**\n\n- FollowersChange: Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days\n\n\n**Details:**\n- All results are in real time",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Top Coins By Mentions Change",
                "api_description": "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Mentions change value\n\n**Definitions:**\n- MentionsChange: Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All results are in real time",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Top Coins By Mentions",
                "api_description": "Retrieve real time top 10 coins by Mentions\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Mentions value\n\n**Definitions:**\n- Mentions: Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\n**Details:**\n- All results are in real time",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Top Coins By Sentiment Change",
                "api_description": "Retrieve real time top 10 coins by Sentiment change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Sentiment change value\n\n**Definitions:**\n- Sentiment Change: Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All results are in real time",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Crowdsense",
                "api_name": "Get Coin Historical Metrics By Name",
                "api_description": "Retrieve  coin\u00b4s historical social media metrics by Coin Name\nIn the case you want to retrieve real time data check \"Get Coin Metrics by Name\" or \"Get Coin Metrics by Ticker\"\n\n**Input:** \n-  Date (MM/DD/YYYY HH:HH AM/PM) (Required)\n- Security Name: Coin Name (Required)\n- TimeFrame: 1d, 1h, 8h (Optional)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Weighted Sentiment\n- Weighted sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security Name\n- TimeFrame\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tWeightedSentiment \u2013  Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)  in the requested date with TimeFrame required. [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers] \n\u2022\tWeightedSentimentChange - Percentage change of Weighted Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n\n- All dates are in UTC\n- Historical date is only avaliable from 7 days back",
                "required_parameters": [
                    {
                        "name": "securityName",
                        "type": "STRING",
                        "description": "",
                        "default": "bitcoin"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "",
                        "default": "04/26/2022 06:00 PM"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timeFrame",
                        "type": "STRING",
                        "description": "",
                        "default": "1D"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a cryptocurrency trader and I need real-time data on the most mentioned coins and their sentiment. Can you retrieve the top coins by mentions and their mentions value? Additionally, fetch the top coins by sentiment change in the last 24 hours.",
        "relevant APIs": [
            [
                "Crowdsense",
                "Get Top Coins By Mentions"
            ],
            [
                "Crowdsense",
                "Get Top Coins By Sentiment Change"
            ]
        ],
        "query_id": 45490
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get game statistics",
                "api_description": "You are a statistics freak? We too! Here you can check all statistics!",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9576185"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get game lineup",
                "api_description": "With \"Get game lineup\" you'll receive the full lineup and if it is confirmed or a forecast",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9576185"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get best player",
                "api_description": "\"Get best player\" will return the best player of each team with their rating.",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9576185"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get pregame form",
                "api_description": "If you're a detail hunter this is the place for you! Get the information about the last games both teams accomplished.",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9831832"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get game details",
                "api_description": "With \"Get game details\" you'll get the basic information about the game you were looking for.",
                "required_parameters": [
                    {
                        "name": "gameId",
                        "type": "STRING",
                        "description": "",
                        "default": "9726635"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get scheduled games",
                "api_description": "With \"Get scheduled games\" you'll receive all games which a scheduled for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "",
                        "default": "2021-10-15"
                    },
                    {
                        "name": "sport",
                        "type": "STRING",
                        "description": "",
                        "default": "football"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get live games",
                "api_description": "With \"Get live games\" you'll receive a full list of all live games with their current status and score.",
                "required_parameters": [
                    {
                        "name": "sport",
                        "type": "STRING",
                        "description": "",
                        "default": "football"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get countries by sport",
                "api_description": "With \"Get countries by sport\" you'll receive all countries with specific sport ids which ever supports the sport you've searched.",
                "required_parameters": [
                    {
                        "name": "sport",
                        "type": "STRING",
                        "description": "",
                        "default": "ice-hockey"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get number of games today",
                "api_description": "With \"Get number of games today\" you'll receive all sports we support, how many games are today and how many of them are live.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "ViperScore",
                "api_name": "Get all competitions",
                "api_description": "With \"Get all competitions\" you'll receive a list with top competitions (like NFL, Premier League, ...) and all competitions from every sport.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a sports enthusiast, and I want to know the number of games scheduled for today in different sports. Can you provide me with this information? Additionally, I would like to know the countries that support the sport of ice hockey. Please include the list of countries as well.",
        "relevant APIs": [
            [
                "ViperScore",
                "Get number of games today"
            ],
            [
                "ViperScore",
                "Get countries by sport"
            ]
        ],
        "query_id": 60936
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Climate News API_v2",
                "api_name": "Get All Climate Change Related News",
                "api_description": "This endpoint will return all news about Climate change from all around the world.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Climate News API_v2",
                "api_name": "Get Individual News Source news",
                "api_description": "Get news about climate change from a specific newspaper.",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "thetimes"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I run a news agency and I need to gather all the latest news about climate change from around the world. Can you provide me with the API that fetches all climate change-related news? Additionally, I want to retrieve news specifically from 'The Times' newspaper using the Get Individual News Source news API.",
        "relevant APIs": [
            [
                "Climate News API_v2",
                "Get All Climate Change Related News"
            ],
            [
                "Climate News API_v2",
                "Get Individual News Source news"
            ]
        ],
        "query_id": 72373
    }
]