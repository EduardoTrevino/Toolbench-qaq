[
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "LeagueOverallTopPlayers",
                "api_description": "Get the overall top players for a specific cricket league in a given season, including player statistics and other relevant information.",
                "required_parameters": [
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The ID of the cricket tournament for which you want to retrieve the overall top players.",
                        "default": 11165
                    },
                    {
                        "name": "seasonId",
                        "type": "NUMBER",
                        "description": "The ID of the cricket season for which you want to retrieve the overall top players.",
                        "default": 41321
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"topPlayers\": {\"battingAverage\": [{\"playedEnough\": \"bool\", \"player\": {\"cricketPlayerInfo\": {}, \"id\": \"int\", \"name\": \"str\", \"position\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"userCount\": \"int\"}, \"statistics\": {\"appearances\": \"int\", \"battingAverage\": \"float\", \"battingInnings\": \"int\", \"battingMatches\": \"int\", \"id\": \"int\", \"innings\": \"int\", \"matches\": \"int\", \"runsScored\": \"int\", \"type\": \"str\"}, \"team\": {\"id\": \"int\", \"name\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"_list_length\": 15}], \"battingStrikeRate\": [{\"playedEnough\": \"bool\", \"player\": {\"cricketPlayerInfo\": {}, \"id\": \"int\", \"name\": \"str\", \"position\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"userCount\": \"int\"}, \"statistics\": {\"appearances\": \"int\", \"battingInnings\": \"int\", \"battingMatches\": \"int\", \"battingStrikeRate\": \"int\", \"id\": \"int\", \"innings\": \"int\", \"matches\": \"int\""
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "LeagueTotalTeamEvents",
                "api_description": "Get the total team events for a specific Cricket league for a given season by providing its unique tournament ID and season ID.",
                "required_parameters": [
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The unique tournament ID for which you want to retrieve the league's total team events.",
                        "default": 11184
                    },
                    {
                        "name": "seasonId",
                        "type": "NUMBER",
                        "description": "The season ID for which you want to retrieve the league's total team events.",
                        "default": 16828
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"tournamentTeamEvents\": {\"65888\": {\"187575\": [{\"awayScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"inningDeclare\": \"int\", \"overs\": \"int\", \"runRate\": \"float\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"awayTeam\": {\"disabled\": \"bool\", \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"customId\": \"str\", \"finalResultOnly\": \"bool\", \"homeScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"inningDeclare\": \"int\", \"overs\": \"int\", \"runRate\": \"float\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"homeTeam\": {\"disabled\": \"bool\", \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \""
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "PreMatchForm",
                "api_description": "Get pre-match form information for a specific cricket match.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the cricket match for which you want to get pre-match form information.",
                        "default": 10534787
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "awayTeam": {
                        "form": [
                            "list of str with length 5"
                        ],
                        "position": "int",
                        "value": "str"
                    },
                    "homeTeam": {
                        "form": [
                            "list of str with length 5"
                        ],
                        "position": "int",
                        "value": "str"
                    },
                    "label": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "get-player-placeholder",
                "api_description": "Get the player placeholder image in PNG format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "Categories",
                "api_description": "Get a list of all cricket categories.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "categories": [
                        {
                            "flag": "str",
                            "id": "int",
                            "name": "str",
                            "priority": "int",
                            "slug": "str",
                            "sport": {
                                "id": "int",
                                "name": "str",
                                "slug": "str"
                            },
                            "_list_length": 15
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "LeagueNextMatches",
                "api_description": "Get a list of next matches for a cricket league using the tournament ID, season ID, and page number.",
                "required_parameters": [
                    {
                        "name": "seasonId",
                        "type": "NUMBER",
                        "description": "The season ID for which you want to retrieve the league's next matches.",
                        "default": 44608
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Zero-based page number.",
                        "default": ""
                    },
                    {
                        "name": "tournamentId",
                        "type": "NUMBER",
                        "description": "The unique tournament ID for which you want to retrieve the league's next matches.",
                        "default": 19048
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "TeamLastMatches",
                "api_description": "Get the last matches for a cricket team by specifying the team ID and the page number (starting from 0).",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number (starting from 0) of the last matches you want to retrieve.",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the cricket team for which you want to retrieve the last matches.",
                        "default": 187760
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "MatchDetails",
                "api_description": "Get detailed information for a specific cricket match by providing the match ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the cricket match for which you want to get the details.",
                        "default": 10534787
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"event\": {\"awayScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"overs\": \"float\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"awayTeam\": {\"country\": {}, \"fullName\": \"str\", \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"bet365ExcludedCountryCodes\": [\"list of str with length 6\"], \"changes\": {\"changeTimestamp\": \"int\", \"changes\": [\"list of str with length 6\"]}, \"coverage\": \"int\", \"cricketBallProperties\": [\"list of str with length 19\"], \"crowdsourcingDataDisplayEnabled\": \"bool\", \"currentBattingTeamId\": \"int\", \"customId\": \"str\", \"endTimestamp\": \"int\", \"fanRatingEvent\": \"bool\", \"finalResultOnly\": \"bool\", \"hasBet365LiveStream\": \"bool\", \"hasGlobalHighlights\": \"bool\", \"homeScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\":"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "ManagerPlaceholderImage",
                "api_description": "Get the manager placeholder image in PNG format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "CricketAPI2",
                "api_name": "MatchSchedules",
                "api_description": "This operation returns the cricket match schedules for the given date, including match timings, teams, and other relevant information.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "NUMBER",
                        "description": "The year for which you want to retrieve the cricket match schedules (e.g., 2022).",
                        "default": 2022
                    },
                    {
                        "name": "day",
                        "type": "NUMBER",
                        "description": "The day of the month for which you want to retrieve the cricket match schedules (1-31).",
                        "default": 14
                    },
                    {
                        "name": "month",
                        "type": "NUMBER",
                        "description": "The month for which you want to retrieve the cricket match schedules (1-12).",
                        "default": 8
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"events\": [{\"awayScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"overs\": \"float\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"awayTeam\": {\"country\": {}, \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"changes\": {\"changeTimestamp\": \"int\", \"changes\": [\"list of str with length 1\"]}, \"coverage\": \"int\", \"crowdsourcingDataDisplayEnabled\": \"bool\", \"customId\": \"str\", \"endTimestamp\": \"int\", \"finalResultOnly\": \"bool\", \"hasGlobalHighlights\": \"bool\", \"homeScore\": {\"current\": \"int\", \"display\": \"int\", \"innings\": {\"inning1\": {\"overs\": \"int\", \"score\": \"int\", \"wickets\": \"int\"}}}, \"homeTeam\": {\"country\": {}, \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"te"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning to attend a cricket match next month. Can you provide me with the match schedules for August 2022? Along with that, I would like to know the overall top players in the tournament and their statistics.",
        "relevant APIs": [
            [
                "CricketAPI2",
                "MatchSchedules"
            ],
            [
                "CricketAPI2",
                "LeagueOverallTopPlayers"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 77855
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "SheScoresAPI",
                "api_name": "Get players by country",
                "api_description": "Gets all the players from a team",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "Argentina"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "SheScoresAPI",
                "api_name": "Get player by ID",
                "api_description": "Get a player's information by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "SheScoresAPI",
                "api_name": "Get all countries",
                "api_description": "Gets all countries participating",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "SheScoresAPI",
                "api_name": "Get all players",
                "api_description": "Gets all the players from all the teams",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am organizing a women's football tournament and I need to gather information about all the participating countries. Can you provide me with a list of all the countries that will be taking part in the Women's World Cup 2023? I would like to know the team names, players, and their respective positions.",
        "relevant APIs": [
            [
                "SheScoresAPI",
                "Get all countries"
            ],
            [
                "SheScoresAPI",
                "Get players by country"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 10770
    },
    {
        "api_list": [
            {
                "category_name": "Mapping",
                "tool_name": "SpatialScale Route Engine",
                "api_name": "Get Route",
                "api_description": "Given a list of locations, the route service provides details about the trip,\nincluding locations, a summary with basic information about the entire trip, and a list of legs.\n\n**Locations**\n\nYou specify locations as an ordered list of two or more locations within a JSON array. Locations are visited in the order specified.\n\nA location must include a latitude and longitude in decimal degrees. The coordinates can come from many input sources, such as a GPS location, a point or a click on a map, a geocoding service, and so on.\n\nTo build a route, you need to specify two `break` locations. In addition, you can include `through`, `via` or `break_through` locations to influence the route path.\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Location parameters</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>lat</code></td>\n    <td>\nLatitude of the location in degrees. This is assumed to be both the routing location and the display location if no <code>display_lat</code> and <code>display_lon</code> are provided.\n    </td>\n</tr>\n<tr>\n    <td><code>lon</code></td>\n    <td>\nLongitude of the location in degrees. This is assumed to be both the routing location and the display location if no <code>display_lat</code> and <code>display_lon</code> are provided.\n    </td>\n</tr>\n<tr>\n    <td><code>type</code></td>\n    <td>\n\tType of location, either <code>break</code>, <code>through</code>, <code>via</code> or <code>break_through</code>. Each type controls two characteristics: whether or not to allow a u-turn at the location and whether or not to generate guidance/legs at the location. A <code>break</code> is a location at which we allows u-turns and generate legs and arrival/departure maneuvers. A <code>through</code> location is a location at which we neither allow u-turns nor generate legs or arrival/departure maneuvers. A <code>via</code> location is a location at which we allow u-turns but do not generate legs or arrival/departure maneuvers. A <code>break_through</code> location is a location at which we do not allow u-turns but do generate legs and arrival/departure maneuvers. If no type is provided, the type is assumed to be a <code>break</code>. The types of the first and last locations are ignored and are treated as breaks.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n\n**Costing models**\n\nThe routing service uses dynamic, run-time costing to generate the route path. The route request must include the name of the costing model and can include optional parameters available for the chosen costing model.\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Costing model</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>auto</code></td>\n    <td>\n\tStandard costing for driving routes by car, motorcycle, truck, and so on that obeys automobile driving rules, such as access and turn restrictions. <code>Auto</code> provides a short time path (though not guaranteed to be shortest time) and uses intersection costing to minimize turns and maneuvers or road name changes. Routes also tend to favor highways and higher classification roads, such as motorways and trunks.\n    </td>\n</tr>\n<tr>\n    <td><code>bicycle</code></td>\n    <td>\n\tStandard costing for travel by bicycle, with a slight preference for using <a href=\"http://wiki.openstreetmap.org/wiki/Key:cycleway\" target=\"_blank\">cycleways</a> or roads with bicycle lanes. Bicycle routes follow regular roads when needed, but avoid roads without bicycle access.\n    </td>\n</tr>\n<tr>\n    <td><code>bus</code></td>\n    <td>\n\tStandard costing for bus routes. Bus costing inherits the auto costing behaviors, but checks for bus access on the roads.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n",
                "required_parameters": [
                    {
                        "name": "payload",
                        "type": "STRING",
                        "description": "Location information",
                        "default": "{\n    \"locations\": [\n        {\"lat\": 42.358528, \"lon\": -83.271400},\n        {\"lat\": 42.996613, \"lon\": -78.749855}\n    ],\n    \"costing\": \"auto\",\n    \"units\": \"miles\",\n    \"id\": \"my_work_route\"\n}\n"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Mapping",
                "tool_name": "SpatialScale Route Engine",
                "api_name": "Get Isochrone",
                "api_description": "The isochrone service computes areas that are reachable within specified time intervals from a location,\nand returns the reachable regions as contours of polygons or lines that you can display on a map.\n\n**Costing parameters**\n\nThe isochrone service uses the auto, bicycle, pedestrian, and multimodal costing models available in the Turn-by-Turn service.\nRefer to the route costing models and costing options documentation for more on how to specify this input.\n\n**Other request parameters**\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Parameter</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>date_time</code></td>\n    <td>\n        The local date and time at the location. These parameters apply only for multimodal requests and are not used with other costing methods.\n        <ul>\n            <li><code>type</code></li>\n            <ul>\n                <li>0 - Current departure time for multimodal requests.</li>\n                <li>1 - Specified departure time for multimodal requests.</li>\n                <li>2 - Specified arrival time. Note: This is not yet implemented.</li>\n            </ul>\n            <li><code>value</code> - the date and time specified in ISO 8601 format (YYYY-MM-DDThh:mm) in the local time zone of departure or arrival. For example, \"2016-07-03T08:06\".\n            </li>\n        </ul>\n    </td>\n</tr>\n<tr>\n    <td><code>id</code></td>\n    <td>\n        Name of the isochrone request. If <code>id</code> is specified, the name is returned with the response.\n    </td>\n</tr>\n<tr>\n    <td><code>contours</code></td>\n    <td>\n        A JSON array of contour objects with the time in minutes or distance in kilometers and color to use for each isochrone contour. You can specify up to four contours (by default).\n        <ul>\n            <li><code>time</code> - A floating point value specifying the time in minutes for the contour.\n            </li>\n            <li><code>distance</code> - A floating point value specifying the distance in kilometers for the contour.\n            </li>\n            <li><code>color</code> -The color for the output of the contour. Specify it as a Hex value, but without the <code>#</code>, such as <code>\"color\":\"ff0000\"</code> for red. If no color is specified, the isochrone service will assign a default color to the output.\n            </li>\n        </ul>\n        You can only specify one metric per contour, i.e. time or distance.\n    </td>\n</tr>\n<tr>\n    <td><code>polygons</code></td>\n    <td>\n        A Boolean value to determine whether to return geojson polygons or linestrings as the contours. The default is <code>false</code>, which returns lines; when <code>true</code>, polygons are returned. Note: When <code>polygons</code> is <code>true</code>, any contour that forms a ring is returned as a polygon.\n    </td>\n</tr>\n<tr>\n    <td><code>generalize</code></td>\n    <td>\n        A floating point value in meters used as the tolerance for Douglas-Peucker generalization. Note: Generalization of contours can lead to self-intersections, as well as intersections of adjacent contours.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n",
                "required_parameters": [
                    {
                        "name": "payload",
                        "type": "STRING",
                        "description": "Location information",
                        "default": "{\"locations\":[{\"lat\":40.744014,\"lon\":-73.990508}],\"costing\":\"pedestrian\",\"contours\":[{\"time\":15.0,\"color\":\"ff0000\"}]}"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Result identifier",
                        "default": "Walk_From_Office"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family is planning a vacation to several national parks. Can you provide a route that covers Yellowstone, Yosemite, and Grand Canyon? Include the travel time, distance, and a summary of the trip. Also, provide the isochrone contours for each park.",
        "relevant APIs": [
            [
                "SpatialScale Route Engine",
                "Get Route"
            ],
            [
                "SpatialScale Route Engine",
                "Get Isochrone"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 36197
    },
    {
        "api_list": [
            {
                "category_name": "Financial",
                "tool_name": "MarketCI Analytics",
                "api_name": "Price Forecasts",
                "api_description": "An AI-generated price forecast for the Stock over the next 3 months.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "str",
                    "data": [
                        {
                            "cap": "float",
                            "date": "str",
                            "yhat": "NoneType",
                            "close": "float",
                            "trend": "float",
                            "adjClose": "float",
                            "yhat_lower": "NoneType",
                            "yhat_upper": "NoneType",
                            "_list_length": 285
                        }
                    ]
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "MarketCI Analytics",
                "api_name": "Peers",
                "api_description": "Get List of Company Peers",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str"
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "MarketCI Analytics",
                "api_name": "Price Probability",
                "api_description": "Based on over 1000 forecasts, the probabilistic outcome is above or below the current price in a normal distribution.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "str",
                    "data": {
                        "one_day_probability_up": "float",
                        "one_week_probability_up": "float",
                        "probability_of_forecast": "float",
                        "one_day_probability_down": "float",
                        "one_month_probability_up": "float",
                        "one_week_probability_down": "float",
                        "one_month_probability_down": "float"
                    }
                }
            },
            {
                "category_name": "Financial",
                "tool_name": "MarketCI Analytics",
                "api_name": "Peer Metrics Average",
                "api_description": "An Average of Company Peer Metrics for TTM Data",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"symbol\": \"str\", \"data\": {\"roeTTM\": \"float\", \"roicTTM\": \"float\", \"pbRatioTTM\": \"float\", \"peRatioTTM\": \"float\", \"ptbRatioTTM\": \"float\", \"evToSalesTTM\": \"float\", \"marketCapTTM\": \"int\", \"pfcfRatioTTM\": \"float\", \"pocfratioTTM\": \"float\", \"payoutRatioTTM\": \"float\", \"cashPerShareTTM\": \"float\", \"currentRatioTTM\": \"float\", \"debtToAssetsTTM\": \"float\", \"debtToEquityTTM\": \"float\", \"grahamNetNetTTM\": \"float\", \"grahamNumberTTM\": \"float\", \"capexPerShareTTM\": \"float\", \"dividendYieldTTM\": \"float\", \"earningsYieldTTM\": \"float\", \"incomeQualityTTM\": \"float\", \"capexToRevenueTTM\": \"float\", \"workingCapitalTTM\": \"int\", \"averagePayablesTTM\": \"int\", \"debtToMarketCapTTM\": \"float\", \"enterpriseValueTTM\": \"int\", \"investedCapitalTTM\": \"float\", \"netDebtToEBITDATTM\": \"float\", \"revenuePerShareTTM\": \"float\", \"averageInventoryTTM\": \"int\", \"dividendPerShareTTM\": \"float\", \"evToFreeCashFlowTTM\": \"float\", \"interestCoverageTTM\": \"float\", \"payablesTurnoverTTM\": \"float\", \"bookValuePerShareTTM\": \"float\", \"freeCashFlowYieldTTM\": "
            },
            {
                "category_name": "Financial",
                "tool_name": "MarketCI Analytics",
                "api_name": "Peer Ratio Averages",
                "api_description": "An Average of Company Peer Ratios for TTM Data",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"symbol\": \"str\", \"data\": {\"peRatioTTM\": \"float\", \"pegRatioTTM\": \"float\", \"cashRatioTTM\": \"float\", \"debtRatioTTM\": \"float\", \"ebtPerEbitTTM\": \"float\", \"quickRatioTTM\": \"float\", \"payoutRatioTTM\": \"float\", \"cashPerShareTTM\": \"float\", \"currentRatioTTM\": \"float\", \"dividendYielTTM\": \"float\", \"assetTurnoverTTM\": \"float\", \"dividendYieldTTM\": \"float\", \"ebitPerRevenueTTM\": \"float\", \"operatingCycleTTM\": \"float\", \"priceFairValueTTM\": \"float\", \"returnOnAssetsTTM\": \"float\", \"returnOnEquityTTM\": \"float\", \"debtEquityRatioTTM\": \"float\", \"netIncomePerEBTTTM\": \"float\", \"netProfitMarginTTM\": \"float\", \"priceSalesRatioTTM\": \"float\", \"dividendPerShareTTM\": \"float\", \"effectiveTaxRateTTM\": \"float\", \"interestCoverageTTM\": \"float\", \"payablesTurnoverTTM\": \"float\", \"priceToBookRatioTTM\": \"float\", \"grossProfitMarginTTM\": \"float\", \"inventoryTurnoverTTM\": \"float\", \"priceToSalesRatioTTM\": \"float\", \"fixedAssetTurnoverTTM\": \"float\", \"pretaxProfitMarginTTM\": \"float\", \"priceCashFlowRatioTTM\": \"float\", \"priceEarningsRatioT"
            },
            {
                "category_name": "Financial",
                "tool_name": "MarketCI Analytics",
                "api_name": "Discounted Cash Flow Models (DCF's)",
                "api_description": "Artificial Intelligence-powered DCF's for Cash Flow forecasts and assumptions.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "AAPL"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"symbol\": \"str\", \"cost_of_equity\": \"str\", \"equity_percentage\": \"str\", \"cost_of_debt\": \"str\", \"debt_percentage\": \"str\", \"avg_tax_rate\": \"str\", \"wacc\": \"str\", \"dcf_value\": \"str\", \"cashflow_forecast_current_year_ebit\": \"str\", \"cashflow_forecast_current_year_inc_depreciation\": \"str\", \"cashflow_forecast_current_year_ebit_tax_shield\": \"str\", \"cashflow_forecast_current_year_capex\": \"str\", \"cashflow_forecast_current_year_nwc\": \"str\", \"cashflow_forecast_current_year_fcf\": \"str\", \"cashflow_forecast_next_year_ebit\": \"str\", \"cashflow_forecast_next_year_ebit_tax_shield\": \"str\", \"cashflow_forecast_next_year_inc_depreciation\": \"str\", \"cashflow_forecast_next_year_capex\": \"str\", \"cashflow_forecast_next_year_nwc\": \"str\", \"cashflow_forecast_next_year_fcf\": \"str\", \"cashflow_forecast_next_2_year_ebit\": \"str\", \"cashflow_forecast_next_2_year_ebit_tax_shield\": \"str\", \"cashflow_forecast_next_2_year_inc_depreciation\": \"str\", \"cashflow_forecast_next_2_year_capex\": \"str\", \"cashflow_forecast_next_2_year_nwc\": \"st"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a small business owner looking to invest in the stock market. I want to make informed decisions based on the probability of price movements and peer ratios. Can you give me the probability of the stock price going up or down in the next day, week, and month, as well as the average peer ratios for Apple Inc.?",
        "relevant APIs": [
            [
                "MarketCI Analytics",
                "Price Probability"
            ],
            [
                "MarketCI Analytics",
                "Peer Ratio Averages"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 26752
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Twitter Hashtags",
                "api_name": "Get country's hashtags",
                "api_description": "Get hashtags based on country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "string",
                        "description": "",
                        "default": "argentina"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "tweets": "empty list"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Twitter Hashtags",
                "api_name": "Get worldwide hashtags",
                "api_description": "Returns a list of all recent hashtags worldwide",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "tweets": [
                        {
                            "title": "str",
                            "volume": "str",
                            "link": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a trip to Europe and I want to stay updated with the latest hashtags worldwide. Can you provide me with a list of recent trending hashtags globally? Additionally, could you suggest popular hashtags specific to Argentina? It would be great if you could include the volume of tweets and links related to each hashtag.",
        "relevant APIs": [
            [
                "Twitter Hashtags",
                "Get worldwide hashtags"
            ],
            [
                "Twitter Hashtags",
                "Get country's hashtags"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 14714
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/topcomments",
                "api_description": "Top Youtube commented videos of all time",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "video": "str",
                    "link": "str",
                    "comments": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/toplikes",
                "api_description": "Top Youtube liked videos of all time",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "video": "str",
                    "link": "str",
                    "likes": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/topviews/{year}",
                "api_description": "Top Youtube viewed videos all time / on a specific year (2007 - now). Leave {year} blank for all time results",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/global/{countryID}/{timeframe}",
                "api_description": "Weekly/Daily country Youtube chart for a specific country. Read external docs for more information",
                "required_parameters": [
                    {
                        "name": "countryID",
                        "type": "string",
                        "description": "",
                        "default": "kr"
                    },
                    {
                        "name": "timeframe",
                        "type": "string",
                        "description": "",
                        "default": "daily"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "status": "str",
                    "track": "str",
                    "streams": "str",
                    "streams_delta": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/artist/{artistName}",
                "api_description": "Get details about an artist",
                "required_parameters": [
                    {
                        "name": "artistName",
                        "type": "string",
                        "description": "",
                        "default": "badbunny"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "info": [
                        {
                            "artistName": "str",
                            "total_views": "str",
                            "daily_average": "str",
                            "_list_length": 1
                        }
                    ],
                    "statistics": [
                        {
                            "video": "str",
                            "link": "str",
                            "views": "str",
                            "yesterday_views": "str",
                            "published_date": "str",
                            "_list_length": 208
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/trending/overall",
                "api_description": "Treding Youtube (including non-music) videos worldwide",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "status": "str",
                    "video": "str",
                    "link": "str",
                    "highlights": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/24h",
                "api_description": "Youtube most viewed music video past 24 hours",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "status": "str",
                    "video": "str",
                    "link": "str",
                    "views": "str",
                    "likes": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/topviews/artist/{nationality}",
                "api_description": "Youtube top viewed music video by X artist. (X: nationality of the artist). For example: \"/youtube/topviews/vietnamese\"",
                "required_parameters": [
                    {
                        "name": "nationality",
                        "type": "string",
                        "description": "",
                        "default": "vietnamese"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "video": "str",
                    "link": "str",
                    "views": "str",
                    "yesterday_views": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/weekly",
                "api_description": "Most viewed Youtube music videos weekly",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "status": "str",
                    "video": "str",
                    "link": "str",
                    "weeks": "str",
                    "peak": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "MusicData API",
                "api_name": "/youtube/24h/{type}",
                "api_description": "Youtube most viewed music video by content language type: (English, Spanish, Asian or Other)",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "description": "",
                        "default": "english"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ranking": "str",
                    "status": "str",
                    "video": "str",
                    "link": "str",
                    "views": "str",
                    "likes": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a music researcher and I'm looking for data on the most viewed YouTube music videos of all time. Can you give me the top viewed videos for each year from 2007 to the present? Additionally, I would like to know the number of views, likes, and comments for each video.",
        "relevant APIs": [
            [
                "MusicData API",
                "/youtube/topviews/{year}"
            ],
            [
                "MusicData API",
                "/youtube/topcomments"
            ],
            [
                "MusicData API",
                "/youtube/toplikes"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 32970
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Nowcast",
                "api_description": "3-hour forecast in 15-minute time steps.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "relHumidity": "int",
                            "dewPoint": "int",
                            "windDir": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "windDirString": "str",
                            "precipProb": "int",
                            "snowRate": "int",
                            "precipRate": "int",
                            "cloudiness": "int",
                            "thunderProb": "int",
                            "uvIndex": "int",
                            "pressure": "float",
                            "precipType": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Three-hourly",
                "api_description": "A longer three-hourly forecast up to 14 days.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "history",
                        "type": "BOOLEAN",
                        "description": "Whether to include 24 hours of past data.",
                        "default": "0"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "relHumidity": "int",
                            "dewPoint": "int",
                            "windDir": "int",
                            "windDirString": "str",
                            "precipProb": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "cloudiness": "int",
                            "thunderProb": "int",
                            "uvIndex": "int",
                            "pressure": "float",
                            "visibility": "int",
                            "solarRadiation": "int",
                            "precipType": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Daily",
                "api_description": "Daily forecast.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "date": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "maxTemp": "int",
                            "minTemp": "int",
                            "maxFeelsLikeTemp": "int",
                            "minFeelsLikeTemp": "int",
                            "maxRelHumidity": "int",
                            "minRelHumidity": "int",
                            "maxDewPoint": "int",
                            "minDewPoint": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "maxWindSpeed": "int",
                            "windDir": "int",
                            "maxWindGust": "int",
                            "precipProb": "int",
                            "cloudiness": "int",
                            "sunrise": "str",
                            "sunset": "str",
                            "sunriseEpoch": "int",
                            "sunsetEpoch": "int",
                            "moonrise": "str",
                            "moonset": "str",
                            "moonPhase": "int",
                            "uvIndex": "int",
                            "minVisibility": "int",
                            "pressure": "float",
                            "confidence": "str",
                            "solarRadiationSum": "int",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Location info",
                "api_description": "Metadata for location.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "101275339"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "country": "str",
                    "timezone": "str",
                    "language": "str",
                    "adminArea": "str",
                    "adminArea2": "NoneType",
                    "adminArea3": "NoneType",
                    "lon": "float",
                    "lat": "float"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Current",
                "api_description": "Current weather estimate for location.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language (ISO 639-1 codes). Options: de, en, es, fr, it, pl, ru, fi, sv, nl, ko, pt, th, tr, zh, zh_TW (Chinese in Taiwan), zh_CN (Chinese in China). (default en)",
                        "default": "en"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "current": {
                        "time": "str",
                        "symbol": "str",
                        "symbolPhrase": "str",
                        "temperature": "int",
                        "feelsLikeTemp": "int",
                        "relHumidity": "int",
                        "dewPoint": "int",
                        "windSpeed": "int",
                        "windDir": "int",
                        "windDirString": "str",
                        "windGust": "int",
                        "precipProb": "int",
                        "precipRate": "int",
                        "cloudiness": "int",
                        "thunderProb": "int",
                        "uvIndex": "int",
                        "pressure": "float",
                        "visibility": "int"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Latest observations",
                "api_description": "Observations from nearby representative weather stations.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "observations": [
                        {
                            "station": "str",
                            "distance": "str",
                            "time": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "symbol": "str",
                            "windDirString": "str",
                            "windDir": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "pressure": "int",
                            "relHumidity": "int",
                            "visibility": "int",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Location search",
                "api_description": "Search for locations by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "string",
                        "description": "",
                        "default": "mumbai"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "in"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "locations": [
                        {
                            "id": "int",
                            "name": "str",
                            "country": "str",
                            "timezone": "str",
                            "language": "str",
                            "adminArea": "str",
                            "adminArea2": "NoneType",
                            "adminArea3": "NoneType",
                            "lon": "float",
                            "lat": "float",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Foreca Weather",
                "api_name": "Hourly",
                "api_description": "Hourly forecast.",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "string",
                        "description": "",
                        "default": "102643743"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "alt",
                        "type": "NUMBER",
                        "description": "Altitude (meters)",
                        "default": "0"
                    },
                    {
                        "name": "history",
                        "type": "BOOLEAN",
                        "description": "Whether to include 24 hours of past data.",
                        "default": "0"
                    },
                    {
                        "name": "dataset",
                        "type": "STRING",
                        "description": "Variable set",
                        "default": "full"
                    },
                    {
                        "name": "tz",
                        "type": "STRING",
                        "description": "Time zone in response (IANA time zone database names)",
                        "default": "Europe/London"
                    },
                    {
                        "name": "periods",
                        "type": "NUMBER",
                        "description": "Number of time steps (default 8, maximum 12)",
                        "default": "8"
                    },
                    {
                        "name": "windunit",
                        "type": "STRING",
                        "description": "Wind speed unit in response.",
                        "default": "MS"
                    },
                    {
                        "name": "tempunit",
                        "type": "STRING",
                        "description": "Temperature unit in response",
                        "default": "C"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "forecast": [
                        {
                            "time": "str",
                            "symbol": "str",
                            "symbolPhrase": "str",
                            "temperature": "int",
                            "feelsLikeTemp": "int",
                            "windSpeed": "int",
                            "windGust": "int",
                            "relHumidity": "int",
                            "dewPoint": "int",
                            "windDir": "int",
                            "windDirString": "str",
                            "precipProb": "int",
                            "precipAccum": "int",
                            "snowAccum": "int",
                            "cloudiness": "int",
                            "thunderProb": "int",
                            "uvIndex": "int",
                            "pressure": "float",
                            "visibility": "int",
                            "solarRadiation": "int",
                            "precipType": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a photographer looking for the perfect sunset location. Can you suggest some places with stunning sunsets and provide me with the daily weather forecast for those locations? I also need information on the best camera settings for capturing sunsets.",
        "relevant APIs": [
            [
                "Foreca Weather",
                "Daily"
            ],
            [
                "Foreca Weather",
                "Location search"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 21776
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Indonesia News",
                "api_name": "vivanews-detail",
                "api_description": "vivanews-detail",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1612364"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Indonesia News",
                "api_name": "vivanews-search",
                "api_description": "vivanews-search",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "banjir"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Indonesia News",
                "api_name": "kompas-detail",
                "api_description": "kompas-detail",
                "required_parameters": [
                    {
                        "name": "guid",
                        "type": "STRING",
                        "description": "",
                        "default": ".xml.2023.06.20.114935178"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Indonesia News",
                "api_name": "kompas-search",
                "api_description": "kompas-search",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "command",
                        "type": "STRING",
                        "description": "",
                        "default": "banjir"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Indonesia News",
                "api_name": "detik-detail",
                "api_description": "detik-detail",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://finance.detik.com/bursa-dan-valas/d-5206657/bei-buka-suspensi-saham-pollux"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Indonesia News",
                "api_name": "detik-search",
                "api_description": "search detik.com news",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "detik"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Indonesia News",
                "api_name": "tirto-detail",
                "api_description": "detail tirto news",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1253421"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Indonesia News",
                "api_name": "tirto-search",
                "api_description": "search tirto news data",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "banjir"
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a student researching news articles in Indonesia. Can you provide me with the details of an article from Vivanews with the ID 1612364? Additionally, search for news related to floods on Kompas using the keyword 'banjir' and provide me with the top 10 search results.",
        "relevant APIs": [
            [
                "Indonesia News",
                "vivanews-detail"
            ],
            [
                "Indonesia News",
                "kompas-search"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 55223
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "[Embedded signing] Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get field and field invite id",
                "api_description": "The endpoint returns field and field invite ids.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "id of the document",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get signing links",
                "api_description": "The endpoint allows to get all existing signing links and IDs of these signing links.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "code": "int"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids for template",
                "api_description": "The endpoint allows to get role ids for a template.",
                "required_parameters": [
                    {
                        "name": "template_id",
                        "type": "string",
                        "description": "ID of the template.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to retrieve the details of a specific document with the ID 'abc123'. Please provide me with the document metadata, fields, signatures, and invites.",
        "relevant APIs": [
            [
                "SignNow",
                "[Embedded signing] Get role ids"
            ],
            [
                "SignNow",
                "Get field and field invite id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 83742
    },
    {
        "api_list": [
            {
                "category_name": "Travel",
                "tool_name": "Flixbus",
                "api_name": "stations",
                "api_description": "Get a list of stations",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Travel",
                "tool_name": "Flixbus",
                "api_name": "search-trips",
                "api_description": "Search trips from-to. Specify for which parameters (from_id, to_id) you are looking for, city or station",
                "required_parameters": [
                    {
                        "name": "to_id",
                        "type": "NUMBER",
                        "description": "To id",
                        "default": 1374
                    },
                    {
                        "name": "from_id",
                        "type": "NUMBER",
                        "description": "From id",
                        "default": 88
                    },
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "",
                        "default": "EUR"
                    },
                    {
                        "name": "departure_date",
                        "type": "STRING",
                        "description": "Departure date",
                        "default": "2021-12-26"
                    },
                    {
                        "name": "number_adult",
                        "type": "NUMBER",
                        "description": "Number of adults",
                        "default": 1
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number_bike_slot",
                        "type": "NUMBER",
                        "description": "Number of bike slot",
                        "default": 0
                    },
                    {
                        "name": "search_by",
                        "type": "OBJECT",
                        "description": "Search by",
                        "default": "cities"
                    },
                    {
                        "name": "number_children",
                        "type": "NUMBER",
                        "description": "Number of children",
                        "default": 0
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Flixbus",
                "api_name": "cities",
                "api_description": "Get a list of cities",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Flixbus",
                "api_name": "schedule",
                "api_description": "Get a list of schedule",
                "required_parameters": [
                    {
                        "name": "station_id",
                        "type": "NUMBER",
                        "description": "Station id",
                        "default": "66"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Travel",
                "tool_name": "Flixbus",
                "api_name": "trip-details",
                "api_description": "Get a trip details by trip uid",
                "required_parameters": [
                    {
                        "name": "trip_uid",
                        "type": "STRING",
                        "description": "Trip uid",
                        "default": "direct:110725991:2015:4188"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a travel blogger and would like to explore new destinations. Can you suggest some cities where Flixbus operates? I am particularly interested in cities with historical landmarks and natural attractions. Also, provide me with the available trips and schedules for each city.",
        "relevant APIs": [
            [
                "Flixbus",
                "cities"
            ],
            [
                "Flixbus",
                "search-trips"
            ],
            [
                "Flixbus",
                "schedule"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 70915
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "Real Estate Exam",
                "api_name": "Flashcards",
                "api_description": "Get a list of all flashcard terms and definitions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "questionId": "int",
                            "questionDescription": "str",
                            "tags": "str",
                            "choiceDescription": "str",
                            "_list_length": 6
                        }
                    ]
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Real Estate Exam",
                "api_name": "/QandA",
                "api_description": "Returns all multiple choice and true or false questions with answers and feedback.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "questionId": "int",
                            "typeDescription": "str",
                            "questionDescription": "str",
                            "tags": "str",
                            "feedback": "str",
                            "choiceId": "int",
                            "choiceDescription": "str",
                            "_list_length": 57
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to excel in the real estate exam and need some assistance. Could you fetch a list of flashcards containing terms and definitions? It would be helpful if the flashcards cover a wide range of topics and are well-structured. Additionally, I would like to access multiple-choice and true or false questions with answers and feedback using the QandA API.",
        "relevant APIs": [
            [
                "Real Estate Exam",
                "Flashcards"
            ],
            [
                "Real Estate Exam",
                "/QandA"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 29322
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Watch Playlist",
                "api_description": "Get a watch list of tracks. This watch playlist appears when you press play on a track in YouTube Music.\n\n\nList of watch playlist items. The counterpart key is optional and only appears if a song has a corresponding video counterpart (UI song/video switcher).",
                "required_parameters": [
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "",
                        "default": "1A7Qw88As64"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "lyrics": "NoneType",
                    "playlistId": "str",
                    "related": "str",
                    "tracks": [
                        {
                            "artists": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 1
                                }
                            ],
                            "feedbackTokens": "NoneType",
                            "length": "str",
                            "likeStatus": "NoneType",
                            "thumbnail": [
                                {
                                    "height": "int",
                                    "url": "str",
                                    "width": "int",
                                    "_list_length": 3
                                }
                            ],
                            "title": "str",
                            "videoId": "str",
                            "videoType": "str",
                            "views": "str",
                            "_list_length": 25
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Lyrics",
                "api_description": "Returns lyrics of a song or video.",
                "required_parameters": [
                    {
                        "name": "browse_id",
                        "type": "STRING",
                        "description": "",
                        "default": "MPLYt_ZXONnvFeQpN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "lyrics": "NoneType",
                    "source": "NoneType"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Song Related",
                "api_description": "Gets related content for a song. Equivalent to the content shown in the \u201cRelated\u201d tab of the watch panel.",
                "required_parameters": [
                    {
                        "name": "browse_id",
                        "type": "STRING",
                        "description": "",
                        "default": "MPTRt_ZXONnvFeQpN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "contents": [
                        {
                            "album": {
                                "id": "str",
                                "name": "str"
                            },
                            "artists": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 1
                                }
                            ],
                            "isExplicit": "bool",
                            "thumbnails": [
                                {
                                    "height": "int",
                                    "url": "str",
                                    "width": "int",
                                    "_list_length": 2
                                }
                            ],
                            "title": "str",
                            "videoId": "str",
                            "_list_length": 20
                        }
                    ],
                    "title": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Song",
                "api_description": "Returns metadata and streaming information about a song or video.",
                "required_parameters": [
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "",
                        "default": "RS0FhoKAHvA"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"microformat\": {\"microformatDataRenderer\": {\"androidPackage\": \"str\", \"appName\": \"str\", \"availableCountries\": [\"list of str with length 249\"], \"category\": \"str\", \"description\": \"str\", \"familySafe\": \"bool\", \"iosAppArguments\": \"str\", \"iosAppStoreId\": \"str\", \"linkAlternates\": [{\"hrefUrl\": \"str\", \"_list_length\": 4}], \"noindex\": \"bool\", \"ogType\": \"str\", \"pageOwnerDetails\": {\"externalChannelId\": \"str\", \"name\": \"str\", \"youtubeProfileUrl\": \"str\"}, \"paid\": \"bool\", \"publishDate\": \"str\", \"schemaDotOrgType\": \"str\", \"siteName\": \"str\", \"tags\": [\"list of str with length 41\"], \"thumbnail\": {\"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 1}]}, \"title\": \"str\", \"twitterCardType\": \"str\", \"twitterSiteHandle\": \"str\", \"unlisted\": \"bool\", \"uploadDate\": \"str\", \"urlApplinksAndroid\": \"str\", \"urlApplinksIos\": \"str\", \"urlCanonical\": \"str\", \"urlTwitterAndroid\": \"str\", \"urlTwitterIos\": \"str\", \"videoDetails\": {\"durationIso8601\": \"str\", \"durationSeconds\": \"str\", \"externalVideoId\": \"str\""
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get User Playlists",
                "api_description": "Retrieve a list of playlists for a given user. Call this function again with the returned params to get the full list.",
                "required_parameters": [
                    {
                        "name": "params",
                        "type": "STRING",
                        "description": "",
                        "default": "6gPgAUdxVUJXcFlCQ3BNQkNpUjVkRjl3WVdkbFgzTnVZWEJ6YUc5MFgyMTFjMmxqWDNCaFoyVmZjbVZuYVc5dVlXd1NIMDEzUzBGTWVWcENhM2h2WVhkRFJFbFBZM2h6Vms1M0xWY3paM05wVW1jYVNnQUFaVzRBQVVaU0FBRkdVZ0FCQUVaRmJYVnphV05mWkdWMFlXbHNYMkZ5ZEdsemRBQUJBVU1BQUFFQUFBRUJBRlZETkRSb1ltVlNiME5hVmxaTlZtYzFlakJHWmtsM2R3QUI4dHF6cWdvR1FBRklBRkFx"
                    },
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "",
                        "default": "UC44hbeRoCZVVMVg5z0FfIww"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get User",
                "api_description": "Retrieve a user\u2019s page. A user may own videos or playlists.",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "channelId of the user",
                        "default": "UC44hbeRoCZVVMVg5z0FfIww"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "playlists": {
                        "browseId": "str",
                        "params": "str",
                        "results": [
                            {
                                "description": "str",
                                "playlistId": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "_list_length": 10
                            }
                        ]
                    },
                    "videos": {
                        "browseId": "str",
                        "results": [
                            {
                                "artists": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "_list_length": 1
                                    }
                                ],
                                "playlistId": "NoneType",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "videoId": "str",
                                "views": "str",
                                "_list_length": 10
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Album",
                "api_description": "Get information and tracks of an album.",
                "required_parameters": [
                    {
                        "name": "browse_id",
                        "type": "STRING",
                        "description": "browseId \u2013 browseId of the album, for example returned by **search()**",
                        "default": "MPREb_TXkYGyz3iEg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "id": "str",
                            "name": "str",
                            "_list_length": 2
                        }
                    ],
                    "audioPlaylistId": "str",
                    "duration": "str",
                    "duration_seconds": "int",
                    "thumbnails": [
                        {
                            "height": "int",
                            "url": "str",
                            "width": "int",
                            "_list_length": 4
                        }
                    ],
                    "title": "str",
                    "trackCount": "int",
                    "tracks": [
                        {
                            "album": "str",
                            "artists": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 2
                                }
                            ],
                            "duration": "str",
                            "duration_seconds": "int",
                            "isAvailable": "bool",
                            "isExplicit": "bool",
                            "likeStatus": "str",
                            "thumbnails": "NoneType",
                            "title": "str",
                            "videoId": "str",
                            "videoType": "str",
                            "_list_length": 7
                        }
                    ],
                    "type": "str",
                    "year": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Artist Albums",
                "api_description": "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases",
                "required_parameters": [
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "",
                        "default": "UCedvOgsKFzcK3hA5taf3KoQ"
                    },
                    {
                        "name": "params",
                        "type": "STRING",
                        "description": "\\\\\\\"params\\\\\\\" data obtained by **get_artist()**",
                        "default": "6gPgAUdxVUJXcFlCQ3BNQkNpUjVkRjl3WVdkbFgzTnVZWEJ6YUc5MFgyMTFjMmxqWDNCaFoyVmZjbVZuYVc5dVlXd1NIMDEzUzBGTWVWcENhM2h2WVhkRFJFbFBZM2h6Vms1NlR6QlNVWE5wVW1jYVNnQUFaVzRBQVVaU0FBRkdVZ0FCQUVaRmJYVnphV05mWkdWMFlXbHNYMkZ5ZEdsemRBQUJBVU1BQUFFQUFBRUJBRlZETUhZMlJuTlJTRTVmUVRGR09EWmlSbkpZWDNwb2R3QUI4dHF6cWdvR1FBRklBRkFV"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Get Artist",
                "api_description": "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "",
                        "default": "UCedvOgsKFzcK3hA5taf3KoQ"
                    }
                ],
                "method": "GET",
                "template_response": "{\"albums\": {\"browseId\": \"str\", \"params\": \"str\", \"results\": [{\"browseId\": \"str\", \"isExplicit\": \"bool\", \"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 2}], \"title\": \"str\", \"year\": \"str\", \"_list_length\": 10}]}, \"channelId\": \"str\", \"description\": \"str\", \"name\": \"str\", \"radioId\": \"NoneType\", \"related\": {\"browseId\": \"NoneType\", \"results\": [{\"browseId\": \"str\", \"subscribers\": \"str\", \"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 2}], \"title\": \"str\", \"_list_length\": 10}]}, \"shuffleId\": \"NoneType\", \"singles\": {\"browseId\": \"str\", \"params\": \"str\", \"results\": [{\"browseId\": \"str\", \"thumbnails\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 2}], \"title\": \"str\", \"year\": \"str\", \"_list_length\": 10}]}, \"songs\": {\"browseId\": \"str\", \"results\": [{\"album\": {\"id\": \"str\", \"name\": \"str\"}, \"artists\": [{\"id\": \"str\", \"name\": \"str\", \"_list_length\": 1}], \"isAvailable\": \"bool\", \"isExplicit\": \"bool\", \"likeStatus\": \"str\", \"thumbnails\": ["
            },
            {
                "category_name": "Music",
                "tool_name": "Youtube Music API (Detailed)",
                "api_name": "Trends",
                "api_description": "Get latest charts data from YouTube Music: Top songs, top videos, top artists and top trending videos. Global charts have no Trending section, US charts have an extra Genres section with some Genre charts.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "ISO 3166-1 Alpha-2 country code. Default: ZZ = Global\nhttps://www.iban.com/country-codes",
                        "default": "de"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artists": {
                        "items": [
                            {
                                "browseId": "str",
                                "rank": "str",
                                "subscribers": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "trend": "str",
                                "_list_length": 40
                            }
                        ],
                        "playlist": "NoneType"
                    },
                    "countries": {
                        "options": [
                            "list of str with length 62"
                        ],
                        "selected": {
                            "text": "str"
                        }
                    },
                    "trending": {
                        "items": [
                            {
                                "artists": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "_list_length": 2
                                    }
                                ],
                                "playlistId": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 1
                                    }
                                ],
                                "title": "str",
                                "videoId": "str",
                                "views": "NoneType",
                                "_list_length": 20
                            }
                        ],
                        "playlist": "str"
                    },
                    "videos": {
                        "items": [
                            {
                                "artists": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "_list_length": 3
                                    }
                                ],
                                "playlistId": "str",
                                "thumbnails": [
                                    {
                                        "height": "int",
                                        "url": "str",
                                        "width": "int",
                                        "_list_length": 2
                                    }
                                ],
                                "title": "str",
                                "videoId": "str",
                                "views": "str",
                                "_list_length": 40
                            }
                        ],
                        "playlist": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a party and need some upbeat songs to create a playlist. Can you suggest some trending songs and artists? I would like to include the top songs and videos from different genres. Please provide me with a list of trending music.",
        "relevant APIs": [
            [
                "Youtube Music API (Detailed)",
                "Trends"
            ],
            [
                "Youtube Music API (Detailed)",
                "Get Song"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 75338
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "[Embedded signing] Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get field and field invite id",
                "api_description": "The endpoint returns field and field invite ids.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "id of the document",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids",
                "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
                "required_parameters": [
                    {
                        "name": "document_id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get signing links",
                "api_description": "The endpoint allows to get all existing signing links and IDs of these signing links.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "code": "int"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "SignNow",
                "api_name": "Get role ids for template",
                "api_description": "The endpoint allows to get role ids for a template.",
                "required_parameters": [
                    {
                        "name": "template_id",
                        "type": "string",
                        "description": "ID of the template.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "404": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I have a document with ID '123abc' and I need to get the role IDs and field IDs. Can you provide me with the details?",
        "relevant APIs": [
            [
                "SignNow",
                "Get role ids"
            ],
            [
                "SignNow",
                "Get field and field invite id"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 49991
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Get Promo Codes",
                "api_name": "Get Stores",
                "api_description": "Get Stores",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Get Promo Codes",
                "api_name": "Get Coupons",
                "api_description": "Get Coupons",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "",
                        "default": "update_time_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "store_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "request": {
                        "page": "str",
                        "store_id": "str",
                        "sort": "str",
                        "type": "str"
                    },
                    "time": "float",
                    "data": [
                        {
                            "id": "str",
                            "title": "str",
                            "description": "str",
                            "terms": "str",
                            "code": "str",
                            "url": "str",
                            "store_id": "str",
                            "language": "str",
                            "status": "str",
                            "add_time": "str",
                            "start_time": "str",
                            "end_time": "str",
                            "update_time": "str",
                            "_list_length": 98
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are organizing a group trip and we want to save money on accommodations. Can you help us find the best deals by providing a list of stores offering coupons for hotel bookings? Please include the store name, coupon code, and the expiration date for each coupon.",
        "relevant APIs": [
            [
                "Get Promo Codes",
                "Get Stores"
            ],
            [
                "Get Promo Codes",
                "Get Coupons"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 60255
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "Songkick concert",
                "api_description": "Concert info",
                "required_parameters": [
                    {
                        "name": "id_conc",
                        "type": "string",
                        "description": "",
                        "default": "40698227-lumineers-at-aware-super-theatre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "image": "str",
                    "line_up": [
                        {
                            "link": "str",
                            "name": "str",
                            "_list_length": 2
                        }
                    ],
                    "location": "str",
                    "name": "str",
                    "venue_name": "str",
                    "venue_url": "str",
                    "website": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "Songkick artist",
                "api_description": "Artist info",
                "required_parameters": [
                    {
                        "name": "artist_id",
                        "type": "string",
                        "description": "",
                        "default": "520117-arctic-monkeys"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "appears_most_with": [
                        {
                            "count": "int",
                            "link": "str",
                            "name": "str",
                            "_list_length": 5
                        }
                    ],
                    "bio": "str",
                    "distance_travelled": "str",
                    "fans_num": "int",
                    "image_url": "str",
                    "most_played": [
                        {
                            "count": "int",
                            "name": "str",
                            "_list_length": 5
                        }
                    ],
                    "name": "str",
                    "on_tour": "str",
                    "posters": [
                        "list of str with length 8"
                    ],
                    "upcoming_events": [
                        {
                            "date_finish": "str",
                            "date_start": "str",
                            "line_up": [
                                {
                                    "id": "str",
                                    "name": "str",
                                    "_list_length": 3
                                }
                            ],
                            "location": {
                                "city": "str",
                                "country": "str",
                                "region": "str"
                            },
                            "street": "str",
                            "venue": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "Songkick festivals",
                "api_description": "festivals info",
                "required_parameters": [
                    {
                        "name": "id_fest",
                        "type": "string",
                        "description": "",
                        "default": "1627549-dreamstate-socal/id/40521898-dreamstate-socal-2022"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "Transfermarkt search",
                "api_description": "Search by name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "description": "",
                        "default": "messi"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Clubs": [
                        {
                            "link": "str",
                            "name": "str",
                            "slug": "str",
                            "_list_length": 10
                        }
                    ],
                    "Managers & officials": [
                        {
                            "link": "str",
                            "name": "str",
                            "slug": "str",
                            "_list_length": 5
                        }
                    ],
                    "Players": [
                        {
                            "link": "str",
                            "name": "str",
                            "slug": "str",
                            "_list_length": 10
                        }
                    ],
                    "Referees": [
                        {
                            "link": "str",
                            "name": "str",
                            "slug": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "List Artist Concerts",
                "api_description": "Enter Artist ID",
                "required_parameters": [
                    {
                        "name": "id_artist",
                        "type": "string",
                        "description": "",
                        "default": "6eUKZXaKkcviH0Ku9w2n3V"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "artists": [
                                {
                                    "id": "str",
                                    "imageUri": "str",
                                    "name": "str",
                                    "topTrackUri": "str",
                                    "uri": "str",
                                    "_list_length": 3
                                }
                            ],
                            "date": "str",
                            "festival": "bool",
                            "id": "str",
                            "lat": "float",
                            "location": "str",
                            "lon": "float",
                            "ticketers": [
                                {
                                    "imageURL": "str",
                                    "partnerDisplayName": "str",
                                    "type": "str",
                                    "url": "str",
                                    "_list_length": 1
                                }
                            ],
                            "ticketing": [
                                {
                                    "maxPrice": "str",
                                    "minPrice": "str",
                                    "_list_length": 1
                                }
                            ],
                            "title": "str",
                            "type": "str",
                            "venue": "str",
                            "_list_length": 27
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "Get Artist Overview",
                "api_description": "Enter Artist ID",
                "required_parameters": [
                    {
                        "name": "id_artist",
                        "type": "string",
                        "description": "",
                        "default": "6eUKZXaKkcviH0Ku9w2n3V"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"biography\": \"str\", \"discography\": {\"albums\": {\"items\": [{\"releases\": {\"items\": [{\"copyright\": {\"items\": [{\"text\": \"str\", \"type\": \"str\", \"_list_length\": 2}]}, \"coverArt\": {\"sources\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 3}]}, \"date\": {\"day\": \"int\", \"month\": \"int\", \"precision\": \"str\", \"year\": \"int\"}, \"id\": \"str\", \"label\": \"str\", \"name\": \"str\", \"playability\": {\"playable\": \"bool\", \"reason\": \"str\"}, \"sharingInfo\": {\"shareId\": \"str\", \"shareUrl\": \"str\"}, \"tracks\": {\"totalCount\": \"int\"}, \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 1}]}, \"_list_length\": 10}], \"totalCount\": \"int\"}, \"compilations\": {\"items\": \"empty list\", \"totalCount\": \"int\"}, \"latest\": {\"copyright\": {\"items\": [{\"text\": \"str\", \"type\": \"str\", \"_list_length\": 2}]}, \"coverArt\": {\"sources\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 3}]}, \"date\": {\"day\": \"int\", \"month\": \"int\", \"precision\": \"str\", \"year\": \"int\"}, \"id\": \"str\", \"label\": \"str\", \"name\": \"str\", \"playability\": {\"playable\""
            },
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "Transfermarkt details",
                "api_description": "Enter **SLUG ** from Transfermarkt search API.\n\nIt os working for all types (players, clubs, managers, referees, etc)",
                "required_parameters": [
                    {
                        "name": "type_s",
                        "type": "string",
                        "description": "",
                        "default": "verein"
                    },
                    {
                        "name": "other",
                        "type": "string",
                        "description": "",
                        "default": "startseite"
                    },
                    {
                        "name": "id_talent",
                        "type": "string",
                        "description": "",
                        "default": "583"
                    },
                    {
                        "name": "part_slug",
                        "type": "string",
                        "description": "",
                        "default": "fc-paris-saint-germain"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "": "str",
                    "average_age": "str",
                    "current_transfer_record": "str",
                    "foreigners": "str",
                    "in_league_since": "str",
                    "name": "str",
                    "national_team_players": "str",
                    "organization_name": "str",
                    "players": [
                        {
                            "name": "str",
                            "position": "str",
                            "slug": "str",
                            "_list_length": 27
                        }
                    ],
                    "squad_size": "str",
                    "stadium": "str",
                    "table_position": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "SongKick search Artist",
                "api_description": "Enter the name of the artist.\nFor example, ed sheran",
                "required_parameters": [
                    {
                        "name": "artist_name",
                        "type": "string",
                        "description": "",
                        "default": "arctic monkeys"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "id": "str",
                            "name": "str",
                            "url": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "TuneFind for Details",
                "api_description": "Please, enter the slug of artist. For example, taylor-swift or acdc.\nYou can get a slug  by using the TuneFind Search API",
                "required_parameters": [
                    {
                        "name": "artist_slug",
                        "type": "string",
                        "description": "",
                        "default": "rihanna"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "info": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "TheClique",
                "api_name": "Get info about artist",
                "api_description": "Give info about artist on allmusic.com\n\nResponse -> json",
                "required_parameters": [
                    {
                        "name": "parameter",
                        "type": "string",
                        "description": "",
                        "default": "bessie-smith-mn0000054707"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "active": "str",
                    "also_known_as": "str",
                    "biography": "str",
                    "born_in": "str",
                    "born_location": "str",
                    "died_in": "str",
                    "died_location": "str",
                    "genre": "str",
                    "id": "str",
                    "image": "str",
                    "name": "str",
                    "similar_artist": [
                        {
                            "id": "str",
                            "link": "str",
                            "name": "str",
                            "_list_length": 19
                        }
                    ],
                    "styles": [
                        {
                            "link": "str",
                            "name": "str",
                            "_list_length": 3
                        }
                    ],
                    "tagline": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a football enthusiast and I want to know more about Lionel Messi's career. Can you provide me with information about Messi's clubs, managers, teammates, and referees? I'm also curious about any notable transfers he has made.",
        "relevant APIs": [
            [
                "TheClique",
                "Transfermarkt search"
            ],
            [
                "TheClique",
                "Transfermarkt details"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 588
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "barcode.monster",
                "api_name": "code",
                "api_description": "Returns code information",
                "required_parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "description": "Barcode to search",
                        "default": "code"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is working on a project that requires barcode information. Could you assist us by retrieving details for the barcode '543216789'?",
        "relevant APIs": [
            [
                "barcode.monster",
                "code"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 87632
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "instagram_v3",
                "api_name": "hls",
                "api_description": "hls => mp4 converter",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "instagram_v3",
                "api_name": "get",
                "api_description": "Getting data bypassing CORS",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a social media influencer and I need to fetch data from Instagram to analyze my engagement. Please assist me in bypassing CORS restrictions to access the data. Additionally, I would like to convert the HLS video links to MP4 format for my upcoming YouTube video.",
        "relevant APIs": [
            [
                "instagram_v3",
                "get"
            ],
            [
                "instagram_v3",
                "hls"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 6148
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "Formula 1 Standings",
                "api_name": "Races",
                "api_description": "It will return the current season races with basic information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "race_name": "str",
                            "race_date": "str",
                            "race_location": "str",
                            "_list_length": 22
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Formula 1 Standings",
                "api_name": "Constructor Standings",
                "api_description": "Get the current season constructor standings.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "team_name": "str",
                            "position": "int",
                            "points": "str",
                            "season": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Formula 1 Standings",
                "api_name": "Driver Standings",
                "api_description": "Will return the current F1 season driver standings.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": "empty list"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are organizing a Formula 1 watch party and we want to know the race schedule for the current season. Can you provide us with the race names, dates, and locations? Additionally, give us the constructor standings, including the team names, positions, and points.",
        "relevant APIs": [
            [
                "Formula 1 Standings",
                "Races"
            ],
            [
                "Formula 1 Standings",
                "Constructor Standings"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 44533
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Cek ID PLN PASCA DAN PRA BAYAR",
                "api_name": "Get Data ID Pelanggan Tagihan PLN / PASCA BAYAR",
                "api_description": "GET Data Pelanggan Tagihan PLN / PLN PASCA BAYAR /Postpaid\n- masukan id PLN di form id",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "532411286263"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "data": {
                        "meter_number": "str",
                        "subscriber_name": "str",
                        "Daya": "str",
                        "Periode": "str",
                        "Denda": "int",
                        "Admin": "int",
                        "Tagihan": "int",
                        "stand_meter": "str"
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Cek ID PLN PASCA DAN PRA BAYAR",
                "api_name": "GET Data ID Pelanggan Token PLN",
                "api_description": "GET Data Pelanggan Token PLN / PLN PRA BAYAR\n- masukan id PLN di form id",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "56213840202"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "data": {
                        "meter_number": "str",
                        "subscriber_id": "str",
                        "subscriber_name": "str",
                        "segment_power": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Could you assist me in retrieving the data for my PLN postpaid account? The ID is '532411286263'. Also, I want to check the token details for my prepaid PLN account. The ID is '56213840202'.",
        "relevant APIs": [
            [
                "Cek ID PLN PASCA DAN PRA BAYAR",
                "Get Data ID Pelanggan Tagihan PLN / PASCA BAYAR"
            ],
            [
                "Cek ID PLN PASCA DAN PRA BAYAR",
                "GET Data ID Pelanggan Token PLN"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 68335
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Generate LinkedIn Leads",
                "api_name": "Get Available Job Titles",
                "api_description": "Get Available Job Titles which could be used in /leads/leads/ endpoint",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "fou"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "value": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Generate LinkedIn Leads",
                "api_name": "Get Available Locations",
                "api_description": "Get Available Locations which could be used in /leads/leads/ endpoint",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "United"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "value": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Generate LinkedIn Leads",
                "api_name": "Get Available Companies",
                "api_description": "Get Available Companies which could be used in /leads/leads/ endpoint",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "app"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "value": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am an HR manager looking to expand my talent pool. Can you retrieve the available job titles for 'human resources' and the available locations in 'Chicago'? Additionally, fetch a list of companies related to 'manufacturing'.",
        "relevant APIs": [
            [
                "Generate LinkedIn Leads",
                "Get Available Job Titles"
            ],
            [
                "Generate LinkedIn Leads",
                "Get Available Locations"
            ],
            [
                "Generate LinkedIn Leads",
                "Get Available Companies"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 26063
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "BIN/IIN Lookup",
                "api_name": "BIN/IIN Lookup",
                "api_description": "This API for Lookup, check, or search Issuer card information using card BIN.\nInput first 6 digits number of the Credit/Debit Card",
                "required_parameters": [
                    {
                        "name": "bin",
                        "type": "NUMBER",
                        "description": "",
                        "default": "470886"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Help me find the issuer card information by entering the first 6 digits of a credit/debit card using the BIN/IIN Lookup API. I would like to know the details for a card with the BIN '470886'.",
        "relevant APIs": [
            [
                "BIN/IIN Lookup",
                "BIN/IIN Lookup"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 84845
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Twitter Pack_v2",
                "api_name": "user-tweet-detail",
                "api_description": "Get user tweet and reply",
                "required_parameters": [
                    {
                        "name": "tweet_id",
                        "type": "STRING",
                        "description": "",
                        "default": "1368693859203436548"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "",
                        "default": "UgAAAPAwHBmGgsC74dOJy_4lioC0vfDsyv4lhICs3bus5P4lnMC44eTDzv4lgsC7saT1yv4lgICz4dCAy_4lhsC7ldmCEgDwAMCitY7Zyv4lJQISFQQAAA"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Pack_v2",
                "api_name": "user-timeline",
                "api_description": "Get tweet timeline by user ID",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "44196397"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "",
                        "default": "HBaEgNKVxpvYtS0AAA=="
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Pack_v2",
                "api_name": "search-user",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "elon"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Pack_v2",
                "api_name": "autocomplete",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "elon musk"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Pack_v2",
                "api_name": "search-tweet",
                "api_description": "search tweet by query",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "elon musk"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "",
                        "default": "scroll:thGAVUV0VFVBaegLaxgNKXty0WloC2kd7Tl7ctEnEVzId6FYCJehgEVVNFUjUBFQAVAAA="
                    },
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Pack_v2",
                "api_name": "search-screen-name",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "screen_name",
                        "type": "STRING",
                        "description": "",
                        "default": "elonmusk"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Pack_v2",
                "api_name": "trend-id",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "woeid",
                        "type": "NUMBER",
                        "description": "",
                        "default": 2514815
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Twitter Pack_v2",
                "api_name": "trend-list",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a road trip with my friends next month. Can you provide me with the current weather conditions and trending topics for our destination city? Also, I would like to search for users who have recently tweeted about road trips in that area.",
        "relevant APIs": [
            [
                "Twitter Pack_v2",
                "user-timeline"
            ],
            [
                "Twitter Pack_v2",
                "trend-id"
            ],
            [
                "Twitter Pack_v2",
                "search-tweet"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 34282
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get a random quote",
                "api_description": "Get a random quote",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get 10 random quotes",
                "api_description": "Get 10 random quotes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get quotes by anime title",
                "api_description": "Get quotes by anime title",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Fairy Tail"
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get quotes by character name",
                "api_description": "Get quotes by character name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "Naruto"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Quotes_v4",
                "api_name": "Get all the available anime",
                "api_description": "Get all the available anime",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am researching anime quotes for a project. Can you give me a random quote and a list of all the available anime?",
        "relevant APIs": [
            [
                "Anime Quotes_v4",
                "Get a random quote"
            ],
            [
                "Anime Quotes_v4",
                "Get all the available anime"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 32309
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all {City} names",
                "api_description": "GET all City names",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "cityName": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all {State} names",
                "api_description": "GET all {State} names",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "stateName": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "Get all {Chain} names",
                "api_description": "Get all {Chain} names",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "restaurantChainName": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all Restaurants by {Chain} & {City} & {State}",
                "api_description": "**10 results per request. Use page number for Pagination.**",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "city",
                        "type": "string",
                        "description": "",
                        "default": "West Bloomfield"
                    },
                    {
                        "name": "state",
                        "type": "string",
                        "description": "",
                        "default": "MI"
                    },
                    {
                        "name": "restaurantChainName",
                        "type": "string",
                        "description": "",
                        "default": "Subway"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matching_results": "int",
                    "restaurants": [
                        {
                            "id": "int",
                            "restaurantName": "str",
                            "address": "str",
                            "zipCode": "str",
                            "phone": "str",
                            "website": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "stateName": "str",
                            "cityName": "str",
                            "hoursInterval": "str",
                            "cuisineType": "str",
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all Restaurants by {Chain}",
                "api_description": "**10 results per request. Use page number for Pagination.**",
                "required_parameters": [
                    {
                        "name": "restaurantChainName",
                        "type": "string",
                        "description": "",
                        "default": "kfc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matching_results": "int",
                    "restaurants": [
                        {
                            "id": "int",
                            "restaurantName": "str",
                            "address": "str",
                            "zipCode": "str",
                            "phone": "str",
                            "website": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "stateName": "str",
                            "cityName": "str",
                            "hoursInterval": "str",
                            "cuisineType": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "GET all Restaurants by {Chain} & {State}",
                "api_description": "**10 results per request. Use page number for Pagination.**",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "string",
                        "description": "",
                        "default": "AZ"
                    },
                    {
                        "name": "restaurantChainName",
                        "type": "string",
                        "description": "",
                        "default": "Subway"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matching_results": "int",
                    "restaurants": [
                        {
                            "id": "int",
                            "restaurantName": "str",
                            "address": "str",
                            "zipCode": "str",
                            "phone": "str",
                            "website": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "stateName": "str",
                            "cityName": "str",
                            "hoursInterval": "str",
                            "cuisineType": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "Fast Food Restaurants USA - TOP 50 Chains",
                "api_name": "Get Restaurant {Logo} by {Chain} Name",
                "api_description": "Get Restaurant {Logo} by {Chain} Name",
                "required_parameters": [
                    {
                        "name": "restaurantChainName",
                        "type": "string",
                        "description": "",
                        "default": "Pizza Hut"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am organizing a company event and we want to provide a variety of food options. Can you find all the fast food restaurants in a specific city? It would be great to have their addresses, phone numbers, and hours of operation.",
        "relevant APIs": [
            [
                "Fast Food Restaurants USA - TOP 50 Chains",
                "GET all {City} names"
            ],
            [
                "Fast Food Restaurants USA - TOP 50 Chains",
                "Get all {Chain} names"
            ],
            [
                "Fast Food Restaurants USA - TOP 50 Chains",
                "GET all Restaurants by {Chain} & {City} & {State}"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 41142
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get Stream Game Name",
                "api_description": "Get  Stream Game Name (by username or id)\n( return an empty JSON object if not currently LIVE )",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "xqcow"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get Stream Mature Content Status",
                "api_description": "Get Stream Mature Content Status (using username or id)\n( return an empty JSON object if not currently LIVE )",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "julie"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get Stream Number of Viewers",
                "api_description": "Get Stream Number of Viewers (using username or id)\n( return an empty JSON object if not currently LIVE )",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "pepipin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get All Active Stream Infos",
                "api_description": "Get a Stream Informations if the status is Online (by username or id)\n( return an empty JSON object if not currently LIVE )",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "Username or Id can be used as UserId",
                        "default": "asmongold"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get Stream Language",
                "api_description": "Get Stream Language (using username or id)\n( return an empty JSON object if not currently LIVE )",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "xqcow"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get All Channel Infos",
                "api_description": "Get Channel Infos (by username or id)",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "samueletienne"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "login": "str",
                    "display_name": "str",
                    "type": "str",
                    "broadcaster_type": "str",
                    "description": "str",
                    "profile_image_url": "str",
                    "offline_image_url": "str",
                    "view_count": "int",
                    "created_at": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get Channel Description",
                "api_description": "Get Channel Description (using username or id)",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "julie"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "description": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get Channel Total Views",
                "api_description": "Get Channel Cumulated Views since its creation (using username or id)",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "julie"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total_views": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get Channel Broadcaster Type",
                "api_description": "Get Channel Broadcaster Type (using username or id)",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "julie"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "broadcaster_type": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "gwyo-twitch",
                "api_name": "Get Stream Title",
                "api_description": "Get Stream Title (using username or id)\n( return an empty JSON object if not currently LIVE )",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "description": "",
                        "default": "xqcow"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm curious about the stream details for asmongold. Can you fetch the stream information including the game name, number of viewers, language, and stream title? Additionally, please let me know if the stream contains mature content.",
        "relevant APIs": [
            [
                "gwyo-twitch",
                "Get All Active Stream Infos"
            ],
            [
                "gwyo-twitch",
                "Get Stream Game Name"
            ],
            [
                "gwyo-twitch",
                "Get Stream Number of Viewers"
            ],
            [
                "gwyo-twitch",
                "Get Stream Language"
            ],
            [
                "gwyo-twitch",
                "Get Stream Mature Content Status"
            ],
            [
                "gwyo-twitch",
                "Get Stream Title"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 73529
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Egypt API",
                "api_name": "Directions Between 2 Locations",
                "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Alexandria to Cairo**",
                "required_parameters": [
                    {
                        "name": "start_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the starting point (required)",
                        "default": "31.1991806"
                    },
                    {
                        "name": "end_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the ending point (required)",
                        "default": "31.23788289124186"
                    },
                    {
                        "name": "start_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the starting point (required)",
                        "default": "29.8951716"
                    },
                    {
                        "name": "end_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the ending point (required)",
                        "default": "30.02313795"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "distance_unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "steps": [
                        {
                            "direction": "str",
                            "distance": "str",
                            "duration": "str",
                            "instruction": "str",
                            "location": [
                                "list of float with length 2"
                            ],
                            "_list_length": 30
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Egypt API",
                "api_name": "Reverse Geocode",
                "api_description": "This endpoint allows you to perform reverse geocoding in Cameroon by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "The longitude of the location.",
                        "default": "31.230981"
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "The latitude of the location.",
                        "default": "30.0240626"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "amenity": "str",
                    "boundingbox": [
                        "list of str with length 4"
                    ],
                    "category": "str",
                    "city": "str",
                    "country": "str",
                    "display_name": "str",
                    "governorate": "str",
                    "suburb": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Egypt API",
                "api_name": "Measure Distance",
                "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Alexandria and Cairo**",
                "required_parameters": [
                    {
                        "name": "lon2",
                        "type": "NUMBER",
                        "description": "Longitude of the second location (required)",
                        "default": "31.23788289124186"
                    },
                    {
                        "name": "lat1",
                        "type": "NUMBER",
                        "description": "Latitude of the first location (required)",
                        "default": "31.1991806"
                    },
                    {
                        "name": "lon1",
                        "type": "NUMBER",
                        "description": "Longitude of the first location (required)",
                        "default": "29.8951716"
                    },
                    {
                        "name": "lat2",
                        "type": "NUMBER",
                        "description": "Latitude of the second location (required)",
                        "default": "30.02313795"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "unit": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Egypt API",
                "api_name": "Facilities Lookup",
                "api_description": "This endpoint allows you to get facilities in Egypt like hospital, bank, college, etc. by providing optional query parameters for facility type, gov (governorate)  and city. It returns a list of facilities that match the query parameters.",
                "required_parameters": [
                    {
                        "name": "gov",
                        "type": "STRING",
                        "description": "The governorate where the facility is located",
                        "default": "Cairo"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
                        "default": "hospital"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The city where the facility is located",
                        "default": "Cairo"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "The number of facilities to query.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hospital": [
                        {
                            "ISO3166-2-lvl4": "str",
                            "address": "str",
                            "amenity": "str",
                            "country_code": "str",
                            "county": "str",
                            "display_name": "str",
                            "governorate": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "postcode": "str",
                            "road": "str",
                            "suburb": "str",
                            "village": "str",
                            "website": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Egypt API",
                "api_name": "Geocode",
                "api_description": "This endpoint allows you to lookup locations in Egypt by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
                "required_parameters": [
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "The name of the location to look up.",
                        "default": "Giza"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "display_name": "str",
                    "latitude": "str",
                    "longitude": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Can you help me find a college in Cairo? I am looking for the address, latitude, and longitude of the college. Please limit the results to 5.",
        "relevant APIs": [
            [
                "Egypt API",
                "Facilities Lookup"
            ],
            [
                "Egypt API",
                "Geocode"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 31117
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Joke of the Day By Category",
                "api_description": "Get the joke of the day of specific category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Money"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Random Joke By Category",
                "api_description": "Get the random joke by category from a collection of most rated and most popular jokes.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Political"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Random Joke",
                "api_description": "Get the random joke from a collection of most rated and most popular jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Jokes",
                "api_description": "Access our huge collection of jokes and paginate through them based on your desired limit and sorting criteria.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "score:desc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Categories of Jokes",
                "api_description": "Get all available categories of our Jokes collection which can be used to filter jokes based on specific category.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Jokes By Specific Category",
                "api_description": "Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 100
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category of joke based on the jokes categories API",
                        "default": "Women"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "score:desc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "World of Jokes",
                "api_name": "Get Joke of the Day",
                "api_description": "Get the joke of the day from a collection of most rated and most popular jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm writing a comedy script and I need a large collection of jokes. Can you give me a list of jokes with a limit of 200 and sorted by score in descending order? Also, provide me with the joke of the day and the available categories of jokes.",
        "relevant APIs": [
            [
                "World of Jokes",
                "Get Jokes"
            ],
            [
                "World of Jokes",
                "Get Joke of the Day"
            ],
            [
                "World of Jokes",
                "Get Categories of Jokes"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 32285
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "pizzaallapala",
                "api_name": "Get Productos",
                "api_description": "asd",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "mensaje": "str",
                    "ok": "bool",
                    "productos": [
                        {
                            "id": "int",
                            "nombre": "str",
                            "descripcion": "str",
                            "linkImagen": "str",
                            "precio": "str",
                            "tasaIva": "str",
                            "vendible": "int",
                            "borrado": "NoneType",
                            "stockRequerido": "NoneType",
                            "created_at": "str",
                            "_list_length": 21
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "pizzaallapala",
                "api_name": "Get Producto Promo",
                "api_description": "Adsa",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ok": "bool",
                    "mensaje": "str",
                    "promo": [
                        {
                            "id": "int",
                            "nombrePromo": "str",
                            "descripcion": "str",
                            "precioFinal": "str",
                            "porcentajeDescuento": "NoneType",
                            "cantidadDescuento": "NoneType",
                            "sucursal": "int",
                            "linkImagen": "str",
                            "fechaInicio": "str",
                            "fechaCaducidad": "str",
                            "borrado": "int",
                            "tags": [
                                "list of str with length 1"
                            ],
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "pizzaallapala",
                "api_name": "Usuarios",
                "api_description": "Hsjssj",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": [
                        {
                            "alias": "str",
                            "dni": "str",
                            "nombre": "str",
                            "apellido": "str",
                            "categoriaIva": "str",
                            "domicilio": "empty list",
                            "email": "str",
                            "id": "str",
                            "_list_length": 35
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "pizzaallapala",
                "api_name": "Get Tags",
                "api_description": "Adss",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ok": "bool",
                    "mensaje": "str",
                    "data": [
                        {
                            "id": "int",
                            "entidad": "NoneType",
                            "idEntidad": "NoneType",
                            "nombre": "str",
                            "sucursal": "int",
                            "cantidad": "NoneType",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a family gathering and I need some pizza recommendations. Please suggest some pizza options from the 'Get Productos' API. Additionally, find any available promo pizzas using the 'Get Producto Promo' API. Lastly, check if there are any special tags associated with the pizzas using the 'Get Tags' API.",
        "relevant APIs": [
            [
                "pizzaallapala",
                "Get Productos"
            ],
            [
                "pizzaallapala",
                "Get Producto Promo"
            ],
            [
                "pizzaallapala",
                "Get Tags"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 32652
    },
    {
        "api_list": [
            {
                "category_name": "Monitoring",
                "tool_name": "SearchingWebRequest",
                "api_name": "SearchWebRequest",
                "api_description": "We need to get the response from the web after specifying a keyword",
                "required_parameters": [
                    {
                        "name": "Keyword",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Please search the web for reviews and opinions about the latest smartphone model. We need to gather insights and feedback from users to improve our product. Use the keyword 'latest smartphone model' for the search. Thank you.",
        "relevant APIs": [
            [
                "SearchingWebRequest",
                "SearchWebRequest"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 86084
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Guinness-World-Records-Api",
                "api_name": "Get Record Details",
                "api_description": "Get the record details for a given href which will be returned from the \"Get Records\" request\n\n\nReturns details like who/what/where/when and an array of strings indicating the different paragraphs as displayed in guinnessworldrecords.com",
                "required_parameters": [
                    {
                        "name": "href",
                        "type": "STRING",
                        "description": "",
                        "default": "/world-records/82145-most-consecutive-vertical-push-ups"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Guinness-World-Records-Api",
                "api_name": "Get Records",
                "api_description": "Get Guinness World Records for a given term",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "string",
                        "description": "",
                        "default": "push ups"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "pageNum",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "maxResults",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a fitness trainer and I want to create a workout routine based on impressive Guinness World Records related to push-ups. Can you fetch the record details for the most challenging push-up records, including who achieved them, where and when they took place, and any tips or techniques used to accomplish these records?",
        "relevant APIs": [
            [
                "Guinness-World-Records-Api",
                "Get Records"
            ],
            [
                "Guinness-World-Records-Api",
                "Get Record Details"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 40699
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC Top-10 Rankings",
                "api_description": "Returns Top-10 gainers, losers and volume leaders for a given period and equity type (i.e., common, unit, warrants). \n\nAccepts three query parameters:\n\n**period: **daily, weekly, monthly\n**type:** common, unit, warrant\n**sortby:** gainers, losers, volume",
                "required_parameters": [
                    {
                        "name": "sortby",
                        "type": "STRING",
                        "description": "",
                        "default": "gainers"
                    },
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "",
                        "default": "daily"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "common"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Gainers": [
                        {
                            "Commons_Symbol": "str",
                            "Commons_Daily_Change_Percent": "str",
                            "Commons_Price": "str",
                            "Commons_Volume": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC Summary",
                "api_description": "Retrieve SPAC summary including important dates, status and target names.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "string",
                        "description": "",
                        "default": "GGPI"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "Latest SPAC Deals, IPOs, Closings",
                "api_description": "Returns a list of latest SPAC events, such as deals, ipos, closings, rumors.\n\n**Available options are: ** ipo, closings, deals, rumor",
                "required_parameters": [
                    {
                        "name": "event",
                        "type": "STRING",
                        "description": "",
                        "default": "deals"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Name": "str",
                    "Ticker": "str",
                    "Underwriters": "str",
                    "Country": "str",
                    "Unit_Split": "str",
                    "Status": "str",
                    "IPO_Date": "str",
                    "Definitive_Agreement_Date": "str",
                    "Closing_Date": "NoneType",
                    "Target_Name": "str",
                    "Investor_Presentation": "NoneType",
                    "Trust_Size": "str",
                    "Target_Details": "str",
                    "Initial_S1_Date": "str",
                    "Registration_Date": "str",
                    "Merger_Meeting_Date": "NoneType"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC Calendar",
                "api_description": "Get important SPAC dates such as merger meetings dates, warrant redemption deadlines, definitive agreement dates, unit split (estimate), SPAC deadline (estimate).\n\nAvailable options: merger, split, deadline, redemption",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "redemption"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC SEC Filings",
                "api_description": "Get latest SPAC SEC filings, filter by SPAC symbol.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "",
                        "default": "ITAC"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ticker": "str",
                    "form_type": "str",
                    "form_description": "str",
                    "filing_date": "str",
                    "document_link": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "spacHero - SPAC Database",
                "api_name": "SPAC Price Targets",
                "api_description": "Get latest SPAC price targets from analysts, filter by SPAC symbol.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "",
                        "default": "SOFI"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a financial analyst working on a report about SPACs and I need the latest SEC filings for a specific SPAC. Can you provide me with the ticker symbol, form type, form description, filing date, and document link? Additionally, I'm interested in the latest price targets from analysts for another SPAC.",
        "relevant APIs": [
            [
                "spacHero - SPAC Database",
                "SPAC SEC Filings"
            ],
            [
                "spacHero - SPAC Database",
                "SPAC Price Targets"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 28751
    },
    {
        "api_list": [
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Categories",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "categories": [
                        {
                            "category": "NoneType",
                            "_list_length": 872
                        }
                    ]
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Product",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Products in Category",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "products": "empty list",
                    "summary": {
                        "count": "int"
                    }
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Order",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get User Orders",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Get Products",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "products": [
                        {
                            "id": "int",
                            "name": "str",
                            "category": "NoneType",
                            "_list_length": 10
                        }
                    ],
                    "summary": {
                        "count": "int"
                    }
                }
            },
            {
                "category_name": "Events",
                "tool_name": "\ud83d\udc4b Demo Project",
                "api_name": "Me",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "statusCode": "int",
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am a business owner who wants to analyze the performance of my products. Can you provide me with a list of available products in the Demo Project catalog? Additionally, give me the details of a specific order with ID ORD456.",
        "relevant APIs": [
            [
                "\ud83d\udc4b Demo Project",
                "Get Products"
            ],
            [
                "\ud83d\udc4b Demo Project",
                "Get Order"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 55721
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Zestimate history",
                "api_description": "Zestimate history by zpid",
                "required_parameters": [
                    {
                        "name": "zpid",
                        "type": "STRING",
                        "description": "",
                        "default": "20476226"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Photos",
                "api_description": "Returns a property's photos with different sizes and types.",
                "required_parameters": [
                    {
                        "name": "zpid",
                        "type": "STRING",
                        "description": "",
                        "default": "2110846380"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Property details",
                "api_description": "Get a property's details by its zpid",
                "required_parameters": [
                    {
                        "name": "zpid",
                        "type": "STRING",
                        "description": "",
                        "default": "7594920"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Walk, Transit and Bike Score",
                "api_description": "Get Walk, Transit and Bike Score of a property by zpid",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "zpid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20485700"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Rent Zestimate and Comparable properties",
                "api_description": "Returns a property's rent zestimate and it's comparable properties in the same area.",
                "required_parameters": [
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "",
                        "default": "1545 Yale St, Santa Monica, CA 90404"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "bedrooms",
                        "type": "STRING",
                        "description": "[SIMILARFLOORPLANS] \nFilter for number of bedrooms: (To choose multiple values separate with comma eg : 0,1,2)\nPossible values:\n**0\n1\n2\n3\n4plus**\n",
                        "default": ""
                    },
                    {
                        "name": "pets",
                        "type": "STRING",
                        "description": "[SIMILARFLOORPLANS] \nFilter for Pets: (To choose multiple values separate with comma eg : dogs,cats)\nPossible values:\n**any (Default)\ndogs\ncats**\n",
                        "default": ""
                    },
                    {
                        "name": "amenities",
                        "type": "STRING",
                        "description": "[SIMILARFLOORPLANS] \nFilter for amenities: (To choose multiple values separate with comma eg : cooling,parking)\nPossible values:\n**any (Default)\ncooling\nheating\nparking**\n",
                        "default": ""
                    },
                    {
                        "name": "laundry",
                        "type": "STRING",
                        "description": "[SIMILARFLOORPLANS] \nFilter for Laundry: (To choose multiple values separate with comma eg : inUnit,shared)\nPossible values:\n**any (Default)\ninUnit\nshared**\n",
                        "default": ""
                    },
                    {
                        "name": "propertyTypes",
                        "type": "STRING",
                        "description": "[SIMILARFLOORPLANS] \nFilter for Property Types: (To choose multiple values separate with comma eg : house,condo)\nPossible values:\n**any (Default)\napartment\nhouse\ntownhouse\ncondo**\n",
                        "default": ""
                    },
                    {
                        "name": "activeTypes",
                        "type": "STRING",
                        "description": "SimilarFloorPlans filter:\nPossible values:\nany (Default)\nactive (Active Rentals)\ninactive (Inactive Rentals)\n",
                        "default": ""
                    },
                    {
                        "name": "deactivatedDays",
                        "type": "STRING",
                        "description": "[SIMILARFLOORPLANS]\nFilter for inactive rentals within X days:\nPossible values:\n30 (Within 30 days (max))\n15 (Within 15 days)\n7 (Within 7 days)\n",
                        "default": ""
                    },
                    {
                        "name": "activatedDays",
                        "type": "STRING",
                        "description": "[SIMILARFLOORPLANS]\nFilter for Active Rentals within X days:\nPossible values:\nany (Default)\n30 (Within 30 days)\n15 (Within 15 days)\n7 (Within 7 days)\n",
                        "default": ""
                    },
                    {
                        "name": "distanceInMiles",
                        "type": "STRING",
                        "description": "[SIMILARFLOORPLANS] \nFilter for distance in Miles: \nPossible values:\n**any\n1\n2\n3\n4\n5**\n",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Agent's active listings",
                "api_description": "Get agent's active listings by zuid",
                "required_parameters": [
                    {
                        "name": "zuid",
                        "type": "STRING",
                        "description": "",
                        "default": "X1-ZUz0nmomozy2o9_9bpwk"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Agent Reviews",
                "api_description": "Get agent reviews by the agent's zuid",
                "required_parameters": [
                    {
                        "name": "zuid",
                        "type": "STRING",
                        "description": "",
                        "default": "X1-ZUz0nmomozy2o9_9bpwk"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Agent's rental listings",
                "api_description": "Get agent's rental listings by zuid",
                "required_parameters": [
                    {
                        "name": "zuid",
                        "type": "STRING",
                        "description": "",
                        "default": "X1-ZUz0nmomozy2o9_9bpwk"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Agent details by username",
                "api_description": "Get agent's details by username(contact infos, active listings and reviews etc).\nPS : username is the profile link \nExample : \nusername :  Pardee-Properties\nfor https://www.zillow.com/profile/Pardee-Properties/",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "Pardee-Properties"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Zillow_v2",
                "api_name": "Search for agents",
                "api_description": "Search for agents by location and name",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "houston, tx"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "specialties",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a company event in Santa Monica, CA and I need to find rental properties for our employees. Can you assist me in finding rental properties with good walk, transit, and bike scores in the area? It would be helpful if you could provide the rent zestimate and comparable properties as well.",
        "relevant APIs": [
            [
                "Zillow_v2",
                "Rent Zestimate and Comparable properties"
            ],
            [
                "Zillow_v2",
                "Walk, Transit and Bike Score"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 17204
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Uganda API",
                "api_name": "Directions Between 2 Locations",
                "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a location in Nansana to Kampala**",
                "required_parameters": [
                    {
                        "name": "end_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the ending point (required)",
                        "default": "0.32493795000000003"
                    },
                    {
                        "name": "start_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the starting point (required)",
                        "default": "0.365816"
                    },
                    {
                        "name": "end_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the ending point (required)",
                        "default": "32.57523607707668"
                    },
                    {
                        "name": "start_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the starting point (required)",
                        "default": "32.529226"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "distance_unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "steps": [
                        {
                            "direction": "str",
                            "distance": "str",
                            "duration": "str",
                            "instruction": "str",
                            "location": [
                                "list of float with length 2"
                            ],
                            "_list_length": 18
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Uganda API",
                "api_name": "Reverse Geocode",
                "api_description": "This endpoint allows you to perform reverse geocoding in Uganda by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "The longitude of the location.",
                        "default": "32.57523607707668"
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "The latitude of the location.",
                        "default": "0.32493795000000003"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "amenity": "str",
                    "boundingbox": [
                        "list of str with length 4"
                    ],
                    "category": "str",
                    "city": "str",
                    "country": "str",
                    "display_name": "str",
                    "region": "str",
                    "suburb": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Uganda API",
                "api_name": "Facilities Lookup",
                "api_description": "This endpoint allows you to get facilities in Uganda like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The region where the facility is located",
                        "default": "Central"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
                        "default": "hospital"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "The number of facilities to query.",
                        "default": "10"
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The city where the facility is located",
                        "default": "Kampala"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hospital": [
                        {
                            "ISO3166-2-lvl4": "str",
                            "address": "str",
                            "amenity": "str",
                            "country_code": "str",
                            "county": "str",
                            "display_name": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "postcode": "str",
                            "region": "str",
                            "road": "str",
                            "suburb": "str",
                            "village": "str",
                            "website": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Uganda API",
                "api_name": "Geocode",
                "api_description": "This endpoint allows you to lookup locations in Uganda by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
                "required_parameters": [
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "Name of address",
                        "default": "Nansana"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "display_name": "str",
                    "latitude": "str",
                    "longitude": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Uganda API",
                "api_name": "Measure Distance",
                "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Nansana to Kampala**",
                "required_parameters": [
                    {
                        "name": "lat1",
                        "type": "NUMBER",
                        "description": "Latitude of the first location (required)",
                        "default": "0.365816"
                    },
                    {
                        "name": "lat2",
                        "type": "NUMBER",
                        "description": "Latitude of the second location (required)",
                        "default": "0.32493795000000003"
                    },
                    {
                        "name": "lon2",
                        "type": "NUMBER",
                        "description": "Longitude of the second location (required)",
                        "default": "32.57523607707668"
                    },
                    {
                        "name": "lon1",
                        "type": "NUMBER",
                        "description": "Longitude of the first location (required)",
                        "default": "32.529226"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "unit": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a family vacation to Uganda and I need directions from Entebbe Airport to Kampala. Can you provide me with the distance, duration, and step-by-step instructions for the route? Please include the distance unit in kilometers.",
        "relevant APIs": [
            [
                "Uganda API",
                "Directions Between 2 Locations"
            ],
            [
                "Uganda API",
                "Measure Distance"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 48059
    },
    {
        "api_list": [
            {
                "category_name": "Text_Analysis",
                "tool_name": "Spellout",
                "api_name": "Languages",
                "api_description": "List ISO 639 languages",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nameFilter",
                        "type": "STRING",
                        "description": "Filter as \"contains\" by language name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "str",
                    "name": "str",
                    "nativeName": "str"
                }
            },
            {
                "category_name": "Text_Analysis",
                "tool_name": "Spellout",
                "api_name": "RuleSets",
                "api_description": "List of availible rule sets for given language",
                "required_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "2 letter ICO 639 language code. Specifies language for which all availible rule sets will be provided. Use /v1/languages endpoint to list all supported languages.",
                        "default": "en"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Text_Analysis",
                "tool_name": "Spellout",
                "api_name": "SpellOut",
                "api_description": "Spell out number in given language using provided rule set",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "NUMBER",
                        "description": "Number to spell out",
                        "default": 123
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "2 letter ICO 639 language code. Specifies language in which number will be spelled out. Use /v1/languages endpoint to list all supported languages.",
                        "default": "en"
                    },
                    {
                        "name": "ruleset",
                        "type": "STRING",
                        "description": "Rule Set name. Specifiles rule set accoring to which number will be spelled out. Use /v1/rulesets to list all supported rule sets for any given language.",
                        "default": "spellout-cardinal"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "spellout": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm helping my friend with their language studies, and we need assistance with spelling out numbers in different languages. Can you provide a list of languages supported by the Spellout API? Additionally, we would like to know the available rule sets for each language. Finally, it would be great if you could spell out the number 123 in multiple languages using the appropriate rule sets.",
        "relevant APIs": [
            [
                "Spellout",
                "Languages"
            ],
            [
                "Spellout",
                "RuleSets"
            ],
            [
                "Spellout",
                "SpellOut"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 4505
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "Free NBA",
                "api_name": "Get a Specific Team",
                "api_description": "This endpoint retrieves a specific team",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The ID of the team",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "Free NBA",
                "api_name": "Get All Games",
                "api_description": "This endpoint retrieves all games.  Seasons are represented by the year they began. For example, 2018 represents season 2018-2019.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "The page number, used for pagination.",
                        "default": "0"
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "The number of results returned per call, used for pagination.",
                        "default": "25"
                    },
                    {
                        "name": "team_ids",
                        "type": "STRING",
                        "description": "An array of team_ids",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "An array of dates formatted in 'YYYY-MM-DD'",
                        "default": ""
                    },
                    {
                        "name": "Seasons",
                        "type": "STRING",
                        "description": "An array of seasons",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "int",
                            "date": "str",
                            "home_team": {
                                "id": "int",
                                "abbreviation": "str",
                                "city": "str",
                                "conference": "str",
                                "division": "str",
                                "full_name": "str",
                                "name": "str"
                            },
                            "home_team_score": "int",
                            "period": "int",
                            "postseason": "bool",
                            "season": "int",
                            "status": "str",
                            "time": "str",
                            "visitor_team": {
                                "id": "int",
                                "abbreviation": "str",
                                "city": "str",
                                "conference": "str",
                                "division": "str",
                                "full_name": "str",
                                "name": "str"
                            },
                            "visitor_team_score": "int",
                            "_list_length": 25
                        }
                    ],
                    "meta": {
                        "total_pages": "int",
                        "current_page": "int",
                        "next_page": "int",
                        "per_page": "int",
                        "total_count": "int"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Free NBA",
                "api_name": "Get a Specific Game",
                "api_description": "This endpoint retrieves a specific game",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the game",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "Free NBA",
                "api_name": "Get All Stats",
                "api_description": "Retrieves all stats",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "seasons",
                        "type": "STRING",
                        "description": "An array of seasons",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "The page number, used for pagination.",
                        "default": "0"
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "The number of results returned per call, used for pagination.",
                        "default": "25"
                    },
                    {
                        "name": "player_ids",
                        "type": "STRING",
                        "description": "An array of player_ids",
                        "default": ""
                    },
                    {
                        "name": "dates",
                        "type": "STRING",
                        "description": "An array of dates formatted in 'YYYY-MM-DD'",
                        "default": ""
                    },
                    {
                        "name": "game_ids",
                        "type": "STRING",
                        "description": "An array of game_ids",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"data\": [{\"id\": \"int\", \"ast\": \"int\", \"blk\": \"int\", \"dreb\": \"int\", \"fg3_pct\": \"float\", \"fg3a\": \"int\", \"fg3m\": \"int\", \"fg_pct\": \"float\", \"fga\": \"int\", \"fgm\": \"int\", \"ft_pct\": \"float\", \"fta\": \"int\", \"ftm\": \"int\", \"game\": {\"id\": \"int\", \"date\": \"str\", \"home_team_id\": \"int\", \"home_team_score\": \"int\", \"period\": \"int\", \"postseason\": \"bool\", \"season\": \"int\", \"status\": \"str\", \"time\": \"str\", \"visitor_team_id\": \"int\", \"visitor_team_score\": \"int\"}, \"min\": \"str\", \"oreb\": \"int\", \"pf\": \"int\", \"player\": {\"id\": \"int\", \"first_name\": \"str\", \"height_feet\": \"NoneType\", \"height_inches\": \"NoneType\", \"last_name\": \"str\", \"position\": \"str\", \"team_id\": \"int\", \"weight_pounds\": \"NoneType\"}, \"pts\": \"int\", \"reb\": \"int\", \"stl\": \"int\", \"team\": {\"id\": \"int\", \"abbreviation\": \"str\", \"city\": \"str\", \"conference\": \"str\", \"division\": \"str\", \"full_name\": \"str\", \"name\": \"str\"}, \"turnover\": \"int\", \"_list_length\": 25}], \"meta\": {\"total_pages\": \"int\", \"current_page\": \"int\", \"next_page\": \"int\", \"per_page\": \"int\", \"total_count\": \"i"
            },
            {
                "category_name": "Sports",
                "tool_name": "Free NBA",
                "api_name": "Get All Players",
                "api_description": "This endpoint retrieves all players from all seasons.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "The page number, used for pagination.",
                        "default": "0"
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "The number of results returned per call, used for pagination.",
                        "default": "25"
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Used to filter players based on their name. For example, ?search=davis will return players that have 'davis' in their first or last name.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "int",
                            "first_name": "str",
                            "height_feet": "NoneType",
                            "height_inches": "NoneType",
                            "last_name": "str",
                            "position": "str",
                            "team": {
                                "id": "int",
                                "abbreviation": "str",
                                "city": "str",
                                "conference": "str",
                                "division": "str",
                                "full_name": "str",
                                "name": "str"
                            },
                            "weight_pounds": "NoneType",
                            "_list_length": 25
                        }
                    ],
                    "meta": {
                        "total_pages": "int",
                        "current_page": "int",
                        "next_page": "int",
                        "per_page": "int",
                        "total_count": "int"
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "Free NBA",
                "api_name": "Get Specific Player",
                "api_description": "This endpoint retrieves a specific player.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "The ID of the player to retrieve",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "Free NBA",
                "api_name": "Get All Teams",
                "api_description": "This endpoint retrieves all teams for the current season.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "The page number, used for pagination.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "int",
                            "abbreviation": "str",
                            "city": "str",
                            "conference": "str",
                            "division": "str",
                            "full_name": "str",
                            "name": "str",
                            "_list_length": 30
                        }
                    ],
                    "meta": {
                        "total_pages": "int",
                        "current_page": "int",
                        "next_page": "int",
                        "per_page": "int",
                        "total_count": "int"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to know the details of the game with ID 12345. Give me the date, home team, home team score, visitor team, and visitor team score. Additionally, provide the player statistics for this game.",
        "relevant APIs": [
            [
                "Free NBA",
                "Get a Specific Game"
            ],
            [
                "Free NBA",
                "Get All Stats"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 2399
    }
]