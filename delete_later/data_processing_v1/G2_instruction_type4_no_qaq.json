[
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "Beeg",
                "api_name": "ss",
                "api_description": "ss",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "test2",
                "api_name": "/{orgCode}/cards",
                "api_description": "Returns a list of cards for the given session. User authentication is required.",
                "required_parameters": [
                    {
                        "name": "muid",
                        "type": "STRING",
                        "description": "User ID.",
                        "default": "string"
                    },
                    {
                        "name": "msid",
                        "type": "STRING",
                        "description": "Session ID.",
                        "default": "string"
                    },
                    {
                        "name": "orgCode",
                        "type": "STRING",
                        "description": "The organization associated with the request.",
                        "default": "string"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "Language used.",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "test2",
                "api_name": "/{orgCode}/cardart/{bins}",
                "api_description": "Returns card art URLs by BINs. Different URLs can be defined for each BIN/range of BINs. User authentication is not required.",
                "required_parameters": [
                    {
                        "name": "muid",
                        "type": "STRING",
                        "description": "User ID.",
                        "default": "string"
                    },
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "Language used.",
                        "default": "string"
                    },
                    {
                        "name": "orgCode",
                        "type": "STRING",
                        "description": "The organization associated with the request.",
                        "default": "string"
                    },
                    {
                        "name": "msid",
                        "type": "STRING",
                        "description": "Session ID.",
                        "default": "string"
                    },
                    {
                        "name": "bins",
                        "type": "STRING",
                        "description": "One or more six-digit bin separated by commas.",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "test2",
                "api_name": "/{orgCode}/accounts/{accountId}/cards",
                "api_description": "Returns a list of cards belonging to a specific account. User authentication is required.",
                "required_parameters": [
                    {
                        "name": "locale",
                        "type": "STRING",
                        "description": "Language used.",
                        "default": "string"
                    },
                    {
                        "name": "msid",
                        "type": "STRING",
                        "description": "Session ID.",
                        "default": "string"
                    },
                    {
                        "name": "orgCode",
                        "type": "STRING",
                        "description": "The organization associated with the request.",
                        "default": "string"
                    },
                    {
                        "name": "muid",
                        "type": "STRING",
                        "description": "User ID.",
                        "default": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "STRING",
                        "description": "The parent account ID.",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Scanily",
                "api_name": "Health Check",
                "api_description": "This endpoint allows you to check the availability of the systems to ensure everything is operational.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I need to organize my credit cards and would like to fetch the list of cards associated with my user ID '12345'. Also, provide me with the health status of the systems.",
        "relevant APIs": [
            [
                "test2",
                "/{orgCode}/cards"
            ],
            [
                "Scanily",
                "Health Check"
            ]
        ],
        "query_id": 75958
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Language Detection_v2",
                "api_name": "Language Codes List",
                "api_description": "Return list of language codes in ISO 639-1 format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Translation",
                "tool_name": "Translate it",
                "api_name": "options",
                "api_description": "With this endpoint you can get the supported languages and the possible translations between them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My family and I are planning a multilingual event and we need to know the language codes for different languages. Can you provide us with a list of language codes in ISO 639-1 format? Moreover, we would like to explore the supported languages and possible translations between them using the Translate it API.",
        "relevant APIs": [
            [
                "Language Detection_v2",
                "Language Codes List"
            ],
            [
                "Translate it",
                "options"
            ]
        ],
        "query_id": 12894
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "qwe",
                "api_name": "qwe",
                "api_description": "qwe",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Validate VAT",
                "api_name": "Validate VAT",
                "api_description": "\u201cValidate VAT\u201d validates VAT numbers, get company information, including address, returned for each VAT number.",
                "required_parameters": [
                    {
                        "name": "vat_number",
                        "type": "STRING",
                        "description": "",
                        "default": "IE6388047V"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "int",
                    "message": "str",
                    "result": {
                        "vatNumber": "str",
                        "isValid": "bool",
                        "company": {
                            "name": "str",
                            "address": "str"
                        },
                        "country": {
                            "code": "str",
                            "name": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Business",
                "tool_name": "TEXTKING Translation",
                "api_name": "List projects",
                "api_description": "Returns a collection of projects of the authorized customer.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "An integer value defining how many entries should be returned. Only values between 1 and 100 (both inclusive) are allowed. If not given, this defaults to 100.",
                        "default": "100"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Return search results starting at a given page. Used for paging through more than one page of results.",
                        "default": "1"
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "Filter projects by status: prepared, running, finished, canceled",
                        "default": "running"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "description": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "TEXTKING Translation",
                "api_name": "Get language",
                "api_description": "Returns a single language with the given ISO 639 language code.",
                "required_parameters": [
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "The ISO 639 language code.",
                        "default": "de"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "str",
                    "name": "str",
                    "localization_language": "str",
                    "links": [
                        {
                            "rel": "str",
                            "href": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Business",
                "tool_name": "TEXTKING Translation",
                "api_name": "Download source document",
                "api_description": "Downloads the source document for a job.",
                "required_parameters": [
                    {
                        "name": "projectid",
                        "type": "STRING",
                        "description": "The project UUID.",
                        "default": "bc141454-5949-401b-9c05-7591ee2f562"
                    },
                    {
                        "name": "jobid",
                        "type": "STRING",
                        "description": "The job UUID.",
                        "default": "d0c30471-7c70-45d4-bcc1-a7773cb352b"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "description": "str"
                }
            },
            {
                "category_name": "Business",
                "tool_name": "111",
                "api_name": "fdfdf",
                "api_description": "fdfdf",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you help me validate the VAT number of my friend's company? The VAT number is DE123456789. I would also like to know the language details for the language code 'de'.",
        "relevant APIs": [
            [
                "Validate VAT",
                "Validate VAT"
            ],
            [
                "TEXTKING Translation",
                "Get language"
            ]
        ],
        "query_id": 85129
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Document Image Validation",
                "api_name": "GET Call",
                "api_description": "Used to fetch api result using the request id received in responses.",
                "required_parameters": [
                    {
                        "name": "request_id",
                        "type": "STRING",
                        "description": "",
                        "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Label Detection",
                "api_name": "GET Label Detection",
                "api_description": "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=\u201cimage_url\u201d)",
                "required_parameters": [
                    {
                        "name": "image",
                        "type": "STRING",
                        "description": "",
                        "default": "https://m.media-amazon.com/images/I/71k6XnjuwkL._AC_SL1500_.jpg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "labels": [
                        {
                            "text": "str",
                            "score": "float",
                            "locale": "str",
                            "_list_length": 10
                        }
                    ],
                    "success": "bool",
                    "dimensions": {
                        "height": "int",
                        "width": "int",
                        "type": "str"
                    }
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Brand Recognition",
                "api_name": "Get version",
                "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My company is launching a new product and we need to ensure its brand recognition. Please fetch the version of the brand recognition service. Additionally, perform label detection on the product image to identify the brand and provide the label along with its score.",
        "relevant APIs": [
            [
                "Brand Recognition",
                "Get version"
            ],
            [
                "Label Detection",
                "GET Label Detection"
            ]
        ],
        "query_id": 79968
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "US Gas Prices",
                "api_name": "/us/mn",
                "api_description": "Returns current gas price data for Minnesota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "US Gas Prices",
                "api_name": "/us/nm",
                "api_description": "Returns current gas price data for New Mexico. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "US Gas Prices",
                "api_name": "/us/ia",
                "api_description": "Returns current gas price data for Iowa. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "Travel Hacking Tool",
                "api_name": "Get Airport Details",
                "api_description": "This endpoint returns the details such as name and location for a specified IATA airport.",
                "required_parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "description": "Specify a valid three letter IATA code.",
                        "default": "DFW"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "str",
                    "icao": "str",
                    "name": "str",
                    "latitude": "float",
                    "longitude": "float",
                    "elevation": "int",
                    "url": "str",
                    "time_zone": "str",
                    "city_code": "str",
                    "country": "str",
                    "city": "str",
                    "state": "str",
                    "county": "str",
                    "type": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Travel Hacking Tool",
                "api_name": "Get Airplane Details",
                "api_description": "This endpoint returns a list of airplanes and other means of transportation to match GDS responses.",
                "required_parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "description": "",
                        "default": "777"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "code": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "Travel Hacking Tool",
                "api_name": "Get TimeZones",
                "api_description": "Get TimeZones in Olsen Format with UTC offset and Daylight Savings Time (DST).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "timezone": "str",
                    "utc": "str",
                    "dst": "str",
                    "zone_code": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "aqls-b2c-system",
                "api_name": "get_priorityrows_mrt__train_no__wagons__wagon_no__priorityrow_get",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "wagon_no",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "train_no",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "aqls-b2c-system",
                "api_name": "get_wagon_by_no_mrt_wagons__wagon_no__get",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "wagon_no",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "aqls-b2c-system",
                "api_name": "get_stands_mrt__train_no__wagons__wagon_no__standrows__standrows_no__seats_get",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "wagon_no",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "standrows_no",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "train_no",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            }
        ],
        "query": "I'm planning a vacation and I'm interested in the gas prices in Iowa. Can you fetch the current gas price data for Iowa? Additionally, I'm curious about the details of the airport in Dallas-Fort Worth (DFW) and the airplanes with the code '777'.",
        "relevant APIs": [
            [
                "US Gas Prices",
                "/us/ia"
            ],
            [
                "Travel Hacking Tool",
                "Get Airport Details"
            ],
            [
                "Travel Hacking Tool",
                "Get Airplane Details"
            ]
        ],
        "query_id": 51287
    },
    {
        "api_list": [
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Background Remover",
                "api_name": "getImage",
                "api_description": "Retuns the result of an image that was previously handled by autoremove route for the given image Id.\naccepts two parameters:\n  - imageId: The Id of the image to get.\n  - recompute: bollean, if set to true, asks the server to remove the backgorund again for the specified ID (costs credits).\n",
                "required_parameters": [
                    {
                        "name": "imageId",
                        "type": "STRING",
                        "description": "ID of the image to get",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "recompute",
                        "type": "BOOLEAN",
                        "description": "ask the server to remove the background again (cost credits)",
                        "default": true
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Background Remover",
                "api_name": "getAccount",
                "api_description": "Returns a description of your user account information.\nUseful to get the remaining credits on your account\n",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "state": "str",
                    "statusCode": "int",
                    "code": "str",
                    "title": "str",
                    "message": "NoneType"
                }
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Fashion",
                "api_name": "Get version",
                "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Visual_Recognition",
                "tool_name": "Image Text Recognition",
                "api_name": "Supported Languages",
                "api_description": "3 letters language codes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"afr\": \"str\", \"amh\": \"str\", \"ara\": \"str\", \"asm\": \"str\", \"aze\": \"str\", \"bel\": \"str\", \"ben\": \"str\", \"bod\": \"str\", \"bos\": \"str\", \"bul\": \"str\", \"cat\": \"str\", \"ceb\": \"str\", \"ces\": \"str\", \"chi_sim\": \"str\", \"chi_tra\": \"str\", \"chr\": \"str\", \"cym\": \"str\", \"dan\": \"str\", \"deu\": \"str\", \"dzo\": \"str\", \"ell\": \"str\", \"eng\": \"str\", \"enm\": \"str\", \"epo\": \"str\", \"est\": \"str\", \"eus\": \"str\", \"fas\": \"str\", \"fin\": \"str\", \"fra\": \"str\", \"frm\": \"str\", \"gle\": \"str\", \"glg\": \"str\", \"grc\": \"str\", \"guj\": \"str\", \"hat\": \"str\", \"heb\": \"str\", \"hin\": \"str\", \"hrv\": \"str\", \"hun\": \"str\", \"iku\": \"str\", \"ind\": \"str\", \"isl\": \"str\", \"ita\": \"str\", \"jav\": \"str\", \"jpn\": \"str\", \"kan\": \"str\", \"kat\": \"str\", \"kaz\": \"str\", \"khm\": \"str\", \"kir\": \"str\", \"kor\": \"str\", \"lao\": \"str\", \"lat\": \"str\", \"lav\": \"str\", \"lit\": \"str\", \"mal\": \"str\", \"mar\": \"str\", \"mkd\": \"str\", \"mlt\": \"str\", \"msa\": \"str\", \"mya\": \"str\", \"nep\": \"str\", \"nld\": \"str\", \"nor\": \"str\", \"ori\": \"str\", \"osd\": \"str\", \"pan\": \"str\", \"pol\": \"str\", \"por\": \"str\", \"pus\": \"str\", \"ron\": \"str"
            }
        ],
        "query": "I want to know the version of the Fashion API. Fetch the supported languages for image text recognition. Additionally, remove the background from an image with the ID 'ghi123' and provide the result. Furthermore, fetch the remaining credits on my Background Remover account.",
        "relevant APIs": [
            [
                "Fashion",
                "Get version"
            ],
            [
                "Image Text Recognition",
                "Supported Languages"
            ],
            [
                "Background Remover",
                "getImage"
            ],
            [
                "Background Remover",
                "getAccount"
            ]
        ],
        "query_id": 21584
    },
    {
        "api_list": [
            {
                "category_name": "Financial",
                "tool_name": "Mutual fund Nav",
                "api_name": "fundID",
                "api_description": "current Nav",
                "required_parameters": [
                    {
                        "name": "ID",
                        "type": "STRING",
                        "description": "FundID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Financial",
                "tool_name": "Crypto Symbols by API-Ninjas",
                "api_name": "/v1/cryptosymbols",
                "api_description": "API Ninjas Crypto Symbols API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "list of str with length 522"
                    ],
                    "timestamp": "int"
                }
            }
        ],
        "query": "I'm starting a new business and I need to manage my finances effectively. Can you assist me in retrieving the current NAV for mutual funds with IDs 'STU321' and 'VWX654'? Additionally, I want to explore the world of cryptocurrencies. Please provide the latest crypto symbols and their corresponding timestamp.",
        "relevant APIs": [
            [
                "Mutual fund Nav",
                "fundID"
            ],
            [
                "Crypto Symbols by API-Ninjas",
                "/v1/cryptosymbols"
            ]
        ],
        "query_id": 4746
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "planetaryoverview",
                "api_description": "get the Planetary Overview of the day",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "planet": "str",
                    "sign": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Horostory",
                "api_name": "hoscoscope",
                "api_description": "retrieve the horoscope for a specific sign and date",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "sign",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "US Hospitals",
                "api_name": "getHospitalsByName",
                "api_description": "###Find US Hospitals by name.\nSimply add your search string to the \"name\" parameter in the url.\nTip:  The API also works if your search for *name='pr'* instead of *name='presbyterian'.* \n\n**Note**: The API only returns the first 30 results.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "presbyterian"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "US Hospitals",
                "api_name": "getHospitalsById",
                "api_description": "###Find US Hospitals by CMS Certification Number\nSimply add your search string as a parameter to the \"ccn\" query.\n\n**Note**: The API only returns the first 30 results.",
                "required_parameters": [
                    {
                        "name": "ccn",
                        "type": "NUMBER",
                        "description": "",
                        "default": "670068"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Provider CCN": "int",
                    "Hospital Name": "str",
                    "Alias": "str",
                    "Url": "str",
                    "Phone": "str",
                    "Service": "str",
                    "Type": "str",
                    "Approval Codes": "str",
                    "Street Address": "str",
                    "City": "str",
                    "State Code": "str",
                    "Zip Code": "str",
                    "County": "str",
                    "Medicare CBSA Number": "int",
                    "Rural Versus Urban": "str",
                    "Control": "str",
                    "Number of Beds": "int",
                    "Parent Unit": "NoneType",
                    "Affiliated Units": "NoneType",
                    "System": "NoneType"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Exercises by API-Ninjas",
                "api_name": "/v1/exercises",
                "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "muscle",
                        "type": "STRING",
                        "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
                        "default": "biceps"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
                        "default": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "STRING",
                        "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "type": "str",
                    "muscle": "str",
                    "equipment": "str",
                    "difficulty": "str",
                    "instructions": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "cities/v2/get-information",
                "api_description": "Get information in specific city by its id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The value of id field (type is city) that returned in \u2026/v2/auto-complete endpoint",
                        "default": "hW7vArorRd8cT9h6v"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "x-units-temperature",
                        "type": "STRING",
                        "description": "One of the following : fahrenheit|celsius",
                        "default": "celsius"
                    },
                    {
                        "name": "x-aqi-index",
                        "type": "STRING",
                        "description": "One of the following : us|cn",
                        "default": "us"
                    },
                    {
                        "name": "x-user-timezone",
                        "type": "STRING",
                        "description": "",
                        "default": "Asia/Singapore"
                    },
                    {
                        "name": "x-user-lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en-US"
                    },
                    {
                        "name": "x-units-pressure",
                        "type": "STRING",
                        "description": "One of the following : hg|mbar",
                        "default": "mbar"
                    },
                    {
                        "name": "x-units-distance",
                        "type": "STRING",
                        "description": "One of the following : miles|kilometer",
                        "default": "kilometer"
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"data\": {\"id\": \"str\", \"city\": \"str\", \"state\": \"str\", \"country\": \"str\", \"location\": {\"lat\": \"float\", \"lon\": \"float\"}, \"timezone\": \"str\", \"websiteLink\": \"str\", \"report\": {\"link\": \"str\", \"actionText\": \"str\", \"message\": \"str\"}, \"type\": \"str\", \"name\": \"str\", \"followers\": {\"total\": \"str\", \"pictures\": [\"list of str with length 3\"], \"label\": \"str\"}, \"contributors\": {\"pictures\": [\"list of str with length 2\"], \"redirection\": {\"actionType\": \"str\", \"appCategory\": \"str\", \"item\": \"str\"}, \"label\": \"str\"}, \"sources\": [{\"id\": \"str\", \"name\": \"str\", \"totalStations\": \"int\", \"type\": \"str\", \"picture\": \"str\", \"url\": \"str\", \"_list_length\": 4}], \"currentMeasurement\": {\"ts\": \"str\", \"aqius\": \"int\", \"mainus\": \"str\", \"aqicn\": \"int\", \"maincn\": \"str\", \"pollutants\": [{\"conc\": \"float\", \"aqius\": \"int\", \"aqicn\": \"int\", \"pollutant\": \"str\", \"isEstimated\": \"int\", \"_list_length\": 1}]}, \"sensorDefinitions\": [{\"pollutant\": \"str\", \"unit\": \"str\", \"name\": \"str\", \"_list_length\": 16}], \"currentWeather\": {\"ts\": \"s"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "stations/get-measurements (Deprecated)",
                "api_description": "Get measurements at specific station by its id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The value of id field (type is station) that received from .../auto-complete API",
                        "default": "Jmy9oL75KSZnsqi6L"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en_US"
                    },
                    {
                        "name": "aqiIndex",
                        "type": "STRING",
                        "description": "AQI index (us | cn)",
                        "default": "us"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "",
                        "default": "Asia/Singapore"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "id": "str",
                        "measurements": [
                            {
                                "ts": "str",
                                "aqius": "int",
                                "mainus": "str",
                                "aqicn": "int",
                                "maincn": "str",
                                "p1": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "s2": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "p2": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "hour_late": "int",
                                    "ts": "str"
                                },
                                "_list_length": 48
                            }
                        ],
                        "measurements_daily": [
                            {
                                "ts": "str",
                                "p2": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "p1": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "o3": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "s2": {
                                    "conc": "float",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "co": {
                                    "conc": "int",
                                    "aqius": "int",
                                    "aqicn": "int"
                                },
                                "aqius": "int",
                                "mainus": "str",
                                "aqicn": "int",
                                "maincn": "str",
                                "_list_length": 31
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "AirVisual",
                "api_name": "auto-complete (Deprecated)",
                "api_description": "Find countries, cities, places by name",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Name of countries, cities, districts, places, etc...",
                        "default": "singapore"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "stations": [
                            {
                                "id": "str",
                                "name": "str",
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "i18n": {},
                                "location": {
                                    "type": "str",
                                    "coordinates": [
                                        "list of float with length 2"
                                    ]
                                },
                                "type": "str",
                                "current_measurement": {
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "ts": "str"
                                },
                                "_list_length": 10
                            }
                        ],
                        "cities": [
                            {
                                "id": "str",
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "i18n": {},
                                "estimated": "int",
                                "location": {
                                    "type": "str",
                                    "coordinates": [
                                        "list of float with length 2"
                                    ]
                                },
                                "type": "str",
                                "current_measurement": {
                                    "aqius": "int",
                                    "aqicn": "int",
                                    "ts": "str"
                                },
                                "_list_length": 1
                            }
                        ],
                        "news": [
                            {
                                "author": "str",
                                "date": "str",
                                "status": "str",
                                "thumbnail": "str",
                                "title": "str",
                                "type": "str",
                                "url": "str",
                                "_list_length": 7
                            }
                        ],
                        "contributors": [
                            {
                                "id": "str",
                                "name": "str",
                                "type": "str",
                                "subType": "str",
                                "picture": "str",
                                "visibility": "bool",
                                "isVerified": "bool",
                                "_list_length": 1
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Ind Nutrient API",
                "api_name": "View Food Items by Core",
                "api_description": "This request allows clients to retrieve detailed information about a food item by filtering by query param `core`.\n\nClients can include multiple cores in a single request. For example, by sending a request to https://indnutrientsapi.tech/food?core=chicken,dal,paneer, the API will return food items associated with the specified cores: chicken, dal, and paneer.\n\nAPI request sent to [https://indnutrientsapi.tech/food?core=chicken](https://indnutrientsapi.tech/food?core=chicken)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "item": [
                        {
                            "_id": "str",
                            "food_name": "str",
                            "quantity": "str",
                            "calories": "int",
                            "uri": "str",
                            "type": "str",
                            "type_uri": "str",
                            "core": "str",
                            "core_uri": "str",
                            "food_nutrition": [
                                {
                                    "nutrient_name": "str",
                                    "value": "int",
                                    "unit": "str",
                                    "_list_length": 3
                                }
                            ],
                            "request": [
                                {
                                    "type": "str",
                                    "message": "str",
                                    "url": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 53
                        }
                    ]
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Ind Nutrient API",
                "api_name": "View Food Item By Name",
                "api_description": "This request allows clients to retrieve detailed information about a food item by specifying by its `name`.\n\nWhen making the request, ensure the food item's name is written with hyphens (\"-\") separating the words. For instance, \"Paneer Butter Masala\" should be written as \"paneer-butter-masala\" in the request.\n\nAPI request sent to [https://indnutrientsapi.tech/food/name/paneer-butter-masala](https://indnutrientsapi.tech/food/name/paneer-butter-masala)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "item": [
                        {
                            "_id": "str",
                            "food_name": "str",
                            "quantity": "str",
                            "calories": "int",
                            "uri": "str",
                            "type": "str",
                            "type_uri": "str",
                            "core": "str",
                            "core_uri": "str",
                            "food_nutrition": [
                                {
                                    "nutrient_name": "str",
                                    "value": "float",
                                    "unit": "str",
                                    "_list_length": 3
                                }
                            ],
                            "request": [
                                {
                                    "type": "str",
                                    "message": "str",
                                    "url": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Ind Nutrient API",
                "api_name": "View All Types With Their Food Items",
                "api_description": "This request allows clients to retrieve a list of all available types along with the food items associated with each type.\n\nAPI request sent to [https://indnutrientsapi.tech/food/type](https://indnutrientsapi.tech/food/type)",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "types": [
                        {
                            "type": "str",
                            "related_food_length": "int",
                            "related_food": [
                                {
                                    "_id": "str",
                                    "food_name": "str",
                                    "quantity": "str",
                                    "calories": "int",
                                    "uri": "str",
                                    "type": "str",
                                    "type_uri": "str",
                                    "food_nutrition": [
                                        {
                                            "nutrient_name": "str",
                                            "value": "float",
                                            "unit": "str",
                                            "_list_length": 3
                                        }
                                    ],
                                    "_list_length": 266
                                }
                            ],
                            "_list_length": 2
                        }
                    ]
                }
            }
        ],
        "query": "I'm planning a family reunion and we want to have it at a hospital. Can you help me find hospitals in our city that have a large number of beds? Additionally, we would like to know the current air quality in the area.",
        "relevant APIs": [
            [
                "US Hospitals",
                "getHospitalsByName"
            ],
            [
                "AirVisual",
                "cities/v2/get-information"
            ]
        ],
        "query_id": 68092
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Get all jokes",
                "api_description": "Get all the jokes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Search jokes",
                "api_description": "Search jokes using the keywords of joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Anime Jokes",
                "api_name": "Query joke using ID",
                "api_description": "Search anime joke using joke ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "4"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "4D Results",
                "api_name": "Get 4D Company List",
                "api_description": "Return available company code and name.\nCode can use as parameter to query the Get 4D Results method.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "4D Results",
                "api_name": "Get Past Results (1 year)",
                "api_description": "Return all company 4D Results within a specific date range.\n(Up to 1 year data and only available for ULTRA PLAN subscriber)",
                "required_parameters": [
                    {
                        "name": "start",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-01-01"
                    },
                    {
                        "name": "end",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-31"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "4D Results",
                "api_name": "Get Draw Dates (2023)",
                "api_description": "List of draw dates in 2023.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Joke1",
                "api_name": "/random_joke",
                "api_description": "Returns a random joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My family and I are planning a game night and we need some jokes to make it more enjoyable. Search the Anime Jokes API for jokes containing the keyword 'fun'. Additionally, fetch a random joke from the Joke1 API to keep the laughter going.",
        "relevant APIs": [
            [
                "Anime Jokes",
                "Search jokes"
            ],
            [
                "Joke1",
                "/random_joke"
            ]
        ],
        "query_id": 54246
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Movies details",
                "api_name": "Find by title",
                "api_description": "We will provide movies details by title",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "game of thr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "@meta": {
                        "operation": "str",
                        "requestId": "str",
                        "serviceTimeMs": "float"
                    },
                    "@type": "str",
                    "query": "str",
                    "results": [
                        {
                            "id": "str",
                            "image": {
                                "height": "int",
                                "id": "str",
                                "url": "str",
                                "width": "int"
                            },
                            "runningTimeInMinutes": "int",
                            "nextEpisode": "str",
                            "numberOfEpisodes": "int",
                            "seriesEndYear": "int",
                            "seriesStartYear": "int",
                            "title": "str",
                            "titleType": "str",
                            "year": "int",
                            "principals": [
                                {
                                    "id": "str",
                                    "legacyNameText": "str",
                                    "name": "str",
                                    "category": "str",
                                    "characters": [
                                        "list of str with length 1"
                                    ],
                                    "endYear": "int",
                                    "episodeCount": "int",
                                    "roles": [
                                        {
                                            "character": "str",
                                            "characterId": "str",
                                            "_list_length": 1
                                        }
                                    ],
                                    "startYear": "int",
                                    "_list_length": 3
                                }
                            ],
                            "_list_length": 20
                        }
                    ],
                    "types": [
                        "list of str with length 2"
                    ]
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Movie Articles and News",
                "api_name": "Get Articles By Publisher",
                "api_description": "Get articles by a specific publisher.",
                "required_parameters": [
                    {
                        "name": "publisher",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Movie Articles and News",
                "api_name": "Get All Articles",
                "api_description": "This endpoint will return all articles about movies from various publishers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "News_Media",
                "tool_name": "getMedia",
                "api_name": "get media",
                "api_description": "Get Media",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "News Sentiment",
                "api_name": "URL",
                "api_description": "Input news URL",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.goodnewsnetwork.org/cave-art-carvings-beneath-2000-years-of-sediment-in-alabama/"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": {
                        "sentimentprediction": "str",
                        "sentimentscore": {
                            "negative": "float",
                            "neutral": "float",
                            "positive": "float",
                            "compound": "float"
                        }
                    }
                }
            }
        ],
        "query": "I'm a movie blogger and I'm looking for interesting movie trivia to share with my audience. Can you fetch some interesting facts about movies using the Movies details API? Additionally, could you provide me with sentiment analysis of an article about a classic movie using the News Sentiment API?",
        "relevant APIs": [
            [
                "Movies details",
                "Find by title"
            ],
            [
                "News Sentiment",
                "URL"
            ]
        ],
        "query_id": 17233
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Local Search",
                "api_name": "/businesses",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "Keyword",
                        "type": "STRING",
                        "description": "A term to search against business names and categories.",
                        "default": ""
                    },
                    {
                        "name": "Name",
                        "type": "STRING",
                        "description": "The name of a business.",
                        "default": ""
                    },
                    {
                        "name": "City",
                        "type": "STRING",
                        "description": "The name of the city to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "State",
                        "type": "STRING",
                        "description": "The two-letter abbreviation of the state in USA to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "PostalCode",
                        "type": "STRING",
                        "description": "The US postal code of a location.  ( 5 or 9 digit)",
                        "default": ""
                    },
                    {
                        "name": "Sort",
                        "type": "STRING",
                        "description": "",
                        "default": "value_distance"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category that defines (or relates to) the commercial offering of a business.",
                        "default": "Category"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCities",
                "api_description": "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "This indicates how many results you would like to query in one time.\nDefault value is `10` if limit is not provided.\nMaximum limit is `1000`",
                        "default": "100"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "This controls the pagination of results.\nDefault is `1`",
                        "default": "1"
                    },
                    {
                        "name": "countryIsoCode",
                        "type": "STRING",
                        "description": "It is an optional parameter to narrow your search results.\nPass two letter Country code to  filter the cities for specific country in query param which can be found in our searchCountry API in field name `alpha-2` for any country you search.\nfor e.g. 'IN', 'US' etc.",
                        "default": "US"
                    },
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "new yo"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "city": "str",
                            "countryCode": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "ListAllCountries",
                "api_description": "This API returns list of all countries and can be paginated over the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:asc`, `name:desc` for country name sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 200
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 200
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCountries",
                "api_description": "API to search county based on the matching search keyword passed in url param.\nNOTE: This API is case insensitive.\ne.g. \n`/v1/locations/countries/uni`: This will return all the matching countries whose name starts from `uni` and their additional info.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "uni"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 20
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:desc`, `alpha-2:asc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "IP Geolocation_v3",
                "api_name": "Get IP Geolocation",
                "api_description": "This endpoint returns geolocation and other useful points from an IP Address. If IP address is provided as query parameter, geolocation is performed on that IP address. If IP address is left empty, geolocation data of client IP is returned.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "",
                        "default": "206.71.50.230"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Location",
                "tool_name": "World Time",
                "api_name": "Timezones",
                "api_description": "Request a list of valid timezones",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Location",
                "tool_name": "World Time",
                "api_name": "Current time by IP",
                "api_description": "Request the current time based on your public IP",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "abbreviation": "str",
                    "client_ip": "str",
                    "datetime": "str",
                    "day_of_week": "int",
                    "day_of_year": "int",
                    "dst": "bool",
                    "dst_from": "NoneType",
                    "dst_offset": "int",
                    "dst_until": "NoneType",
                    "raw_offset": "int",
                    "timezone": "str",
                    "unixtime": "int",
                    "utc_datetime": "str",
                    "utc_offset": "str",
                    "week_number": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Time",
                "api_name": "Timezone for Location",
                "api_description": "Request the current time for a timezone (in plain text or JSON)",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "Location, example:\"London\" or \"London.txt\"",
                        "default": "London"
                    },
                    {
                        "name": "area",
                        "type": "STRING",
                        "description": "Area, example:\"Europe\"",
                        "default": "Europe"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "abbreviation": "str",
                    "client_ip": "str",
                    "datetime": "str",
                    "day_of_week": "int",
                    "day_of_year": "int",
                    "dst": "bool",
                    "dst_from": "str",
                    "dst_offset": "int",
                    "dst_until": "str",
                    "raw_offset": "int",
                    "timezone": "str",
                    "unixtime": "int",
                    "utc_datetime": "str",
                    "utc_offset": "str",
                    "week_number": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "GEOIP_v2",
                "api_name": "Visitor Lookup",
                "api_description": "Returns the IP address of the client with additional data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm planning a hiking trip and I need to find hiking trails in different national parks. Can you help me search for parks and trails in different cities? It would be great if you could provide me with their contact details, address, and trail difficulty level. Additionally, I'd like to know the IP geolocation details for each city.",
        "relevant APIs": [
            [
                "Local Search",
                "/businesses"
            ],
            [
                "IP Geolocation_v3",
                "Get IP Geolocation"
            ]
        ],
        "query_id": 19186
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Diablo4 Smartable",
                "api_name": "GetSponsorships",
                "api_description": "Get Diablo 4 sponsorships.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "value": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Diablo4 Smartable",
                "api_name": "GetGamesByTopic",
                "api_description": "Get Diablo 4 gameplays by topic.",
                "required_parameters": [
                    {
                        "name": "topic",
                        "type": "string",
                        "description": "",
                        "default": "druid"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "path": "str",
                    "page": "int",
                    "value": [
                        {
                            "path": "str",
                            "title": "str",
                            "excerpt": "str",
                            "sourceUrl": "str",
                            "webUrl": "str",
                            "originalUrl": "str",
                            "featuredContent": "str",
                            "length": "str",
                            "provider": {
                                "name": "str",
                                "domain": "str"
                            },
                            "topics": [
                                "list of str with length 2"
                            ],
                            "heat": "int",
                            "images": [
                                {
                                    "url": "str",
                                    "width": "int",
                                    "height": "int",
                                    "isCached": "bool",
                                    "_list_length": 1
                                }
                            ],
                            "content": "str",
                            "type": "str",
                            "publishedDateTime": "str",
                            "_list_length": 30
                        }
                    ],
                    "nextPage": "int"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Diablo4 Smartable",
                "api_name": "GetPeople",
                "api_description": "Get Diablo 4 influencers and top players.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "path": "str",
                    "page": "int",
                    "value": [
                        {
                            "path": "str",
                            "title": "str",
                            "excerpt": "str",
                            "sourceUrl": "str",
                            "webUrl": "str",
                            "type": "str",
                            "name": "str",
                            "bio": "str",
                            "location": "str",
                            "website": "str",
                            "twitter": {
                                "username": "str",
                                "url": "str",
                                "followers": "int"
                            },
                            "affiliation": {
                                "path": "str",
                                "name": "str",
                                "domain": "str",
                                "images": [
                                    {
                                        "url": "str",
                                        "width": "int",
                                        "height": "int",
                                        "isCached": "bool",
                                        "_list_length": 1
                                    }
                                ]
                            },
                            "topics": [
                                "list of str with length 1"
                            ],
                            "heat": "int",
                            "images": [
                                {
                                    "url": "str",
                                    "width": "int",
                                    "height": "int",
                                    "title": "str",
                                    "isCached": "bool",
                                    "_list_length": 1
                                }
                            ],
                            "content": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Livescan a Domain",
                "api_name": "Domain Information",
                "api_description": "Get data points of a given domain : A record, MX record, TXT/SPF record, SOA record, CMS Type (Generator), Certificate Issuer, Certificate Subject, Certificate Start Date, Certificate End Date, Domain creation date, Domain name (or partial), Domain expire date, Domain updated date, Javascript Libraries, Hostname (or partial), HTML Header Tags,  IP Address, Page title from domain homepage, Page meta tags (including og), Organization, Registrar, TLD, Server software (Apache, PHP, nginx etc), Server geolocation",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "",
                        "default": "LIVESCAN"
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "domain.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Country List",
                "api_name": "Get All Country List",
                "api_description": "Nodes:\niso: iso\ncountryname: country name\nnicename: nicename\niso3: iso3\nnumcode: numcode\nphonecode:phonecode",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": [
                        {
                            "id": "int",
                            "iso": "str",
                            "countryname": "str",
                            "nicename": "str",
                            "iso3": "str",
                            "numcode": "str",
                            "phonecode": "str",
                            "_list_length": 239
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Phone",
                "api_name": "iso",
                "api_description": "Get the ISO codes from a given Country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Description of the Country in English",
                        "default": "Canada"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "api-message": "str",
                    "country-calling-code": "str",
                    "iso-code": "str",
                    "iso-code2": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Phone",
                "api_name": "directory",
                "api_description": "Get all the Local Area Codes from a given Country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "\"ISO 2 letter country code\" or \"Name of the Country in English\"",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "api-message": "str",
                            "area-code": "str",
                            "country-calling-code": "str",
                            "iso-code": "str",
                            "_list_length": 67
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Phone",
                "api_name": "area-code",
                "api_description": "Get the International Country Calling Code and the Local Area Code information",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "\"ISO 2 letter country code\" or \"Name of the Country in English\"",
                        "default": "BR"
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Geographic Region (e.g. City). No accented letter is required.",
                        "default": "Manaus"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "api-message": "str",
                    "area-code": "str",
                    "country-calling-code": "str",
                    "iso-code": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "PowerBI",
                "api_name": "GetPeopleByTopic",
                "api_description": "Get Power BI influencers by topic.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "topic",
                        "type": "string",
                        "description": "",
                        "default": "dax"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "PowerBI",
                "api_name": "GetFunctions",
                "api_description": "Get Power BI DAX functions.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "path": "str",
                    "page": "int",
                    "value": [
                        {
                            "path": "str",
                            "title": "str",
                            "excerpt": "str",
                            "sourceUrl": "str",
                            "webUrl": "str",
                            "name": "str",
                            "provider": {
                                "name": "str",
                                "domain": "str",
                                "images": [
                                    {
                                        "url": "str",
                                        "width": "int",
                                        "height": "int",
                                        "isCached": "bool",
                                        "_list_length": 1
                                    }
                                ]
                            },
                            "topics": [
                                "list of str with length 2"
                            ],
                            "topItems": [
                                {
                                    "path": "str",
                                    "title": "str",
                                    "excerpt": "str",
                                    "name": "str",
                                    "topics": [
                                        "list of str with length 2"
                                    ],
                                    "heat": "int",
                                    "type": "str",
                                    "_list_length": 4
                                }
                            ],
                            "size": "int",
                            "heat": "int",
                            "content": "str",
                            "type": "str",
                            "_list_length": 25
                        }
                    ],
                    "nextPage": "int"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "PowerBI",
                "api_name": "GetCommunitiesByTopic",
                "api_description": "Get Power BI communities by topic.",
                "required_parameters": [
                    {
                        "name": "topic",
                        "type": "string",
                        "description": "",
                        "default": "dax"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to learn more about the Diablo 4 game and its features. Can you provide me with a list of Diablo 4 gameplays related to the druid topic? Additionally, tell me about the DAX functions used in Power BI.",
        "relevant APIs": [
            [
                "Diablo4 Smartable",
                "GetGamesByTopic"
            ],
            [
                "PowerBI",
                "GetFunctions"
            ]
        ],
        "query_id": 30246
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Get all bodies positions",
                "api_description": "Returns a iterable list of bodies and their properties in tabular format.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "33.775867"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "-84.39733"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-20"
                    },
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-21"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "elevation",
                        "type": "NUMBER",
                        "description": "",
                        "default": "166"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "",
                        "default": "12:00:00"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "observer": {
                            "location": {
                                "longitude": "float",
                                "elevation": "int",
                                "latitude": "float"
                            }
                        },
                        "dates": {
                            "from": "str",
                            "to": "str"
                        },
                        "table": {
                            "rows": [
                                {
                                    "cells": [
                                        {
                                            "date": "str",
                                            "distance": {
                                                "fromEarth": {
                                                    "km": "str",
                                                    "au": "str"
                                                }
                                            },
                                            "position": {
                                                "horizontal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "constellation": {
                                                    "short": "str",
                                                    "name": "str",
                                                    "id": "str"
                                                },
                                                "equatorial": {
                                                    "rightAscension": {
                                                        "hours": "str",
                                                        "string": "str"
                                                    },
                                                    "declination": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "horizonal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                }
                                            },
                                            "name": "str",
                                            "extraInfo": {
                                                "elongation": "int",
                                                "magnitude": "float"
                                            },
                                            "id": "str",
                                            "_list_length": 2
                                        }
                                    ],
                                    "entry": {
                                        "name": "str",
                                        "id": "str"
                                    },
                                    "_list_length": 11
                                }
                            ],
                            "header": [
                                "list of str with length 2"
                            ]
                        }
                    },
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Search",
                "api_description": "Search endpoint can be used to get information for stars and deep space objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "order_by",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "dec",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "match_type",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "ra",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "exact",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "statusCode": "int",
                    "errors": [
                        {
                            "stack": "str",
                            "property": "str",
                            "path": {},
                            "message": "str",
                            "argument": [
                                "list of str with length 2"
                            ],
                            "schema": {
                                "oneOf": [
                                    {
                                        "properties": {
                                            "term": {
                                                "minLength": "int",
                                                "type": "str"
                                            },
                                            "match_type": {
                                                "enum": [
                                                    "list of str with length 2"
                                                ],
                                                "type": "str"
                                            },
                                            "order_by": {
                                                "enum": [
                                                    "list of str with length 1"
                                                ],
                                                "type": "str"
                                            }
                                        },
                                        "required": [
                                            "list of str with length 1"
                                        ],
                                        "type": "str",
                                        "_list_length": 2
                                    }
                                ],
                                "allOf": [
                                    {
                                        "properties": {
                                            "offset": {
                                                "maximum": "int",
                                                "minimum": "int",
                                                "type": "str"
                                            },
                                            "limit": {
                                                "maximum": "int",
                                                "minimum": "int",
                                                "type": "str"
                                            }
                                        },
                                        "type": "str",
                                        "_list_length": 1
                                    }
                                ]
                            },
                            "instance": {
                                "dec": "str",
                                "match_type": "str",
                                "order_by": "str",
                                "offset": "str",
                                "limit": "str",
                                "exact": "str",
                                "ra": "str"
                            },
                            "name": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Get positions for body",
                "api_description": "Returns properties of the given body for the given date range in tabular format.\n\nSupported bodies are \"sun\" ,\"moon\", \"mercury\", \"venus\", \"earth\", \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\", \"pluto\"",
                "required_parameters": [
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-21"
                    },
                    {
                        "name": "body",
                        "type": "string",
                        "description": "",
                        "default": "venus"
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "33.775867"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-20"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "-84.39733"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "",
                        "default": "12:00:00"
                    },
                    {
                        "name": "elevation",
                        "type": "NUMBER",
                        "description": "",
                        "default": "166"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "observer": {
                            "location": {
                                "longitude": "float",
                                "elevation": "int",
                                "latitude": "float"
                            }
                        },
                        "dates": {
                            "from": "str",
                            "to": "str"
                        },
                        "table": {
                            "rows": [
                                {
                                    "cells": [
                                        {
                                            "date": "str",
                                            "distance": {
                                                "fromEarth": {
                                                    "km": "str",
                                                    "au": "str"
                                                }
                                            },
                                            "position": {
                                                "horizontal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "constellation": {
                                                    "short": "str",
                                                    "name": "str",
                                                    "id": "str"
                                                },
                                                "equatorial": {
                                                    "rightAscension": {
                                                        "hours": "str",
                                                        "string": "str"
                                                    },
                                                    "declination": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "horizonal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                }
                                            },
                                            "name": "str",
                                            "extraInfo": {
                                                "elongation": "float",
                                                "magnitude": "float"
                                            },
                                            "id": "str",
                                            "_list_length": 2
                                        }
                                    ],
                                    "entry": {
                                        "name": "str",
                                        "id": "str"
                                    },
                                    "_list_length": 1
                                }
                            ],
                            "header": [
                                "list of str with length 2"
                            ]
                        }
                    },
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "test",
                "api_name": "random_usr",
                "api_description": "api/users/random_user",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "uid": "str",
                    "password": "str",
                    "first_name": "str",
                    "last_name": "str",
                    "username": "str",
                    "email": "str",
                    "avatar": "str",
                    "gender": "str",
                    "phone_number": "str",
                    "social_insurance_number": "str",
                    "date_of_birth": "str",
                    "employment": {
                        "title": "str",
                        "key_skill": "str"
                    },
                    "address": {
                        "city": "str",
                        "street_name": "str",
                        "street_address": "str",
                        "zip_code": "str",
                        "state": "str",
                        "country": "str",
                        "coordinates": {
                            "lat": "float",
                            "lng": "float"
                        }
                    },
                    "credit_card": {
                        "cc_number": "str"
                    },
                    "subscription": {
                        "plan": "str",
                        "status": "str",
                        "payment_method": "str",
                        "term": "str"
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "test",
                "api_name": "random_usr_copy",
                "api_description": "api/users/random_user",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "uid": "str",
                    "password": "str",
                    "first_name": "str",
                    "last_name": "str",
                    "username": "str",
                    "email": "str",
                    "avatar": "str",
                    "gender": "str",
                    "phone_number": "str",
                    "social_insurance_number": "str",
                    "date_of_birth": "str",
                    "employment": {
                        "title": "str",
                        "key_skill": "str"
                    },
                    "address": {
                        "city": "str",
                        "street_name": "str",
                        "street_address": "str",
                        "zip_code": "str",
                        "state": "str",
                        "country": "str",
                        "coordinates": {
                            "lat": "float",
                            "lng": "float"
                        }
                    },
                    "credit_card": {
                        "cc_number": "str"
                    },
                    "subscription": {
                        "plan": "str",
                        "status": "str",
                        "payment_method": "str",
                        "term": "str"
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Stars by API-Ninjas",
                "api_name": "/v1/stars",
                "api_description": "Get a list of stars matching specified parameters. Returns at most 30 results. To access more than 30 results, use the offset parameter to offset results in multiple API calls.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "min_distance_light_year",
                        "type": "NUMBER",
                        "description": "minimum distance the star is from Earth in light years.",
                        "default": ""
                    },
                    {
                        "name": "min_apparent_magnitude",
                        "type": "NUMBER",
                        "description": "minimum apparent magnitude brightness of the star.",
                        "default": ""
                    },
                    {
                        "name": "constellation",
                        "type": "NUMBER",
                        "description": "the constellation the star belongs to.",
                        "default": ""
                    },
                    {
                        "name": "max_apparent_magnitude",
                        "type": "NUMBER",
                        "description": "maximum apparent magnitude brightness of the star.",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination.",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "the name of the star. Note that many of the star names contain greek characters.",
                        "default": "vega"
                    },
                    {
                        "name": "max_absolute_magnitude",
                        "type": "NUMBER",
                        "description": "maximum absolute magnitude brightness of the star.",
                        "default": ""
                    },
                    {
                        "name": "min_absolute_magnitude",
                        "type": "NUMBER",
                        "description": "minimum absolute magnitude brightness of the star.",
                        "default": ""
                    },
                    {
                        "name": "max_distance_light_year",
                        "type": "NUMBER",
                        "description": "maximum distance the star is from Earth in light years.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "constellation": "str",
                    "right_ascension": "str",
                    "declination": "str",
                    "apparent_magnitude": "str",
                    "absolute_magnitude": "str",
                    "distance_light_year": "str",
                    "spectral_class": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Daily atmosphere  carbon dioxide concentration",
                "api_name": "Carbon dioxide endpoint",
                "api_description": "The response will be an object with no CORS resources enabled.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "co2",
                        "type": "OBJECT",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "co2": [
                        {
                            "year": "str",
                            "month": "str",
                            "day": "str",
                            "cycle": "str",
                            "trend": "str",
                            "_list_length": 3799
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "teste",
                "api_name": "getPetById",
                "api_description": "Returns a single pet",
                "required_parameters": [
                    {
                        "name": "petId",
                        "type": "NUMBER",
                        "description": "ID of pet to return",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "teste",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "teste",
                "api_name": "loginUser",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "password",
                        "type": "STRING",
                        "description": "The password for login in clear text",
                        "default": ""
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The user name for login",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a family trip to a remote location with minimal light pollution for stargazing. Can you recommend some secluded destinations with clear skies and low light pollution? It would also be great to have information about the positions and magnitudes of stars during our travel dates. Additionally, I need some random user profiles to create fictional characters for a stargazing-themed board game.",
        "relevant APIs": [
            [
                "Astronomy",
                "Search"
            ],
            [
                "Stars by API-Ninjas",
                "/v1/stars"
            ],
            [
                "test",
                "random_usr"
            ]
        ],
        "query_id": 12464
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "teste",
                "api_name": "getPetById",
                "api_description": "Returns a single pet",
                "required_parameters": [
                    {
                        "name": "petId",
                        "type": "NUMBER",
                        "description": "ID of pet to return",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "teste",
                "api_name": "getUserByName",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "teste",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy Picture of The day",
                "api_name": "Picture Of The Day",
                "api_description": "This Endpoint returns an astronomy image of the univers with caption and explanation from professionals.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Materials Platform for Data Science",
                "api_name": "MPDS",
                "api_description": "Retrieve materials data, see www.mpds.io",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "JSON-serialized URL-encoded Object with the retrieval criteria, e.g. {\"elements\":\"Ag-K\"}",
                        "default": "%7B%22elements%22%3A%22Ag-K%22%7D"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "crossref",
                "api_name": "RecordCount",
                "api_description": "How many records do we have?",
                "required_parameters": [
                    {
                        "name": "rows",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "message-type": "str",
                    "message-version": "str",
                    "message": {
                        "facets": {},
                        "total-results": "int",
                        "items": "empty list",
                        "items-per-page": "int",
                        "query": {
                            "start-index": "int",
                            "search-terms": "NoneType"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "crossref",
                "api_name": "Search",
                "api_description": "Let\u2019s look at some of the results",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "blood"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"message-type\": \"str\", \"message-version\": \"str\", \"message\": {\"facets\": {}, \"total-results\": \"int\", \"items\": [{\"indexed\": {\"date-parts\": [\"list of list with length 1\"], \"date-time\": \"str\", \"timestamp\": \"int\"}, \"reference-count\": \"int\", \"publisher\": \"str\", \"content-domain\": {\"domain\": \"empty list\", \"crossmark-restriction\": \"bool\"}, \"published-print\": {\"date-parts\": [\"list of list with length 1\"]}, \"abstract\": \"str\", \"DOI\": \"str\", \"type\": \"str\", \"created\": {\"date-parts\": [\"list of list with length 1\"], \"date-time\": \"str\", \"timestamp\": \"int\"}, \"page\": \"str\", \"source\": \"str\", \"is-referenced-by-count\": \"int\", \"title\": [\"list of str with length 1\"], \"prefix\": \"str\", \"author\": [{\"given\": \"str\", \"family\": \"str\", \"sequence\": \"str\", \"affiliation\": \"empty list\", \"_list_length\": 1}], \"member\": \"str\", \"published-online\": {\"date-parts\": [\"list of list with length 1\"]}, \"container-title\": [\"list of str with length 1\"], \"original-title\": [\"list of str with length 1\"], \"deposited\": {\"d"
            },
            {
                "category_name": "Science",
                "tool_name": "crossref",
                "api_name": "DOI",
                "api_description": "Information of a article with specified doi.",
                "required_parameters": [
                    {
                        "name": "doi",
                        "type": "string",
                        "description": "",
                        "default": "10.1111/fima.12262"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Search",
                "api_description": "Search endpoint can be used to get information for stars and deep space objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "order_by",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "dec",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "match_type",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "ra",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "exact",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "statusCode": "int",
                    "errors": [
                        {
                            "stack": "str",
                            "property": "str",
                            "path": {},
                            "message": "str",
                            "argument": [
                                "list of str with length 2"
                            ],
                            "schema": {
                                "oneOf": [
                                    {
                                        "properties": {
                                            "term": {
                                                "minLength": "int",
                                                "type": "str"
                                            },
                                            "match_type": {
                                                "enum": [
                                                    "list of str with length 2"
                                                ],
                                                "type": "str"
                                            },
                                            "order_by": {
                                                "enum": [
                                                    "list of str with length 1"
                                                ],
                                                "type": "str"
                                            }
                                        },
                                        "required": [
                                            "list of str with length 1"
                                        ],
                                        "type": "str",
                                        "_list_length": 2
                                    }
                                ],
                                "allOf": [
                                    {
                                        "properties": {
                                            "offset": {
                                                "maximum": "int",
                                                "minimum": "int",
                                                "type": "str"
                                            },
                                            "limit": {
                                                "maximum": "int",
                                                "minimum": "int",
                                                "type": "str"
                                            }
                                        },
                                        "type": "str",
                                        "_list_length": 1
                                    }
                                ]
                            },
                            "instance": {
                                "dec": "str",
                                "match_type": "str",
                                "order_by": "str",
                                "offset": "str",
                                "limit": "str",
                                "exact": "str",
                                "ra": "str"
                            },
                            "name": "str",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Get all bodies positions",
                "api_description": "Returns a iterable list of bodies and their properties in tabular format.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "33.775867"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "-84.39733"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-20"
                    },
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-21"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "elevation",
                        "type": "NUMBER",
                        "description": "",
                        "default": "166"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "",
                        "default": "12:00:00"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "observer": {
                            "location": {
                                "longitude": "float",
                                "elevation": "int",
                                "latitude": "float"
                            }
                        },
                        "dates": {
                            "from": "str",
                            "to": "str"
                        },
                        "table": {
                            "rows": [
                                {
                                    "cells": [
                                        {
                                            "date": "str",
                                            "distance": {
                                                "fromEarth": {
                                                    "km": "str",
                                                    "au": "str"
                                                }
                                            },
                                            "position": {
                                                "horizontal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "constellation": {
                                                    "short": "str",
                                                    "name": "str",
                                                    "id": "str"
                                                },
                                                "equatorial": {
                                                    "rightAscension": {
                                                        "hours": "str",
                                                        "string": "str"
                                                    },
                                                    "declination": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "horizonal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                }
                                            },
                                            "name": "str",
                                            "extraInfo": {
                                                "elongation": "int",
                                                "magnitude": "float"
                                            },
                                            "id": "str",
                                            "_list_length": 2
                                        }
                                    ],
                                    "entry": {
                                        "name": "str",
                                        "id": "str"
                                    },
                                    "_list_length": 11
                                }
                            ],
                            "header": [
                                "list of str with length 2"
                            ]
                        }
                    },
                    "message": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "Astronomy",
                "api_name": "Get positions for body",
                "api_description": "Returns properties of the given body for the given date range in tabular format.\n\nSupported bodies are \"sun\" ,\"moon\", \"mercury\", \"venus\", \"earth\", \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\", \"pluto\"",
                "required_parameters": [
                    {
                        "name": "to_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-21"
                    },
                    {
                        "name": "body",
                        "type": "string",
                        "description": "",
                        "default": "venus"
                    },
                    {
                        "name": "latitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "33.775867"
                    },
                    {
                        "name": "from_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2017-12-20"
                    },
                    {
                        "name": "longitude",
                        "type": "NUMBER",
                        "description": "",
                        "default": "-84.39733"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "",
                        "default": "12:00:00"
                    },
                    {
                        "name": "elevation",
                        "type": "NUMBER",
                        "description": "",
                        "default": "166"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "observer": {
                            "location": {
                                "longitude": "float",
                                "elevation": "int",
                                "latitude": "float"
                            }
                        },
                        "dates": {
                            "from": "str",
                            "to": "str"
                        },
                        "table": {
                            "rows": [
                                {
                                    "cells": [
                                        {
                                            "date": "str",
                                            "distance": {
                                                "fromEarth": {
                                                    "km": "str",
                                                    "au": "str"
                                                }
                                            },
                                            "position": {
                                                "horizontal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "constellation": {
                                                    "short": "str",
                                                    "name": "str",
                                                    "id": "str"
                                                },
                                                "equatorial": {
                                                    "rightAscension": {
                                                        "hours": "str",
                                                        "string": "str"
                                                    },
                                                    "declination": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                },
                                                "horizonal": {
                                                    "altitude": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    },
                                                    "azimuth": {
                                                        "string": "str",
                                                        "degrees": "str"
                                                    }
                                                }
                                            },
                                            "name": "str",
                                            "extraInfo": {
                                                "elongation": "float",
                                                "magnitude": "float"
                                            },
                                            "id": "str",
                                            "_list_length": 2
                                        }
                                    ],
                                    "entry": {
                                        "name": "str",
                                        "id": "str"
                                    },
                                    "_list_length": 1
                                }
                            ],
                            "header": [
                                "list of str with length 2"
                            ]
                        }
                    },
                    "message": "str"
                }
            }
        ],
        "query": "I'm writing a book and need some inspiration for the setting. Can you fetch the picture of the day from the Astronomy Picture of The day API to visualize different landscapes? Additionally, provide me with some interesting facts about the universe to incorporate into my story.",
        "relevant APIs": [
            [
                "Astronomy Picture of The day",
                "Picture Of The Day"
            ],
            [
                "Astronomy",
                "Search"
            ]
        ],
        "query_id": 12507
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "IP forensics - IP Geolocation, Currency Exchange And Threat Intelligence API",
                "api_name": "Single Lookup",
                "api_description": "## Single Lookup\n\nThis is the primary IpForensics endpoint. It is used to look up any given IPv4 or IPv6 addresses. \n\nTo call this endpoint, simply attach an IP address to the API's base URL (HTTP GET method):\n\n**Each request to the single IP lookup endpoint consumes 1 token.**",
                "required_parameters": [
                    {
                        "name": "ip_address",
                        "type": "STRING",
                        "description": "",
                        "default": "102.219.153.59"
                    },
                    {
                        "name": "apikey",
                        "type": "STRING",
                        "description": "Your API Key - Obtain the API key from your dashboard",
                        "default": "IPF-36ae36a6-4a32-4fae-a422-e45e70b0a515-X"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Location",
                "tool_name": "Location_v2",
                "api_name": "search result",
                "api_description": "We are providing a location search result according to your search query,1",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "pizza"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "latitude",
                        "type": "STRING",
                        "description": "",
                        "default": "24.562394"
                    },
                    {
                        "name": "longitude",
                        "type": "STRING",
                        "description": "",
                        "default": "73.7124675"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm in need of a reliable currency exchange service. Can you provide me with a list of currency exchange locations in San Francisco? Additionally, fetch the geolocation and threat intelligence details for the IP address 10.0.0.1 using the IP Forensics API. Also, find the current weather conditions for San Francisco using the Weather API.",
        "relevant APIs": [
            [
                "Location_v2",
                "search result"
            ],
            [
                "IP forensics - IP Geolocation, Currency Exchange And Threat Intelligence API",
                "Single Lookup"
            ]
        ],
        "query_id": 19207
    },
    {
        "api_list": [
            {
                "category_name": "Social",
                "tool_name": "Instagram API",
                "api_name": "User by Username",
                "api_description": "Get a user by username",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram API",
                "api_name": "User by Id",
                "api_description": "Get user by Id",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "str",
                    "exc_type": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Instagram API",
                "api_name": "Media by URL",
                "api_description": "Get a media by URL",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Olato Quotes",
                "api_name": "Success Quote",
                "api_description": "It shows random quotes",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "",
                        "default": "random quotes"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quote": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Olato Quotes",
                "api_name": "Love Quote",
                "api_description": "It shows random quotes",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "",
                        "default": "random quotes"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quote": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Olato Quotes",
                "api_name": "Motivation Quote",
                "api_description": "It shows random quotes",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "",
                        "default": "random quotes"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "quote": "str"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Reddit Fast Search",
                "api_name": "Shadowban Checker",
                "api_description": "This endpoint allows you to check if a Reddit user is shadowbanned. Shadowbanning is a practice where a user's actions and content are hidden from the public without their knowledge. This endpoint provides a way to detect if a user is affected by shadowbanning on Reddit.\n\nParameters:\n\nusername (string, optional): Specifies the username of the Reddit user to check for shadowbanning. The default value is set to \"John\".\nfull (boolean, optional): Determines whether additional user information should be returned in the response. If set to True, it includes details such as the user's join date, post karma, comment karma, and verified mail status. By default, it is set to False.\nproxy (string, optional): Specifies the proxy server to be used for the request. If required, you can provide the proxy server's details to route the request through a specific network or location. The default value is None, indicating no proxy is used.\ntimeout (integer, optional): Specifies the maximum time, in seconds, to wait for a response from the Reddit API. The default timeout is set to 5 seconds.\nReturns:\n\nThe endpoint returns a JSON response with the following fields:\n\nis_shadowbanned (boolean): Indicates whether the specified Reddit user is shadowbanned. If True, the user is shadowbanned. If False, the user is not shadowbanned.\nIf full is set to True, the response also includes the following additional fields:\nusername (string): The username of the Reddit user.\njoin_date (string): The date and time when the user joined Reddit.\npost_karma (string): The amount of karma the user has gained from posting.\ncomment_karma (string): The amount of karma the user has gained from commenting.\nverified_mail (string): Indicates whether the user has a verified email associated with their account.\nError Handling:\n\nThe endpoint handles potential errors during the process. If the provided username is invalid, a ValueError is raised with an HTTPException status code of 400 and an error message indicating the issue.\n\nPossible errors during the request process, such as proxy connection failures, request timeouts, or internal server errors, are handled as HTTPExceptions with status codes 500 and appropriate error details.\n\nNote:\n\nThe endpoint utilizes the Reddit API to fetch information about the user.\nProper validation and handling of the username parameter are performed to ensure the input is valid and avoid potential errors.\nThe endpoint supports the usage of proxy servers for the request if required.\nThe timeout parameter allows controlling the maximum waiting time for the response from the Reddit API.\nThe endpoint provides basic information about the user and helps identify if they are shadowbanned on Reddit.",
                "required_parameters": [
                    {
                        "name": "shadowban",
                        "type": "string",
                        "description": "",
                        "default": "shadowban"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "proxy",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "timeout",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "(string, optional): Specifies the keyword to search for in the posts. Default value is \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"bitcoin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".",
                        "default": "John"
                    },
                    {
                        "name": "full",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "is_shadowbanned": "bool",
                    "username": "str",
                    "join_date": "str",
                    "post_karma": "int",
                    "comment_karma": "int",
                    "verified_mail": "bool"
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Reddit Fast Search",
                "api_name": "Get Posts from Subreddit",
                "api_description": "Get Posts from Subreddit",
                "required_parameters": [
                    {
                        "name": "get_subreddit_posts",
                        "type": "string",
                        "description": "",
                        "default": "get_subreddit_posts"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "subreddit",
                        "type": "STRING",
                        "description": "(string, optional): Specifies the keyword to search for in the posts. Default value isbitcoin
                        "default": "askreddit"
                    },
                    {
                        "name": "nsfw",
                        "type": "BOOLEAN",
                        "description": "(boolean, optional): Indicates whether to include NSFW (Not Safe for Work) posts in the search results. Default value is **True**.",
                        "default": "false"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "(string, optional): Specifies the time range for the search results. Possible values areallyearmonthweek**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**dayandhourefault value isall
                        "default": "all"
                    },
                    {
                        "name": "full_data",
                        "type": "BOOLEAN",
                        "description": "(boolean, optional): Indicates whether to include the full data of each post in the search results. Default value is **False**.",
                        "default": "false"
                    },
                    {
                        "name": "proxy",
                        "type": "STRING",
                        "description": "If no proxy value is provided (default is None), the search request will be made directly to the Reddit API without using a proxy.\n\nAlso you can use proxy https/socks5:\nexample:\nwith auth\nsocks5:127.0.0.1:1088:login:pass\nhttp:127.0.0.1:8080:login:pass\nwithout auth\nsocks5:127.0.0.1:1088\nhttp:127.0.0.1:8080",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "(string, optional): Specifies the sorting order of the search results. Possible values arerelevancehottopnew**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", andcommentsefault value isrelevance
                        "default": "hot"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "(integer, optional): Specifies the maximum number of search results to retrieve. Must be between 1 and 250. Default value is 10.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_posts": "int",
                    "success": "bool",
                    "data": [
                        {
                            "title": "str",
                            "selftext": "str",
                            "img_url": "str",
                            "author": "str",
                            "author_fullname": "str",
                            "author_profile": "str",
                            "name": "str",
                            "subreddit_id": "str",
                            "subreddit": "str",
                            "upvote_ratio": "float",
                            "upVotes": "int",
                            "total_awards_received": "int",
                            "thumbnail": "str",
                            "allow_live_comments": "bool",
                            "permalink": "str",
                            "subreddit_subscribers": "int",
                            "num_crossposts": "int",
                            "created_date": "str",
                            "_list_length": 11
                        }
                    ]
                }
            },
            {
                "category_name": "Social",
                "tool_name": "Reddit Fast Search",
                "api_name": "Search Posts",
                "api_description": "The endpoint utilizes the Reddit API's search functionality to retrieve the posts.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.",
                "required_parameters": [
                    {
                        "name": "search_posts",
                        "type": "string",
                        "description": "This endpoint allows you to search for posts on Reddit. It retrieves a list of posts based on the specified search parameters. The search results can be filtered and sorted based on various criteria such as relevance, popularity, and time.Also in one request you can get up to 250 results.",
                        "default": "search_posts"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "nsfw",
                        "type": "BOOLEAN",
                        "description": "(boolean, optional): Indicates whether to include NSFW (Not Safe for Work) posts in the search results. Default value is **True**.",
                        "default": "false"
                    },
                    {
                        "name": "full_data",
                        "type": "BOOLEAN",
                        "description": "(boolean, optional): Indicates whether to include the full data of each post in the search results. Default value is **False**.",
                        "default": "false"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "(string, optional): Specifies the time range for the search results. Possible values are \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**all**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**year**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**month**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**week**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**day**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", and \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**hour**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\". Default value is \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**all**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".",
                        "default": "all"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "(string, optional): Specifies the sorting order of the search results. Possible values are \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**relevance**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**hot**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**top**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**new**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", and \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"comments\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\". Default value is \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"**relevance**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".",
                        "default": "relevance"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "(string, optional): Specifies the keyword to search for in the posts. Default value is \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"bitcoin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".",
                        "default": "bitcoin"
                    },
                    {
                        "name": "proxy",
                        "type": "STRING",
                        "description": "If no proxy value is provided (default is None), the search request will be made directly to the Reddit API without using a proxy.\n\nAlso you can use proxy https/socks5:\nexample:\nwith auth\nsocks5:127.0.0.1:1088:login:pass\nhttp:127.0.0.1:8080:login:pass\nwithout auth\nsocks5:127.0.0.1:1088\nhttp:127.0.0.1:8080",
                        "default": ""
                    },
                    {
                        "name": "restrict_sr",
                        "type": "BOOLEAN",
                        "description": "(boolean, optional): Indicates whether to restrict the search results to the specified subreddit. Default value is **True**.",
                        "default": "true"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "(integer, optional): Specifies the maximum number of search results to retrieve. Must be between 1 and 250. Default value is 10.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a team-building event for my company and I'm looking for engaging activities and inspirational quotes to motivate my team. Can you recommend some exciting team-building games and provide quotes that promote teamwork and collaboration? Additionally, I would like to gather news articles about successful team-building events for further inspiration.",
        "relevant APIs": [
            [
                "Olato Quotes",
                "Motivation Quote"
            ],
            [
                "Reddit Fast Search",
                "Get Posts from Subreddit"
            ],
            [
                "Reddit Fast Search",
                "Search Posts"
            ],
            [
                "Instagram API",
                "User by Username"
            ]
        ],
        "query_id": 79081
    },
    {
        "api_list": [
            {
                "category_name": "Business_Software",
                "tool_name": "Proxy List",
                "api_name": "/proxy/health",
                "api_description": "ReturnS the health status of the API. Also return last time the proxies check was completed. Time is in UTC.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Proxy List",
                "api_name": "/proxy/get",
                "api_description": "Returns the list of proxies based on the given parameters. The list is updated every 1 minute. API returns only working at the time of check proxies.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Possible values: http, https, socks4, socks5",
                        "default": "http"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Use country code to filter data by country. Please check https://www.nationsonline.org/oneworld/country_code_list.htm for more information about country codes.",
                        "default": "US"
                    },
                    {
                        "name": "anonymity",
                        "type": "STRING",
                        "description": "Possible values: high, anonymous, transparent",
                        "default": "high"
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Pulsar",
                "api_name": "Get All Collections By User",
                "api_description": "Get all collections by user",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "author": "str",
                    "status": "str",
                    "defaultThumb": "str",
                    "activeUser": "str",
                    "qtdImages": "str",
                    "qtdAproved": "str",
                    "qtdDiscarded": "str",
                    "qtdPending": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Pulsar",
                "api_name": "Get All Users",
                "api_description": "Get all users in system.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "photo": "str",
                    "name": "str",
                    "role": "str",
                    "status": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Pulsar",
                "api_name": "Download Zip",
                "api_description": "Download zip of images.",
                "required_parameters": [
                    {
                        "name": "collectionId",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "urlToDownload": "str"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "ZohoCreator",
                "api_name": "ViewRecords",
                "api_description": "Replace https://zohocreator.p.rapidapi.com/ with https://creator.zoho.com/api/ if you're using native system\n\nGet Records from a Zoho View/Report",
                "required_parameters": [
                    {
                        "name": "scope",
                        "type": "STRING",
                        "description": "",
                        "default": "creatorapi"
                    },
                    {
                        "name": "authtoken",
                        "type": "STRING",
                        "description": "",
                        "default": "longTextStringFromAccounts"
                    },
                    {
                        "name": "appLinkName",
                        "type": "string",
                        "description": "",
                        "default": "mrp"
                    },
                    {
                        "name": "zc_ownername",
                        "type": "STRING",
                        "description": "",
                        "default": "ownerName"
                    },
                    {
                        "name": "viewLinkName",
                        "type": "string",
                        "description": "",
                        "default": "Contact_Details"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "raw",
                        "type": "STRING",
                        "description": "",
                        "default": true
                    },
                    {
                        "name": "criteria",
                        "type": "STRING",
                        "description": "",
                        "default": "(Country == \"US\")"
                    },
                    {
                        "name": "startindex",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "",
                        "default": "100"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Vizor Ads",
                "api_name": "API Status",
                "api_description": "Check API server is running or not",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "env": "str"
                    },
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "Vizor Ads",
                "api_name": "Show",
                "api_description": "Get details of your existing embed records using it's unique slug",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "string",
                        "description": "",
                        "default": "7dW8zGbP"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "status": "int"
                }
            },
            {
                "category_name": "Business_Software",
                "tool_name": "GeoSpark",
                "api_name": "Users",
                "api_description": "Get users details",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "user_id",
                        "default": "USER_ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "bool",
                    "msg": "str",
                    "code": "int",
                    "error": {
                        "ErrorCode": "str",
                        "ErrorMessage": "str",
                        "details": "str"
                    }
                }
            }
        ],
        "query": "I'm organizing a photography exhibition and I need to download a zip file of images. Can you provide me with the URL to download the zip file? It would also be great if you could fetch the list of available proxies for secure online access to the exhibition.",
        "relevant APIs": [
            [
                "Pulsar",
                "Download Zip"
            ],
            [
                "Proxy List",
                "/proxy/get"
            ]
        ],
        "query_id": 76034
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "Airports by API-Ninjas",
                "api_name": "/v1/airports",
                "api_description": "API Ninjas Airports API endpoint. At least one of the optional parameters must be provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination.",
                        "default": ""
                    },
                    {
                        "name": "max_elevation",
                        "type": "NUMBER",
                        "description": "maximum airport elevation in feet.",
                        "default": ""
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "administrative region such as state or province within a country (e.g. California)",
                        "default": ""
                    },
                    {
                        "name": "min_elevation",
                        "type": "NUMBER",
                        "description": "minimum airport elevation in feet.",
                        "default": ""
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "airport city (e.g. London)",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "airport country. Must be 2-character ISO-2 country code (e.g. GB)",
                        "default": ""
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "airport timezone (e.g. Europe/London)\n\n",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "airport name. This parameter supports partial matching (e.g. Heathrow will match London Heathrow Airport)",
                        "default": "London Heathrow"
                    },
                    {
                        "name": "icao",
                        "type": "STRING",
                        "description": "International Civil Aviation Organization (ICAO) 4-character airport code.",
                        "default": ""
                    },
                    {
                        "name": "iata",
                        "type": "STRING",
                        "description": "International Air Transport Association (IATA) 3-character airport code.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "icao": "str",
                    "iata": "str",
                    "name": "str",
                    "city": "str",
                    "region": "str",
                    "country": "str",
                    "elevation_ft": "str",
                    "latitude": "str",
                    "longitude": "str",
                    "timezone": "str"
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "FachaAPI",
                "api_name": "Temporary Email Stats",
                "api_description": "Get the number of temporary emails in the database and its last update",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "FachaAPI",
                "api_name": "Live Aircraft by REG",
                "api_description": "Get live positioning for an aircraft with a specific REG",
                "required_parameters": [
                    {
                        "name": "reg",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Transportation",
                "tool_name": "FachaAPI",
                "api_name": "Live Aircraft by Squawk",
                "api_description": "Get live positioning for all aircraft with a specific Squawk",
                "required_parameters": [
                    {
                        "name": "squawk",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm planning a vacation to a tropical island and I need to book a flight. Find me the airports in the Caribbean region with direct flights to Miami. Also, provide me with the live positioning of any aircraft with the registration number N12345.",
        "relevant APIs": [
            [
                "Airports by API-Ninjas",
                "/v1/airports"
            ],
            [
                "FachaAPI",
                "Live Aircraft by REG"
            ]
        ],
        "query_id": 22032
    },
    {
        "api_list": [
            {
                "category_name": "Text_Analysis",
                "tool_name": "Word Scramble",
                "api_name": "scramble/{word}",
                "api_description": "Call scramble with {word} parameter",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "string",
                        "description": "",
                        "default": "TEST"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Text_Analysis",
                "tool_name": "AI Chatbot",
                "api_name": "Chat",
                "api_description": "The chatbot endpoint.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "User Identification for personalised response and response continuity.",
                        "default": "user1"
                    },
                    {
                        "name": "message",
                        "type": "STRING",
                        "description": "Message that the chatbot has to respond to.",
                        "default": "What's your name?"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "chatbot": {
                        "message": "str",
                        "response": "str"
                    }
                }
            }
        ],
        "query": "My friend loves puzzles. Can you scramble the word 'PUZZLE' for me? I also want to have a chat with an AI chatbot. Ask the chatbot if it knows any good puzzle games.",
        "relevant APIs": [
            [
                "Word Scramble",
                "scramble/{word}"
            ],
            [
                "AI Chatbot",
                "Chat"
            ]
        ],
        "query_id": 15067
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Validect - Email Verification",
                "api_name": "/v1/verify",
                "api_description": "#### Verify email address\n*We do bill only valid or invalid verification statuses.*\nPass the email as a GET parameter. Response properties description:\n```json\n{\n\"status\": \"valid\", // verification status of the email\n\"reason\": \"accepted_email\", // the reason of the status\n\"email\": \"example@gmail.com\",  // normalized email address\n\"user\": \"example\",  // The part before at-sign\n\"domain\": \"gmail.com\", // The part after at-sign\n\"public\": true, // Is address belongs to a publicly accessible email provider\n\"disposable\": false,  // Is address belongs to a disposable email service\n\"role\": false // Is address role based (e.g. abuse, admin, no-reply etc.)\n}\n```\nPossible verification statuses:\n-  `valid` - email address has been accepted by the mail server (safe to send)\n- `invalid` - email address is invalid, various reasons possible, see below (do not send)\n- `accept_all` - mail server accepts any email address (not recommended to send)\n- `unknown` - unable to verify email address (not recommended to send)\n\nPossible status reasons:\n- `accepted_email` - email address has been accepted by the mail server\n- `rejected_email` - email address has been rejected by the mail server\n- `invalid_syntax` - syntax of the email address is invalid according to RFC\n- `invalid_domain` - domain name of the email address does not exist\n- `no_mx_record` - mx record for the domain does not exist\n- `invalid_mx_record` - mx record of the domain is invalid\n- `dns_error` - error occurred while performing dns resolving of the domain\n- `smtp_error` - error occurred while performing smtp validation",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "Email address to validate",
                        "default": "example@gmail.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "reason": "str",
                    "email": "str",
                    "user": "str",
                    "domain": "str",
                    "public": "bool",
                    "disposable": "bool",
                    "role": "bool"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Temp Mail",
                "api_name": "Read Inbox",
                "api_description": "Read inbox an email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "string",
                        "description": "",
                        "default": "p1amvpvxfh@bestparadize.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str",
                    "request_id": "str"
                }
            }
        ],
        "query": "I'm planning a surprise party for my friend's birthday and I need to verify if their email address is valid. Can you please check if the email address 'example@gmail.com' is valid? Additionally, could you fetch the latest inbox messages for the email address 'p1amvpvxfh@bestparadize.com'?",
        "relevant APIs": [
            [
                "Validect - Email Verification",
                "/v1/verify"
            ],
            [
                "Temp Mail",
                "Read Inbox"
            ]
        ],
        "query_id": 65457
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "Quotes Villa",
                "api_name": "getQuotesbyCategory",
                "api_description": "For valid response try these categories listed below:-\n- Quotes Categories are:-\n\n    age   science  success  time  travel\n\n    wisdom   alone  art  attitude  courage\n\n    culture  dreams  friendship  happiness hope\n\n    humour  imagination  inspirational   life   motivational\n\n    nature  philosophy  poetry   popular  psychology",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "string",
                        "description": "",
                        "default": "art"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "4Bro  - 1337X",
                "api_name": "GetBroCoins",
                "api_description": "GetBroCoins",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "4Bro  - 1337X",
                "api_name": "GetAccountInfos",
                "api_description": "GetAccountInfos",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "URLTEST",
                "api_name": "getInventory",
                "api_description": "Returns a map of status codes to quantities",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "totvs": "int",
                    "sold": "int",
                    "string": "int",
                    "pending": "int",
                    "cat": "int",
                    "dgdfgdf": "int",
                    "available": "int",
                    "not available": "int",
                    "Available": "int",
                    "peric": "int",
                    "disponible": "int"
                }
            },
            {
                "category_name": "Other",
                "tool_name": "URLTEST",
                "api_name": "getUserByName",
                "api_description": "Get user by user name",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "default": "string"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "username": "str",
                    "firstName": "str",
                    "lastName": "str",
                    "email": "str",
                    "password": "str",
                    "phone": "str",
                    "userStatus": "int"
                }
            },
            {
                "category_name": "Other",
                "tool_name": "URLTEST",
                "api_name": "getPetById",
                "api_description": "Returns a single pet",
                "required_parameters": [
                    {
                        "name": "petId",
                        "type": "NUMBER",
                        "description": "ID of pet to return",
                        "default": 0
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Other",
                "tool_name": "GroupDocs Metadata Cloud",
                "api_name": "GetFileVersions",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File path e.g. '/file.ext'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "requestId": "str",
                    "error": {
                        "code": "str",
                        "message": "str",
                        "description": "str",
                        "dateTime": "str",
                        "innerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "GroupDocs Metadata Cloud",
                "api_name": "ObjectExists",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "path",
                        "type": "STRING",
                        "description": "File or folder path e.g. '/file.ext' or '/folder'",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    },
                    {
                        "name": "versionId",
                        "type": "STRING",
                        "description": "File version ID",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "requestId": "str",
                    "error": {
                        "code": "str",
                        "message": "str",
                        "description": "str",
                        "dateTime": "str",
                        "innerError": "NoneType"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "GroupDocs Metadata Cloud",
                "api_name": "GetDiscUsage",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "storageName",
                        "type": "STRING",
                        "description": "Storage name",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "requestId": "str",
                    "error": {
                        "code": "str",
                        "message": "str",
                        "description": "str",
                        "dateTime": "str",
                        "innerError": "NoneType"
                    }
                }
            }
        ],
        "query": "I'm a teacher organizing an art workshop for students and I want to inspire them with famous art quotes. Can you fetch me art quotes from Quotes Villa? Additionally, I would like to know the inventory status of a specific product on URLTEST. And retrieve the user details with the username 'string' from URLTEST.",
        "relevant APIs": [
            [
                "Quotes Villa",
                "getQuotesbyCategory"
            ],
            [
                "URLTEST",
                "getInventory"
            ],
            [
                "URLTEST",
                "getUserByName"
            ]
        ],
        "query_id": 51914
    },
    {
        "api_list": [
            {
                "category_name": "Jobs",
                "tool_name": "Open To Work Remote API",
                "api_name": "Search Jobs",
                "api_description": "# Open To Work Remote - API\n\n## Search Jobs:\n\nThis endpoint allows you to search for jobs.\n\nYou can search for jobs by filtering by title, tags, salary, location, and company name. All the information comes paginated.\n\n*[Click 3 Dots Button To View More Details About All Params]*\n\n### Parameters and Filters:\n\n**page:** Select the page.\n**perPage:** Quantity of jobs shown per page.\n**title:** Allows search jobs by title/role.\n**tag:** Allows search jobs by tags/categories.\n**location:** Allows search jobs by location.\n**company:** Allows search jobs by the company name.\n**salaryMin:** Allows search jobs by salary.\n**source:** Allows search jobs by the Job Board source.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "perPage",
                        "type": "STRING",
                        "description": "",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagesInfo": {
                        "totalJobs": "int",
                        "totalpages": "int",
                        "page": "int",
                        "perPage": "int",
                        "nextPage": "str"
                    },
                    "jobs": [
                        {
                            "id": "int",
                            "company": "str",
                            "title": "str",
                            "salaryMin": "NoneType",
                            "salaryMax": "NoneType",
                            "salaryRange": "NoneType",
                            "logo": "str",
                            "location": "str",
                            "slug": "NoneType",
                            "url": "str",
                            "source": "str",
                            "tags": "empty list",
                            "featured": "int",
                            "date": "str",
                            "publicationDate": "str",
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "Open To Work Remote API",
                "api_name": "Get One Job",
                "api_description": "# Open To Work Remote - API\n\n## Get One Job:\n\nThis endpoint allows you to get info on a job by id.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "138024"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "company": "str",
                    "title": "str",
                    "salaryMin": "NoneType",
                    "salaryMax": "NoneType",
                    "salaryRange": "NoneType",
                    "logo": "str",
                    "location": "str",
                    "slug": "NoneType",
                    "url": "str",
                    "source": "str",
                    "tags": [
                        "list of str with length 33"
                    ],
                    "featured": "NoneType",
                    "date": "str",
                    "publicationDate": "str",
                    "description": "str"
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "Remote Jobs API",
                "api_name": "Get a specific remote job by id",
                "api_description": "Using the id of the job returned from /jobs route, get more details about a specific job",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Jobs",
                "tool_name": "Remote Jobs API",
                "api_name": "Get the latest remote jobs",
                "api_description": "Get a list of the latest 20 remote jobs",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "company",
                        "type": "STRING",
                        "description": "",
                        "default": "shopify"
                    },
                    {
                        "name": "category",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {
                        "page": "int",
                        "total": "int",
                        "has_more": "bool"
                    },
                    "items": [
                        {
                            "_id": "str",
                            "company_logo": "str",
                            "id": "str",
                            "title": "str",
                            "location": "str",
                            "company_name": "str",
                            "date": "str",
                            "_list_length": 3
                        }
                    ]
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "Remote Jobs API",
                "api_name": "Pagination for remote jobs",
                "api_description": "Paginate over the remote jobs by using the pageId parameter",
                "required_parameters": [
                    {
                        "name": "pageId",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "meta": {
                        "page": "int",
                        "total": "int",
                        "has_more": "bool"
                    },
                    "items": [
                        {
                            "_id": "str",
                            "company_logo": "str",
                            "id": "str",
                            "title": "str",
                            "location": "str",
                            "company_name": "str",
                            "date": "str",
                            "_list_length": 20
                        }
                    ]
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "AI Resume Generator",
                "api_name": "Generate Document: Resume",
                "api_description": "Endpoint that will generate a large text response containing a Resume document using the provided information",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "degree",
                        "type": "STRING",
                        "description": "",
                        "default": "Information Systems"
                    },
                    {
                        "name": "skills",
                        "type": "STRING",
                        "description": "",
                        "default": "Networking, Web Development"
                    },
                    {
                        "name": "university",
                        "type": "STRING",
                        "description": "",
                        "default": "Michigan State University"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Jobs",
                "tool_name": "AI Resume Generator",
                "api_name": "Generate Document: Cover Letter",
                "api_description": "Endpoint that will generate a large text response containing a Cover Letter document using the provided information",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "jobDescription",
                        "type": "STRING",
                        "description": "",
                        "default": "Example Co. is looking for a Full Stack Web Developer to maintain and improve our custom web application. The solutions will require both frontend and backend skills. Our web application runs on a LEMP stack. LEMP stack experience is a bonus, but not required."
                    },
                    {
                        "name": "degree",
                        "type": "STRING",
                        "description": "",
                        "default": "Information Systems"
                    },
                    {
                        "name": "university",
                        "type": "STRING",
                        "description": "",
                        "default": "Michigan State University"
                    },
                    {
                        "name": "skills",
                        "type": "STRING",
                        "description": "",
                        "default": "Networking, Web Development"
                    },
                    {
                        "name": "jobTitle",
                        "type": "STRING",
                        "description": "",
                        "default": "Full Stack Web Developer"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm looking for a remote job that offers a competitive salary. Can you suggest an API that allows me to search for remote jobs based on salary range? Additionally, I'd like to generate a cover letter for a specific job opportunity. Is there an AI-powered resume generator that can help me with that?",
        "relevant APIs": [
            [
                "Open To Work Remote API",
                "Search Jobs"
            ],
            [
                "AI Resume Generator",
                "Generate Document: Cover Letter"
            ]
        ],
        "query_id": 26821
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Screening and Matching Resumes",
                "api_name": "/sourcingResume",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Artificial intelligence News API",
                "api_name": "Get News From All News Sources Related to Artificial Intelligence",
                "api_description": "This end point will return back all the artificial intelligence news from all over the world.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "link": "str",
                    "source": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Artificial intelligence News API",
                "api_name": "Get Recent News From a Single News Source",
                "api_description": "This will return all the artificial intelligence news from a single news source.",
                "required_parameters": [
                    {
                        "name": "paperId",
                        "type": "string",
                        "description": "",
                        "default": "forbes"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "url": "str",
                    "source": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Text Sentiment API",
                "api_name": "List Endpoints (Can be used as an endpoint health-check)",
                "api_description": "This endpoint lists the possible endpoints to connect to.\n\nAlias: /api/sentiment",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "AION",
                "api_name": "List my Bots",
                "api_description": "Once you have created your bot, you can manage the configurations by using the \u201caccess_token\u201d received during authentication. Here you can view a list of all the bots you have created on the platform.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Text Mood Changer AI",
                "api_name": "Mood List",
                "api_description": "list of moods available",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        "list of str with length 12"
                    ]
                }
            }
        ],
        "query": "I'm planning a trip to New York City next month and I want to stay updated on the latest news about artificial intelligence. Can you provide me with the recent news from Forbes? Additionally, I would like to know the sentiment analysis of the articles using the Text Sentiment API.",
        "relevant APIs": [
            [
                "Artificial intelligence News API",
                "Get Recent News From a Single News Source"
            ],
            [
                "Text Sentiment API",
                "List Endpoints (Can be used as an endpoint health-check)"
            ]
        ],
        "query_id": 28662
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Pipotronic",
                "api_name": "Get sentence",
                "api_description": "Funny and ironic randomly generated textual content to incorportate into powerpoints, meetings, corporate brochures...",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Dark Humor Jokes",
                "api_name": "Get Joke",
                "api_description": "Fetch a joke.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a book club meeting and I want to add some humor to the discussion. Can you generate a funny sentence that I can include in the meeting agenda? Also, I need a dark humor joke to lighten the atmosphere during the meeting.",
        "relevant APIs": [
            [
                "Pipotronic",
                "Get sentence"
            ],
            [
                "Dark Humor Jokes",
                "Get Joke"
            ]
        ],
        "query_id": 24131
    },
    {
        "api_list": [
            {
                "category_name": "Jobs",
                "tool_name": "Indeed Jobs API - Finland",
                "api_name": "SearchJobs",
                "api_description": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Helsinki (For now this API gets data for Finland Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Helsinki"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "python developer"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "company_logo_url": "str",
                    "company_name": "str",
                    "company_rating": "str",
                    "company_review_link": "str",
                    "company_reviews": "int",
                    "date": "str",
                    "job_location": "str",
                    "job_title": "str",
                    "job_url": "str",
                    "multiple_hiring": "str",
                    "next_page": "str",
                    "page_number": "int",
                    "position": "int",
                    "salary": "str",
                    "urgently_hiring": "str"
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "Indeed Jobs API - Sweden",
                "api_name": "SearchJobs",
                "api_description": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Stockholm (For now this API gets data for Sweden Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'",
                "required_parameters": [
                    {
                        "name": "location",
                        "type": "STRING",
                        "description": "",
                        "default": "Stockholm"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "",
                        "default": "python"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "company_logo_url": "str",
                    "company_name": "str",
                    "company_rating": "str",
                    "company_review_link": "str",
                    "company_reviews": "int",
                    "date": "str",
                    "job_location": "str",
                    "job_title": "str",
                    "job_url": "str",
                    "multiple_hiring": "str",
                    "next_page": "str",
                    "page_number": "int",
                    "position": "int",
                    "salary": "str",
                    "urgently_hiring": "str"
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "AI Resume Generator",
                "api_name": "Generate Document: Resume",
                "api_description": "Endpoint that will generate a large text response containing a Resume document using the provided information",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "degree",
                        "type": "STRING",
                        "description": "",
                        "default": "Information Systems"
                    },
                    {
                        "name": "skills",
                        "type": "STRING",
                        "description": "",
                        "default": "Networking, Web Development"
                    },
                    {
                        "name": "university",
                        "type": "STRING",
                        "description": "",
                        "default": "Michigan State University"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Jobs",
                "tool_name": "AI Resume Generator",
                "api_name": "Generate Document: Cover Letter",
                "api_description": "Endpoint that will generate a large text response containing a Cover Letter document using the provided information",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "jobDescription",
                        "type": "STRING",
                        "description": "",
                        "default": "Example Co. is looking for a Full Stack Web Developer to maintain and improve our custom web application. The solutions will require both frontend and backend skills. Our web application runs on a LEMP stack. LEMP stack experience is a bonus, but not required."
                    },
                    {
                        "name": "degree",
                        "type": "STRING",
                        "description": "",
                        "default": "Information Systems"
                    },
                    {
                        "name": "university",
                        "type": "STRING",
                        "description": "",
                        "default": "Michigan State University"
                    },
                    {
                        "name": "skills",
                        "type": "STRING",
                        "description": "",
                        "default": "Networking, Web Development"
                    },
                    {
                        "name": "jobTitle",
                        "type": "STRING",
                        "description": "",
                        "default": "Full Stack Web Developer"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I want to explore job opportunities in Helsinki, Finland as a Python developer. Can you find some job postings for me? I need the details of the top 15 jobs, including the company name, job title, job location, salary, and job URL. Additionally, generate a cover letter for me with a degree in Information Systems from Michigan State University, skills in networking and web development, and a job title of Full Stack Web Developer.",
        "relevant APIs": [
            [
                "Indeed Jobs API - Finland",
                "SearchJobs"
            ],
            [
                "AI Resume Generator",
                "Generate Document: Cover Letter"
            ]
        ],
        "query_id": 56155
    },
    {
        "api_list": [
            {
                "category_name": "Communication",
                "tool_name": "ISS Location",
                "api_name": "get",
                "api_description": "gets you the data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "PubNub Network",
                "api_name": "History",
                "api_description": "Get older messages.",
                "required_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "JSONP Callback",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit of messages to return",
                        "default": "2"
                    },
                    {
                        "name": "subscribe_key",
                        "type": "STRING",
                        "description": "Subscribe Key",
                        "default": "demo"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "Channel Name",
                        "default": "my_channel"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Communication",
                "tool_name": "PubNub Network",
                "api_name": "Time",
                "api_description": "Timetoken from PubNub Network",
                "required_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "JSONP Callback",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "My friends and I are planning a stargazing trip and we want to track the International Space Station (ISS). Can you provide us with the current location of the ISS? Also, fetch the history of messages from the 'my_channel' channel on PubNub Network to see if there are any interesting updates about space exploration.",
        "relevant APIs": [
            [
                "ISS Location",
                "get"
            ],
            [
                "PubNub Network",
                "History"
            ]
        ],
        "query_id": 29499
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Ishan",
                "api_name": "GetaUserProfilebyId",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "UserId",
                        "type": "STRING",
                        "description": "",
                        "default": "UserId"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str",
                        "innerError": {
                            "date": "str",
                            "request-id": "str",
                            "client-request-id": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Ishan",
                "api_name": "Channelinfo",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "ChannelId",
                        "type": "STRING",
                        "description": "",
                        "default": "ChannelId"
                    },
                    {
                        "name": "TeamId",
                        "type": "STRING",
                        "description": "",
                        "default": "TeamId"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str",
                        "innerError": {
                            "date": "str",
                            "request-id": "str",
                            "client-request-id": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Ishan",
                "api_name": "GetUsersRelatedPeople",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "users('UserName')",
                        "type": "STRING",
                        "description": "",
                        "default": "users('UserName')"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Email Verifier/Validator",
                "api_name": "Email",
                "api_description": "## The status attribute will be:\n\nOK  - Only if the smtp server explicitly confirms the availability of the mailbox address.\n\nINVALID - If the smtp server explicitly confirms the mailbox is not available.\n\nUNKNOWN - For every other scenario (The mailbox may or may not be available).",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "support@rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Email",
                "tool_name": "MARCOM Robot - Email Validation Bot",
                "api_name": "Email",
                "api_description": "Email Validation",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "Email Address to Validate",
                        "default": "hello@test.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I need to retrieve the user profile information for the user with the ID '123456'. Additionally, fetch the details of the channel with the ID '789' in the team 'ABC'. Also, find the related people for the user with the username 'johnsmith'. Finally, validate the email address 'example@email.com' using the Email Verifier/Validator API.",
        "relevant APIs": [
            [
                "Ishan",
                "GetaUserProfilebyId"
            ],
            [
                "Ishan",
                "Channelinfo"
            ],
            [
                "Ishan",
                "GetUsersRelatedPeople"
            ],
            [
                "Email Verifier/Validator",
                "Email"
            ]
        ],
        "query_id": 65521
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "Air Quality",
                "api_name": "Current Air Quality",
                "api_description": "Retrieves current air quality conditions for any location in the world, given a lat/lon.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "Longitude",
                        "default": "-73.00597"
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "Latitude",
                        "default": "40.71427"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "city_name": "str",
                    "country_code": "str",
                    "data": [
                        {
                            "aqi": "int",
                            "co": "int",
                            "mold_level": "int",
                            "no2": "int",
                            "o3": "int",
                            "pm10": "int",
                            "pm25": "int",
                            "pollen_level_grass": "int",
                            "pollen_level_tree": "int",
                            "pollen_level_weed": "int",
                            "predominant_pollen_type": "str",
                            "so2": "int",
                            "_list_length": 1
                        }
                    ],
                    "lat": "float",
                    "lon": "float",
                    "state_code": "str",
                    "timezone": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Air Quality",
                "api_name": "Air Quality Forecast",
                "api_description": "Returns a 3 day (72 hour) air quality forecast for any point in the world given a lat/lon. ",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "35.779"
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-78.638"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Limits response forecast hours (default 72). ",
                        "default": "72"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "city_name": "str",
                    "country_code": "str",
                    "data": [
                        {
                            "aqi": "int",
                            "co": "float",
                            "datetime": "str",
                            "no2": "float",
                            "o3": "float",
                            "pm10": "float",
                            "pm25": "float",
                            "so2": "float",
                            "timestamp_local": "str",
                            "timestamp_utc": "str",
                            "ts": "int",
                            "_list_length": 72
                        }
                    ],
                    "lat": "float",
                    "lon": "float",
                    "state_code": "str",
                    "timezone": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Air Quality",
                "api_name": "Air Quality History",
                "api_description": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "NUMBER",
                        "description": "Latitude",
                        "default": "35.779"
                    },
                    {
                        "name": "lon",
                        "type": "NUMBER",
                        "description": "Longitude",
                        "default": "-78.638"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "city_name": "str",
                    "country_code": "str",
                    "data": [
                        {
                            "aqi": "int",
                            "co": "float",
                            "datetime": "str",
                            "no2": "float",
                            "o3": "float",
                            "pm10": "float",
                            "pm25": "int",
                            "so2": "int",
                            "timestamp_local": "str",
                            "timestamp_utc": "str",
                            "ts": "int",
                            "_list_length": 72
                        }
                    ],
                    "lat": "float",
                    "lon": "float",
                    "state_code": "str",
                    "timezone": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "Test",
                "api_name": "aaaaaa",
                "api_description": "aaa",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Weather",
                "tool_name": "Qwiper Weather",
                "api_name": "M\u00e9t\u00e9o d'aujourd'hui - Niamey, Niger",
                "api_description": "Obtenez la temp\u00e9rature, les conditions du ciel, les vents, l'humidit\u00e9, etc. pour la ville de Niamey.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is organizing an outdoor team-building event at a park in Los Angeles. We need to ensure good air quality for the participants. Can you fetch the air quality history for the location and provide the current weather conditions as well? Also, suggest some fun team-building activities for the event.",
        "relevant APIs": [
            [
                "Air Quality",
                "Air Quality History"
            ],
            [
                "Qwiper Weather",
                "M\u00e9t\u00e9o d'aujourd'hui - Niamey, Niger"
            ]
        ],
        "query_id": 15844
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "Events UEL",
                "api_name": "Ticket",
                "api_description": "Ticket",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "SevenTraderAPI",
                "api_name": "Get - Countries",
                "api_description": "Get all countries in API",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "LeetcodeApi",
                "api_name": "getMediumQuestion",
                "api_description": "Get the number of medium level questing solved by the user.",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "description": "",
                        "default": "mujtabah258"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "LeetcodeApi",
                "api_name": "getTotalSolved",
                "api_description": "Get the total number of questions solved by the user.",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "description": "",
                        "default": "mujtabah258"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "LeetcodeApi",
                "api_name": "getName",
                "api_description": "Get the name of the user",
                "required_parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "description": "",
                        "default": "mujtabah258"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Word of the day",
                "api_name": "Word of the day from cd",
                "api_description": "Get word of the day from cd.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "info": "str",
                    "date": "str",
                    "word": "str",
                    "type": "str",
                    "mean": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Word of the day",
                "api_name": "Get word of the day from multiple sources",
                "api_description": "Gets word of the day from mutiple sources in one go easy.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "info": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Word of the day",
                "api_name": "Word of the day from pm",
                "api_description": "Get word of the day from pm",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "info": "str",
                    "date": "str",
                    "word": "str",
                    "type": "str",
                    "mean": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Bhagavad Gita_v3",
                "api_name": "Get all verse of chapter by chapter id",
                "api_description": "Get all verse of chapter by chapter id",
                "required_parameters": [
                    {
                        "name": "chapterId",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Bhagavad Gita_v3",
                "api_name": "Get chapter details  by id",
                "api_description": "Get chapter details  by id",
                "required_parameters": [
                    {
                        "name": "chapterId",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Bhagavad Gita_v3",
                "api_name": "Get all chapters",
                "api_description": "Get all chapters",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you fetch the name of the Leetcode user with the username 'mujtabah258'? I'm interested in knowing the user's name. Additionally, I would like to gather information about the word of the day from 'cd' as a source.",
        "relevant APIs": [
            [
                "LeetcodeApi",
                "getName"
            ],
            [
                "Word of the day",
                "Word of the day from cd"
            ]
        ],
        "query_id": 11627
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "GoApis Geocoding API",
                "api_name": "Geocding",
                "api_description": "Geocoding is the process of converting a physical address into geographic coordinates, such as latitude and longitude. It allows for the identification of a specific location on the Earth's surface, making it possible to map and analyze data spatially",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "",
                        "default": "37.7749"
                    },
                    {
                        "name": "long",
                        "type": "STRING",
                        "description": "",
                        "default": "-122.4194"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "plus_code": {
                        "compound_code": "str",
                        "global_code": "str"
                    },
                    "results": [
                        {
                            "address_components": [
                                {
                                    "long_name": "str",
                                    "short_name": "str",
                                    "types": [
                                        "list of str with length 1"
                                    ],
                                    "_list_length": 8
                                }
                            ],
                            "formatted_address": "str",
                            "geometry": {
                                "location": {
                                    "lat": "float",
                                    "lng": "float"
                                },
                                "location_type": "str",
                                "viewport": {
                                    "northeast": {
                                        "lat": "float",
                                        "lng": "float"
                                    },
                                    "southwest": {
                                        "lat": "float",
                                        "lng": "float"
                                    }
                                }
                            },
                            "place_id": "str",
                            "plus_code": {
                                "compound_code": "str",
                                "global_code": "str"
                            },
                            "types": [
                                "list of str with length 1"
                            ],
                            "_list_length": 9
                        }
                    ],
                    "status": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Time by API-Ninjas",
                "api_name": "/v1/worldtime",
                "api_description": "API Ninjas World Time API endpoint. Returns the current date and time by city/state/country, location coordinates (latitude/longitude), or timezone.\n\nOne of the following parameter combinations must be set:\nlat + lon,\ncity (state and country optional),\ntimezone",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of desired location (e.g. Europe/London).",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "Longitude of desired location.",
                        "default": ""
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "Latitude of desired location.",
                        "default": ""
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "US state name or 2-letter abbreviation (for United States cities only).",
                        "default": ""
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country name or 2-letter country code.",
                        "default": ""
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City name.",
                        "default": "London"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "timezone": "str",
                    "datetime": "str",
                    "date": "str",
                    "year": "str",
                    "month": "str",
                    "day": "str",
                    "hour": "str",
                    "minute": "str",
                    "second": "str",
                    "day_of_week": "str"
                }
            }
        ],
        "query": "I'm planning a trip to London next week with my family. Can you provide me with the current date and time in London and also the geocoding details for the city? Additionally, fetch the world time for New York and get the geocoding information for that city as well.",
        "relevant APIs": [
            [
                "GoApis Geocoding API",
                "Geocding"
            ],
            [
                "World Time by API-Ninjas",
                "/v1/worldtime"
            ]
        ],
        "query_id": 48770
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Validect - Email Verification",
                "api_name": "/v1/verify",
                "api_description": "#### Verify email address\n*We do bill only valid or invalid verification statuses.*\nPass the email as a GET parameter. Response properties description:\n```json\n{\n\"status\": \"valid\", // verification status of the email\n\"reason\": \"accepted_email\", // the reason of the status\n\"email\": \"example@gmail.com\",  // normalized email address\n\"user\": \"example\",  // The part before at-sign\n\"domain\": \"gmail.com\", // The part after at-sign\n\"public\": true, // Is address belongs to a publicly accessible email provider\n\"disposable\": false,  // Is address belongs to a disposable email service\n\"role\": false // Is address role based (e.g. abuse, admin, no-reply etc.)\n}\n```\nPossible verification statuses:\n-  `valid` - email address has been accepted by the mail server (safe to send)\n- `invalid` - email address is invalid, various reasons possible, see below (do not send)\n- `accept_all` - mail server accepts any email address (not recommended to send)\n- `unknown` - unable to verify email address (not recommended to send)\n\nPossible status reasons:\n- `accepted_email` - email address has been accepted by the mail server\n- `rejected_email` - email address has been rejected by the mail server\n- `invalid_syntax` - syntax of the email address is invalid according to RFC\n- `invalid_domain` - domain name of the email address does not exist\n- `no_mx_record` - mx record for the domain does not exist\n- `invalid_mx_record` - mx record of the domain is invalid\n- `dns_error` - error occurred while performing dns resolving of the domain\n- `smtp_error` - error occurred while performing smtp validation",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "Email address to validate",
                        "default": "example@gmail.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "reason": "str",
                    "email": "str",
                    "user": "str",
                    "domain": "str",
                    "public": "bool",
                    "disposable": "bool",
                    "role": "bool"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Temp Mail",
                "api_name": "Read Inbox",
                "api_description": "Read inbox an email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "string",
                        "description": "",
                        "default": "p1amvpvxfh@bestparadize.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str",
                    "request_id": "str"
                }
            }
        ],
        "query": "I'm working on a project for my company and I need to ensure the email addresses of all the employees are valid. Could you please validate the email addresses of all the employees in the company database? Additionally, fetch the latest inbox messages for the email address 'p1amvpvxfh@bestparadize.com'.",
        "relevant APIs": [
            [
                "Validect - Email Verification",
                "/v1/verify"
            ],
            [
                "Temp Mail",
                "Read Inbox"
            ]
        ],
        "query_id": 65459
    },
    {
        "api_list": [
            {
                "category_name": "News_Media",
                "tool_name": "Energy Price News",
                "api_name": "List of Sources",
                "api_description": "See which regions we have news sources from.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Energy Price News",
                "api_name": "All articles",
                "api_description": "Get all available articles from multiple sources",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Energy Price News",
                "api_name": "List of Regions",
                "api_description": "See which regions we have news sources from.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Greek News in English",
                "api_name": "Get All Sources",
                "api_description": "Get All Sources' names and ids",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Greek News in English",
                "api_name": "Get All News",
                "api_description": "This endpoint will return back all greek news from all the sources.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "link": "str",
                    "description": "str",
                    "image": "str",
                    "site": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Greek News in English",
                "api_name": "Get Articles From A Single Source",
                "api_description": "Get Greek News from a specific news source.",
                "required_parameters": [
                    {
                        "name": "siteId",
                        "type": "string",
                        "description": "",
                        "default": "ktg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "link": "str",
                    "description": "str",
                    "image": "str",
                    "site": "str"
                }
            },
            {
                "category_name": "News_Media",
                "tool_name": "Live world futbol news",
                "api_name": "Get All World Footbol news live",
                "api_description": "This end point will return back all news about footbol.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "News_Media",
                "tool_name": "Live world futbol news",
                "api_name": "Get Individual News Source",
                "api_description": "Get News about football news from a specific news resource.",
                "required_parameters": [
                    {
                        "name": "newspaperId",
                        "type": "string",
                        "description": "",
                        "default": "eurosport"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm a football enthusiast and I want to stay updated on the latest news. Fetch me all the available football news. Additionally, I'm interested in news related to Greece. Can you get me the latest Greek news articles from multiple sources?",
        "relevant APIs": [
            [
                "Energy Price News",
                "All articles"
            ],
            [
                "Greek News in English",
                "Get All News"
            ],
            [
                "Greek News in English",
                "Get All Sources"
            ],
            [
                "Live world futbol news",
                "Get Individual News Source"
            ]
        ],
        "query_id": 75279
    },
    {
        "api_list": [
            {
                "category_name": "Translation",
                "tool_name": "Translate it",
                "api_name": "options",
                "api_description": "With this endpoint you can get the supported languages and the possible translations between them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Translation",
                "tool_name": "Long Translator",
                "api_name": "languages",
                "api_description": "This endpoint is used to get a list of available language codes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "languages": [
                            {
                                "code": "str",
                                "name": "str",
                                "_list_length": 111
                            }
                        ]
                    }
                }
            }
        ],
        "query": "As a language enthusiast, I'm always eager to learn new languages. Can you help me explore the possible translations between Russian, Japanese, and Arabic? Additionally, I would like to obtain a list of available language codes for future reference.",
        "relevant APIs": [
            [
                "Translate it",
                "options"
            ],
            [
                "Long Translator",
                "languages"
            ]
        ],
        "query_id": 12974
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "YouTube v3_v3",
                "api_name": "I18nRegions",
                "api_description": "Returns a list of content regions that the YouTube website supports.",
                "required_parameters": [
                    {
                        "name": "part",
                        "type": "STRING",
                        "description": "The **part** parameter specifies the **i18nRegion** resource properties that the API response will include. Set the parameter value to **snippet**.",
                        "default": "snippet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "The **hl** parameter specifies the language that should be used for text values in the API response. The default value is **en_US**.",
                        "default": "en_US"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "YouTube v3_v3",
                "api_name": "PlaylistItems",
                "api_description": "Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs.",
                "required_parameters": [
                    {
                        "name": "part",
                        "type": "STRING",
                        "description": "The **part** parameter specifies a comma-separated list of one or more **playlistItem** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **playlistItem** resource, the **snippet** property contains numerous fields, including the **title**, **description**, **position** and **resourceId** properties. As such, if you set **part=snippet**, the API response will contain all of those properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet\n- status",
                        "default": "snippet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "videoId",
                        "type": "STRING",
                        "description": "The **videoId** parameter specifies that the request should return only the playlist items that contain the specified video.",
                        "default": ""
                    },
                    {
                        "name": "pageToken",
                        "type": "STRING",
                        "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The **id** parameter specifies a comma-separated list of one or more unique playlist item IDs.",
                        "default": ""
                    },
                    {
                        "name": "maxResults",
                        "type": "NUMBER",
                        "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                        "default": "5"
                    },
                    {
                        "name": "playlistId",
                        "type": "STRING",
                        "description": "The **playlistId** parameter specifies the unique ID of the playlist for which you want to retrieve playlist items. Note that even though this is an optional parameter, every request to retrieve playlist items must specify a value for either the **id** parameter or the **playlistId** parameter.",
                        "default": "PLOU2XLYxmsILMUsDRrVoRRlL29p8LHFIT"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "YouTube v3_v3",
                "api_name": "ChannelSections",
                "api_description": "Returns a list of `channelSection` resources that match the API request criteria.",
                "required_parameters": [
                    {
                        "name": "part",
                        "type": "STRING",
                        "description": "The **part** parameter specifies a comma-separated list of one or more **channelSection** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **channelSection** resource, the **snippet** property contains other properties, such as a display title for the section. If you set **part=snippet**, the API response will also contain all of those nested properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet",
                        "default": "snippet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "channelId",
                        "type": "STRING",
                        "description": "The **channelId** parameter specifies a YouTube channel ID. If a request specifies a value for this parameter, the API will only return the specified channel's sections.",
                        "default": "UC_x5XG1OV2P6uZZ5FSM9Ttw"
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "*This parameter has been deprecated.* The **hl** parameter provided support for retrieving localized metadata for a channel section. However, this functionality has been deprecated in YouTube Studio and in the YouTube app.",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The **id** parameter specifies a comma-separated list of IDs that uniquely identify the **channelSection** resources that are being retrieved. In a **channelSection** resource, the **id** property specifies the section's ID.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Open Proxies",
                "api_name": "Hourly Open Proxies",
                "api_description": "Get a list of 200-400 working open proxies, updated every hour. Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, try the **Open Proxies** endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Open Proxies",
                "api_name": "Open Proxies",
                "api_description": "Get a list of 200-400 working open proxies, updated every 15 minutes. Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, consider a [paid proxy service](https://proxymesh.com/).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Open Proxies",
                "api_name": "Daily Open Proxies",
                "api_description": "Get a list of 200-400 open proxies, updated once per day around 00:00 UTC.  Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, try the **Hourly** or **Open Proxies** endpoints.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Web Search",
                "api_name": "newsSearch",
                "api_description": "Get news articles relevant for a given query.",
                "required_parameters": [
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "The number of items per page. The maximum value is 50.",
                        "default": "10"
                    },
                    {
                        "name": "autoCorrect",
                        "type": "BOOLEAN",
                        "description": "Automatically correct spelling.",
                        "default": true
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The user's search query string.",
                        "default": "taylor swift"
                    },
                    {
                        "name": "pageNumber",
                        "type": "NUMBER",
                        "description": "The page to view.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "toPublishedDate",
                        "type": "STRING",
                        "description": "The  published date and time for the newest article allowed.  For example: *2015-05-16T05:50:06.* See  [https://www.c-sharpcorner.com/blogs/date-and-time-format-in-c-sharp-programming1 ](url)for more possible DateTime formats. ",
                        "default": "null"
                    },
                    {
                        "name": "safeSearch",
                        "type": "BOOLEAN",
                        "description": "A filter used to filter results for adult content.",
                        "default": false
                    },
                    {
                        "name": "fromPublishedDate",
                        "type": "STRING",
                        "description": "The  published date and time for the oldest article allowed.  For example: *2015-05-16T05:50:06.* See  [https://www.c-sharpcorner.com/blogs/date-and-time-format-in-c-sharp-programming1 ](url)for more possible DateTime formats. ",
                        "default": "null"
                    },
                    {
                        "name": "withThumbnails",
                        "type": "BOOLEAN",
                        "description": "Show results with image thumbnails.",
                        "default": false
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Web Search",
                "api_name": "webSearch",
                "api_description": "Get relevant web pages for a given query.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The user's search query string.",
                        "default": "taylor swift"
                    },
                    {
                        "name": "autoCorrect",
                        "type": "BOOLEAN",
                        "description": "Automatically correct spelling.",
                        "default": true
                    },
                    {
                        "name": "pageNumber",
                        "type": "NUMBER",
                        "description": "The page to view.",
                        "default": "1"
                    },
                    {
                        "name": "pageSize",
                        "type": "NUMBER",
                        "description": "The number of items per page. The maximum value is 50.",
                        "default": "10"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "safeSearch",
                        "type": "BOOLEAN",
                        "description": "A filter used to filter results for adult content.",
                        "default": false
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Web Search",
                "api_name": "spellCheck",
                "api_description": "Check spelling.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "The text string to check for spelling errors.",
                        "default": "teylor swiift"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I am a small business owner and I need to create a promotional video for my company. Can you recommend some popular YouTube channels for video editing tutorials and provide me with a list of playlist items related to video editing software? Also, find relevant web pages for the query 'best video editing tools' and check if there are any spelling errors in the text 'video edting'.",
        "relevant APIs": [
            [
                "YouTube v3_v3",
                "PlaylistItems"
            ],
            [
                "YouTube v3_v3",
                "ChannelSections"
            ],
            [
                "Web Search",
                "webSearch"
            ],
            [
                "Web Search",
                "spellCheck"
            ]
        ],
        "query_id": 31779
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "JobsApi",
                "api_name": "Jobs",
                "api_description": "get's jobs",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "test",
                "api_name": "testtesttest",
                "api_description": "nsadas",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "http://www.africau.edu/images/default/sample.pdf"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "16e0e5f7a076c2f62a2e41f6b5b99d37e5b9b25e",
                "api_name": "venture",
                "api_description": "Link to any suggestions on a nail",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "a",
                "api_name": "api",
                "api_description": "a",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm interested in investing in real estate and I would like to compare the prices of two small houses versus a single house. Can you calculate the value of purchasing two small houses compared to purchasing a single house? Also, provide me with the URL for a rotating proxy to ensure my privacy during the search.",
        "relevant APIs": [
            [
                "JobsApi",
                "Jobs"
            ],
            [
                "16e0e5f7a076c2f62a2e41f6b5b99d37e5b9b25e",
                "venture"
            ]
        ],
        "query_id": 15656
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get ID",
                "api_description": "Get ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "fastingcenters",
                "api_name": "Get all fastingCenters",
                "api_description": "Get all",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "Name": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Exercises by API-Ninjas",
                "api_name": "/v1/exercises",
                "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "number of results to offset for pagination. Default is 0.",
                        "default": ""
                    },
                    {
                        "name": "muscle",
                        "type": "STRING",
                        "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
                        "default": "biceps"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
                        "default": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "STRING",
                        "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "type": "str",
                    "muscle": "str",
                    "equipment": "str",
                    "difficulty": "str",
                    "instructions": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Health Calculator API",
                "api_name": "BodyFat - Imperial",
                "api_description": "This endpoint calculates the body fat percentage based on the provided gender, age, height, and weight parameters in imperial units.",
                "required_parameters": [
                    {
                        "name": "age",
                        "type": "NUMBER",
                        "description": "The age of the person in **years**. Required.",
                        "default": "26"
                    },
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "The weight of the person in **pounds**. Required.",
                        "default": "180"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "The gender of the person. Must be either '**male**' or '**female**'. Required.",
                        "default": "male"
                    },
                    {
                        "name": "height",
                        "type": "NUMBER",
                        "description": "The height of the person in **inches**. Required.",
                        "default": "77"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "age": "float",
                    "bmi": "str",
                    "bodyfat": "str",
                    "bodyfat_status": "str",
                    "gender": "str",
                    "height": "str",
                    "weight": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Health Calculator API",
                "api_name": "Daily Water Intake",
                "api_description": "The Daily Water Intake Recommendation endpoint calculates the daily recommended water intake based on factors such as weight, activity level, and climate. It provides flexibility by allowing you to specify the unit of measurement for the water intake, either in liters or ounces.",
                "required_parameters": [
                    {
                        "name": "climate",
                        "type": "STRING",
                        "description": "The climate in which the individual is located.\n\nThe climate parameter accepts the following values:\n**normal** - Average climate\n**hot** - Hot climate\n**cold** - Cold climate",
                        "default": "normal"
                    },
                    {
                        "name": "activity_level",
                        "type": "STRING",
                        "description": "The activity level of the individual. \n\nThe activity_level parameter accepts the following values:\n**sedentary** - Little to no exercise\n**lightly_active** - Light exercise/sports 1-3 days/week\n**moderately_active** - Moderate exercise/sports 3-5 days/week\n**very_active** - Hard exercise/sports 6-7 days/week\n**extra_active** - Very hard exercise/sports and physical job or 2x training",
                        "default": "sedentary"
                    },
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "The weight of the individual in **kilograms (kg)**.",
                        "default": "60"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "The unit of measurement for the water intake. \n(Default) **ounces**\n Specify **liters** to get the result in liters instead.",
                        "default": "liters"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Health Calculator API",
                "api_name": "Macronutrient Distribution",
                "api_description": "This endpoint calculates the optimal distribution of macronutrients (carbohydrates, proteins, and fats) based on factors such as activity level, body composition goals, and dietary preferences.",
                "required_parameters": [
                    {
                        "name": "activity_level",
                        "type": "STRING",
                        "description": "The activity_level parameter accepts the following values:\n\n**sedentary** - Little to no exercise.\n**moderately_active** - Moderate exercise/sports 3-5 days/week.\n**very_active** - Hard exercise/sports 6-7 days/week.",
                        "default": "sedentary"
                    },
                    {
                        "name": "body_composition_goal",
                        "type": "STRING",
                        "description": "The body_composition_goal parameter accepts the following values:\n\n**weight_loss** - Goal of losing weight.\n**maintenance** - Goal of maintaining current weight.\n**muscle_gain** - Goal of gaining muscle.\n",
                        "default": "maintenance"
                    },
                    {
                        "name": "dietary_preferences",
                        "type": "STRING",
                        "description": "The dietary_preferences parameter allows users to specify their dietary preferences. It can be any string value representing the individual's dietary choices or restrictions, such as \\\"**vegetarian**,\\\" \\\"**vegan**,\\\" \\\"**pescatarian**,\\\" or \\\"**gluten-free**.\\\"",
                        "default": "vegan"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "str"
                }
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "BMI Calculator_v2",
                "api_name": "BMI",
                "api_description": "Calculate BMI using weight and height.",
                "required_parameters": [
                    {
                        "name": "weight",
                        "type": "NUMBER",
                        "description": "",
                        "default": "86"
                    },
                    {
                        "name": "height",
                        "type": "NUMBER",
                        "description": "",
                        "default": "184"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "system",
                        "type": "STRING",
                        "description": "",
                        "default": "metric"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm interested in starting a new diet and I need some food recommendations. Can you suggest some fasting centers in the area that offer meal options? Additionally, calculate the optimal distribution of macronutrients for me based on my activity level, body composition goals, and dietary preferences.",
        "relevant APIs": [
            [
                "fastingcenters",
                "Get all fastingCenters"
            ],
            [
                "Health Calculator API",
                "Macronutrient Distribution"
            ]
        ],
        "query_id": 67889
    }
]