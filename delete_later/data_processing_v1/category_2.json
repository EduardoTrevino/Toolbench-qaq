[
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Netflix_v2",
                "api_name": "Search",
                "api_description": "Search",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search Query",
                        "default": "stranger"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    },
                    {
                        "name": "limit_titles",
                        "type": "NUMBER",
                        "description": "Title Limit",
                        "default": "50"
                    },
                    {
                        "name": "limit_suggestions",
                        "type": "NUMBER",
                        "description": "Suggestion Limit",
                        "default": "20"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "Offset",
                        "default": "0"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Netflix_v2",
                "api_name": "Season Episodes",
                "api_description": "Season Episodes",
                "required_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Season IDs (you can separate with commas)",
                        "default": "80077209,80117715"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Episode Limit",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "Offset",
                        "default": "0"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "Netflix_v2",
                "api_name": "Title Trailers",
                "api_description": "Title Trailers",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Title ID",
                        "default": "80057281"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Trailer Limit",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "Offset",
                        "default": "0"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Movies",
                "tool_name": "DAILY OVRLL 0822202130837",
                "api_name": "/status/200",
                "api_description": "Testing",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to watch a romantic comedy movie with my partner. Can you search for romantic comedy movies available on Netflix, Prime Video, Hulu, and Apple TV in the US? Provide me with the titles, genres, IMDb ratings, and trailers of these movies.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "Netflix_v2",
                "Search"
            ],
            [
                "Netflix_v2",
                "Title Trailers"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 1
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Whois by API-Ninjas",
                "api_name": "/v1/whois",
                "api_description": "API Ninjas Whois API endpoint. Returns domain registration details (e.g. registrar, contact information, expiration date, name servers) about a particular domain name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "valid domain to check.",
                        "default": "example.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "domain_name": "str",
                    "registrar": "str",
                    "whois_server": "str",
                    "updated_date": "int",
                    "creation_date": "int",
                    "expiration_date": "int",
                    "name_servers": [
                        "list of str with length 2"
                    ],
                    "dnssec": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Password Generator API",
                "api_name": "Password of length 50",
                "api_description": "Gives you length 50 password",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "length",
                        "type": "STRING",
                        "description": "",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "password": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Password Generator API",
                "api_name": "Base",
                "api_description": "Only this endpoint is currently supported which gives you a random password",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "password": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "QR Code Wizard",
                "api_name": "Generate QR",
                "api_description": "Generate QR codes with ease via API",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "www.google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "QuickMocker",
                "api_name": "Sample user read",
                "api_description": "Sample user read",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "user_id": "str",
                    "confirmation_code": "str",
                    "name": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a family vacation to a remote location and want to ensure we have a secure Wi-Fi connection. Can you provide me with the WHOIS details for the domain 'securewifi.com'? Additionally, I need a 50-character password to secure our Wi-Fi network.",
        "relevant APIs": [
            [
                "Whois by API-Ninjas",
                "/v1/whois"
            ],
            [
                "Password Generator API",
                "Password of length 50"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 2
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Spotify Downloader",
                "api_name": "Track List - Album",
                "api_description": "Get track list from album",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "6lggWd5q9Rh66OkDE1eNDr"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "nextOffset": "NoneType",
                    "trackList": [
                        {
                            "id": "str",
                            "title": "str",
                            "artists": "str",
                            "cover": "NoneType",
                            "_list_length": 12
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Spotify Downloader",
                "api_name": "Metadata - Track",
                "api_description": "Get metadata about track",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "22LAwLoDA5b4AaGSkg6bKW"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Spotify Downloader",
                "api_name": "Download Song",
                "api_description": "Download a song by spotify's song ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "22LAwLoDA5b4AaGSkg6bKW"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Ruby Code Compiler",
                "api_name": "Ruby Versions",
                "api_description": "Ruby Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "id": "int",
                        "name": "str"
                    },
                    "1": {
                        "id": "int",
                        "name": "str"
                    },
                    "2": {
                        "id": "int",
                        "name": "str"
                    },
                    "3": {
                        "id": "int",
                        "name": "str"
                    },
                    "4": {
                        "id": "int",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "CORS Proxy_v2",
                "api_name": "index__get",
                "api_description": "Welcome to CORS Proxy",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "echo-api",
                "api_name": "Echo GET",
                "api_description": "Make a HTTP GET request with the code you like to get in the response.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "",
                        "default": "201"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a surprise party for my best friend and I need some music suggestions. Can you provide me with the track list of the album with the ID '6lggWd5q9Rh66OkDE1eNDr'? Additionally, I'm interested in exploring the available versions of Ruby. Please provide me with a list of Ruby versions.",
        "relevant APIs": [
            [
                "Spotify Downloader",
                "Track List - Album"
            ],
            [
                "Ruby Code Compiler",
                "Ruby Versions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 3
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "free QR Code Generator",
                "api_name": "Generate QR Code",
                "api_description": "Turn Word to QR Code with just one request",
                "required_parameters": [
                    {
                        "name": "data",
                        "type": "STRING",
                        "description": "",
                        "default": "NigeriansOnly.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Measurement Unit Converter",
                "api_name": "Measurements detailed",
                "api_description": "GET a list of all the available measurements with unit details.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "measurements": [
                        {
                            "abbr": "str",
                            "measure": "str",
                            "system": "str",
                            "singular": "str",
                            "plural": "str",
                            "_list_length": 2
                        }
                    ]
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Measurement Unit Converter",
                "api_name": "Measure units",
                "api_description": "GET enum array of all units of the given type.",
                "required_parameters": [
                    {
                        "name": "measure",
                        "type": "string",
                        "description": "",
                        "default": "length"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Tools",
                "tool_name": "Measurement Unit Converter",
                "api_name": "Convert from one unit to another",
                "api_description": "Converts the given quantity in one unit to the equivalent quantity in another, for a given measurement, and returns a detailed answer.",
                "required_parameters": [
                    {
                        "name": "measure",
                        "type": "string",
                        "description": "",
                        "default": "length"
                    },
                    {
                        "name": "value",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1200"
                    },
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "",
                        "default": "m"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "",
                        "default": "km"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "measure": "str",
                    "from": {
                        "abbr": "str",
                        "measure": "str",
                        "system": "str",
                        "singular": "str",
                        "plural": "str"
                    },
                    "to": {
                        "abbr": "str",
                        "measure": "str",
                        "system": "str",
                        "singular": "str",
                        "plural": "str"
                    },
                    "value": "float",
                    "result": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a vacation and I need to convert the currency from Euros to US Dollars for budgeting purposes. Can you convert 500 Euros to US Dollars? Additionally, I would like to roll a 20-sided die to determine the activities for each day of the vacation. Please convert the currency and roll the die.",
        "relevant APIs": [
            [
                "Measurement Unit Converter",
                "Convert from one unit to another"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 4
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Tmail",
                "api_name": "View message",
                "api_description": "View a particular message by id\nUse the token received from /mailbox as authorization header  & message id received from /messages as path parameter.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "61d096c5d9aaba03c45cd012"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Tmail",
                "api_name": "Get Email ID",
                "api_description": "Get Email ID for Mailbox",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "token": "str",
                    "mailbox": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Tmail",
                "api_name": "Get Messages",
                "api_description": "Get all the messages received by email\nUse the token received from email as authorization header.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "QR Code API_v119",
                "api_name": "QR Code API (Web URL)",
                "api_description": "Call the API Endpoint /qr and pass in the url parameter along with your rapidApi key to obtain a QR Code.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "170.64.137.43:8000/qr?url=https://www.example.com",
                        "default": "www.google.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "rounded",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    },
                    {
                        "name": "logo",
                        "type": "STRING",
                        "description": "[Optional] URL to logo which will be placed at the center of the QR Code.\nLogo URL must be in .png",
                        "default": "https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-suite-everything-you-need-know-about-google-newest-0.png"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YouTube Video Tags",
                "api_name": "Get All The Video Tags",
                "api_description": "This endpoint will return all the tags used for the SEO of a video, with the video title.",
                "required_parameters": [
                    {
                        "name": "URL",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.youtube.com/watch?v=OHOJFv4iaMc"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "QRLink API",
                "api_name": "URL to QR code",
                "api_description": "This endpoint is a GET request that takes a single parameter \"url\" which specifies the website URL. The endpoint generates a QR code image using the input URL and the response is downloadable.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "www.google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a surprise party for my sister. Can you fetch the latest email message from my Tmail mailbox using the message ID '61d096c5d9aaba03c45cd012'? Also, generate a QR code for the URL 'www.google.com' with a rounded shape and the Google logo at the center.",
        "relevant APIs": [
            [
                "Tmail",
                "View message"
            ],
            [
                "QR Code API_v119",
                "QR Code API (Web URL)"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 5
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a fan of FDJ and I'm curious about the odds of their past games. Can you give me the historical odds data for the matches? It would be great to know the outcomes as well.",
        "relevant APIs": [
            [
                "FDJ",
                "Odds"
            ],
            [
                "FDJ",
                "Matches"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 6
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I need to find all the comments made by my friend on Facebook. Can you help me retrieve the comments by their Facebook ID?",
        "relevant APIs": [
            [
                "Facebook User Info",
                "find_comment_find_get"
            ],
            [
                "Facebook User Info",
                "find_user_find_get"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 7
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Easy QR Code",
                "api_name": "Generate QR Code",
                "api_description": "Generate QR Code by providing content",
                "required_parameters": [
                    {
                        "name": "content",
                        "type": "STRING",
                        "description": "",
                        "default": "https://google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "CPP Code Compiler",
                "api_name": "C++ Versions",
                "api_description": "C++ Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "id": "int",
                        "name": "str"
                    },
                    "1": {
                        "id": "int",
                        "name": "str"
                    },
                    "2": {
                        "id": "int",
                        "name": "str"
                    },
                    "3": {
                        "id": "int",
                        "name": "str"
                    },
                    "4": {
                        "id": "int",
                        "name": "str"
                    },
                    "5": {
                        "id": "int",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a student studying computer science and I need to check the available C++ versions for my project. Can you fetch the versions using the CPP Code Compiler API? Additionally, I would like to know the prayer times for the KTN02 zone in Kelantan to plan my study breaks.",
        "relevant APIs": [
            [
                "CPP Code Compiler",
                "C++ Versions"
            ],
            [
                "Waktu Solat",
                "/solat/time"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 8
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "Keto Diet",
                "api_name": "All Keto Recipes",
                "api_description": "Get a list of all available keto recipes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"id\": \"int\", \"recipe\": \"str\", \"category\": {\"id\": \"int\", \"category\": \"str\", \"thumbnail\": \"str\"}, \"prep_time_in_minutes\": \"int\", \"prep_time_note\": \"NoneType\", \"cook_time_in_minutes\": \"int\", \"cook_time_note\": \"NoneType\", \"difficulty\": \"str\", \"serving\": \"int\", \"measurement_1\": \"float\", \"measurement_2\": \"float\", \"measurement_3\": \"float\", \"measurement_4\": \"float\", \"measurement_5\": \"float\", \"measurement_6\": \"NoneType\", \"measurement_7\": \"NoneType\", \"measurement_8\": \"NoneType\", \"measurement_9\": \"NoneType\", \"measurement_10\": \"NoneType\", \"ingredient_1\": \"str\", \"ingredient_2\": \"str\", \"ingredient_3\": \"str\", \"ingredient_4\": \"str\", \"ingredient_5\": \"str\", \"ingredient_6\": \"NoneType\", \"ingredient_7\": \"NoneType\", \"ingredient_8\": \"NoneType\", \"ingredient_9\": \"NoneType\", \"ingredient_10\": \"NoneType\", \"directions_step_1\": \"str\", \"directions_step_2\": \"str\", \"directions_step_3\": \"str\", \"directions_step_4\": \"str\", \"directions_step_5\": \"str\", \"directions_step_6\": \"NoneType\", \"directions_step_7\": \"NoneType\", \"dir"
            },
            {
                "category_name": "Food",
                "tool_name": "Keto Diet",
                "api_name": "Filter - Cook Time in Minutes",
                "api_description": "Gives keto recipes within given range of cooking time.\ncook_time_in_minutes__lt = Less than\ncook_time_in_minutes__gt = Greater than",
                "required_parameters": [
                    {
                        "name": "cook_time_in_minutes__tg",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "cook_time_in_minutes__lt",
                        "type": "NUMBER",
                        "description": "",
                        "default": "50"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"id\": \"int\", \"recipe\": \"str\", \"category\": {\"id\": \"int\", \"category\": \"str\", \"thumbnail\": \"str\"}, \"prep_time_in_minutes\": \"int\", \"prep_time_note\": \"NoneType\", \"cook_time_in_minutes\": \"int\", \"cook_time_note\": \"NoneType\", \"difficulty\": \"str\", \"serving\": \"int\", \"measurement_1\": \"float\", \"measurement_2\": \"float\", \"measurement_3\": \"float\", \"measurement_4\": \"float\", \"measurement_5\": \"float\", \"measurement_6\": \"NoneType\", \"measurement_7\": \"NoneType\", \"measurement_8\": \"NoneType\", \"measurement_9\": \"NoneType\", \"measurement_10\": \"NoneType\", \"ingredient_1\": \"str\", \"ingredient_2\": \"str\", \"ingredient_3\": \"str\", \"ingredient_4\": \"str\", \"ingredient_5\": \"str\", \"ingredient_6\": \"NoneType\", \"ingredient_7\": \"NoneType\", \"ingredient_8\": \"NoneType\", \"ingredient_9\": \"NoneType\", \"ingredient_10\": \"NoneType\", \"directions_step_1\": \"str\", \"directions_step_2\": \"str\", \"directions_step_3\": \"str\", \"directions_step_4\": \"str\", \"directions_step_5\": \"str\", \"directions_step_6\": \"NoneType\", \"directions_step_7\": \"NoneType\", \"dir"
            },
            {
                "category_name": "Food",
                "tool_name": "Keto Diet",
                "api_name": "Single Keto Recipe",
                "api_description": "Gives a single recipe by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "87"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"id\": \"int\", \"recipe\": \"str\", \"category\": {\"id\": \"int\", \"category\": \"str\", \"thumbnail\": \"str\"}, \"prep_time_in_minutes\": \"int\", \"prep_time_note\": \"NoneType\", \"cook_time_in_minutes\": \"int\", \"cook_time_note\": \"NoneType\", \"difficulty\": \"str\", \"serving\": \"int\", \"measurement_1\": \"float\", \"measurement_2\": \"float\", \"measurement_3\": \"NoneType\", \"measurement_4\": \"NoneType\", \"measurement_5\": \"NoneType\", \"measurement_6\": \"NoneType\", \"measurement_7\": \"NoneType\", \"measurement_8\": \"NoneType\", \"measurement_9\": \"NoneType\", \"measurement_10\": \"NoneType\", \"ingredient_1\": \"str\", \"ingredient_2\": \"str\", \"ingredient_3\": \"str\", \"ingredient_4\": \"NoneType\", \"ingredient_5\": \"NoneType\", \"ingredient_6\": \"NoneType\", \"ingredient_7\": \"NoneType\", \"ingredient_8\": \"NoneType\", \"ingredient_9\": \"NoneType\", \"ingredient_10\": \"NoneType\", \"directions_step_1\": \"str\", \"directions_step_2\": \"str\", \"directions_step_3\": \"str\", \"directions_step_4\": \"str\", \"directions_step_5\": \"str\", \"directions_step_6\": \"NoneType\", \"directions_step_7"
            },
            {
                "category_name": "Food",
                "tool_name": "Payment",
                "api_name": "GetPaymentTypes",
                "api_description": "Find Payment Services allowed by tenant",
                "required_parameters": [
                    {
                        "name": "venueId",
                        "type": "STRING",
                        "description": "venueId of the object to fetch data.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Food",
                "tool_name": "Generate a recipe based on an ingredient",
                "api_name": "Generate recipe",
                "api_description": "Generate your recipe for your use case or application!",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ingredient",
                        "type": "STRING",
                        "description": "",
                        "default": "chicken"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to surprise my family with a special dinner. Can you find a recipe for a main course using the ingredient 'salmon'? Also, provide me with the nutritional information of the dish and the accepted payment types at the local grocery store.",
        "relevant APIs": [
            [
                "Generate a recipe based on an ingredient",
                "Generate recipe"
            ],
            [
                "Payment",
                "GetPaymentTypes"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 9
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "OpenWeather",
                "api_name": "getCurrentWeather",
                "api_description": "Test",
                "required_parameters": [
                    {
                        "name": "appid",
                        "type": "STRING",
                        "description": "",
                        "default": "da0f9c8d90bde7e619c3ec47766a42f4"
                    },
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "City name",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
                        "default": ""
                    },
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
                        "default": "standard"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cod": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "OpenWeather",
                "api_name": "getForecastWeather",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "City name",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cnt",
                        "type": "NUMBER",
                        "description": "A number of timestamps, which will be returned in the API response.",
                        "default": ""
                    },
                    {
                        "name": "units",
                        "type": "STRING",
                        "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
                        "default": "standard"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cod": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "The Weather API",
                "api_name": "weather report",
                "api_description": "Gives weather report of a particular city.",
                "required_parameters": [
                    {
                        "name": "cityName",
                        "type": "string",
                        "description": "",
                        "default": "mumbai"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "havo",
                "api_name": "weatherendpoin",
                "api_description": "ob havo",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friends and I are going on a road trip from New York to Chicago. Could you please give us the current weather conditions for both cities? Additionally, we would like to know the high and low tide timings for the nearest coastal areas along our route.",
        "relevant APIs": [
            [
                "OpenWeather",
                "getCurrentWeather"
            ],
            [
                "The Weather API",
                "weather report"
            ],
            [
                "Stormglass Complete",
                "Get Tide Extreme Data"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 10
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Could you please give me the prayer times for the entire week in Kedah? I would like to know the schedule for Fajr, Dhuhr, Asr, Maghrib, and Isha prayers. Also, provide me with the prayer times for next week in Kelantan.",
        "relevant APIs": [
            [
                "Waktu Solat",
                "/solat/time"
            ],
            [
                "Waktu Solat",
                "/solat/list"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 11
    },
    {
        "api_list": [
            {
                "category_name": "Search",
                "tool_name": "SERP API",
                "api_name": "/search",
                "api_description": "Perform Google search and get results",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "liverpool"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "gl",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "cr",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "tbs",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "num",
                        "type": "NUMBER",
                        "description": "",
                        "default": "20"
                    },
                    {
                        "name": "start",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "hl",
                        "type": "STRING",
                        "description": "Locale of Google search results. E.g. en-US",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "link": "str",
                            "snippet": "str",
                            "metaHtml": "str",
                            "_list_length": 18
                        }
                    ],
                    "stats": {
                        "page": "NoneType",
                        "approximateResults": "str",
                        "seconds": "NoneType"
                    }
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Webit Image Search",
                "api_name": "Similar",
                "api_description": "Search for Visually Similar images to an image from a previous Search result.",
                "required_parameters": [
                    {
                        "name": "image_id",
                        "type": "STRING",
                        "description": "The \\\"image_id\\\" of an image from search results to search similar images by.\n\nThe used image_id corresponds to the following image:\n![](https://img.freepik.com/free-photo/3d-aesthetics-with-shapes-vaporwave-style_23-2148981118.jpg?size=262&ext=jpg)",
                        "default": "7TJ6HT2DAUMDFITP4LSIJLWICKWRCQOE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "results": [
                            {
                                "title": "NoneType",
                                "url": "NoneType",
                                "id": "NoneType",
                                "confidence": "float",
                                "_list_length": 10
                            }
                        ],
                        "results_count": "int",
                        "number": "int",
                        "offset": "int"
                    },
                    "message": "NoneType"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Webit Image Search",
                "api_name": "Reverse (Search by Image)",
                "api_description": "Reverse search by Image between billion of images.\n\nThis endpoint supports \"URL\" parameter only. For \"image\" file upload, use POST endpoint.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to search images by. A default URL from Wikipedia containing the following pizza has been used.\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg/260px-Eq_it-na_pizza-margherita_sep2005_sml.jpg)",
                        "default": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg/260px-Eq_it-na_pizza-margherita_sep2005_sml.jpg"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "results": [
                            {
                                "title": "NoneType",
                                "url": "NoneType",
                                "id": "NoneType",
                                "confidence": "float",
                                "_list_length": 10
                            }
                        ],
                        "results_count": "int",
                        "number": "int",
                        "offset": "int"
                    },
                    "message": "NoneType"
                }
            },
            {
                "category_name": "Search",
                "tool_name": "Webit Image Search",
                "api_name": "Search",
                "api_description": "Webit Image Search API provides you a powerful endpoint to search billions of images from the world wide web featuring rating, reverse search by image and multi-lingual capabilities.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "pizza"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    },
                    {
                        "name": "search_filter",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": {
                        "results": [
                            {
                                "title": "NoneType",
                                "url": "NoneType",
                                "id": "NoneType",
                                "confidence": "float",
                                "_list_length": 10
                            }
                        ],
                        "results_count": "int",
                        "number": "int",
                        "offset": "int"
                    },
                    "message": "NoneType"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm writing a blog post about the history of pizza and need some visual content. Can you find visually similar images to this image with image_id '7TJ6HT2DAUMDFITP4LSIJLWICKWRCQOE'? Additionally, search for the top 10 trending keywords in the US today.",
        "relevant APIs": [
            [
                "Webit Image Search",
                "Similar"
            ],
            [
                "Trends keywords in different regions",
                "get geo map for regions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 12
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "Old English Translator",
                "api_name": "Translate to Old English",
                "api_description": "Old English Translator",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text to convert to old English.",
                        "default": "A hearty meal, a happy laughter is all we need."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": {
                        "total": "int"
                    },
                    "contents": {
                        "translated": "str",
                        "text": "str",
                        "translation": "str"
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "q-study",
                "api_name": "q-study",
                "api_description": "education",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "TED Talks API",
                "api_name": "getSubtitleLanguages",
                "api_description": "Get all the TED talks subtitle languages",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "get": "str",
                    "parameters": "empty list",
                    "errors": "empty list",
                    "result": {
                        "num_results": "int",
                        "results": [
                            {
                                "slug": "str",
                                "_list_length": 115
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "TED Talks API",
                "api_name": "getAudioLanguages",
                "api_description": "Get all the TED talks audio languages",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "get": "str",
                    "parameters": "empty list",
                    "errors": "empty list",
                    "result": {
                        "num_results": "int",
                        "results": [
                            {
                                "slug": "str",
                                "_list_length": 12
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "TED Talks API",
                "api_name": "getTalks",
                "api_description": "Get info about specific talks based on the provided parameters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "ID of a desired specific talk",
                        "default": ""
                    },
                    {
                        "name": "audio_lang",
                        "type": "STRING",
                        "description": "Return talks which their audio language is the provided language, the provided value should be the language slug according to the /audio_languages endpoint",
                        "default": "en"
                    },
                    {
                        "name": "speaker",
                        "type": "STRING",
                        "description": "Return talks which at least on of their speakers is the provided speaker, the provided value should be the speaker slug according to the /speakers endpoint",
                        "default": "yuval_noah_harari"
                    },
                    {
                        "name": "publish_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Return talks which were published on TED.com only on the exact provided date",
                        "default": ""
                    },
                    {
                        "name": "topic",
                        "type": "STRING",
                        "description": "Return talks which at least on of their topics is the provided topics, the provided value should be the speaker slug according to the /topics endpoint",
                        "default": "politics"
                    },
                    {
                        "name": "subtitle_lang",
                        "type": "STRING",
                        "description": "Return talks which have subtitles in the provided language, the provided value should be the language slug according to the /subtitle_languages endpoint",
                        "default": "he"
                    },
                    {
                        "name": "max_duration",
                        "type": "NUMBER",
                        "description": "Return talks which their duration in seconds is at most the provided value",
                        "default": ""
                    },
                    {
                        "name": "to_publish_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Return talks which were published on TED.com only before the provided date",
                        "default": ""
                    },
                    {
                        "name": "from_publish_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Return talks which were published on TED.com only after the provided date",
                        "default": ""
                    },
                    {
                        "name": "min_duration",
                        "type": "NUMBER",
                        "description": "Return talks which their duration in seconds is at least the provided value",
                        "default": "300"
                    },
                    {
                        "name": "record_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Return talks which were recorded only in the exact provided date",
                        "default": ""
                    },
                    {
                        "name": "to_record_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Return talks which were recorded only before the provided date",
                        "default": ""
                    },
                    {
                        "name": "from_record_date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Return talks which were recorded only after the provided date",
                        "default": "2017-01-01"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Aeries",
                "api_name": "v5/schools",
                "api_description": "v5/schools",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a language enthusiast and I'm interested in learning about different languages and their origins. Can you provide me with a translation of the word 'language' in different languages? Additionally, could you suggest some TED talks on the topic of language diversity and the importance of preserving endangered languages?",
        "relevant APIs": [
            [
                "Dictionary Translation Hablaa",
                "Get a translation"
            ],
            [
                "TED Talks API",
                "getTalks"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 13
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a huge fan of Leonardo DiCaprio and I want to know more about his career. Can you give me the basic information, including the birth year and known titles, of Leonardo DiCaprio? Also, provide me with the streaming sources for the movie 'The Wolf of Wall Street' and the latest arrivals on different platforms in the US.",
        "relevant APIs": [
            [
                "OTT details",
                "Basic Info"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ],
            [
                "OTT details",
                "New Arrivals"
            ],
            [
                "Streaming Availability",
                "Get Basic (FREE)"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 14
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "TIN Check",
                "api_name": "TIN Check",
                "api_description": "Through this operation you know if the tin number is valid or not",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "TIN Check",
                "api_name": "TIN Lookup",
                "api_description": "Through this operation you know if the tin number is valid or not and more information",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to surprise my friends with a special dinner party. Could you check if their tax identification numbers are valid? Also, provide me with the latest overnight policy rate and its last update for our country.",
        "relevant APIs": [
            [
                "TIN Check",
                "TIN Lookup"
            ],
            [
                "Overnight Policy Rate",
                "/opr"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 15
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Genres",
                "api_description": "Return a mapping of genre names and IDs. Some genres have a tmdb_id, which is the corresponding genre ID on TheMovieDB.org API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "tmdb_id": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Sources",
                "api_description": "Get a listing of titles that have changed to their streaming sources within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass in the 2 character region code (eg US) for the country you want to get titles with changed sources from. There is a limit to 1 region on this endpoint, if you leave this field blank US changes will be returned only.",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to explore different genres of movies. Fetch the genre names and IDs for me. Also, provide me with the basic information about a specific cast member, including their name, profession, birth and death years, and best titles.",
        "relevant APIs": [
            [
                "Watchmode",
                "Genres"
            ],
            [
                "OTT details",
                "Basic Info"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 16
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Details",
                "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
                        "default": "ES"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "original_title": "str",
                    "plot_overview": "str",
                    "type": "str",
                    "runtime_minutes": "NoneType",
                    "year": "int",
                    "end_year": "int",
                    "release_date": "str",
                    "imdb_id": "str",
                    "tmdb_id": "int",
                    "tmdb_type": "str",
                    "genres": [
                        "list of int with length 3"
                    ],
                    "genre_names": [
                        "list of str with length 3"
                    ],
                    "user_rating": "float",
                    "critic_score": "int",
                    "us_rating": "str",
                    "poster": "str",
                    "backdrop": "str",
                    "original_language": "str",
                    "english_title": "str",
                    "similar_titles": [
                        "list of int with length 25"
                    ],
                    "networks": [
                        "list of int with length 1"
                    ],
                    "network_names": [
                        "list of str with length 1"
                    ],
                    "relevance_percentile": "float",
                    "trailer": "str",
                    "trailer_thumbnail": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a movie night for my company's team-building event. Can you suggest some motivational movies with positive messages? Also, provide the streaming platforms where these movies are available in the US.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "Watchmode",
                "Title Details"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 17
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to check the events I own or have access to. Can you provide me with a list of all my events? Additionally, I would like to know more about myself as the current token holder.",
        "relevant APIs": [
            [
                "Ticketbud",
                "Your Events"
            ],
            [
                "Ticketbud",
                "Me"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 18
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Scala Code Compiler",
                "api_name": "Scala Versions",
                "api_description": "Scala Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "id": "int",
                        "name": "str"
                    },
                    "1": {
                        "id": "int",
                        "name": "str"
                    },
                    "2": {
                        "id": "int",
                        "name": "str"
                    },
                    "3": {
                        "id": "int",
                        "name": "str"
                    },
                    "4": {
                        "id": "int",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "SQL Code Compiler",
                "api_name": "SQL Versions",
                "api_description": "SQL Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "id": "int",
                        "name": "str"
                    },
                    "1": {
                        "id": "int",
                        "name": "str"
                    },
                    "2": {
                        "id": "int",
                        "name": "str"
                    },
                    "3": {
                        "id": "int",
                        "name": "str"
                    },
                    "4": {
                        "id": "int",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "PHP Code Compiler",
                "api_name": "PHP Versions",
                "api_description": "PHP Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "id": "int",
                        "name": "str"
                    },
                    "1": {
                        "id": "int",
                        "name": "str"
                    },
                    "2": {
                        "id": "int",
                        "name": "str"
                    },
                    "3": {
                        "id": "int",
                        "name": "str"
                    },
                    "4": {
                        "id": "int",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a software engineer and I'm working on a project that involves integrating multiple programming languages. Can you provide me with the available versions of Scala, PHP, and SQL along with their IDs?",
        "relevant APIs": [
            [
                "Scala Code Compiler",
                "Scala Versions"
            ],
            [
                "PHP Code Compiler",
                "PHP Versions"
            ],
            [
                "SQL Code Compiler",
                "SQL Versions"
            ],
            [
                "Scala Code Compiler",
                "Scala Versions"
            ],
            [
                "PHP Code Compiler",
                "PHP Versions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 19
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Sources",
                "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
                        "default": "sub,free"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "type": "str",
                    "logo_100px": "str",
                    "ios_appstore_url": "str",
                    "android_playstore_url": "str",
                    "android_scheme": "str",
                    "ios_scheme": "str",
                    "regions": [
                        "list of str with length 51"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm hosting a movie-themed party for my friends and I need some ideas for classic movies to watch. Can you recommend some popular classic movies that are available for streaming in the US? Also, provide me with the streaming sources where I can watch these movies.",
        "relevant APIs": [
            [
                "Watchmode",
                "Autocomplete Search"
            ],
            [
                "Watchmode",
                "Sources"
            ],
            [
                "Streaming Availability",
                "Search By Title (FREE)"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 20
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a photographer and want to capture the beauty of the beach during sunrise and sunset. Can you provide me with the astronomy data for a specific location? It would be great to know the sunrise and sunset times. Additionally, I would like to retrieve the high and low tide information for that location.",
        "relevant APIs": [
            [
                "Stormglass Complete",
                "GET Astronomy Data"
            ],
            [
                "Stormglass Complete",
                "Get Tide Extreme Data"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 21
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "JobsApi",
                "api_name": "Jobs",
                "api_description": "get's jobs",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "16e0e5f7a076c2f62a2e41f6b5b99d37e5b9b25e",
                "api_name": "venture",
                "api_description": "Link to any suggestions on a nail",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "a",
                "api_name": "api",
                "api_description": "a",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm interested in investing in real estate and I would like to compare the prices of two small houses versus a single house. Can you calculate the value of purchasing two small houses compared to purchasing a single house? Also, provide me with the URL for a rotating proxy to ensure my privacy during the search.",
        "relevant APIs": [
            [
                "JobsApi",
                "Jobs"
            ],
            [
                "16e0e5f7a076c2f62a2e41f6b5b99d37e5b9b25e",
                "venture"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 22
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Email Validator",
                "api_name": "/email-validator/health",
                "api_description": "Return the health status of the API. Returns current UTC time.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "time": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Email Validator",
                "api_name": "/email-validator/validate",
                "api_description": "Validate email address. Key features:\n1. Checks that an email address has the correct syntax\n1. Gives friendly error messages when validation fails.\n1. Checks deliverability of an email address.\n1. Supports internationalized domain names and \n1. Normalizes email addresses",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "me@google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "originalEmail": "str",
                    "normalizedEmail": "str",
                    "domain": "str",
                    "localPart": "str",
                    "isDisposable": "bool",
                    "isValid": "bool",
                    "isDeliverable": "bool",
                    "isSmtpUtf8": "bool",
                    "mx": [
                        {
                            "host": "str",
                            "priority": "int",
                            "_list_length": 1
                        }
                    ],
                    "message": "str",
                    "asciiEmail": "str",
                    "asciiLocalPart": "str",
                    "asciiDomain": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Qr Code Generator_v5",
                "api_name": "qr code",
                "api_description": "Qr Generator",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a company event and need to send out personalized invitations to all employees. Can you validate the email addresses of each employee using the Email Validator API? Additionally, I would like to generate unique QR codes for each employee for event check-in. Your assistance is greatly appreciated!",
        "relevant APIs": [
            [
                "Email Validator",
                "/email-validator/validate"
            ],
            [
                "Qr Code Generator_v5",
                "qr code"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 23
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "OTT Providers",
                "api_description": "Get  information on OTT platforms we suuport .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
                        "default": "IN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a movie night with my friends this weekend. Can you suggest some popular movies released in the last year? Also, provide the streaming availability for these movies on different platforms like Netflix, Prime Video, and Hulu.",
        "relevant APIs": [
            [
                "Watchmode",
                "Search"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "OTT details",
                "OTT Providers"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 24
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Diablo4 Smartable",
                "api_name": "GetSponsorships",
                "api_description": "Get Diablo 4 sponsorships.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "value": "empty list"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Diablo4 Smartable",
                "api_name": "GetGamesByTopic",
                "api_description": "Get Diablo 4 gameplays by topic.",
                "required_parameters": [
                    {
                        "name": "topic",
                        "type": "string",
                        "description": "",
                        "default": "druid"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "path": "str",
                    "page": "int",
                    "value": [
                        {
                            "path": "str",
                            "title": "str",
                            "excerpt": "str",
                            "sourceUrl": "str",
                            "webUrl": "str",
                            "originalUrl": "str",
                            "featuredContent": "str",
                            "length": "str",
                            "provider": {
                                "name": "str",
                                "domain": "str"
                            },
                            "topics": [
                                "list of str with length 2"
                            ],
                            "heat": "int",
                            "images": [
                                {
                                    "url": "str",
                                    "width": "int",
                                    "height": "int",
                                    "isCached": "bool",
                                    "_list_length": 1
                                }
                            ],
                            "content": "str",
                            "type": "str",
                            "publishedDateTime": "str",
                            "_list_length": 30
                        }
                    ],
                    "nextPage": "int"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Diablo4 Smartable",
                "api_name": "GetPeople",
                "api_description": "Get Diablo 4 influencers and top players.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "path": "str",
                    "page": "int",
                    "value": [
                        {
                            "path": "str",
                            "title": "str",
                            "excerpt": "str",
                            "sourceUrl": "str",
                            "webUrl": "str",
                            "type": "str",
                            "name": "str",
                            "bio": "str",
                            "location": "str",
                            "website": "str",
                            "twitter": {
                                "username": "str",
                                "url": "str",
                                "followers": "int"
                            },
                            "affiliation": {
                                "path": "str",
                                "name": "str",
                                "domain": "str",
                                "images": [
                                    {
                                        "url": "str",
                                        "width": "int",
                                        "height": "int",
                                        "isCached": "bool",
                                        "_list_length": 1
                                    }
                                ]
                            },
                            "topics": [
                                "list of str with length 1"
                            ],
                            "heat": "int",
                            "images": [
                                {
                                    "url": "str",
                                    "width": "int",
                                    "height": "int",
                                    "title": "str",
                                    "isCached": "bool",
                                    "_list_length": 1
                                }
                            ],
                            "content": "str",
                            "_list_length": 8
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Country List",
                "api_name": "Get All Country List",
                "api_description": "Nodes:\niso: iso\ncountryname: country name\nnicename: nicename\niso3: iso3\nnumcode: numcode\nphonecode:phonecode",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": [
                        {
                            "id": "int",
                            "iso": "str",
                            "countryname": "str",
                            "nicename": "str",
                            "iso3": "str",
                            "numcode": "str",
                            "phonecode": "str",
                            "_list_length": 239
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Phone",
                "api_name": "iso",
                "api_description": "Get the ISO codes from a given Country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Description of the Country in English",
                        "default": "Canada"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "api-message": "str",
                    "country-calling-code": "str",
                    "iso-code": "str",
                    "iso-code2": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Phone",
                "api_name": "directory",
                "api_description": "Get all the Local Area Codes from a given Country",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "\"ISO 2 letter country code\" or \"Name of the Country in English\"",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "api-message": "str",
                            "area-code": "str",
                            "country-calling-code": "str",
                            "iso-code": "str",
                            "_list_length": 67
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Phone",
                "api_name": "area-code",
                "api_description": "Get the International Country Calling Code and the Local Area Code information",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "\"ISO 2 letter country code\" or \"Name of the Country in English\"",
                        "default": "BR"
                    },
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Geographic Region (e.g. City). No accented letter is required.",
                        "default": "Manaus"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "api-message": "str",
                    "area-code": "str",
                    "country-calling-code": "str",
                    "iso-code": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "PowerBI",
                "api_name": "GetPeopleByTopic",
                "api_description": "Get Power BI influencers by topic.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "topic",
                        "type": "string",
                        "description": "",
                        "default": "dax"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "PowerBI",
                "api_name": "GetFunctions",
                "api_description": "Get Power BI DAX functions.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "path": "str",
                    "page": "int",
                    "value": [
                        {
                            "path": "str",
                            "title": "str",
                            "excerpt": "str",
                            "sourceUrl": "str",
                            "webUrl": "str",
                            "name": "str",
                            "provider": {
                                "name": "str",
                                "domain": "str",
                                "images": [
                                    {
                                        "url": "str",
                                        "width": "int",
                                        "height": "int",
                                        "isCached": "bool",
                                        "_list_length": 1
                                    }
                                ]
                            },
                            "topics": [
                                "list of str with length 2"
                            ],
                            "topItems": [
                                {
                                    "path": "str",
                                    "title": "str",
                                    "excerpt": "str",
                                    "name": "str",
                                    "topics": [
                                        "list of str with length 2"
                                    ],
                                    "heat": "int",
                                    "type": "str",
                                    "_list_length": 4
                                }
                            ],
                            "size": "int",
                            "heat": "int",
                            "content": "str",
                            "type": "str",
                            "_list_length": 25
                        }
                    ],
                    "nextPage": "int"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "PowerBI",
                "api_name": "GetCommunitiesByTopic",
                "api_description": "Get Power BI communities by topic.",
                "required_parameters": [
                    {
                        "name": "topic",
                        "type": "string",
                        "description": "",
                        "default": "dax"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to learn more about the Diablo 4 game and its features. Can you provide me with a list of Diablo 4 gameplays related to the druid topic? Additionally, tell me about the DAX functions used in Power BI.",
        "relevant APIs": [
            [
                "Diablo4 Smartable",
                "GetGamesByTopic"
            ],
            [
                "PowerBI",
                "GetFunctions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 25
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Email Validator_v3",
                "api_name": "Email Validate Regex",
                "api_description": "Email Validate Regex",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "test@gmail.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Email",
                "tool_name": "Temp Mail",
                "api_name": "Read Inbox",
                "api_description": "Read inbox an email",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "string",
                        "description": "",
                        "default": "p1amvpvxfh@bestparadize.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "message": "str",
                    "request_id": "str"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "account verifyer",
                "api_name": "Instagram account verifyer",
                "api_description": "to verify Instagram account",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a blogger and I want to verify the email addresses of my subscribers. Can you validate the emails of my subscribers using the Email Validate Regex API? Additionally, fetch the inbox messages for the email address p1amvpvxfh@bestparadize.com using the Read Inbox API to check for any collaboration opportunities or feedback from my readers.",
        "relevant APIs": [
            [
                "Email Validator_v3",
                "Email Validate Regex"
            ],
            [
                "Temp Mail",
                "Read Inbox"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 26
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Similar Movies",
                "api_name": "get Id",
                "api_description": "get the id of your movie",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "titanic"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "movies:": [
                        "list of list with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Similar Movies",
                "api_name": "find similar",
                "api_description": "find similar movies for your movie",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "",
                        "default": "24168-titanic"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "movies:": [
                        "list of list with length 1"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a movie marathon for my family and we want to watch movies from various genres. Can you suggest a comedy movie, an action movie, and a romance movie from IMDb's top 100 list? Additionally, provide us with the streaming availability information for these movies on popular platforms like Netflix, Prime Video, and Hulu.",
        "relevant APIs": [
            [
                "IMDb top 100 movies",
                "Get Top 100 Movies according to IMDb"
            ],
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 27
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Get IP Info_v2",
                "api_name": "ip-city",
                "api_description": "Get the detail of Longitude and Latitude on the basis of IP-Address",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP-Address of the Country",
                        "default": "74.125.45.100"
                    },
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "API Key Generated by Infodb.com",
                        "default": "93b77a0add7dace51661cf559ef97326f3297ec27d6e5a9b903670e0246b8293"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "ListAllCountries",
                "api_description": "This API returns list of all countries and can be paginated over the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:asc`, `name:desc` for country name sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 200
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 200
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCountries",
                "api_description": "API to search county based on the matching search keyword passed in url param.\nNOTE: This API is case insensitive.\ne.g. \n`/v1/locations/countries/uni`: This will return all the matching countries whose name starts from `uni` and their additional info.",
                "required_parameters": [
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "uni"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": 20
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Valid format to sort is `field:order`\ne.g. `name:desc`, `alpha-2:asc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                        "default": "name:asc"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "isActive": "bool",
                            "name": "str",
                            "alpha-2": "str",
                            "alpha-3": "str",
                            "country-code": "str",
                            "iso_3166-2": "str",
                            "region": "str",
                            "sub-region": "str",
                            "intermediate-region": "str",
                            "region-code": "str",
                            "sub-region-code": "str",
                            "intermediate-region-code": "str",
                            "id": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "World Cities and Countries",
                "api_name": "SearchCities",
                "api_description": "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "This indicates how many results you would like to query in one time.\nDefault value is `10` if limit is not provided.\nMaximum limit is `1000`",
                        "default": "100"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "This controls the pagination of results.\nDefault is `1`",
                        "default": "1"
                    },
                    {
                        "name": "countryIsoCode",
                        "type": "STRING",
                        "description": "It is an optional parameter to narrow your search results.\nPass two letter Country code to  filter the cities for specific country in query param which can be found in our searchCountry API in field name `alpha-2` for any country you search.\nfor e.g. 'IN', 'US' etc.",
                        "default": "US"
                    },
                    {
                        "name": "keyword",
                        "type": "string",
                        "description": "",
                        "default": "new yo"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "city": "str",
                            "countryCode": "str",
                            "_list_length": 4
                        }
                    ],
                    "page": "int",
                    "limit": "int",
                    "totalPages": "int",
                    "totalResults": "int"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Pincode Distance Measurement ",
                "api_name": "Fetch Distance between two pincodes",
                "api_description": "Enter two valid pincodes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "",
                        "default": "415612"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "",
                        "default": "415639"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "errorCode": "int",
                    "message": "str",
                    "error": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Local Search",
                "api_name": "/businesses",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "Keyword",
                        "type": "STRING",
                        "description": "A term to search against business names and categories.",
                        "default": ""
                    },
                    {
                        "name": "Name",
                        "type": "STRING",
                        "description": "The name of a business.",
                        "default": ""
                    },
                    {
                        "name": "City",
                        "type": "STRING",
                        "description": "The name of the city to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "State",
                        "type": "STRING",
                        "description": "The two-letter abbreviation of the state in USA to use as a search point.",
                        "default": ""
                    },
                    {
                        "name": "PostalCode",
                        "type": "STRING",
                        "description": "The US postal code of a location.  ( 5 or 9 digit)",
                        "default": ""
                    },
                    {
                        "name": "Sort",
                        "type": "STRING",
                        "description": "",
                        "default": "value_distance"
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category that defines (or relates to) the commercial offering of a business.",
                        "default": "Category"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My family and I are relocating to a new city and we need to find a suitable neighborhood. Can you recommend some cities in the United States with affordable housing options? Also, provide information about the healthcare facilities and pharmacies in those cities.",
        "relevant APIs": [
            [
                "World Cities and Countries",
                "ListAllCountries"
            ],
            [
                "World Cities and Countries",
                "SearchCities"
            ],
            [
                "World Cities and Countries",
                "SearchCountries"
            ],
            [
                "Local Search",
                "/businesses"
            ],
            [
                "Pharmacies de garde NC",
                "All"
            ],
            [
                "Pharmacies de garde NC",
                "Health"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 28
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "QR Code API Generator",
                "api_name": "QR CODE GENERATOR",
                "api_description": "This endppint https://qrcodegenerator-47jz.onrender.com/qrcode/download/{text} will take input from user , you can replace {text} with anything and it will generate response as QR code Image.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "string",
                        "description": "",
                        "default": "sachin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 CE",
                "api_name": "Get Languages",
                "api_description": "Get active languages.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 CE",
                "api_name": "About",
                "api_description": "Get general information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "version": "str",
                    "homepage": "str",
                    "source_code": "str",
                    "maintainer": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Judge0 CE",
                "api_name": "Get a Language",
                "api_description": "Get a language.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "52"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "is_archived": "bool",
                    "source_file": "str",
                    "compile_cmd": "str",
                    "run_cmd": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My company is developing a new mobile app and we need to generate QR codes for user authentication. Can you create a QR code for the text 'Scan to authenticate' and provide the download link? Also, check the health status of the QR Code API Generator. Finally, roll a 10-sided die and share the result.",
        "relevant APIs": [
            [
                "QR Code API Generator",
                "QR CODE GENERATOR"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 29
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "Pascal Code Compiler",
                "api_name": "Pascal Versions",
                "api_description": "Pascal Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "id": "int",
                        "name": "str"
                    },
                    "1": {
                        "id": "int",
                        "name": "str"
                    },
                    "2": {
                        "id": "int",
                        "name": "str"
                    },
                    "3": {
                        "id": "int",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "Password Generator",
                "api_name": "Generate Password",
                "api_description": "Generate Password",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "excludeSimilarCharacters",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "false"
                    },
                    {
                        "name": "strict",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "false"
                    },
                    {
                        "name": "uppercase",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    },
                    {
                        "name": "exclude",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "symbols",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "false"
                    },
                    {
                        "name": "lowercase",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    },
                    {
                        "name": "length",
                        "type": "NUMBER",
                        "description": "",
                        "default": "15"
                    },
                    {
                        "name": "numbers",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "message": "str"
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "CPP 17 Code Compiler",
                "api_name": "C++ 17 Versions",
                "api_description": "C++ 17 Versions",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "id": "int",
                        "name": "str"
                    },
                    "1": {
                        "id": "int",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Get Products",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Get Categories",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "\ud83d\udc4b Demo Project_v13",
                "api_name": "Get Products in Category",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "skip",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a software developer and I need the available C++ 17 versions for a new project. Can you fetch the available C++ 17 versions? Additionally, I want to generate a strong password for my project's online documentation.",
        "relevant APIs": [
            [
                "CPP 17 Code Compiler",
                "C++ 17 Versions"
            ],
            [
                "Password Generator",
                "Generate Password"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 30
    },
    {
        "api_list": [
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to surprise my family with a weekend getaway. Can you suggest a nice destination within a 200-mile radius of our current location? Please provide driving directions from our location to the suggested destination.",
        "relevant APIs": [
            [
                "Waze",
                "Autocomplete"
            ],
            [
                "Waze",
                "Driving Directions"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 31
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "tapzulecountry",
                "api_name": "country",
                "api_description": "country fetch",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "GetBooksInfo",
                "api_name": "Search",
                "api_description": "Search Book by its name",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": "empty list"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Reading Home APIs",
                "api_name": "GetBooksbyTitleSearch",
                "api_description": "Get Paginated List of Books on Title Searched",
                "required_parameters": [
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "Power of"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Reading Home APIs",
                "api_name": "Getbooksbycategory",
                "api_description": "This will get a paginated list of books in a specific category",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": 1
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Reading Home APIs",
                "api_name": "GetBooksbyAuthorSearch",
                "api_description": "Get List of Books of a Searched Author Name",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "Leo Elsinger"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a book blogger and I want to write a post about books by a specific author. Can you help me search for books by the author's name and also provide me with interesting space news to engage my readers?",
        "relevant APIs": [
            [
                "Reading Home APIs",
                "GetBooksbyAuthorSearch"
            ],
            [
                "News space",
                "Get Space News"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 32
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "J2ACoin",
                "api_name": "Ranking list",
                "api_description": "Example test",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Other",
                "tool_name": "TestAPI_v3",
                "api_name": "test",
                "api_description": "test",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Other",
                "tool_name": "cat-facts",
                "api_name": "Get a random fact about cats",
                "api_description": "This endpoint returns a random fact about cats",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Fact": "str"
                }
            },
            {
                "category_name": "Other",
                "tool_name": "cat-facts",
                "api_name": "Get all facts about cat",
                "api_description": "This endpoint returns all available fact about cats in our database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "AllFacts": [
                        "list of str with length 279"
                    ]
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm writing an article on the Ukraine war and its impact on refugee displacement. Can you assist me in gathering data on the cumulative number of refugees from Ukraine over time? Additionally, I would like to explore the ranking list of J2ACoin to understand the current cryptocurrency market trends. Thank you!",
        "relevant APIs": [
            [
                "Ukraine war data",
                "Refugee by data"
            ],
            [
                "J2ACoin",
                "Ranking list"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 33
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Details",
                "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
                        "default": "ES"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "original_title": "str",
                    "plot_overview": "str",
                    "type": "str",
                    "runtime_minutes": "NoneType",
                    "year": "int",
                    "end_year": "int",
                    "release_date": "str",
                    "imdb_id": "str",
                    "tmdb_id": "int",
                    "tmdb_type": "str",
                    "genres": [
                        "list of int with length 3"
                    ],
                    "genre_names": [
                        "list of str with length 3"
                    ],
                    "user_rating": "float",
                    "critic_score": "int",
                    "us_rating": "str",
                    "poster": "str",
                    "backdrop": "str",
                    "original_language": "str",
                    "english_title": "str",
                    "similar_titles": [
                        "list of int with length 25"
                    ],
                    "networks": [
                        "list of int with length 1"
                    ],
                    "network_names": [
                        "list of str with length 1"
                    ],
                    "relevance_percentile": "float",
                    "trailer": "str",
                    "trailer_thumbnail": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a movie night with my friends and we want to watch a comedy film. Can you recommend some popular comedy movies available on streaming platforms in the US? Also, provide the runtime and IMDb ratings for these movies.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "Watchmode",
                "Title Details"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 34
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "OTT Providers",
                "api_description": "Get  information on OTT platforms we suuport .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
                        "default": "IN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a vacation with my family and we want to watch some movies during the trip. Can you recommend some family-friendly movies and provide the streaming availability on platforms like Disney+ and Netflix? Also, suggest some snacks that go well with movie nights.",
        "relevant APIs": [
            [
                "Watchmode",
                "Search"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "OTT details",
                "OTT Providers"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 35
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "QAQ",
                "tool_name": "qaq",
                "api_name": "get_qaq",
                "api_description": "Conditionally requests user for an input, and returns their input or a predefined message stating no user input is required for answering the query.",
                "required_parameters": [
                    {
                        "name": "requires_input",
                        "type": "int",
                        "description": "A flag to determine if user input is needed (1) or not (0)",
                        "default": 0
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "input_question",
                        "type": "string",
                        "description": "The question to ask the user to gather more information for answering the query",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm a film critic and I need to gather information about the latest releases. Can you provide me with the list of recently released movies and TV shows available on streaming platforms in the US? Additionally, give me the streaming availability details for the show 'Breaking Bad' and the basic information about the cast, including their names and professions.",
        "relevant APIs": [
            [
                "Watchmode",
                "Streaming Release Dates"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ],
            [
                "OTT details",
                "New Arrivals"
            ],
            [
                "OTT details",
                "Search"
            ],
            [
                "OTT details",
                "Basic Info"
            ],
            [
                "qaq",
                "get_qaq"
            ]
        ],
        "query_id": 36
    }
]