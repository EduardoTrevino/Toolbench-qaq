[
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Graffiti Tags",
                "api_description": "Returns a list of all Graffiti-Tags",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Artists",
                "api_description": "Returns a list of all music Artists who contributed to JSR/JSRF",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Songs",
                "api_description": "Returns a list of all Songs from JSR/JSRF",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Levels",
                "api_description": "Returns a list of all Levels",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Locations",
                "api_description": "Returns a list of all Locations in JSR/JSRF",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Games",
                "api_description": "Returns a list of all Games",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "JSRF Character by ID",
                "api_description": "Returns a single Character by ID",
                "required_parameters": [
                    {
                        "name": "characterId",
                        "type": "string",
                        "description": "",
                        "default": "643c71888cabe0dcede868a3"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "JSRF Characters",
                "api_description": "Returns a list of all JSRF Characters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "JSR Character by ID",
                "api_description": "Returns a single Character by ID",
                "required_parameters": [
                    {
                        "name": "characterId",
                        "type": "string",
                        "description": "",
                        "default": "643c71b18cabe0dcede868ed"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Characters",
                "api_description": "Returns a list of all Characters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a game developer working on a project inspired by Jet Set Radio and I need some reference material. Can you give me a list of all the levels in the game and their corresponding locations? Additionally, it would be helpful if I could get a list of the characters featured in the game.",
        "relevant APIs": [
            [
                "Jet Set Radio API",
                "Levels"
            ],
            [
                "Jet Set Radio API",
                "Locations"
            ],
            [
                "Jet Set Radio API",
                "Characters"
            ]
        ],
        "query_id": 40611
    },
    {
        "api_list": [
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get content",
                "api_description": "Gets image, video, and audio data sent by users.",
                "required_parameters": [
                    {
                        "name": "messageId",
                        "type": "STRING",
                        "description": "Message ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get rich menu ID of user",
                "api_description": "Gets the ID of the rich menu linked to a user.",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "User ID. Found in the source object of webhook event objects. Do not use the LINE ID used in LINE.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get rich menu list",
                "api_description": "Gets a list of all uploaded rich menus.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get rich menu",
                "api_description": "Gets a rich menu via a rich menu ID.",
                "required_parameters": [
                    {
                        "name": "richMenuId",
                        "type": "STRING",
                        "description": "ID of an uploaded rich menu",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get profile",
                "api_description": "Gets user profile information.",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "User ID that is returned in a webhook event object. Do not use the LINE ID found on LINE.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get default rich menu ID",
                "api_description": "Gets the ID of the default rich menu set with the Messaging API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get number of sent reply messages",
                "api_description": "Gets the number of messages sent with the /bot/message/reply endpoint.",
                "required_parameters": [
                    {
                        "name": "date\t",
                        "type": "STRING",
                        "description": "Date the messages were sent. Format: yyyyMMdd (Example: 20191231) Timezone: UTC+9",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to know the number of messages sent using the /bot/message/reply endpoint on January 1, 2022. Also, please give me the ID of the rich menu linked to a user with the user ID 'U987654321'.",
        "relevant APIs": [
            [
                "LINE Messaging",
                "Get number of sent reply messages"
            ],
            [
                "LINE Messaging",
                "Get rich menu ID of user"
            ],
            [
                "LINE Messaging",
                "Get rich menu"
            ]
        ],
        "query_id": 16899
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "VerticalResponse",
                "api_name": "Contacts: List",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "VerticalResponse",
                "api_name": "Messages: List",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "VerticalResponse",
                "api_name": "Lists: List",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "As a marketing professional, I need to analyze the effectiveness of my email campaigns. Can you provide me with a list of all the contacts, their details, and the messages they have received? Additionally, give me the option to filter contacts based on custom fields.",
        "relevant APIs": [
            [
                "VerticalResponse",
                "Contacts: List"
            ],
            [
                "VerticalResponse",
                "Messages: List"
            ]
        ],
        "query_id": 7903
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "ComfyFood",
                "api_name": "Get all Recipes 2",
                "api_description": "return more recipes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "recipes": [
                        {
                            "Id": "str",
                            "Name": "str",
                            "Description": "str",
                            "Steps": "str",
                            "Official": "bool",
                            "Ingredients": "str",
                            "ImageName": "str",
                            "RecipeCategories": [
                                {
                                    "Name": "str",
                                    "ImageName": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "ComfyFood",
                "api_name": "Get all Recipes 1",
                "api_description": "returns all the recipes from comfyfood's website",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "recipes": [
                        {
                            "Id": "str",
                            "Name": "str",
                            "Description": "str",
                            "Steps": "str",
                            "Official": "bool",
                            "Ingredients": "str",
                            "ImageName": "str",
                            "RecipeCategories": [
                                {
                                    "Name": "str",
                                    "ImageName": "str",
                                    "_list_length": 3
                                }
                            ],
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "ComfyFood",
                "api_name": "Get all recipes 3",
                "api_description": "return more recipes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "recipes": [
                        {
                            "Id": "str",
                            "Name": "str",
                            "Description": "str",
                            "Steps": "str",
                            "Official": "bool",
                            "Ingredients": "str",
                            "ImageName": "str",
                            "RecipeCategories": [
                                {
                                    "Name": "str",
                                    "ImageName": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 5
                        }
                    ]
                }
            }
        ],
        "query": "I'm planning a family gathering and I need some recipe ideas. Can you provide me with a variety of official recipes that include categories like appetizers, main courses, and desserts? It would be great to have the recipe names, descriptions, ingredients, and steps for each recipe. Additionally, if there are any images available, please include them as well.",
        "relevant APIs": [
            [
                "ComfyFood",
                "Get all Recipes 2"
            ],
            [
                "ComfyFood",
                "Get all Recipes 1"
            ],
            [
                "ComfyFood",
                "Get All Categories"
            ]
        ],
        "query_id": 16133
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "Taekwondo_Athlete_World_Ranking",
                "api_name": "/GET_U-58_ATHLETE_RANKING",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "Country",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "athlete_Rank": "int",
                    "athlete_name": "str",
                    "athlete_GAL": "str",
                    "athlete_Country": "str",
                    "athlete_Points": "float"
                }
            }
        ],
        "query": "I'm planning a taekwondo event and I want to invite the top-ranked athletes from different weight categories. Can you fetch the rankings, names, countries, and points for athletes in the U-58 and U-54 categories? Additionally, include their global athletic licenses.",
        "relevant APIs": [
            [
                "Taekwondo_Athlete_World_Ranking",
                "/GET_U-58_ATHLETE_RANKING"
            ],
            [
                "Taekwondo_Athlete_World_Ranking",
                "/GET_U-54_ATHLETE_RANKING"
            ]
        ],
        "query_id": 12296
    },
    {
        "api_list": [],
        "query": "My company is looking to hire new employees. Can you fetch the list of job offers from OPT-NC, including the job titles, required qualifications, and recruitment dates?",
        "relevant APIs": [
            [
                "Emplois OPT-NC",
                "All"
            ]
        ],
        "query_id": 87569
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Simple YouTube Search",
                "api_name": "Search",
                "api_description": "Make youtube search",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "never+gonna+give+you+up"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "safesearch",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "uploadedAt": "str",
                            "id": "str",
                            "tags": {},
                            "nsfw": "bool",
                            "private": "bool",
                            "description": "NoneType",
                            "url": "str",
                            "unlisted": "bool",
                            "channel": {
                                "name": "str",
                                "icon": "str",
                                "id": "str"
                            },
                            "thumbnail": {
                                "url": "str",
                                "height": "int",
                                "id": "str",
                                "width": "int"
                            },
                            "ratings": {
                                "likes": "int",
                                "dislikes": "int"
                            },
                            "shorts": "bool",
                            "title": "str",
                            "live": "bool",
                            "duration_formatted": "str",
                            "views": "int",
                            "duration": "int",
                            "shorts_url": "str",
                            "type": "str",
                            "_list_length": 19
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Simple YouTube Search",
                "api_name": "Video",
                "api_description": "Get particular video",
                "required_parameters": [
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.youtube.com/watch?v=fBNz5xF-Kx4"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "uploadedAt": "str",
                        "id": "str",
                        "tags": [
                            "list of str with length 4"
                        ],
                        "nsfw": "bool",
                        "private": "bool",
                        "description": "str",
                        "url": "str",
                        "unlisted": "bool",
                        "channel": {
                            "name": "str",
                            "icon": "str",
                            "id": "str"
                        },
                        "thumbnail": {
                            "url": "str",
                            "height": "int",
                            "id": "str",
                            "width": "int"
                        },
                        "ratings": {
                            "likes": "int",
                            "dislikes": "int"
                        },
                        "shorts": "bool",
                        "title": "str",
                        "live": "bool",
                        "duration_formatted": "str",
                        "views": "int",
                        "duration": "int",
                        "shorts_url": "str",
                        "type": "str"
                    }
                }
            }
        ],
        "query": "I'm planning a road trip with my friends and we need some upbeat music to keep us energized. Can you fetch a playlist from Simple YouTube Search that includes lively and catchy songs? It would be great if the playlist covers various genres like pop, rock, and hip-hop.",
        "relevant APIs": [
            [
                "Simple YouTube Search",
                "Search"
            ],
            [
                "Simple YouTube Search",
                "Playlist"
            ]
        ],
        "query_id": 8722
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Pocket Cube Solver",
                "api_name": "getRandomSolution",
                "api_description": "Returns json data consisting of a random optimal solution of a given cube position.",
                "required_parameters": [
                    {
                        "name": "position",
                        "type": "string",
                        "description": "",
                        "default": "GBWGYOGYRYOORWROBRWYGWBB"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "position": "str",
                    "depth": "int",
                    "sol": "str"
                }
            }
        ],
        "query": "I'm organizing a pocket cube solving competition in my company and I need some sample solutions. Can you generate a random optimal solution for the position GBWGYOGYRYOORWROBRWYGWBB? It would also be helpful if you could provide me with all the solutions available for this position.",
        "relevant APIs": [
            [
                "Pocket Cube Solver",
                "getRandomSolution"
            ],
            [
                "Pocket Cube Solver",
                "getAllSolutions"
            ]
        ],
        "query_id": 9238
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get extra character details",
                "api_description": "Get extra details about a character. (Currently being updated with more data)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get show facts & rotten tomato scores",
                "api_description": "You can find show data including season by season rotten tomato scores by hitting the home route.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get character by id",
                "api_description": "Providing the character id, you will get that specific character in the response. You can find a character id by hitting `/characters` and grabbing an id from there.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get recurring characters",
                "api_description": "This endpoint gets the recurring characters within the show.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get main characters",
                "api_description": "This route will provide you with the show's main characters",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get all characters",
                "api_description": "This will provide the show's characters with a tiny bit of data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My friend is planning to watch 'New Girl' and wants to know more about the main characters. Can you fetch the details of the main characters, including their names, occupations, and quirks? Additionally, it would be helpful to provide the recurring characters in the show. Thank you!",
        "relevant APIs": [
            [
                "New Girl",
                "Get main characters"
            ],
            [
                "New Girl",
                "Get recurring characters"
            ]
        ],
        "query_id": 65624
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "tickerData",
                "api_description": "Returns a list of ticker records",
                "required_parameters": [
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "Ticker period",
                        "default": "1h"
                    },
                    {
                        "name": "startDate",
                        "type": "STRING",
                        "description": "Start date",
                        "default": "2010-04-12T14:30"
                    },
                    {
                        "name": "tickerName",
                        "type": "STRING",
                        "description": "Ticker name",
                        "default": "gold"
                    },
                    {
                        "name": "endDate",
                        "type": "STRING",
                        "description": "End date",
                        "default": "2010-04-20T12:30"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "records": [
                        {
                            "closeDateTime": "str",
                            "open": "float",
                            "close": "float",
                            "high": "float",
                            "low": "float",
                            "volume": "int",
                            "_list_length": 142
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "tickersList",
                "api_description": "Returns a list of available tickers",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm interested in analyzing the stock market performance of the gold ticker from April 12, 2010, at 14:30 to April 20, 2010, at 12:30. Please provide the close date-time, open price, close price, highest price, lowest price, and volume for each ticker record. Additionally, fetch the list of available tickers and provide their short and long names. My company's financial advisors require this data to make informed investment decisions.",
        "relevant APIs": [
            [
                "stocks_archive",
                "tickerData"
            ],
            [
                "stocks_archive",
                "tickersList"
            ]
        ],
        "query_id": 36378
    },
    {
        "api_list": [],
        "query": "I need to fetch the latest exchange rates for multiple currencies in order to display them on my family's travel blog. Which API function should I use from the Coinmill Currency tool to retrieve the exchange rates for USD, EUR, GBP, and JPY? What parameters are required for this API call?",
        "relevant APIs": [
            [
                "Coinmill Currency",
                "Coinmill"
            ]
        ],
        "query_id": 85530
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "Betcity",
                "api_name": "Odds",
                "api_description": "Latest Odds by Betcity",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I am curious about the odds for the upcoming boxing matches. Can you provide me with the latest odds for the Tyson Fury vs. Anthony Joshua and Canelo Alvarez vs. Gennady Golovkin fights? Additionally, I would like to see the latest matches in the boxing world.",
        "relevant APIs": [
            [
                "Betcity",
                "Odds"
            ],
            [
                "Betcity",
                "Matches"
            ]
        ],
        "query_id": 44066
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "Tickets for an Event",
                "api_description": "All tickets for an event that you have access to",
                "required_parameters": [
                    {
                        "name": "event_id",
                        "type": "STRING",
                        "description": "The unique identifier of the event.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "A Single Ticket",
                "api_description": "Information about a single ticket.",
                "required_parameters": [
                    {
                        "name": "event_id",
                        "type": "STRING",
                        "description": "Unique identifier of the event.",
                        "default": ""
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Unique identifier of the ticket.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "A Single Event",
                "api_description": "Information about a single event you have access to",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The unique identifier of the event",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "Your Events",
                "api_description": "A list of events owned or accessible by the current token holder",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to check the events I own or have access to. Can you provide me with a list of all my events? Additionally, I would like to know more about myself as the current token holder.",
        "relevant APIs": [
            [
                "Ticketbud",
                "Your Events"
            ],
            [
                "Ticketbud",
                "Me"
            ]
        ],
        "query_id": 7971
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Dividend",
                "api_description": "Contains the annual dividends (split-adjusted without special dividend)\n\nAPI_Dividend\nSyntax:\n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "1962-01-01"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "API_Dividend",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-31"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "year": "str",
                    "dividend": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Index_Isin",
                "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nisin = search shareuid with ISIN",
                "required_parameters": [
                    {
                        "name": "API_Index",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "isin",
                        "type": "STRING",
                        "description": "",
                        "default": "US4592001014"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "shareuid": "str",
                    "isin": "str",
                    "wkn": "str",
                    "currency": "str",
                    "shortname": "str",
                    "name": "str",
                    "country": "str",
                    "indizes": "str",
                    "sector": "str",
                    "lastbalanceupdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Index_Name",
                "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "ibm"
                    },
                    {
                        "name": "API_Index",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "shareuid": "str",
                    "isin": "str",
                    "wkn": "str",
                    "currency": "str",
                    "shortname": "str",
                    "name": "str",
                    "country": "str",
                    "indizes": "str",
                    "sector": "str",
                    "lastbalanceupdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Index_Wkn",
                "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nwkn = search shareuid with WKN",
                "required_parameters": [
                    {
                        "name": "wkn",
                        "type": "STRING",
                        "description": "",
                        "default": "851399"
                    },
                    {
                        "name": "API_Index",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "shareuid": "str",
                    "isin": "str",
                    "wkn": "str",
                    "currency": "str",
                    "shortname": "str",
                    "name": "str",
                    "country": "str",
                    "indizes": "str",
                    "sector": "str",
                    "lastbalanceupdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetobook",
                "api_description": "contains the price-book ratio (P / B ratio) for each past trading day",
                "required_parameters": [
                    {
                        "name": "API_Pricetobook",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-15"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2019-12-15"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "pb": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetocashflow",
                "api_description": "Contains the price-cash-flow ratio (P / C ratio) for each past trading day\n\nAPI_Pricetocashflow\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-03-15"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-01-06"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "API_Pricetocashflow",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetoearning",
                "api_description": "Contains the price-earnings ratio (P / E ratio) for each past trading day\n\nAPI_Pricetoearning\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-05-15"
                    },
                    {
                        "name": "API_Pricetoearning",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-04-15"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Pricetosales",
                "api_description": "Contains the price turnover ratio (P / S ratio) for each past trading day.\n\nAPI_Pricetosales\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-06-08"
                    },
                    {
                        "name": "API_Pricetosales",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-05-15"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Finanzoo API_Fundamentals",
                "api_name": "API_Roa",
                "api_description": "Contains the profitability (ROA ratio) for the financial year.\n\nAPI_Roa\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
                "required_parameters": [
                    {
                        "name": "API_Roa",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "to",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2020-06-08"
                    },
                    {
                        "name": "from",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "",
                        "default": "2018-05-15"
                    },
                    {
                        "name": "shareuid",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Retrieve the shareuid for a company named 'Microsoft Corporation' in order to access its fundamental data. Also, find the price-earnings ratio (P/E ratio) for the share with ISIN US5949181045 from 2020-01-01 to 2021-01-01.",
        "relevant APIs": [
            [
                "Finanzoo API_Fundamentals",
                "API_Index_Name"
            ],
            [
                "Finanzoo API_Fundamentals",
                "API_Pricetoearning"
            ]
        ],
        "query_id": 44845
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Kanji English meaning",
                "api_description": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
                "required_parameters": [
                    {
                        "name": "kem",
                        "type": "STRING",
                        "description": "Simplified English kanji meaning",
                        "default": "parent"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kanji": {
                        "character": "str",
                        "stroke": "int"
                    },
                    "radical": {
                        "character": "str",
                        "stroke": "int",
                        "order": "int"
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Kanji stroke number",
                "api_description": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
                "required_parameters": [
                    {
                        "name": "ks",
                        "type": "NUMBER",
                        "description": "Positive integer",
                        "default": "16"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kanji": {
                        "character": "str",
                        "stroke": "int"
                    },
                    "radical": {
                        "character": "str",
                        "stroke": "int",
                        "order": "int"
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Radical Japanese name",
                "api_description": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
                "required_parameters": [
                    {
                        "name": "rjn",
                        "type": "STRING",
                        "description": "Hiragana or romaji",
                        "default": "miru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kanji": {
                        "character": "str",
                        "stroke": "int"
                    },
                    "radical": {
                        "character": "str",
                        "stroke": "int",
                        "order": "int"
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Radical English meaning",
                "api_description": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
                "required_parameters": [
                    {
                        "name": "rem",
                        "type": "STRING",
                        "description": "Radical's meaning in English",
                        "default": "see"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kanji": {
                        "character": "str",
                        "stroke": "int"
                    },
                    "radical": {
                        "character": "str",
                        "stroke": "int",
                        "order": "int"
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Radical position",
                "api_description": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
                "required_parameters": [
                    {
                        "name": "rpos",
                        "type": "STRING",
                        "description": "Hiragana or romaji",
                        "default": "hen"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kanji": {
                        "character": "str",
                        "stroke": "int"
                    },
                    "radical": {
                        "character": "str",
                        "stroke": "int",
                        "order": "int"
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Radical stroke number",
                "api_description": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
                "required_parameters": [
                    {
                        "name": "rs",
                        "type": "STRING",
                        "description": "Positive integer",
                        "default": "7"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kanji": {
                        "character": "str",
                        "stroke": "int"
                    },
                    "radical": {
                        "character": "str",
                        "stroke": "int",
                        "order": "int"
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Study list (AP exam)",
                "api_description": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
                "required_parameters": [
                    {
                        "name": "list",
                        "type": "STRING",
                        "description": "Kanji divided into chapters (1-20) by Kanji alive",
                        "default": "ap:c3"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kanji": {
                        "character": "str",
                        "stroke": "int"
                    },
                    "radical": {
                        "character": "str",
                        "stroke": "int",
                        "order": "int"
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Kanji character",
                "api_description": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
                "required_parameters": [
                    {
                        "name": "kanji",
                        "type": "STRING",
                        "description": "Kanji character",
                        "default": "\u89aa"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kanji": {
                        "character": "str",
                        "stroke": "int"
                    },
                    "radical": {
                        "character": "str",
                        "stroke": "int",
                        "order": "int"
                    }
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Single Kanji Details",
                "api_description": "Language attributes and media files for a single kanji",
                "required_parameters": [
                    {
                        "name": "kanji",
                        "type": "STRING",
                        "description": "A single kanji character",
                        "default": "\u8a2a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"_id\": \"str\", \"_rev\": \"str\", \"rad_name_ja\": \"str\", \"grade\": \"int\", \"hint_group\": \"int\", \"kunyomi\": \"str\", \"meaning\": \"str\", \"kstroke\": \"int\", \"examples\": [{\"japanese\": \"str\", \"meaning\": {\"english\": \"str\"}, \"audio\": {\"opus\": \"str\", \"aac\": \"str\", \"ogg\": \"str\", \"mp3\": \"str\"}, \"_list_length\": 4}], \"kunyomi_ja\": \"str\", \"ka_utf\": \"str\", \"luminous\": \"str\", \"rad_name_search\": [\"list of str with length 1\"], \"rad_order\": \"int\", \"txt_books\": [{\"chapter\": \"str\", \"txt_bk\": \"str\", \"_list_length\": 6}], \"kname\": \"str\", \"rad_utf\": \"str\", \"stroketimes\": [\"list of int with length 12\"], \"kunyomi_ka_display\": \"str\", \"dick\": \"str\", \"rad_name\": \"str\", \"dicn\": \"str\", \"mn_hint\": \"str\", \"rad_stroke\": \"int\", \"onyomi_ja\": \"str\", \"rad_meaning\": \"str\", \"onyomi\": \"str\", \"ka_id\": \"str\", \"rad_position\": \"str\", \"rad_position_ja\": \"str\", \"rad_position_search\": [\"list of str with length 2\"], \"onyomi_search\": [\"list of str with length 2\"], \"kunyomi_search\": [\"list of str with length 5\"], \"meaning_search\": [\"list of str w"
            },
            {
                "category_name": "Education",
                "tool_name": "Learn to read and write Japanese kanji",
                "api_name": "Study list (Macquarie)",
                "api_description": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
                "required_parameters": [
                    {
                        "name": "list",
                        "type": "STRING",
                        "description": "Kanji divided into chapters (12-22)",
                        "default": "mac:c12"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "kanji": {
                        "character": "str",
                        "stroke": "int"
                    },
                    "radical": {
                        "character": "str",
                        "stroke": "int",
                        "order": "int"
                    }
                }
            }
        ],
        "query": "I'm studying Japanese kanji and I want to learn the English meaning of a radical with a stroke number of 7. Could you also provide the Japanese name of the radical? Additionally, can you give the English meaning of a kanji character?",
        "relevant APIs": [
            [
                "Learn to read and write Japanese kanji",
                "Radical English meaning"
            ],
            [
                "Learn to read and write Japanese kanji",
                "Radical stroke number"
            ],
            [
                "Learn to read and write Japanese kanji",
                "Kanji English meaning"
            ]
        ],
        "query_id": 54421
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "ComfyFood",
                "api_name": "Get all Recipes 1",
                "api_description": "returns all the recipes from comfyfood's website",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "recipes": [
                        {
                            "Id": "str",
                            "Name": "str",
                            "Description": "str",
                            "Steps": "str",
                            "Official": "bool",
                            "Ingredients": "str",
                            "ImageName": "str",
                            "RecipeCategories": [
                                {
                                    "Name": "str",
                                    "ImageName": "str",
                                    "_list_length": 3
                                }
                            ],
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "ComfyFood",
                "api_name": "Get all recipes 3",
                "api_description": "return more recipes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "recipes": [
                        {
                            "Id": "str",
                            "Name": "str",
                            "Description": "str",
                            "Steps": "str",
                            "Official": "bool",
                            "Ingredients": "str",
                            "ImageName": "str",
                            "RecipeCategories": [
                                {
                                    "Name": "str",
                                    "ImageName": "str",
                                    "_list_length": 1
                                }
                            ],
                            "_list_length": 5
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "ComfyFood",
                "api_name": "Get All Categories",
                "api_description": "Returns all categories",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "categories": [
                        {
                            "Name": "str",
                            "ImageName": "str",
                            "_list_length": 36
                        }
                    ]
                }
            }
        ],
        "query": "I am organizing a cooking competition and I need a variety of recipes for the participants. Can you provide me with a list of official recipes from ComfyFood that cover different categories, such as appetizers, main courses, and desserts? It would be great to have the recipe details, including the ingredients and steps.",
        "relevant APIs": [
            [
                "ComfyFood",
                "Get all Recipes 2"
            ],
            [
                "ComfyFood",
                "Get All Categories"
            ]
        ],
        "query_id": 7474
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Hepsiburada Data",
                "api_name": "Get Comments from product id",
                "api_description": "Retrieve comments based on a product id.",
                "required_parameters": [
                    {
                        "name": "product_id",
                        "type": "STRING",
                        "description": "",
                        "default": "hbcv00000c2fqc"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "comments": "empty list",
                    "stars": "empty list"
                }
            }
        ],
        "query": "I'm interested in analyzing customer feedback on Hepsiburada. Can you help me retrieve comments and star ratings for a specific product? I would like to explore the comments and ratings for the product with the ID 'hbcv00000c2fqc'. Thank you!",
        "relevant APIs": [
            [
                "Hepsiburada Data",
                "Get Comments from product id"
            ]
        ],
        "query_id": 85155
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Directions Between 2 Locations",
                "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**",
                "required_parameters": [
                    {
                        "name": "start_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the starting point (required)",
                        "default": "-16.0755888102153"
                    },
                    {
                        "name": "end_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the ending point (required)",
                        "default": "-17.447938"
                    },
                    {
                        "name": "end_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the ending point (required)",
                        "default": "14.693425"
                    },
                    {
                        "name": "start_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the starting point (required)",
                        "default": "14.14129815"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "distance_unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "steps": [
                        {
                            "direction": "str",
                            "distance": "str",
                            "duration": "str",
                            "instruction": "str",
                            "location": [
                                "list of float with length 2"
                            ],
                            "_list_length": 15
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Measure Distance",
                "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from a hospital in Koalack to Dakar**",
                "required_parameters": [
                    {
                        "name": "lon2",
                        "type": "NUMBER",
                        "description": "Longitude of the second location (required)",
                        "default": "-17.447938"
                    },
                    {
                        "name": "lat2",
                        "type": "NUMBER",
                        "description": "Latitude of the second location (required)",
                        "default": "14.693425"
                    },
                    {
                        "name": "lon1",
                        "type": "NUMBER",
                        "description": "Longitude of the first location (required)",
                        "default": "-16.0755888102153"
                    },
                    {
                        "name": "lat1",
                        "type": "NUMBER",
                        "description": "Latitude of the first location (required)",
                        "default": "14.14129815"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "unit": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Reverse Geocode",
                "api_description": "This endpoint allows you to perform reverse geocoding in Senegal by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "The longitude of the location.",
                        "default": "-17.447938"
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "The latitude of the location.",
                        "default": "14.693425"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "amenity": "str",
                    "boundingbox": [
                        "list of str with length 4"
                    ],
                    "category": "str",
                    "city": "str",
                    "country": "str",
                    "display_name": "str",
                    "region": "str",
                    "suburb": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Facilities Lookup",
                "api_description": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The region where the facility is located",
                        "default": "Dakar"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
                        "default": "hospital"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The city where the facility is located",
                        "default": "Touba"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "The number of facilities to query.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hospital": [
                        {
                            "ISO3166-2-lvl4": "str",
                            "address": "str",
                            "amenity": "str",
                            "country_code": "str",
                            "county": "str",
                            "display_name": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "postcode": "str",
                            "region": "str",
                            "road": "str",
                            "suburb": "str",
                            "village": "str",
                            "website": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Geocode",
                "api_description": "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
                "required_parameters": [
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "he name of the location to look up.",
                        "default": "Dakar"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "display_name": "str",
                    "latitude": "str",
                    "longitude": "str"
                }
            }
        ],
        "query": "I am planning a family trip to Senegal and I need to find the distance and duration between two locations. Please provide me with the directions from Dakar to Saly Portudal. Also, I would like to know the facilities available in the region of Mbour. Can you give me a list of hospitals and colleges in that area?",
        "relevant APIs": [
            [
                "Senegal API",
                "Directions Between 2 Locations"
            ],
            [
                "Senegal API",
                "Facilities Lookup"
            ]
        ],
        "query_id": 39392
    },
    {
        "api_list": [
            {
                "category_name": "Jobs",
                "tool_name": "JobSearch",
                "api_name": "/api/v1/Jobs/Search",
                "api_description": "Search for your dream job",
                "required_parameters": [
                    {
                        "name": "SearchQuery",
                        "type": "STRING",
                        "description": "",
                        "default": "java"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "PageSize",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "PageNumber",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "title": "str",
                    "status": "int",
                    "traceId": "str",
                    "errors": {
                        "PageSize": [
                            "list of str with length 1"
                        ],
                        "PageNumber": [
                            "list of str with length 1"
                        ]
                    }
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "JobSearch",
                "api_name": "/api/v1/Jobs/{slug}",
                "api_description": "Get details of a job by slug",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "",
                        "default": "freelance-content-writercopywriter-9399"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "url": "str",
                    "company": "str",
                    "location": "str",
                    "postDate": "str",
                    "salary": "NoneType",
                    "jobSource": "str",
                    "slug": "str",
                    "sentiment": {
                        "polarity": "int",
                        "subjectivity": "int"
                    },
                    "dateAdded": "str",
                    "keyPhrases": [
                        {
                            "affinity": "int",
                            "text": "str",
                            "_list_length": 5
                        }
                    ],
                    "tags": [
                        {
                            "text": "str",
                            "_list_length": 3
                        }
                    ],
                    "summary": "str",
                    "originalPosting": "str",
                    "viewCount": "int"
                }
            }
        ],
        "query": "My sister is a recent graduate and she's looking for an entry-level job. Can you assist in finding job listings suitable for recent graduates? Please search for jobs using the keyword 'entry-level' and provide details such as the job title, company name, location, post date, and URL. It would be helpful to know the sentiment analysis and key phrases associated with each job listing. Additionally, please include the salary information and job source.",
        "relevant APIs": [
            [
                "JobSearch",
                "/api/v1/Jobs/Search"
            ],
            [
                "JobSearch",
                "/api/v1/Jobs/{slug}"
            ]
        ],
        "query_id": 83532
    },
    {
        "api_list": [
            {
                "category_name": "Database",
                "tool_name": "expense data",
                "api_name": "/Calculate_expenses",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Database",
                "tool_name": "expense data",
                "api_name": "/read_expenses",
                "api_description": "<br /><br />\n<b>Authentication:</b> not required",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I want to analyze my family's monthly expenses and identify areas where we can save money. Can you fetch the expense records for the past six months and provide a breakdown of the expenses by category? It would be great if you could suggest ways to reduce expenses in each category.",
        "relevant APIs": [
            [
                "expense data",
                "/read_expenses"
            ],
            [
                "expense data",
                "/Calculate_expenses"
            ]
        ],
        "query_id": 79741
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get extra character details",
                "api_description": "Get extra details about a character. (Currently being updated with more data)",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get show facts & rotten tomato scores",
                "api_description": "You can find show data including season by season rotten tomato scores by hitting the home route.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get character by id",
                "api_description": "Providing the character id, you will get that specific character in the response. You can find a character id by hitting `/characters` and grabbing an id from there.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get recurring characters",
                "api_description": "This endpoint gets the recurring characters within the show.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get main characters",
                "api_description": "This route will provide you with the show's main characters",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "New Girl",
                "api_name": "Get all characters",
                "api_description": "This will provide the show's characters with a tiny bit of data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to learn more about the characters in the TV show New Girl. Can you provide me with detailed information about the main characters as well as the recurring characters?",
        "relevant APIs": [
            [
                "New Girl",
                "Get main characters"
            ],
            [
                "New Girl",
                "Get recurring characters"
            ]
        ],
        "query_id": 49173
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "year_fractions",
                "api_description": "Computes and returns the year fraction for a period time in the specified day count convention.",
                "required_parameters": [
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date of the period time in YYYY-MM-DD format",
                        "default": "2021-03-31"
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "The end date of the period time in YYYY-MM-DD format",
                        "default": "2021-04-30"
                    },
                    {
                        "name": "dcc_types",
                        "type": "STRING",
                        "description": "The day count convention",
                        "default": "Actual360"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "year_fractions": [
                        {
                            "day_count_convention": "str",
                            "year_fraction": "float",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "time_zone_converter",
                "api_description": "Converts time from time zone to another taking into account Daylight Saving Time (DST) and accepts present, past, or future dates.",
                "required_parameters": [
                    {
                        "name": "datetime",
                        "type": "STRING",
                        "description": "The date time in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-03-21T20:10:00"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "from_tzname",
                        "type": "STRING",
                        "description": "The time zone name",
                        "default": "UTC"
                    },
                    {
                        "name": "to_tzname",
                        "type": "STRING",
                        "description": "The time zone name",
                        "default": "UTC"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "tzconversion": {
                        "from": {
                            "timezone": "str",
                            "datetime": "str"
                        },
                        "to": {
                            "timezone": "str",
                            "datetime": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "datedif",
                "api_description": "Computes the number of  years, months, days, hours, minutes, seconds or microseconds between two dates (end_date - start_date).",
                "required_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-09-30T14:00:55"
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-08-30T08:01:00"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "datedif": {
                        "months": "int",
                        "hours": "int",
                        "minutes": "int",
                        "seconds": "int"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "eomonth",
                "api_description": "Computes and returns a date on the last day of the month in the future or past. This resource behave exactly as Excel EOMONTH function.",
                "required_parameters": [
                    {
                        "name": "months",
                        "type": "NUMBER",
                        "description": "The number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.",
                        "default": 1
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-09-21"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "eomonth": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "now",
                "api_description": "Computes and returns local time zone taking into account Daylight Saving Time (DST).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "tzname",
                        "type": "STRING",
                        "description": "The time zone name",
                        "default": "UTC"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "timezone": "str",
                    "now": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "sdate",
                "api_description": "Shifts  a date or a datetime in the future or past.",
                "required_parameters": [
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-09-21"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "weekday",
                        "type": "STRING",
                        "description": "Allows to shift a date to the specified next or previous Nth weekday. It should be one of the weekday instances (SU, MO, TU, WE, TH, FR, SA). These instances may receive a parameter N, specifying the Nth weekday in parentheses, which could be positive or negative (like MO(+1) or MO(-2)). Not specifying it is the same as specifying +1. If the calculated date is already Monday, using MO(1) or MO(-1) won't change the day.",
                        "default": "MO"
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "The number of hours before(negative value) or after(positive value) start_date.",
                        "default": "14"
                    },
                    {
                        "name": "microseconds",
                        "type": "NUMBER",
                        "description": "The number of microseconds before(negative value) or after(positive value) start_date.",
                        "default": 0
                    },
                    {
                        "name": "seconds",
                        "type": "NUMBER",
                        "description": "The number of seconds before(negative value) or after(positive value) start_date.",
                        "default": 0
                    },
                    {
                        "name": "minutes",
                        "type": "NUMBER",
                        "description": "The number of minutes before(negative value) or after(positive value) start_date.",
                        "default": 0
                    },
                    {
                        "name": "days",
                        "type": "NUMBER",
                        "description": "The number of days before(negative value) or after(positive value) start_date.",
                        "default": 0
                    },
                    {
                        "name": "months",
                        "type": "NUMBER",
                        "description": "The number of months before(negative value) or after(positive value) start_date.",
                        "default": "-1"
                    },
                    {
                        "name": "weeks",
                        "type": "NUMBER",
                        "description": "The number of weeks before(negative value) or after(positive value) start_date.",
                        "default": "1"
                    },
                    {
                        "name": "years",
                        "type": "NUMBER",
                        "description": "The number of years before(negative value) or after(positive value) start_date.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "sdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "edate",
                "api_description": "Computes and returns a date on the same day of the month in the future or past. This resource behave exactly as Excel EDATE function.",
                "required_parameters": [
                    {
                        "name": "months",
                        "type": "NUMBER",
                        "description": "The number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.",
                        "default": 1
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-09-21"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "edate": "str"
                }
            }
        ],
        "query": "I want to create a countdown timer for an upcoming event. Can you provide me with the current date and time? Additionally, I would like to know the date and time one month before the event.",
        "relevant APIs": [
            [
                "Date Calculator",
                "now"
            ],
            [
                "Date Calculator",
                "sdate"
            ]
        ],
        "query_id": 45370
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "year_fractions",
                "api_description": "Computes and returns the year fraction for a period time in the specified day count convention.",
                "required_parameters": [
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date of the period time in YYYY-MM-DD format",
                        "default": "2021-03-31"
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "The end date of the period time in YYYY-MM-DD format",
                        "default": "2021-04-30"
                    },
                    {
                        "name": "dcc_types",
                        "type": "STRING",
                        "description": "The day count convention",
                        "default": "Actual360"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "year_fractions": [
                        {
                            "day_count_convention": "str",
                            "year_fraction": "float",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "datedif",
                "api_description": "Computes the number of  years, months, days, hours, minutes, seconds or microseconds between two dates (end_date - start_date).",
                "required_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-09-30T14:00:55"
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-08-30T08:01:00"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "datedif": {
                        "months": "int",
                        "hours": "int",
                        "minutes": "int",
                        "seconds": "int"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "eomonth",
                "api_description": "Computes and returns a date on the last day of the month in the future or past. This resource behave exactly as Excel EOMONTH function.",
                "required_parameters": [
                    {
                        "name": "months",
                        "type": "NUMBER",
                        "description": "The number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.",
                        "default": 1
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-09-21"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "eomonth": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "now",
                "api_description": "Computes and returns local time zone taking into account Daylight Saving Time (DST).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "tzname",
                        "type": "STRING",
                        "description": "The time zone name",
                        "default": "UTC"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "timezone": "str",
                    "now": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "rdates",
                "api_description": "Computes and returns recurring dates based on very flexible recurrence rules as defined and specified in the [iCalendar RFC 5545](https://tools.ietf.org/html/rfc5545 \"ICalendar\"). It's possible to specify more than one recurrence rule.",
                "required_parameters": [
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-09-21"
                    },
                    {
                        "name": "rrules",
                        "type": "STRING",
                        "description": "The recurrence rules list as string seperated by space; Each rule should be prefixed by **RRULE:**",
                        "default": "RRULE:FREQ=MONTHLY;COUNT=36 RRULE:FREQ=YEARLY;COUNT=3"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "dates": [
                        "list of str with length 38"
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "sdate",
                "api_description": "Shifts  a date or a datetime in the future or past.",
                "required_parameters": [
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-09-21"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "weekday",
                        "type": "STRING",
                        "description": "Allows to shift a date to the specified next or previous Nth weekday. It should be one of the weekday instances (SU, MO, TU, WE, TH, FR, SA). These instances may receive a parameter N, specifying the Nth weekday in parentheses, which could be positive or negative (like MO(+1) or MO(-2)). Not specifying it is the same as specifying +1. If the calculated date is already Monday, using MO(1) or MO(-1) won't change the day.",
                        "default": "MO"
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "The number of hours before(negative value) or after(positive value) start_date.",
                        "default": "14"
                    },
                    {
                        "name": "microseconds",
                        "type": "NUMBER",
                        "description": "The number of microseconds before(negative value) or after(positive value) start_date.",
                        "default": 0
                    },
                    {
                        "name": "seconds",
                        "type": "NUMBER",
                        "description": "The number of seconds before(negative value) or after(positive value) start_date.",
                        "default": 0
                    },
                    {
                        "name": "minutes",
                        "type": "NUMBER",
                        "description": "The number of minutes before(negative value) or after(positive value) start_date.",
                        "default": 0
                    },
                    {
                        "name": "days",
                        "type": "NUMBER",
                        "description": "The number of days before(negative value) or after(positive value) start_date.",
                        "default": 0
                    },
                    {
                        "name": "months",
                        "type": "NUMBER",
                        "description": "The number of months before(negative value) or after(positive value) start_date.",
                        "default": "-1"
                    },
                    {
                        "name": "weeks",
                        "type": "NUMBER",
                        "description": "The number of weeks before(negative value) or after(positive value) start_date.",
                        "default": "1"
                    },
                    {
                        "name": "years",
                        "type": "NUMBER",
                        "description": "The number of years before(negative value) or after(positive value) start_date.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "sdate": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "Date Calculator",
                "api_name": "edate",
                "api_description": "Computes and returns a date on the same day of the month in the future or past. This resource behave exactly as Excel EDATE function.",
                "required_parameters": [
                    {
                        "name": "months",
                        "type": "NUMBER",
                        "description": "The number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.",
                        "default": 1
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                        "default": "2021-09-21"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "edate": "str"
                }
            }
        ],
        "query": "I'm planning a family vacation and I need to know the last day of each month for the next six months. Can you provide me with a list of these dates? Additionally, I would like to know the number of years, months, days, hours, and minutes until our vacation starts.",
        "relevant APIs": [
            [
                "Date Calculator",
                "rdates"
            ],
            [
                "Date Calculator",
                "datedif"
            ]
        ],
        "query_id": 45371
    },
    {
        "api_list": [
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "Tickets for an Event",
                "api_description": "All tickets for an event that you have access to",
                "required_parameters": [
                    {
                        "name": "event_id",
                        "type": "STRING",
                        "description": "The unique identifier of the event.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "A Single Event",
                "api_description": "Information about a single event you have access to",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The unique identifier of the event",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "Your Events",
                "api_description": "A list of events owned or accessible by the current token holder",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Business",
                "tool_name": "Ticketbud",
                "api_name": "Me",
                "api_description": "Information about the current token holder",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "user": "NoneType"
                }
            }
        ],
        "query": "I would like to know more details about an event with the ID 'EVT12345'. Could you provide me with information about the event and all the tickets available for purchase?",
        "relevant APIs": [
            [
                "Ticketbud",
                "A Single Event"
            ],
            [
                "Ticketbud",
                "Tickets for an Event"
            ]
        ],
        "query_id": 16700
    },
    {
        "api_list": [
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Carbon management",
                "api_name": "CheckFactorswithMongoDB",
                "api_description": "Check if the factor in mapping table is correct.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": "int"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Carbon management",
                "api_name": "Status for getting pdf urls",
                "api_description": "Get results in details from the task id.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "current": "int",
                    "state": "str",
                    "status": "str",
                    "total": "int"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Carbon management",
                "api_name": "Statusforemissiontable",
                "api_description": "Get results in details from the task id.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "current": "int",
                    "state": "str",
                    "status": "str",
                    "total": "int"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Carbon management",
                "api_name": "Statusforkeysentenceextraction",
                "api_description": "Get results in details from the task id.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "current": "int",
                    "state": "str",
                    "status": "str",
                    "total": "int"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Carbon management",
                "api_name": "Getprocesscountforcelery",
                "api_description": "Get results in details from the task id.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "activeCount": {
                        "celery@ip-10-0-10-239": [
                            {
                                "hostname": "str",
                                "id": "str",
                                "name": "str",
                                "_list_length": 1
                            }
                        ],
                        "celery@ip-10-0-11-37": "empty list"
                    },
                    "reservedCount": {
                        "celery@ip-10-0-10-239": "empty list",
                        "celery@ip-10-0-11-37": "empty list"
                    },
                    "scheduleCount": {
                        "celery@ip-10-0-10-239": "empty list",
                        "celery@ip-10-0-11-37": "empty list"
                    }
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Carbon management",
                "api_name": "Statusforonepdffilecrawler",
                "api_description": "Get results in details from the task id.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "current": "int",
                    "state": "str",
                    "status": "str",
                    "total": "int"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Carbon management",
                "api_name": "Statusforexcelemissionanalysis",
                "api_description": "Get results in details from the task id.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "current": "int",
                    "state": "str",
                    "status": "str",
                    "total": "int"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Carbon management",
                "api_name": "Statusformapperevaluation",
                "api_description": "Get results in details from the task id.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "current": "int",
                    "state": "str",
                    "status": "str",
                    "total": "int"
                }
            },
            {
                "category_name": "Artificial_Intelligence_Machine_Learning",
                "tool_name": "Carbon management",
                "api_name": "Statusforemissionreductiontargetbyurl",
                "api_description": "Get results in details from the task id.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "current": "int",
                    "state": "str",
                    "status": "str",
                    "total": "int"
                }
            }
        ],
        "query": "I'm managing a carbon management project for my company and need to check the status of various tasks. Can you provide the status and details for the tasks with the following IDs: 'f3094b2f-501a-4931-aa9c-f2ace5b455e1', '6a923457-c12c-4d7a-b7f5-d8882fc12ad0', and '6028d3ee-2b80-4f3b-8b46-fd69c7ee5b40'? Please include the current progress, state, and total count of the results.",
        "relevant APIs": [
            [
                "Carbon management",
                "Status for getting pdf urls"
            ],
            [
                "Carbon management",
                "Statusforkeysentenceextraction"
            ],
            [
                "Carbon management",
                "Statusformapperevaluation"
            ]
        ],
        "query_id": 25164
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "10000+ Anime Quotes With Pagination Support",
                "api_name": "Recent Quotes by pagination",
                "api_description": "Get recent anime quotes without any categorization:\nRequired GET parameter\n**page**:  1\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "10000+ Anime Quotes With Pagination Support",
                "api_name": "Search quote based on quote id",
                "api_description": "Get full quote info based on quote_id.\n\nRequired GET parameter\n**quote_id**:  3702\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
                "required_parameters": [
                    {
                        "name": "quote_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "3702"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "10000+ Anime Quotes With Pagination Support",
                "api_name": "Get Random anime quote",
                "api_description": "**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "10000+ Anime Quotes With Pagination Support",
                "api_name": "Quote of the Day",
                "api_description": "Get quote of the day.\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "10000+ Anime Quotes With Pagination Support",
                "api_name": "Search quote by character name",
                "api_description": "Get anime quotes based on character search:\nRequired GET parameter\n**page**:  1\n**search**: Lelouch\n\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above **search** means it will try to fetch all quotes spoken by that character\n**Note:**  Search param should contain atleast 3 characters.\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
                "required_parameters": [
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "lelouch"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "10000+ Anime Quotes With Pagination Support",
                "api_name": "Popular Quotes by pagination",
                "api_description": "Get anime quotes popular among fans:\nRequired GET parameter\n**page**:  1\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm an anime enthusiast and I'm looking to discover some recent anime quotes that are popular among fans. Can you provide me with the latest ten quotes and their associated anime names? Also, if available, I'd love to know the character who spoke each quote.",
        "relevant APIs": [
            [
                "10000+ Anime Quotes With Pagination Support",
                "Recent Quotes by pagination"
            ],
            [
                "10000+ Anime Quotes With Pagination Support",
                "Popular Quotes by pagination"
            ]
        ],
        "query_id": 9039
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "ping",
                "api_description": "Check that server is still alive",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "datetime": "str",
                    "version": "str",
                    "uptime": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "stocks_archive",
                "api_name": "tickerData",
                "api_description": "Returns a list of ticker records",
                "required_parameters": [
                    {
                        "name": "period",
                        "type": "STRING",
                        "description": "Ticker period",
                        "default": "1h"
                    },
                    {
                        "name": "startDate",
                        "type": "STRING",
                        "description": "Start date",
                        "default": "2010-04-12T14:30"
                    },
                    {
                        "name": "tickerName",
                        "type": "STRING",
                        "description": "Ticker name",
                        "default": "gold"
                    },
                    {
                        "name": "endDate",
                        "type": "STRING",
                        "description": "End date",
                        "default": "2010-04-20T12:30"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "records": [
                        {
                            "closeDateTime": "str",
                            "open": "float",
                            "close": "float",
                            "high": "float",
                            "low": "float",
                            "volume": "int",
                            "_list_length": 142
                        }
                    ]
                }
            }
        ],
        "query": "My friend is a financial advisor and he needs to analyze the historical data for the gold ticker from April 12, 2010, 14:30 to April 20, 2010, 12:30. Can you fetch the ticker data for this period and provide the records including close date-time, open price, close price, highest price, lowest price, and volume? Also, he wants to know if the stocks_archive tool is still functional. Please ping the server and provide the server time, version, and uptime.",
        "relevant APIs": [
            [
                "stocks_archive",
                "tickerData"
            ],
            [
                "stocks_archive",
                "ping"
            ]
        ],
        "query_id": 28240
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "Search",
                "api_description": "Search all Giphy GIFs for a word or phrase. Punctuation will be stripped and ignored. Use a plus or url encode for phrases.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "search query term or phrase",
                        "default": "funny cat"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "number of results to return, maximum 100. Default 25.",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "results offset, defaults to 0.",
                        "default": ""
                    },
                    {
                        "name": "rating",
                        "type": "STRING",
                        "description": "limit results to those rated (y,g, pg, pg-13 or r)",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": "empty list",
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "Get GIF by ID",
                "api_description": "Returns meta data about a GIF, by GIF id. In the below example, the GIF ID is \"feqkVgjJpYtjy\"",
                "required_parameters": [
                    {
                        "name": "gif_id",
                        "type": "STRING",
                        "description": "",
                        "default": "feqkVgjJpYtjy"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {},
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "Get GIFs by ID",
                "api_description": "A multiget version of the get GIF by ID endpoint. In this case the IDs are feqkVgjJpYtjy and 7rzbxdu0ZEXLy",
                "required_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "",
                        "default": "feqkVgjJpYtjy,7rzbxdu0ZEXLy"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "empty list",
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "Translate",
                "api_description": "This is prototype endpoint for using Giphy as a translation engine for a GIF dialect. The translate API draws on search, but uses the Giphy \"special sauce\" to handle translating from one vocabulary to another. In this case, words and phrases to GIFs. Use a plus or url encode for phrases.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "term or phrase to translate into a GIF",
                        "default": "superman"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "rating",
                        "type": "STRING",
                        "description": "limit results to those rated (y,g, pg, pg-13 or r).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": "empty list",
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "Random",
                "api_description": "Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the Giphy catalog.",
                "required_parameters": [
                    {
                        "name": "tag",
                        "type": "STRING",
                        "description": "the GIF tag to limit randomness by",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "rating",
                        "type": "STRING",
                        "description": "limit results to those rated (y,g, pg, pg-13 or r).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": "empty list",
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "Trending GIFs",
                "api_description": "Fetch GIFs currently trending online. The data returned mirrors that used to create The Hot 100 list of GIFs on Giphy. Returns 25 results by default.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "limits the number of results returned. By default returns 25 results.",
                        "default": ""
                    },
                    {
                        "name": "rating",
                        "type": "STRING",
                        "description": "limit results to those rated (y,g, pg, pg-13 or r).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": "empty list",
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "Sticker Search",
                "api_description": "Replicates the functionality and requirements of the classic Giphy search, but returns animated stickers rather than gifs.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "search query term or phrase",
                        "default": "cat"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "number of results to return, maximum 100. Default 25",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "results offset, defaults to 0",
                        "default": ""
                    },
                    {
                        "name": "rating",
                        "type": "STRING",
                        "description": "limit results to those rated (y,g, pg, pg-13 or r).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": "empty list",
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "STICKER Roulette",
                "api_description": "Returns a spotaneously selected sticker from Giphy's sticker collection. Optionally limit scope of result to a specific tag. Like the GIF random endpoint, Punctuation will be stripped and ignored. Use a hyphen for phrases. Example oops, birthday or thank-you. Search terms should be URL encoded.",
                "required_parameters": [
                    {
                        "name": "tag",
                        "type": "STRING",
                        "description": "",
                        "default": "oops"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "empty list",
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "STICKER Trending",
                "api_description": "Get the latest stickers trending on Giphy with this endpoint.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "term or phrase to translate into a GIF",
                        "default": "hungry"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "number of results to return, maximum 100. Default: 25",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "STRING",
                        "description": "results offset, defaults to 0",
                        "default": ""
                    },
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "return results in html or json format.",
                        "default": ""
                    },
                    {
                        "name": "rating",
                        "type": "STRING",
                        "description": "limit results to those rated (y,g, pg, pg-13 or r).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": "empty list",
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Giphy",
                "api_name": "STICKER Translate",
                "api_description": "Using the same alogirithm as the GIF translate endpoint, the sticker translate endpoint turns words into stickers.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "term or phrase to translate into a gif",
                        "default": "hungry"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "empty list",
                    "meta": {
                        "status": "int",
                        "msg": "str",
                        "response_id": "str"
                    }
                }
            }
        ],
        "query": "I need a GIF that represents the word 'oops' for a project. Can you provide me with a random sticker GIF that has the tag 'oops'? Additionally, fetch the latest trending stickers and return 10 results.",
        "relevant APIs": [
            [
                "Giphy",
                "STICKER Roulette"
            ],
            [
                "Giphy",
                "STICKER Trending"
            ]
        ],
        "query_id": 9956
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Graffiti Tags",
                "api_description": "Returns a list of all Graffiti-Tags",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Artists",
                "api_description": "Returns a list of all music Artists who contributed to JSR/JSRF",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Songs",
                "api_description": "Returns a list of all Songs from JSR/JSRF",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Levels",
                "api_description": "Returns a list of all Levels",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Locations",
                "api_description": "Returns a list of all Locations in JSR/JSRF",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Games",
                "api_description": "Returns a list of all Games",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "JSRF Character by ID",
                "api_description": "Returns a single Character by ID",
                "required_parameters": [
                    {
                        "name": "characterId",
                        "type": "string",
                        "description": "",
                        "default": "643c71888cabe0dcede868a3"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "JSRF Characters",
                "api_description": "Returns a list of all JSRF Characters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "JSR Character by ID",
                "api_description": "Returns a single Character by ID",
                "required_parameters": [
                    {
                        "name": "characterId",
                        "type": "string",
                        "description": "",
                        "default": "643c71b18cabe0dcede868ed"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Jet Set Radio API",
                "api_name": "Characters",
                "api_description": "Returns a list of all Characters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "Limit the number of items returned in the response.",
                        "default": "5"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                        "default": "name"
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                        "default": "asc"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm working on a Jet Set Radio fan website and I need some content. Can you provide me with a list of songs, characters, and levels from the game? Also, it would be great if you could suggest some graffiti tags and locations that I can include on the website.",
        "relevant APIs": [
            [
                "Jet Set Radio API",
                "Songs"
            ],
            [
                "Jet Set Radio API",
                "Characters"
            ],
            [
                "Jet Set Radio API",
                "Levels"
            ],
            [
                "Jet Set Radio API",
                "Graffiti Tags"
            ],
            [
                "Jet Set Radio API",
                "Locations"
            ]
        ],
        "query_id": 65673
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "sport_v2",
                "api_name": "copy of endpoint:  Soccer - Sports Open Data",
                "api_description": " Sports Open Data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to organize a soccer tournament for my company's employees. Can you suggest a list of soccer fields available for rent in our city? It would be helpful if you could provide the prices and availability for each field. Additionally, I need the contact information for a local referee association to hire referees for the tournament.",
        "relevant APIs": [
            [
                "sport_v2",
                "copy of endpoint:  Soccer - Sports Open Data"
            ],
            [
                "sport_v2",
                "Soccer - Sports Open Data"
            ]
        ],
        "query_id": 77903
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "sport_v2",
                "api_name": "copy of endpoint:  Soccer - Sports Open Data",
                "api_description": " Sports Open Data",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm a soccer coach and I'm planning a training session for my team. Can you suggest some effective soccer drills and exercises to improve their passing and ball control skills? It would be great if the drills cater to different age groups and skill levels.",
        "relevant APIs": [
            [
                "sport_v2",
                "copy of endpoint:  Soccer - Sports Open Data"
            ],
            [
                "sport_v2",
                "Soccer - Sports Open Data"
            ]
        ],
        "query_id": 77908
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Simple YouTube Search",
                "api_name": "Playlist",
                "api_description": "YouTube playlist data",
                "required_parameters": [
                    {
                        "name": "list",
                        "type": "STRING",
                        "description": "",
                        "default": "PLillGF-RfqbZ2ybcoD2OaabW2P7Ws8CWu"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "link": "str",
                        "thumbnail": {
                            "url": "str",
                            "height": "int",
                            "id": "NoneType",
                            "width": "int"
                        },
                        "id": "str",
                        "videos": [
                            {
                                "uploadedAt": "NoneType",
                                "id": "str",
                                "tags": {},
                                "nsfw": "bool",
                                "private": "bool",
                                "description": "NoneType",
                                "url": "str",
                                "unlisted": "bool",
                                "channel": {
                                    "name": "str",
                                    "icon": "NoneType",
                                    "id": "str"
                                },
                                "thumbnail": {
                                    "url": "str",
                                    "height": "int",
                                    "id": "str",
                                    "width": "int"
                                },
                                "ratings": {
                                    "likes": "int",
                                    "dislikes": "int"
                                },
                                "shorts": "bool",
                                "title": "str",
                                "live": "bool",
                                "duration_formatted": "str",
                                "views": "int",
                                "duration": "int",
                                "shorts_url": "str",
                                "type": "str",
                                "_list_length": 41
                            }
                        ],
                        "video_count": "int",
                        "title": "str",
                        "views": "int",
                        "last_update": "str",
                        "url": "str",
                        "channel": {
                            "url": "str",
                            "name": "str",
                            "icon": "str",
                            "id": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Simple YouTube Search",
                "api_name": "Video",
                "api_description": "Get particular video",
                "required_parameters": [
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "",
                        "default": "https://www.youtube.com/watch?v=fBNz5xF-Kx4"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "uploadedAt": "str",
                        "id": "str",
                        "tags": [
                            "list of str with length 4"
                        ],
                        "nsfw": "bool",
                        "private": "bool",
                        "description": "str",
                        "url": "str",
                        "unlisted": "bool",
                        "channel": {
                            "name": "str",
                            "icon": "str",
                            "id": "str"
                        },
                        "thumbnail": {
                            "url": "str",
                            "height": "int",
                            "id": "str",
                            "width": "int"
                        },
                        "ratings": {
                            "likes": "int",
                            "dislikes": "int"
                        },
                        "shorts": "bool",
                        "title": "str",
                        "live": "bool",
                        "duration_formatted": "str",
                        "views": "int",
                        "duration": "int",
                        "shorts_url": "str",
                        "type": "str"
                    }
                }
            }
        ],
        "query": "I'm planning a road trip and want to create a playlist of travel vlogs on YouTube. Can you help me find vlogs related to road trips and travel destinations? Please include the video titles, thumbnails, and durations in the playlist.",
        "relevant APIs": [
            [
                "Simple YouTube Search",
                "Search"
            ],
            [
                "Simple YouTube Search",
                "Playlist"
            ]
        ],
        "query_id": 25687
    },
    {
        "api_list": [
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Directions Between 2 Locations",
                "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**",
                "required_parameters": [
                    {
                        "name": "start_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the starting point (required)",
                        "default": "-16.0755888102153"
                    },
                    {
                        "name": "end_lon",
                        "type": "NUMBER",
                        "description": "Longitude of the ending point (required)",
                        "default": "-17.447938"
                    },
                    {
                        "name": "end_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the ending point (required)",
                        "default": "14.693425"
                    },
                    {
                        "name": "start_lat",
                        "type": "NUMBER",
                        "description": "Latitude of the starting point (required)",
                        "default": "14.14129815"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "distance_unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "steps": [
                        {
                            "direction": "str",
                            "distance": "str",
                            "duration": "str",
                            "instruction": "str",
                            "location": [
                                "list of float with length 2"
                            ],
                            "_list_length": 15
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Measure Distance",
                "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from a hospital in Koalack to Dakar**",
                "required_parameters": [
                    {
                        "name": "lon2",
                        "type": "NUMBER",
                        "description": "Longitude of the second location (required)",
                        "default": "-17.447938"
                    },
                    {
                        "name": "lat2",
                        "type": "NUMBER",
                        "description": "Latitude of the second location (required)",
                        "default": "14.693425"
                    },
                    {
                        "name": "lon1",
                        "type": "NUMBER",
                        "description": "Longitude of the first location (required)",
                        "default": "-16.0755888102153"
                    },
                    {
                        "name": "lat1",
                        "type": "NUMBER",
                        "description": "Latitude of the first location (required)",
                        "default": "14.14129815"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
                        "default": "km"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "distance": "str",
                    "duration": "str",
                    "unit": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Reverse Geocode",
                "api_description": "This endpoint allows you to perform reverse geocoding in Senegal by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "STRING",
                        "description": "The longitude of the location.",
                        "default": "-17.447938"
                    },
                    {
                        "name": "lat",
                        "type": "STRING",
                        "description": "The latitude of the location.",
                        "default": "14.693425"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "amenity": "str",
                    "boundingbox": [
                        "list of str with length 4"
                    ],
                    "category": "str",
                    "city": "str",
                    "country": "str",
                    "display_name": "str",
                    "region": "str",
                    "suburb": "str"
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Facilities Lookup",
                "api_description": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The region where the facility is located",
                        "default": "Dakar"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
                        "default": "hospital"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The city where the facility is located",
                        "default": "Touba"
                    },
                    {
                        "name": "limit",
                        "type": "STRING",
                        "description": "The number of facilities to query.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hospital": [
                        {
                            "ISO3166-2-lvl4": "str",
                            "address": "str",
                            "amenity": "str",
                            "country_code": "str",
                            "county": "str",
                            "display_name": "str",
                            "latitude": "str",
                            "longitude": "str",
                            "postcode": "str",
                            "region": "str",
                            "road": "str",
                            "suburb": "str",
                            "village": "str",
                            "website": "str",
                            "_list_length": 10
                        }
                    ]
                }
            },
            {
                "category_name": "Location",
                "tool_name": "Senegal API",
                "api_name": "Geocode",
                "api_description": "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
                "required_parameters": [
                    {
                        "name": "address",
                        "type": "STRING",
                        "description": "he name of the location to look up.",
                        "default": "Dakar"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "display_name": "str",
                    "latitude": "str",
                    "longitude": "str"
                }
            }
        ],
        "query": "I am organizing a business event in Senegal and I need to calculate the distance between two locations. Please provide me with the distance and duration from Dakar to Thies. Additionally, I would like to know the facilities available in Dakar. Can you give me a list of restaurants and banks in the city?",
        "relevant APIs": [
            [
                "Senegal API",
                "Measure Distance"
            ],
            [
                "Senegal API",
                "Facilities Lookup"
            ]
        ],
        "query_id": 39393
    },
    {
        "api_list": [],
        "query": "I'm in need of a screenshot tool. Can you provide me with a screenshot of 'https://www.example.com'? Please save the screenshot on a S3 bucket and ensure it captures the entire webpage. Additionally, remove any specified divs or elements from the screenshot.",
        "relevant APIs": [
            [
                "Screenshot Maker",
                "Take screenshot"
            ]
        ],
        "query_id": 86105
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Simple YouTube Search",
                "api_name": "Search",
                "api_description": "Make youtube search",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "",
                        "default": "never+gonna+give+you+up"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "safesearch",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "uploadedAt": "str",
                            "id": "str",
                            "tags": {},
                            "nsfw": "bool",
                            "private": "bool",
                            "description": "NoneType",
                            "url": "str",
                            "unlisted": "bool",
                            "channel": {
                                "name": "str",
                                "icon": "str",
                                "id": "str"
                            },
                            "thumbnail": {
                                "url": "str",
                                "height": "int",
                                "id": "str",
                                "width": "int"
                            },
                            "ratings": {
                                "likes": "int",
                                "dislikes": "int"
                            },
                            "shorts": "bool",
                            "title": "str",
                            "live": "bool",
                            "duration_formatted": "str",
                            "views": "int",
                            "duration": "int",
                            "shorts_url": "str",
                            "type": "str",
                            "_list_length": 19
                        }
                    ]
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Simple YouTube Search",
                "api_name": "Playlist",
                "api_description": "YouTube playlist data",
                "required_parameters": [
                    {
                        "name": "list",
                        "type": "STRING",
                        "description": "",
                        "default": "PLillGF-RfqbZ2ybcoD2OaabW2P7Ws8CWu"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "link": "str",
                        "thumbnail": {
                            "url": "str",
                            "height": "int",
                            "id": "NoneType",
                            "width": "int"
                        },
                        "id": "str",
                        "videos": [
                            {
                                "uploadedAt": "NoneType",
                                "id": "str",
                                "tags": {},
                                "nsfw": "bool",
                                "private": "bool",
                                "description": "NoneType",
                                "url": "str",
                                "unlisted": "bool",
                                "channel": {
                                    "name": "str",
                                    "icon": "NoneType",
                                    "id": "str"
                                },
                                "thumbnail": {
                                    "url": "str",
                                    "height": "int",
                                    "id": "str",
                                    "width": "int"
                                },
                                "ratings": {
                                    "likes": "int",
                                    "dislikes": "int"
                                },
                                "shorts": "bool",
                                "title": "str",
                                "live": "bool",
                                "duration_formatted": "str",
                                "views": "int",
                                "duration": "int",
                                "shorts_url": "str",
                                "type": "str",
                                "_list_length": 41
                            }
                        ],
                        "video_count": "int",
                        "title": "str",
                        "views": "int",
                        "last_update": "str",
                        "url": "str",
                        "channel": {
                            "url": "str",
                            "name": "str",
                            "icon": "str",
                            "id": "str"
                        }
                    }
                }
            }
        ],
        "query": "I want to learn about the history of art through YouTube videos. Can you provide me with a curated playlist of videos that cover different art movements, famous artists, and their iconic works?",
        "relevant APIs": [
            [
                "Simple YouTube Search",
                "Search"
            ],
            [
                "Simple YouTube Search",
                "Playlist"
            ]
        ],
        "query_id": 42348
    },
    {
        "api_list": [
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get content",
                "api_description": "Gets image, video, and audio data sent by users.",
                "required_parameters": [
                    {
                        "name": "messageId",
                        "type": "STRING",
                        "description": "Message ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get rich menu ID of user",
                "api_description": "Gets the ID of the rich menu linked to a user.",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "User ID. Found in the source object of webhook event objects. Do not use the LINE ID used in LINE.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get rich menu list",
                "api_description": "Gets a list of all uploaded rich menus.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get rich menu",
                "api_description": "Gets a rich menu via a rich menu ID.",
                "required_parameters": [
                    {
                        "name": "richMenuId",
                        "type": "STRING",
                        "description": "ID of an uploaded rich menu",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get profile",
                "api_description": "Gets user profile information.",
                "required_parameters": [
                    {
                        "name": "userId",
                        "type": "STRING",
                        "description": "User ID that is returned in a webhook event object. Do not use the LINE ID found on LINE.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get default rich menu ID",
                "api_description": "Gets the ID of the default rich menu set with the Messaging API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Communication",
                "tool_name": "LINE Messaging",
                "api_name": "Get number of sent reply messages",
                "api_description": "Gets the number of messages sent with the /bot/message/reply endpoint.",
                "required_parameters": [
                    {
                        "name": "date\t",
                        "type": "STRING",
                        "description": "Date the messages were sent. Format: yyyyMMdd (Example: 20191231) Timezone: UTC+9",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Could you please provide me with the ID of the rich menu linked to the user with the ID '12345'? Furthermore, I would like to download the image associated with the rich menu having the ID '67890'.",
        "relevant APIs": [
            [
                "LINE Messaging",
                "Get rich menu ID of user"
            ],
            [
                "LINE Messaging",
                "Download rich menu image"
            ]
        ],
        "query_id": 66927
    }
]