[
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Channel Clips",
                "api_description": "Get Channel Clips",
                "required_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "",
                        "default": "0"
                    },
                    {
                        "name": "channel_name",
                        "type": "STRING",
                        "description": "",
                        "default": "gmhikaru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Chat User (like user from chat)",
                "api_description": "Get Chat User (like user from chat)",
                "required_parameters": [
                    {
                        "name": "channel_name",
                        "type": "STRING",
                        "description": "",
                        "default": "gmhikaru"
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "",
                        "default": "KMLT96"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Chatroom Rules",
                "api_description": "Get Chatroom Rules",
                "required_parameters": [
                    {
                        "name": "channel_name",
                        "type": "STRING",
                        "description": "",
                        "default": "gmhikaru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Channel Links",
                "api_description": "Get Channel Links",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "channel_name",
                        "type": "STRING",
                        "description": "",
                        "default": "gmhikaru"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Channel Polls",
                "api_description": "Get Channel Polls",
                "required_parameters": [
                    {
                        "name": "channel_name",
                        "type": "STRING",
                        "description": "",
                        "default": "gmhikaru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Channel Chatroom",
                "api_description": "Get Channel Chatroom",
                "required_parameters": [
                    {
                        "name": "channel_name",
                        "type": "STRING",
                        "description": "",
                        "default": "gmhikaru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Channel Emotes",
                "api_description": "Get Channel Emotes",
                "required_parameters": [
                    {
                        "name": "channel_name",
                        "type": "STRING",
                        "description": "",
                        "default": "gmhikaru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Channel Livestream Info",
                "api_description": "Get Channel Livestream Info",
                "required_parameters": [
                    {
                        "name": "channel_name",
                        "type": "STRING",
                        "description": "",
                        "default": "gmhikaru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Channel Details",
                "api_description": "Get Channel Details",
                "required_parameters": [
                    {
                        "name": "channel_name",
                        "type": "STRING",
                        "description": "",
                        "default": "gmhikaru"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Data",
                "tool_name": "Kick.com API | Kick API",
                "api_name": "Get Chat Messages",
                "api_description": "Returns chat messages from livestream ID.",
                "required_parameters": [
                    {
                        "name": "livestream_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm a fan of the streamer 'gmhikaru' on Kick.com and I want to explore their channel.",
        "relevant APIs": [
            [
                "Kick.com API | Kick API",
                "Get Channel Clips"
            ],
            [
                "Kick.com API | Kick API",
                "Get Channel Details"
            ]
        ],
        "query_id": 608
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "F1 drivers quotes",
                "api_name": "Author with his photo",
                "api_description": "Shows the author who have quotes saved in this API  with his photo and ID.",
                "required_parameters": [
                    {
                        "name": "driverId",
                        "type": "string",
                        "description": "",
                        "default": "raikkonen"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "img": "str",
                    "id": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "F1 drivers quotes",
                "api_name": "Driver's quotes with pagination of 10 quotes each page",
                "api_description": "Gets 10 quotes of the driver depending on which page you input.",
                "required_parameters": [
                    {
                        "name": "driverId",
                        "type": "string",
                        "description": "",
                        "default": "ricciardo"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "author": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "F1 drivers quotes",
                "api_name": "Driver's quotes by ID",
                "api_description": "Gets a quote by its ID.",
                "required_parameters": [
                    {
                        "name": "driverId",
                        "type": "string",
                        "description": "",
                        "default": "ricciardo"
                    },
                    {
                        "name": "quoteId",
                        "type": "NUMBER",
                        "description": "",
                        "default": "59"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "author": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "F1 drivers quotes",
                "api_name": "List of authors with photos",
                "api_description": "Shows the list of F1 drivers and personalities who have quotes saved in this API  with they photos and IDs",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "img": "str",
                    "id": "str"
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "F1 drivers quotes",
                "api_name": "List of drivers and personalities",
                "api_description": "Shows the list of F1 drivers and personalities who have quotes saved in this API, and their code to access them.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"Alexander_Albon\": \"str\", \"Jean_Alesi\": \"str\", \"Fernando_Alonso\": \"str\", \"Mario_Andretti\": \"str\", \"Alberto_Ascari\": \"str\", \"Rubens_Barrichello\": \"str\", \"Mattia_Binotto\": \"str\", \"Valtteri_Bottas\": \"str\", \"Jack_Brabham\": \"str\", \"Ross_Brawn\": \"str\", \"Flavio_Briatore\": \"str\", \"Jenson_Button\": \"str\", \"David_Coulthard\": \"str\", \"Ron_Dennis\": \"str\", \"Bernie_Ecclestone\": \"str\", \"Marcus_Ericsson\": \"str\", \"Juan_Manuel_Fangio\": \"str\", \"Giancarlo_Fisichella\": \"str\", \"Emerson_Fittipaldi\": \"str\", \"Pierre_Gasly\": \"str\", \"Romain_Grosjean\": \"str\", \"Mika_H\\u00e4kkinen\": \"str\", \"Lewis_Hamilton\": \"str\", \"Damon_Hill\": \"str\", \"Graham_Hill\": \"str\", \"Phil_Hill\": \"str\", \"Christian_Horner\": \"str\", \"Nico_H\\u00fclkenberg\": \"str\", \"Jacky_Ickx\": \"str\", \"Eddie_Irvine\": \"str\", \"Kamui_Kobayashi\": \"str\", \"Heikki_Kovalainen\": \"str\", \"Robert_Kubica\": \"str\", \"Daniil_Kvyat\": \"str\", \"Nicholas_Latifi\": \"str\", \"Niki_Lauda\": \"str\", \"Charles_Leclerc\": \"str\", \"Kevin_Magnussen\": \"str\", \"Pastor_Maldonado\": \"str\", \"Nigel_Mansell\": "
            },
            {
                "category_name": "Sports",
                "tool_name": "F1 drivers quotes",
                "api_name": "10 interesting quotes",
                "api_description": "Gets 10 interesting quotes said by famous F1 people.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Sports",
                "tool_name": "F1 drivers quotes",
                "api_name": "Driver's quotes",
                "api_description": "Gets the quotes of a specific driver.",
                "required_parameters": [
                    {
                        "name": "driverId",
                        "type": "string",
                        "description": "",
                        "default": "verstappen"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "quote": "str",
                    "author": "str"
                }
            }
        ],
        "query": "I am organizing a Formula 1 themed party and I need some quotes by Daniel Ricciardo to put up as decorations. Can you fetch a specific quote by its ID?. Additionally, I would like to display a photo of Daniel Ricciardo along with his ID. Can you provide that information as well?",
        "relevant APIs": [
            [
                "F1 drivers quotes",
                "Driver's quotes by ID"
            ],
            [
                "F1 drivers quotes",
                "Author with his photo"
            ]
        ],
        "query_id": 2144
    },
    {
        "api_list": [
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Scoring Tables API",
                "api_name": "/marks/women/{points}",
                "api_description": "This retrieves the women's marks for the point value given as a parameter (0-1400).",
                "required_parameters": [
                    {
                        "name": "points",
                        "type": "NUMBER",
                        "description": "Please enter a number between 1 and 1400.",
                        "default": "1400"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Scoring Tables API",
                "api_name": "/marks/women/",
                "api_description": "This retrieves all women's marks from the World Athletics Scoring Tables.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Scoring Tables API",
                "api_name": "/marks/men/",
                "api_description": "This retrieves all men's marks from the World Athletics Scoring Tables.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Health_and_Fitness",
                "tool_name": "Scoring Tables API",
                "api_name": "/marks/men/{points}",
                "api_description": "This retrieves the men's marks for the point value given as a parameter (0-1400).",
                "required_parameters": [
                    {
                        "name": "points",
                        "type": "NUMBER",
                        "description": "Please enter a number between 1 and 1400.",
                        "default": "1400"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a track and field event and I need to calculate the points for the women's high jump. Can you provide me with the marks required for different point values? Additionally, I would like to retrieve the men's marks for the same point values.",
        "relevant APIs": [
            [
                "Scoring Tables API",
                "/marks/women/{points}"
            ],
            [
                "Scoring Tables API",
                "/marks/men/{points}"
            ]
        ],
        "query_id": 3308
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/readiness",
                "api_description": "Get the readiness of the user for the specified item.\n",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID of the user",
                        "default": ""
                    },
                    {
                        "name": "item_id",
                        "type": "STRING",
                        "description": "The ID of the item",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/study",
                "api_description": "Get items a specific user should study.\n",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID of the user you want to get learning items for",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/concepts",
                "api_description": "Retrieve a list of concepts for the current customer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/concepts/{id}",
                "api_description": "Retrieve the details of a specific concept by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "Concept ID",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Learning Engine",
                "api_name": "/memre_api/v1/users/{user_id}/learning_stats",
                "api_description": "Get the most effective times of day for a user to study.\n",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID of the user you want to get learning stats for",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "messages": "str"
                }
            }
        ],
        "query": "I'm working on a research project and require the learning statistics for a user. Could you please provide me with the user's most effective study times? Additionally, I would like to study the recommended items for this user.",
        "relevant APIs": [
            [
                "Learning Engine",
                "/memre_api/v1/users/{user_id}/learning_stats"
            ],
            [
                "Learning Engine",
                "/memre_api/v1/study"
            ]
        ],
        "query_id": 3922
    },
    {
        "api_list": [
            {
                "category_name": "Other",
                "tool_name": "ChurchApp",
                "api_name": "Search Contacts",
                "api_description": "Get a contact by name",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Search by Name, Address, Job, Email, Telephone or Mobile",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Search by name (first, last, or both with \"+\" separating them, i.e. \"first+last\")",
                        "default": ""
                    },
                    {
                        "name": "p",
                        "type": "NUMBER",
                        "description": "If using pagination, define which page of contacts to return",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Define how many contacts should be returned per page",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "extras": "empty list",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "ChurchApp",
                "api_name": "Get Contact",
                "api_description": "Search for a contact by their unique ID",
                "required_parameters": [
                    {
                        "name": "contact_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "If \"true\", this will return data for a specific contact, including any tags for the contact",
                        "default": ""
                    },
                    {
                        "name": "keydates",
                        "type": "BOOLEAN",
                        "description": "will return data for a specific contact, including any key dates for the contact",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "extras": "empty list",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "ChurchApp",
                "api_name": "Get Contacts by Tag",
                "api_description": "This will return data for all contacts with the tag",
                "required_parameters": [
                    {
                        "name": "tag_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "extras": "empty list",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "ChurchApp",
                "api_name": "Get Key Dates by Contact",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "contact_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "extras": "empty list",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "ChurchApp",
                "api_name": "Get Tag",
                "api_description": "This will return data for a specific tag with the defined ID",
                "required_parameters": [
                    {
                        "name": "tag_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "extras": "empty list",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "ChurchApp",
                "api_name": "Get Tag by Name",
                "api_description": "This will return data for a specific tag",
                "required_parameters": [
                    {
                        "name": "tag_name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "extras": "empty list",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "ChurchApp",
                "api_name": "Get Tags by Contact",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "contact_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "extras": "empty list",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "ChurchApp",
                "api_name": "Get all Contacts",
                "api_description": "Get all contacts, listed alphabetically",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "extras": "empty list",
                        "message": "str"
                    }
                }
            },
            {
                "category_name": "Other",
                "tool_name": "ChurchApp",
                "api_name": "Get all Tags",
                "api_description": "This will return tags ordered alphabetically",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "int",
                        "extras": "empty list",
                        "message": "str"
                    }
                }
            }
        ],
        "query": "I want to create a mailing list for all contacts in the address book.",
        "relevant APIs": [
            [
                "ChurchApp",
                "Get all Contacts"
            ],
            [
                "ChurchApp",
                "Get Tags by Contact"
            ]
        ],
        "query_id": 6736
    },
    {
        "api_list": [
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/product/{productID}/feedbacks",
                "api_description": "This ressource displays the feedbacks for one product",
                "required_parameters": [
                    {
                        "name": "productID",
                        "type": "NUMBER",
                        "description": "The Aliexpress product ID",
                        "default": "32845755054"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/shipping/{productID}",
                "api_description": "This ressource displays the shipping information for one product",
                "required_parameters": [
                    {
                        "name": "productID",
                        "type": "NUMBER",
                        "description": "The Aliexpress product ID",
                        "default": "4000961087745"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "toCountry",
                        "type": "STRING",
                        "description": "The country to calcul the freight ",
                        "default": "FR"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/category/{categoryId}/products",
                "api_description": "This resource represents the product list; you can filter by\n - attributes\n - minimum price\n - brand \n - ship to country\n - ship from country\n - max sale price \n<br> **For information, One first request, you must not indicate the attr & brands, you retrieve this informations in the Product Object.**",
                "required_parameters": [
                    {
                        "name": "categoryId",
                        "type": "NUMBER",
                        "description": "The Aliexpress product ID",
                        "default": "100003819"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "filter the products by brand. <br> In order todo this :<br> 1. Filter the products with all filters that you want,  without **brand** <br> 2. Search the `brands` element at the same level that pagination level (limit, page hasPrevPage ... ) <br> 3. Indicate the content id  <br>content:[<br>{ <br>brandName:MEGE KNIGHT<br>**brandId:201549252** <br>brandLogo://ae01.alicdn.com/kf/HTB1XyEwE1OSBuNjy0Fdq6zDnVXaw.jpg<br>}<br>If you want filter by the MEGE KNIGHT you must indicate 201549252. <br> **Warning, when you indicate brand element, the attr parameter must be empty.**",
                        "default": ""
                    },
                    {
                        "name": "shipToCountry",
                        "type": "STRING",
                        "description": "Filter the products that can be to ship to the country wished. you can use the service countriesAvailable to set the good information",
                        "default": "FR"
                    },
                    {
                        "name": "attr",
                        "type": "STRING",
                        "description": "filter the products by an attribute.<br> In order todo this :<br>1. Filter the products with all filters that you want,  without **attr** <br>2. Search the `attributes` element at the same level that pagination level (limit, page hasPrevPage ... ) <br>3. concatenate the content parent with children element <br>content:[<br>{ <br>**attributeId:14** <br>displayType:colour_atla <br>attributeValues:[ <br>{<br>**attributeValueId:10**<br>attributeValueName:Red<br>selected:true<br>}<br>If you want filter the products by the color red, you must indicate 14-10.<br> **Warning, when you indicate attribute element, the brand parameter must be empty.**",
                        "default": ""
                    },
                    {
                        "name": "maxSalePrice",
                        "type": "NUMBER",
                        "description": "Filter products by the max Sale price",
                        "default": 50
                    },
                    {
                        "name": "getShopInformation",
                        "type": "BOOLEAN",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "targetCurrency",
                        "type": "STRING",
                        "description": "Represents the currency whished when the product is retrieved",
                        "default": ""
                    },
                    {
                        "name": "lg",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "shipFromCountry",
                        "type": "STRING",
                        "description": "Filter the products that can be to ship from  country wished. you can use the service countriesAvailable to set the good information",
                        "default": "CN"
                    },
                    {
                        "name": "minSalePrice",
                        "type": "NUMBER",
                        "description": "Filter products by the min Sale price",
                        "default": 10
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "filter the products",
                        "default": "NEWEST_DESC"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/bestSales/SortedByNewest",
                "api_description": "Retrieves the last best product added in the system",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/product/{productId}/historic/prices",
                "api_description": "This endpoint returns the prices historic of product loaded by a client",
                "required_parameters": [
                    {
                        "name": "productId",
                        "type": "string",
                        "description": "",
                        "default": "1005002011652590"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "maxDate",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "minDate",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/product/{productId}/historic/sales",
                "api_description": "This endpoint returns the sales historic of product loaded by a client",
                "required_parameters": [
                    {
                        "name": "productId",
                        "type": "string",
                        "description": "",
                        "default": "1005002011652590"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "minDate",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "maxDate",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/v2/categories",
                "api_description": "This resource represents a category in the system. We have 3 provider type <br> - API\n -WEBSITE\n -HYBRID\n <br> 1.API<br> This category is manager by the API, the ID indicated is the Alibaba ID and not Aliexpress ID.<br> 2. WESITE <br> This category is scraping of Aliexpress website <br> 3. HYBRID <br> This category has correspondence between Aliexpress and API; you have in the same object twice ID `alie_category_id` for Website and `api_category_id` for API<br> In the API to request by example product, in the category ID, you can indicate the both.  ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/currenciesAvailable",
                "api_description": "This resource represents a currency in the system. Each currency is composed of Code and Name Attributes. This service can be used to communicate with product service with the target currency attribute.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/countriesAvailableToShipping",
                "api_description": "This resource represents the countries. Each country is composed of Code and Name Attributes. This service can be used to communicate with product service for the countryFrom and countryTo query parameters.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "eCommerce",
                "tool_name": "Magic AliExpress",
                "api_name": "/api/bestSales/product/{productID}/salesHistory",
                "api_description": "This resource returns the historic of sales",
                "required_parameters": [
                    {
                        "name": "productID",
                        "type": "NUMBER",
                        "description": "The Aliexpress product ID",
                        "default": "4001017422834"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "minDate",
                        "type": "STRING",
                        "description": "filter the historic by min date",
                        "default": "2020-09-28"
                    },
                    {
                        "name": "maxDate",
                        "type": "STRING",
                        "description": "filter the historic by max date",
                        "default": "2021-08-05"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "As an online retailer, I want to offer a wide range of products to my customers. Can you provide me with a list of products in the category? I would like to filter the products by brand, attributes, and price range. Additionally, I need the feedback from customers who have purchased these products, including their feedback content, ratings, and photos. Thank you!",
        "relevant APIs": [
            [
                "Magic AliExpress",
                "/api/category/{categoryId}/products"
            ],
            [
                "Magic AliExpress",
                "/api/product/{productID}/feedbacks"
            ]
        ],
        "query_id": 10160
    }
]