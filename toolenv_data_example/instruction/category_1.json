[
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "Halsey Lyric Snippets",
                "api_name": "random song & song's album information out of {artist}",
                "api_description": "Returns album information and random song information",
                "required_parameters": [
                    {
                        "name": "artist",
                        "type": "string",
                        "description": "",
                        "default": "Halsey"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "albumId": "str",
                    "albumName": "str",
                    "releaseDate": "str",
                    "albumArtist": "str",
                    "song": {
                        "_id": "str",
                        "name": "str",
                        "lyrics": [
                            "list of str with length 25"
                        ]
                    }
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Halsey Lyric Snippets",
                "api_name": "all songs from {artist}",
                "api_description": "This endpoint retrieves all songs by the specified artist and returns them in the response.",
                "required_parameters": [
                    {
                        "name": "artist",
                        "type": "string",
                        "description": "",
                        "default": "Halsey"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": "str",
                    "name": "str",
                    "lyrics": [
                        "list of str with length 14"
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Halsey Lyric Snippets",
                "api_name": "album by {id}",
                "api_description": "returns album information when searched by {id}",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "63b88a2bc8450e8550fa6d5c"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": "str",
                    "name": "str",
                    "releaseDate": "str",
                    "songs": [
                        "list of str with length 14"
                    ],
                    "artist": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Billboard",
                "api_name": "Artist 100",
                "api_description": "Provide the Artist 100 chart information.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Set the date for which you want to get a chart.",
                        "default": "2020-03-18"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artist": "str",
                    "last_week": "str",
                    "rank": "str",
                    "award": "bool",
                    "image": "str",
                    "peak_position": "str",
                    "weeks_on_chart": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Billboard",
                "api_name": "Billboard Global Excl. US",
                "api_description": "Billboard Global Excl. US. Available from SEPTEMBER 19, 2020",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Set the date for which you want to get a chart.",
                        "default": "2020-09-19"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artist": "str",
                    "title": "str",
                    "last_week": "str",
                    "rank": "str",
                    "award": "bool",
                    "image": "str",
                    "peak_position": "str",
                    "weeks_on_chart": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Billboard",
                "api_name": "Hot 100",
                "api_description": "Provide the Hot 100 chart information",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "DATE (YYYY-MM-DD)",
                        "description": "Set the date for which you want to get a chart.",
                        "default": "2020-03-18"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "artist": "str",
                    "title": "str",
                    "last_week": "str",
                    "rank": "str",
                    "award": "bool",
                    "image": "str",
                    "peak_position": "str",
                    "weeks_on_chart": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Bandamp Downloader API",
                "api_name": "Get Album Details",
                "api_description": "Fetch:\n- Album Name\n- 2. Album Description\n- 3. Album Thumbnail URL\n- 4. Artist Name\n- 3. Total Tracks Count\n- 4. Each Track URLs\n- 5. Each Track Names\n- 6. Each Track Durations",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://hammeredhulls.bandcamp.com/album/s-t"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "track_details": {
                        "0": {
                            "link": "str",
                            "track_name": "str",
                            "id": "int",
                            "duration": "str"
                        },
                        "1": {
                            "link": "str",
                            "track_name": "str",
                            "id": "int",
                            "duration": "str"
                        },
                        "2": {
                            "link": "str",
                            "track_name": "str",
                            "id": "int",
                            "duration": "str"
                        },
                        "album_thumb": "str",
                        "album_date_published": "str",
                        "album_name": "str",
                        "album_artist_name": "str",
                        "album_desc": "str",
                        "count": "int"
                    }
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Bandamp Downloader API",
                "api_name": "Download Bandcamp Track",
                "api_description": "Supply any Bandcamp track URL & get downloadable links, alongwith:\n\n- Track name\n- Related Album Name\n- Track Published date\n- Duration\n- Thumbnail\n- Artist name\n- Downloadable Mp3 file link",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "",
                        "default": "https://scntstlab.bandcamp.com/track/mwidit-edit"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "track_name": "str",
                    "length": "str",
                    "published": "str",
                    "thumb": "str",
                    "album_name": "str",
                    "artist": "str",
                    "download_link": "str"
                }
            }
        ],
        "query": "I'm organizing a music-themed party for my family. Can you suggest popular songs from various artists based on the Billboard Global Excl. US chart? Additionally, fetch the album details and track durations for a specific album to create a playlist for the event.",
        "relevant APIs": [
            [
                "Billboard",
                "Billboard Global Excl. US"
            ],
            [
                "Halsey Lyric Snippets",
                "album by {id}"
            ]
        ],
        "query_id": 1
    },
    {
        "api_list": [
            {
                "category_name": "Education",
                "tool_name": "Hadiths API",
                "api_name": "Get category by id",
                "api_description": "Each category have a unique ID. These ID can be used to get the category",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "_id": "str",
                    "Chapter_Number": "int",
                    "Chapter_English": "str",
                    "Collection": "str",
                    "Hadith_Total": "int",
                    "Created_By": "str",
                    "__v": "int",
                    "createdAt": "str",
                    "updatedAt": "str"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Hadiths API",
                "api_name": "Get all collections",
                "api_description": "Get all collections from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "total": "int",
                    "collections": [
                        {
                            "_id": "str",
                            "Collection": "str",
                            "Volume": "int",
                            "Hadith_Total": "int",
                            "Categories": "int",
                            "Book": "str",
                            "Author": "str",
                            "Publisher": "str",
                            "DownloadLink": "str",
                            "Description": "str",
                            "__v": "int",
                            "createdAt": "str",
                            "updatedAt": "str",
                            "Image": "str",
                            "_list_length": 6
                        }
                    ]
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Hadiths API",
                "api_name": "Get all categories",
                "api_description": "Get all categories from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Uncovered Treasure",
                "api_name": "/search/{searchterm}",
                "api_description": "Search for treasure by term, e.g. \"wisdom\"",
                "required_parameters": [
                    {
                        "name": "searchterm",
                        "type": "STRING",
                        "description": "e.g. \"God's plan\"",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Optional JSONP callback",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": "empty list"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Uncovered Treasure",
                "api_name": "/random",
                "api_description": "Get random treasure",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Optional JSONP callback",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "date": "str",
                            "context": "str",
                            "scriptures": [
                                "list of str with length 1"
                            ],
                            "text": "str",
                            "topics": "empty list",
                            "bookOrder": "int",
                            "_list_length": 1
                        }
                    ]
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Uncovered Treasure",
                "api_name": "/topic/{topic}",
                "api_description": "Get entries from a specific topic",
                "required_parameters": [
                    {
                        "name": "topic",
                        "type": "STRING",
                        "description": "\"seek God\"",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Optional JSONP callback",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": "empty list"
                }
            },
            {
                "category_name": "Education",
                "tool_name": "Bhagavad Gita_v3",
                "api_name": "Get all verse of chapter by chapter id",
                "api_description": "Get all verse of chapter by chapter id",
                "required_parameters": [
                    {
                        "name": "chapterId",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Bhagavad Gita_v3",
                "api_name": "Get chapter details  by id",
                "api_description": "Get chapter details  by id",
                "required_parameters": [
                    {
                        "name": "chapterId",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Education",
                "tool_name": "Bhagavad Gita_v3",
                "api_name": "Get verse details by verse id",
                "api_description": "Get verse details by verse id",
                "required_parameters": [
                    {
                        "name": "chapterId",
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "verseId",
                        "type": "string",
                        "description": "",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "My family and I are embarking on a spiritual journey and we want to explore the teachings of the Bhagavad Gita. Can you provide us with a random treasure? Additionally, fetch the details of Chapter 15 from the Bhagavad Gita and share all the verses from this chapter.",
        "relevant APIs": [
            [
                "Uncovered Treasure",
                "/random"
            ],
            [
                "Bhagavad Gita_v3",
                "Get chapter details  by id"
            ],
            [
                "Bhagavad Gita_v3",
                "Get all verse of chapter by chapter id"
            ]
        ],
        "query_id": 2
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "PrivatePublicAPI",
                "api_name": "getPetById",
                "api_description": "Returns a single pet",
                "required_parameters": [
                    {
                        "name": "petId",
                        "type": "NUMBER",
                        "description": "ID of pet to return",
                        "default": 0
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PrivatePublicAPI",
                "api_name": "getInventory",
                "api_description": "Returns a map of status codes to quantities",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Sale": "int",
                    "totvs": "int",
                    "sold": "int",
                    "string": "int",
                    "pending": "int",
                    "cat": "int",
                    "dgdfgdf": "int",
                    "available": "int",
                    "not available": "int",
                    "Available": "int",
                    "peric": "int",
                    "disponible": "int"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "PrivatePublicAPI",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": 0
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "ThisshouldbeFREE",
                "api_name": "getPetById",
                "api_description": "Returns a single pet",
                "required_parameters": [
                    {
                        "name": "petId",
                        "type": "NUMBER",
                        "description": "ID of pet to return",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "ThisshouldbeFREE",
                "api_name": "getOrderById",
                "api_description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "required_parameters": [
                    {
                        "name": "orderId",
                        "type": "NUMBER",
                        "description": "ID of pet that needs to be fetched",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "ThisshouldbeFREE",
                "api_name": "logoutUser",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "code": "int",
                    "type": "str",
                    "message": "str"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "People Lookup",
                "api_name": "lookup",
                "api_description": "Lookup people by name and US state (optional)",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": "Warren Buffett"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "State",
                        "type": "STRING",
                        "description": "",
                        "default": "NE"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a family reunion and I need some assistance. Can you find a spacious venue in a park or garden that can accommodate a large group? It would be great if you could also provide me with the park's amenities and any rental costs. Additionally, I would like to plan some outdoor games for the reunion. Can you suggest some fun and engaging games for both kids and adults? Finally, I need some inspirational quotes to include in the family reunion slideshow.",
        "relevant APIs": [
            [
                "PrivatePublicAPI",
                "getPetById"
            ],
            [
                "PrivatePublicAPI",
                "getInventory"
            ],
            [
                "People Lookup",
                "lookup"
            ]
        ],
        "query_id": 3
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Music Trivia",
                "api_name": "/getgamelevel",
                "api_description": "get a game level with a level parameter. The level this does not imply difficulty",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "level",
                        "type": "NUMBER",
                        "description": "paginated level",
                        "default": ""
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "set output format type , 'xml' or 'json'",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Images Infos - API2",
                "api_name": "/extracttext",
                "api_description": "Extract text from an image",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Images Infos - API2",
                "api_name": "/getMetadataFromImage",
                "api_description": "Get metadata from image",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Images Infos - API2",
                "api_name": "/extracthandwriting",
                "api_description": "Extract text from an image",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Shazam",
                "api_name": "Top Track by City",
                "api_description": "This endpoint will give the top song in specific city",
                "required_parameters": [
                    {
                        "name": "city_name",
                        "type": "STRING",
                        "description": "",
                        "default": "Moscow"
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "",
                        "default": "RU"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "2"
                    }
                ],
                "method": "GET",
                "template_response": "{\"next\": \"str\", \"properties\": {}, \"tracks\": [{\"artists\": [{\"adamid\": \"str\", \"alias\": \"str\", \"follow\": {\"followkey\": \"str\"}, \"id\": \"str\", \"_list_length\": 1}], \"highlightsurls\": {\"artisthighlightsurl\": \"str\", \"relatedhighlightsurl\": \"str\"}, \"hub\": {\"actions\": [{\"id\": \"str\", \"name\": \"str\", \"type\": \"str\", \"_list_length\": 2}], \"displayname\": \"str\", \"explicit\": \"bool\", \"image\": \"str\", \"options\": [{\"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"providername\": \"str\", \"type\": \"str\"}, \"caption\": \"str\", \"colouroverflowimage\": \"bool\", \"image\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"providername\": \"str\", \"type\": \"str\", \"_list_length\": 1}], \"type\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"key\": \"str\", \"layout\": \"str\", \"properties\": {}, \"share\": {\"href\": \"str\", \"html\": \"str\", \"image\": \"str\", \"snapchat\": \"str\", \"subject\": \"str\", \"text\": \"str\", \"twitter\": \"str\"}, \"subtitle\": \"str\", "
            },
            {
                "category_name": "Media",
                "tool_name": "Shazam",
                "api_name": "Search Track",
                "api_description": "This endpoint will search for the name of any song and return similar songs with the name.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "",
                        "default": "5"
                    },
                    {
                        "name": "track",
                        "type": "STRING",
                        "description": "",
                        "default": "Love Yourself"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "tracks": {
                        "hits": [
                            {
                                "actions": [
                                    {
                                        "id": "str",
                                        "name": "str",
                                        "type": "str",
                                        "_list_length": 1
                                    }
                                ],
                                "alias": "str",
                                "artists": [
                                    {
                                        "adamid": "str",
                                        "alias": "str",
                                        "follow": {
                                            "followkey": "str"
                                        },
                                        "id": "str",
                                        "_list_length": 1
                                    }
                                ],
                                "heading": {
                                    "subtitle": "str",
                                    "title": "str"
                                },
                                "images": {
                                    "blurred": "str",
                                    "default": "str",
                                    "play": "str"
                                },
                                "key": "str",
                                "share": {
                                    "avatar": "str",
                                    "href": "str",
                                    "html": "str",
                                    "image": "str",
                                    "snapchat": "str",
                                    "subject": "str",
                                    "text": "str",
                                    "twitter": "str"
                                },
                                "stores": {
                                    "apple": {
                                        "actions": [
                                            {
                                                "type": "str",
                                                "uri": "str",
                                                "_list_length": 1
                                            }
                                        ],
                                        "coverarturl": "str",
                                        "explicit": "bool",
                                        "previewurl": "str",
                                        "productid": "str",
                                        "trackid": "str"
                                    }
                                },
                                "streams": {},
                                "type": "str",
                                "url": "str",
                                "urlparams": {},
                                "_list_length": 1
                            }
                        ],
                        "next": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Shazam",
                "api_name": "Artist Info",
                "api_description": "This endpoint will extract information of any artist from https://www.shazam.com.",
                "required_parameters": [
                    {
                        "name": "artist_id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "40543550"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "actions": [
                        {
                            "id": "str",
                            "type": "str",
                            "_list_length": 2
                        }
                    ],
                    "adamid": "str",
                    "alias": "str",
                    "avatar": "str",
                    "genres": {
                        "primary": "str",
                        "secondaries": [
                            "list of str with length 10"
                        ]
                    },
                    "id": "str",
                    "layout": "str",
                    "name": "str",
                    "share": {
                        "href": "str",
                        "image": "str",
                        "subject": "str",
                        "text": "str",
                        "twitter": "str"
                    },
                    "toptracks": {
                        "url": "str"
                    },
                    "url": "str",
                    "verified": "bool",
                    "weburl": "str"
                }
            }
        ],
        "query": "I'm planning a road trip with my friends and we need some good music for the journey. Can you recommend the top tracks in the cities we'll be passing through? Also, extract the text from images of famous landmarks in each city.",
        "relevant APIs": [
            [
                "Shazam",
                "Top Track by City"
            ],
            [
                "Images Infos - API2",
                "/extracttext"
            ]
        ],
        "query_id": 4
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "Spotify Scraper",
                "api_name": "List Podcast Episodes",
                "api_description": "This endpoint lists all episodes of a podcast.",
                "required_parameters": [
                    {
                        "name": "showId",
                        "type": "STRING",
                        "description": "Show ID.",
                        "default": "4oTBzqC3DHbaKNFq2YXpQw"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "The max number of items returned per request. Defaults to `100`.",
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "The number of items omitted before the results. Defaults to `0`.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Scraper",
                "api_name": "Search",
                "api_description": "This endpoint searches for albums, artists, episodes, genres, playlists, podcasts, and users. Pagination scraping is supported.",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "STRING",
                        "description": "Search Term.",
                        "default": "Jazz"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "offset",
                        "type": "NUMBER",
                        "description": "The number of items omitted before the results. Defaults to `0`.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "The max number of items returned per request. Defaults to `50`.",
                        "default": ""
                    },
                    {
                        "name": "type",
                        "type": "ENUM",
                        "description": "Search type. Defaults to `all`.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"bool\", \"albums\": {\"totalCount\": \"int\", \"items\": [{\"type\": \"str\", \"id\": \"str\", \"name\": \"str\", \"shareUrl\": \"str\", \"date\": \"str\", \"artists\": [{\"type\": \"str\", \"id\": \"str\", \"name\": \"str\", \"shareUrl\": \"str\", \"_list_length\": 1}], \"cover\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}], \"_list_length\": 50}]}, \"artists\": {\"totalCount\": \"int\", \"items\": [{\"type\": \"str\", \"id\": \"str\", \"name\": \"str\", \"shareUrl\": \"str\", \"verified\": \"bool\", \"visuals\": {\"avatar\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}]}, \"_list_length\": 50}]}, \"episodes\": {\"totalCount\": \"int\", \"items\": [{\"type\": \"str\", \"id\": \"str\", \"name\": \"str\", \"shareUrl\": \"str\", \"date\": \"str\", \"description\": \"str\", \"durationMs\": \"int\", \"durationText\": \"str\", \"cover\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}], \"podcast\": {\"type\": \"str\", \"id\": \"str\", \"name\": \"str\", \"shareUrl\": \"str\", \"publisherName\": \"str\", \"cover\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\""
            },
            {
                "category_name": "Music",
                "tool_name": "Spotify Scraper",
                "api_name": "Download Track on SoundCloud (3-4 Quotas)",
                "api_description": "Provides a solution to download a Spotify track on SoundCloud. HQ (4 Quotas) and SQ (3 Quotas) audios. (Tutorial: [How to Use SoundCloud Audio URLs](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/tutorials/how-to-use-audio-urls)) (Powered by [SoundCloud Scraper](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/). Get a better price by subscribing to and using it directly.)",
                "required_parameters": [
                    {
                        "name": "track",
                        "type": "STRING",
                        "description": "Track ID, track share URL, track name, or other search term.",
                        "default": "Photograph Ed Sheeran"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quality",
                        "type": "ENUM",
                        "description": "Download quality. Defaults to `sq`.\n* **`hq`**: High and standard quality - 4 quotas\n* **`sq`**: Standard quality - 3 quotas\n\nThe final price depends on the existence of the file of the corresponding quality. For example, if `hq` is requested but the high-quality file does not exist, then the price will be 3 quotas if the standard one exists.",
                        "default": ""
                    },
                    {
                        "name": "candidate",
                        "type": "NUMBER",
                        "description": "The number of the most related SoundCloud tracks among which a track with the nearest duration will be selected to generate downloadable audio URLs. Defaults to `3`.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "bool",
                    "soundcloudTrack": {
                        "searchTerm": "str",
                        "id": "int",
                        "permalink": "str",
                        "title": "str",
                        "user": {
                            "id": "int",
                            "permalink": "str",
                            "name": "str",
                            "verified": "bool"
                        },
                        "audio": [
                            {
                                "quality": "str",
                                "url": "str",
                                "durationMs": "int",
                                "durationText": "str",
                                "mimeType": "str",
                                "format": "str",
                                "_list_length": 2
                            }
                        ]
                    },
                    "spotifyTrack": {
                        "type": "str",
                        "id": "str",
                        "name": "str",
                        "shareUrl": "str",
                        "durationMs": "int",
                        "durationText": "str",
                        "artists": [
                            {
                                "type": "str",
                                "id": "str",
                                "name": "str",
                                "shareUrl": "str",
                                "_list_length": 1
                            }
                        ],
                        "album": {
                            "type": "str",
                            "id": "str",
                            "name": "str",
                            "shareUrl": "str",
                            "cover": [
                                {
                                    "url": "str",
                                    "width": "int",
                                    "height": "int",
                                    "_list_length": 3
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Music",
                "tool_name": "L-yrics",
                "api_name": "Main endpoint",
                "api_description": "Get the song lyrics",
                "required_parameters": [
                    {
                        "name": "song",
                        "type": "STRING",
                        "description": "",
                        "default": "Ashes"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "artist",
                        "type": "STRING",
                        "description": "",
                        "default": "Stellar"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "song": "str",
                    "artist": "str",
                    "lyrics": "str"
                }
            }
        ],
        "query": "I'm organizing a jazz-themed party for my family. Can you suggest some popular jazz albums and artists? Moreover, provide me with the lyrics of the song 'Ashes' by Stellar to add to the party playlist.",
        "relevant APIs": [
            [
                "Spotify Scraper",
                "Search"
            ],
            [
                "L-yrics",
                "Main endpoint"
            ]
        ],
        "query_id": 5
    },
    {
        "api_list": [
            {
                "category_name": "Data",
                "tool_name": "Hashing-Api",
                "api_name": "SHA Text Hash",
                "api_description": "Hash text (as query-string-parameter) using SHA1, SHA256, SHA384 or SHA512 algorithm according to selected mode path-parameter [1, 256, 384, 512].",
                "required_parameters": [
                    {
                        "name": "dataString",
                        "type": "STRING",
                        "description": "",
                        "default": "enter-your-string-here"
                    },
                    {
                        "name": "mode",
                        "type": "NUMBER",
                        "description": "",
                        "default": "256"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "hashHexString": "str",
                    "hashBase64String": "str",
                    "result": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Hashing-Api",
                "api_name": "MD5 Text Hash",
                "api_description": "Hash text (as query-string-parameter) using MD5 algorithm.",
                "required_parameters": [
                    {
                        "name": "dataString",
                        "type": "STRING",
                        "description": "",
                        "default": "enter-your-string-here"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Hashing-Api",
                "api_name": "Blake2B Text Hash with Key",
                "api_description": "Hash text (as query-string-parameter) with private-key (as query-string-parameter) using blake2b algorithm.",
                "required_parameters": [
                    {
                        "name": "dataString",
                        "type": "STRING",
                        "description": "",
                        "default": "enter-your-string-here"
                    },
                    {
                        "name": "keyString",
                        "type": "STRING",
                        "description": "",
                        "default": "enter-your-key-here"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Hashing-Api",
                "api_name": "Blake2B Text Hash",
                "api_description": "Hash text (as query-string-parameter) using blake2b algorithm.",
                "required_parameters": [
                    {
                        "name": "dataString",
                        "type": "STRING",
                        "description": "",
                        "default": "enter-your-string-here"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "My friend needs to hash a text using the MD5 algorithm. The text to be hashed is 'Hello, friend!'. Can you generate the hash result for him? Furthermore, he wants to hash another text using the SHA384 algorithm. The text is 'Goodbye, friend!'. Can you provide the hash result for him?",
        "relevant APIs": [
            [
                "Hashing-Api",
                "MD5 Text Hash"
            ],
            [
                "Hashing-Api",
                "SHA Text Hash"
            ]
        ],
        "query_id": 6
    },
    {
        "api_list": [
            {
                "category_name": "Gaming",
                "tool_name": "Estrelabet Aviator API",
                "api_name": "estrelabet-aviator-latest",
                "api_description": "Will retrieve the latest results from Aviator at Estrelabet.\n\n- The first result is the most recent\n- The last result is the oldest",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Gaming",
                "tool_name": "Bet7k Aviator API",
                "api_name": "bet7k-aviator-latest",
                "api_description": "Will retrieve the latest results from Aviator at BET7K.\n\n- The first result is the most recent\n- The last result is the oldest",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Gaming",
                "tool_name": "Pictionary Charades Word Generator",
                "api_name": "Get Pictionary Word",
                "api_description": "Get a random pictionary word with the specified difficulty. If not difficulty is supplied, a random difficulty will be used.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "difficulty",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "difficulty": "str",
                    "word": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Pictionary Charades Word Generator",
                "api_name": "Get Charades Word",
                "api_description": "Get a random charades word with the specified difficulty. If not difficulty is supplied, a random difficulty will be used.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "difficulty",
                        "type": "ENUM",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "difficulty": "str",
                    "word": "str"
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Hearthstone",
                "api_name": "Get Card By Slug",
                "api_description": "get card information by slug",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "string",
                        "description": "",
                        "default": "a-light-in-the-darkness"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "collectible": "int",
                    "slug": "str",
                    "artistName": "str",
                    "manaCost": "int",
                    "name": "str",
                    "text": "str",
                    "flavorText": "str",
                    "duels": {
                        "relevant": "bool",
                        "constructed": "bool"
                    },
                    "hasImage": "bool",
                    "hasImageGold": "bool",
                    "hasCropImage": "bool",
                    "keywords": [
                        {
                            "slug": "str",
                            "name": "str",
                            "refText": "str",
                            "text": "str",
                            "gameModes": [
                                {
                                    "slug": "str",
                                    "name": "str",
                                    "_list_length": 4
                                }
                            ],
                            "_list_length": 1
                        }
                    ],
                    "rarity": {
                        "slug": "str",
                        "craftingCost": [
                            "list of int with length 2"
                        ],
                        "dustValue": [
                            "list of int with length 2"
                        ],
                        "name": "str"
                    },
                    "class": {
                        "slug": "str",
                        "name": "str"
                    },
                    "type": {
                        "slug": "str",
                        "name": "str",
                        "gameModes": [
                            {
                                "slug": "str",
                                "name": "str",
                                "_list_length": 4
                            }
                        ]
                    },
                    "cardSet": {
                        "name": "str",
                        "slug": "str",
                        "type": "str",
                        "collectibleCount": "int",
                        "collectibleRevealedCount": "int",
                        "nonCollectibleCount": "int",
                        "nonCollectibleRevealedCount": "int"
                    },
                    "spellSchool": {
                        "slug": "str",
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Gaming",
                "tool_name": "Hearthstone",
                "api_name": "Get Cards",
                "api_description": "get a list of all the cards available in hearthstone",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "pageSize",
                        "type": "STRING",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": "{\"cards\": [{\"collectible\": \"int\", \"slug\": \"str\", \"artistName\": \"str\", \"manaCost\": \"int\", \"name\": \"str\", \"text\": \"str\", \"flavorText\": \"str\", \"duels\": {\"relevant\": \"bool\", \"constructed\": \"bool\"}, \"hasImage\": \"bool\", \"hasImageGold\": \"bool\", \"hasCropImage\": \"bool\", \"keywords\": [{\"slug\": \"str\", \"name\": \"str\", \"refText\": \"str\", \"text\": \"str\", \"gameModes\": [{\"slug\": \"str\", \"name\": \"str\", \"_list_length\": 4}], \"_list_length\": 1}], \"rarity\": {\"slug\": \"str\", \"craftingCost\": [\"list of int with length 2\"], \"dustValue\": [\"list of int with length 2\"], \"name\": \"str\"}, \"class\": {\"slug\": \"str\", \"name\": \"str\"}, \"type\": {\"slug\": \"str\", \"name\": \"str\", \"gameModes\": [{\"slug\": \"str\", \"name\": \"str\", \"_list_length\": 4}]}, \"cardSet\": {\"name\": \"str\", \"slug\": \"str\", \"type\": \"str\", \"collectibleCount\": \"int\", \"collectibleRevealedCount\": \"int\", \"nonCollectibleCount\": \"int\", \"nonCollectibleRevealedCount\": \"int\"}, \"spellSchool\": {\"slug\": \"str\", \"name\": \"str\"}, \"_list_length\": 1}], \"cardCount\": \"int\", \"pageCount\": \"int\""
            },
            {
                "category_name": "Gaming",
                "tool_name": "CROSSWORD Solver",
                "api_name": "CROSS",
                "api_description": "**Using this API is easy! An example?**\n\nSearch string:\n- must contain letters (a-z) AND at least one _ (underscore) for unknown letters.\n- must have a minimum length of 3 and a maximum lenght of 65 characters.\n- is a required parameter.\n\nExample request:   `word=u_b_l_e_a_l_`\n\nLanguage:\n- en, es, de (English, Spanish, German)\n- is a optional parameter. If not set /en/ is used. \n\nExample request:   `lang=en`\n\n**This is fun!**",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "",
                        "default": "u_b_l_e_a_l_"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I am planning a surprise party for my family and I need some ideas for games. Can you provide a random Charades word with the difficulty set to 'easy'? It would be great if you could also fetch the latest results from Aviator at Estrelabet and Bet7k.",
        "relevant APIs": [
            [
                "Pictionary Charades Word Generator",
                "Get Charades Word"
            ],
            [
                "Estrelabet Aviator API",
                "estrelabet-aviator-latest"
            ],
            [
                "Bet7k Aviator API",
                "bet7k-aviator-latest"
            ]
        ],
        "query_id": 7
    },
    {
        "api_list": [
            {
                "category_name": "Medical",
                "tool_name": "Nguy\u1ec5n H\u1eefu Kh\u01b0\u01a1ng",
                "api_name": "test",
                "api_description": "test n\u00e8",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "Hey there! I'm looking for a tool that can assist with medical queries. Could you help me find accurate and reliable information on various health conditions? It would be awesome if the tool could provide details on diseases, symptoms, and treatments.",
        "relevant APIs": [
            [
                "Nguy\u1ec5n H\u1eefu Kh\u01b0\u01a1ng",
                "test"
            ]
        ],
        "query_id": 8
    },
    {
        "api_list": [
            {
                "category_name": "Email",
                "tool_name": "Mail Temple",
                "api_name": "Some",
                "api_description": "nothing",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deo",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "fast Email verifier",
                "api_name": "EmailVerifications",
                "api_description": "He is  a simple way  to verify a list of email addresses with different dimensions.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "emailsimple",
                        "type": "STRING",
                        "description": "",
                        "default": "mbavazijoshua@gmail.com,apisolution@gmail.com"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "email": "str",
                    "reachable": "str",
                    "syntax": {
                        "username": "str",
                        "domain": "str",
                        "valid": "bool"
                    },
                    "smtp": "NoneType",
                    "gravatar": "NoneType",
                    "suggestion": "str",
                    "disposable": "bool",
                    "role_account": "bool",
                    "free": "bool",
                    "has_mx_records": "bool"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "fast Email verifier",
                "api_name": "Role Account",
                "api_description": "Check the rols account of your domain",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "",
                        "default": "domain.org"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "RoleAccount": "str"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "fast Email verifier",
                "api_name": "EmailVerification",
                "api_description": "Basic usage\nIt is a simple way to verify an email address with different dimensions.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "emailsimple",
                        "type": "STRING",
                        "description": "",
                        "default": "mbavazijoshua@gmail.com"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Email",
                "tool_name": "Ishan",
                "api_name": "GetUsersRelatedPeople",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "users('UserName')",
                        "type": "STRING",
                        "description": "",
                        "default": "users('UserName')"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Ishan",
                "api_name": "GetUsers",
                "api_description": " ",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str",
                        "innerError": {
                            "date": "str",
                            "request-id": "str",
                            "client-request-id": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Ishan",
                "api_name": "AllPlannerTasksforaPlan",
                "api_description": " ",
                "required_parameters": [
                    {
                        "name": "PlanId",
                        "type": "STRING",
                        "description": "",
                        "default": "PlanId"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": {
                        "code": "str",
                        "message": "str",
                        "innerError": {
                            "date": "str",
                            "request-id": "str",
                            "client-request-id": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Email",
                "tool_name": "Email Verifier/Validator",
                "api_name": "Email",
                "api_description": "## The status attribute will be:\n\nOK  - Only if the smtp server explicitly confirms the availability of the mailbox address.\n\nINVALID - If the smtp server explicitly confirms the mailbox is not available.\n\nUNKNOWN - For every other scenario (The mailbox may or may not be available).",
                "required_parameters": [
                    {
                        "name": "email",
                        "type": "STRING",
                        "description": "",
                        "default": "support@rapidapi.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Email",
                "tool_name": "MatinApi",
                "api_name": "9939c2c0-7fad-11e9-8019-f5bb8c5310ff",
                "api_description": "a",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Email",
                "tool_name": "MatinApi",
                "api_name": "end1",
                "api_description": "none",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a family reunion and need to gather information about all the attendees. Can you fetch the contact details of all the users related to our family members using the Ishan API? Also, I would like to verify the email addresses of the attendees using the fast Email verifier API.",
        "relevant APIs": [
            [
                "Ishan",
                "GetUsersRelatedPeople"
            ],
            [
                "fast Email verifier",
                "EmailVerifications"
            ]
        ],
        "query_id": 9
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "The Cocktail DB",
                "api_name": "Detailed Cocktail Recipe by ID",
                "api_description": "Get Cocktail by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "default": "45"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "title": "str",
                    "difficulty": "str",
                    "portion": "str",
                    "time": "str",
                    "description": "str",
                    "ingredients": [
                        "list of str with length 5"
                    ],
                    "method": [
                        {
                            "Step 1": "str",
                            "_list_length": 3
                        }
                    ],
                    "image": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "The Cocktail DB",
                "api_name": "List of Cocktails",
                "api_description": "This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "title": "str",
                    "difficulty": "str",
                    "image": "str"
                }
            },
            {
                "category_name": "Commerce",
                "tool_name": "Direct Wines",
                "api_name": "Cart",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Commerce",
                "tool_name": "Direct Wines",
                "api_name": "Profile",
                "api_description": "Profile",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Commerce",
                "tool_name": "Direct Wines",
                "api_name": "Recommendations",
                "api_description": "",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Food",
                "tool_name": "Recipe Search and Diet",
                "api_name": "Recipe Search and Recommendations",
                "api_description": "Search 2 million recipes using keywords, 28 nutrients and 40 diet and health filters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "",
                        "default": "chicken"
                    },
                    {
                        "name": "r",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"q\": \"str\", \"from\": \"int\", \"to\": \"int\", \"more\": \"bool\", \"count\": \"int\", \"hits\": [{\"recipe\": {\"uri\": \"str\", \"label\": \"str\", \"image\": \"str\", \"source\": \"str\", \"url\": \"str\", \"shareAs\": \"str\", \"yield\": \"float\", \"dietLabels\": [\"list of str with length 1\"], \"healthLabels\": [\"list of str with length 3\"], \"cautions\": [\"list of str with length 1\"], \"ingredientLines\": [\"list of str with length 10\"], \"ingredients\": [{\"text\": \"str\", \"weight\": \"float\", \"foodCategory\": \"str\", \"foodId\": \"str\", \"image\": \"str\", \"_list_length\": 11}], \"calories\": \"float\", \"totalWeight\": \"float\", \"totalTime\": \"float\", \"cuisineType\": [\"list of str with length 1\"], \"mealType\": [\"list of str with length 1\"], \"dishType\": [\"list of str with length 1\"], \"totalNutrients\": {\"ENERC_KCAL\": {\"label\": \"str\", \"quantity\": \"float\", \"unit\": \"str\"}, \"FAT\": {\"label\": \"str\", \"quantity\": \"float\", \"unit\": \"str\"}, \"FASAT\": {\"label\": \"str\", \"quantity\": \"float\", \"unit\": \"str\"}, \"FATRN\": {\"label\": \"str\", \"quantity\": \"float\", \"unit\": \"str\"}, \"FAMS"
            },
            {
                "category_name": "Data",
                "tool_name": "Open Brewery DB",
                "api_name": "Get a brewery",
                "api_description": "Get Brewery by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of Brewery",
                        "default": "5494"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Open Brewery DB",
                "api_name": "Autocomplete",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Autocomplete a query",
                        "default": "dog"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str"
                }
            },
            {
                "category_name": "Data",
                "tool_name": "Open Brewery DB",
                "api_name": "Breweries",
                "api_description": "List of Breweries",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "by_state",
                        "type": "STRING",
                        "description": "Search by State",
                        "default": "NY"
                    },
                    {
                        "name": "by_name",
                        "type": "STRING",
                        "description": "Search by Name",
                        "default": "cooper"
                    },
                    {
                        "name": "by_type",
                        "type": "STRING",
                        "description": "Must be one of: micro, regional, brewpub, large, planning, bar, contract, proprietor",
                        "default": "micro"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "+ for acending order (default order); - for decending order comma-separated. Example: sort=-name,+type,city",
                        "default": ""
                    },
                    {
                        "name": "by_tag",
                        "type": "STRING",
                        "description": "Must be one of: dog-friendly, patio, food-service, food-truck, tours",
                        "default": "patio"
                    }
                ],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I want to surprise my family with a homemade cocktail. Can you give me a detailed recipe for a cocktail with ID '45' from The Cocktail DB? Additionally, I would like to explore some breweries in the area to discover unique ingredients for the cocktail. Finally, please suggest some food recipes that pair well with the cocktail.",
        "relevant APIs": [
            [
                "The Cocktail DB",
                "Detailed Cocktail Recipe by ID"
            ],
            [
                "Open Brewery DB",
                "Breweries"
            ],
            [
                "Recipe Search and Diet",
                "Recipe Search and Recommendations"
            ]
        ],
        "query_id": 10
    }
]